
Labo4_LCD.elf:     file format elf32-littlenios2
Labo4_LCD.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x10100244

Program Header:
    LOAD off    0x00001000 vaddr 0x10100000 paddr 0x10100000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10100020 paddr 0x10100020 align 2**12
         filesz 0x00010474 memsz 0x00010474 flags r-x
    LOAD off    0x00011494 vaddr 0x10110494 paddr 0x10111ff0 align 2**12
         filesz 0x00001b5c memsz 0x00001b5c flags rw-
    LOAD off    0x00013b4c vaddr 0x10113b4c paddr 0x10113b4c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10100000  10100000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  10100020  10100020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fee0  10100244  10100244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000370  10110124  10110124  00011124  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b5c  10110494  10111ff0  00011494  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  10113b4c  10113b4c  00013b4c  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  10113cac  10113cac  00012ff0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012ff0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed8  00000000  00000000  00013018  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002420e  00000000  00000000  00013ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009238  00000000  00000000  000380fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b6fe  00000000  00000000  00041336  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000022e8  00000000  00000000  0004ca34  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000038b9  00000000  00000000  0004ed1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017868  00000000  00000000  000525d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00069e40  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018c0  00000000  00000000  00069e70  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006ea4e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006ea51  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006ea5d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006ea5e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006ea5f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006ea6a  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006ea75  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 0000000a  00000000  00000000  0006ea80  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000059  00000000  00000000  0006ea8a  2**0
                  CONTENTS, READONLY
 26 .jdi          00006dbb  00000000  00000000  0006eae3  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     00281e16  00000000  00000000  0007589e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10100000 l    d  .entry	00000000 .entry
10100020 l    d  .exceptions	00000000 .exceptions
10100244 l    d  .text	00000000 .text
10110124 l    d  .rodata	00000000 .rodata
10110494 l    d  .rwdata	00000000 .rwdata
10113b4c l    d  .bss	00000000 .bss
10113cac l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 C:/Users/nicca/DeskDoc/EmbeddedSystems/Embedded_Systems/lab_4_project_template/sw/nios/Labo4_LCD_bsp//obj/HAL/src/crt0.o
1010028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
101101ce l     O .rodata	00000010 zeroes.4404
10103040 l     F .text	000000bc __sbprintf
101101de l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
10103250 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
10104d80 l     F .text	00000008 __fp_unlock
10104d94 l     F .text	0000019c __sinit.part.1
10104f30 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
10110494 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
101108d8 l     O .rwdata	00000020 lc_ctype_charset
101108b8 l     O .rwdata	00000020 lc_message_charset
101108f8 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
10110210 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
1010832c l     F .text	000000fc __sprint_r.part.0
10110344 l     O .rodata	00000010 blanks.4348
10110334 l     O .rodata	00000010 zeroes.4349
101098b8 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
1010d574 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1010d680 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1010d6ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1010d798 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
1010d878 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
1010d964 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
1010db38 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
10111f98 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
1010dd84 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1010deb8 l     F .text	00000034 alt_dev_reg
10110ee0 l     O .rwdata	00001060 jtag_uart_0
10111f40 l     O .rwdata	00000028 altera_hostfs
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
1010e19c l     F .text	0000020c altera_avalon_jtag_uart_irq
1010e3a8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_hostfs.c
10111f9c l     O .rwdata	00000009 hcinfo.2538
10111fa8 l     O .rwdata	0000000a hcinfo.2551
10111fb4 l     O .rwdata	00000009 hcinfo.2560
10111fc0 l     O .rwdata	0000000a hcinfo.2573
10111fcc l     O .rwdata	0000000a hcinfo.2586
10111fd8 l     O .rwdata	0000000a hcinfo.2612
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
1010efd8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_fs_reg.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
1010f4cc l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
1010f60c l     F .text	0000003c alt_get_errno
1010f648 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
10113b80 g     O .bss	00000004 alt_instruction_exception_handler
10107970 g     F .text	00000074 _mprec_log10
10107a5c g     F .text	0000008c __any_on
10109e54 g     F .text	00000054 _isatty_r
1011021c g     O .rodata	00000028 __mprec_tinytens
1010da74 g     F .text	0000007c alt_main
10100cc0 g     F .text	000000c0 _puts_r
10113bac g     O .bss	00000100 alt_irq
10109ea8 g     F .text	00000060 _lseek_r
10111ff0 g       *ABS*	00000000 __flash_rwdata_start
1010c0a0 g     F .text	00000088 .hidden __eqdf2
10113cac g       *ABS*	00000000 __alt_heap_start
10100c84 g     F .text	0000003c printf
1010a0c0 g     F .text	0000009c _wcrtomb_r
101081ec g     F .text	0000005c __sseek
101050d0 g     F .text	00000010 __sinit
10109f68 g     F .text	00000140 __swbuf_r
10105b98 g     F .text	0000007c _setlocale_r
10104f38 g     F .text	00000068 __sfmoreglue
1010db14 g     F .text	00000024 __malloc_unlock
1010e9e0 g     F .text	0000011c alt_hostfs_open
10106868 g     F .text	0000015c memmove
101050b8 g     F .text	00000018 _cleanup
10106aec g     F .text	000000a8 _Balloc
1010c128 g     F .text	000000dc .hidden __gtdf2
1010fa04 g     F .text	00000024 altera_nios2_gen2_irq_init
10100290 g     F .text	00000058 waitms
10100000 g     F .entry	0000001c __reset
10100020 g       *ABS*	00000000 __flash_exceptions_start
101006dc g     F .text	00000070 LCD_Clear
10109df8 g     F .text	0000005c _fstat_r
10113b64 g     O .bss	00000004 errno
10108168 g     F .text	00000008 __seofread
10100318 g     F .text	00000030 LCD_WR_REG
10113b6c g     O .bss	00000004 alt_argv
10119f68 g       *ABS*	00000000 _gp
10110d60 g     O .rwdata	00000180 alt_fd_list
1010ec18 g     F .text	00000068 alt_hostfs_seek
1010fa28 g     F .text	00000090 alt_find_dev
10106720 g     F .text	00000148 memcpy
10104d88 g     F .text	0000000c _cleanup_r
1010d38c g     F .text	000000dc .hidden __floatsidf
1010f178 g     F .text	00000080 alt_fs_reg
1010f590 g     F .text	0000007c alt_io_redirect
1010c204 g     F .text	000000f4 .hidden __ltdf2
10110124 g       *ABS*	00000000 __DTOR_END__
10100d80 g     F .text	00000014 puts
1010fcf4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
1010804c g     F .text	00000074 __fpclassifyd
101078cc g     F .text	000000a4 __ratio
1010989c g     F .text	0000001c __vfiprintf_internal
1010e5a0 g     F .text	0000021c altera_avalon_jtag_uart_read
10100c54 g     F .text	00000030 _printf_r
10100000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1010ae50 g     F .text	00000064 .hidden __udivsi3
1010d7d4 g     F .text	000000a4 isatty
1011026c g     O .rodata	000000c8 __mprec_tens
10100a8c g     F .text	00000030 BUFF_ADD_WR
10105c14 g     F .text	0000000c __locale_charset
1010fc64 g     F .text	00000090 alt_icache_flush
10113b60 g     O .bss	00000004 __malloc_top_pad
10111f70 g     O .rwdata	00000004 __mb_cur_max
10105c44 g     F .text	0000000c _localeconv_r
10106ef8 g     F .text	0000003c __i2b
10105554 g     F .text	000004bc __sfvwrite_r
101080c0 g     F .text	00000054 _sbrk_r
1010eb40 g     F .text	0000006c alt_hostfs_read
10109f08 g     F .text	00000060 _read_r
10111f90 g     O .rwdata	00000004 alt_max_fd
10109aec g     F .text	000000f0 _fclose_r
10104d50 g     F .text	00000030 fflush
10113b5c g     O .bss	00000004 __malloc_max_sbrked_mem
1010af0c g     F .text	000008ac .hidden __adddf3
10107674 g     F .text	0000010c __b2d
1010a820 g     F .text	00000538 .hidden __umoddi3
1010d9a0 g     F .text	000000d4 lseek
10111f68 g     O .rwdata	00000004 _global_impure_ptr
10107ae8 g     F .text	00000564 _realloc_r
10113cac g       *ABS*	00000000 __bss_end
1010f3dc g     F .text	000000f0 alt_iic_isr_register
1010f8fc g     F .text	00000108 alt_tick
1010a2a8 g     F .text	00000578 .hidden __udivdi3
10109d54 g     F .text	00000024 _fputwc_r
10110244 g     O .rodata	00000028 __mprec_bigtens
10106cdc g     F .text	00000104 __s2b
1010d468 g     F .text	000000a8 .hidden __floatunsidf
101073b4 g     F .text	00000060 __mcmp
101050f0 g     F .text	00000018 __fp_lock_all
1010f390 g     F .text	0000004c alt_ic_irq_enabled
1010f860 g     F .text	0000009c alt_alarm_stop
10113b74 g     O .bss	00000004 alt_irq_active
1010eafc g     F .text	00000044 alt_hostfs_close
101000fc g     F .exceptions	000000d4 alt_irq_handler
10110d38 g     O .rwdata	00000028 alt_dev_null
1010ef90 g     F .text	00000048 alt_dcache_flush_all
10106de0 g     F .text	00000068 __hi0bits
1010d30c g     F .text	00000080 .hidden __fixdfsi
10111ff0 g       *ABS*	00000000 __ram_rwdata_end
101002e8 g     F .text	00000030 LCD_WR_DATA
10111f88 g     O .rwdata	00000008 alt_dev_list
1010ddc0 g     F .text	000000f8 write
10110494 g       *ABS*	00000000 __ram_rodata_end
1010d6e8 g     F .text	000000b0 fstat
1010c204 g     F .text	000000f4 .hidden __ledf2
1010712c g     F .text	00000140 __pow5mult
10108440 g     F .text	0000145c ___vfiprintf_internal_r
10113b54 g     O .bss	00000004 __nlocale_changed
1010aeb4 g     F .text	00000058 .hidden __umodsi3
10113cac g       *ABS*	00000000 end
1010e0dc g     F .text	000000c0 altera_avalon_jtag_uart_init
101001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
10110124 g       *ABS*	00000000 __CTOR_LIST__
10120000 g       *ABS*	00000000 __alt_stack_pointer
1010d510 g     F .text	00000064 .hidden __clzsi2
1010e7bc g     F .text	00000224 altera_avalon_jtag_uart_write
101050e0 g     F .text	00000004 __sfp_lock_acquire
1010663c g     F .text	000000e4 memchr
10100e2c g     F .text	000021f8 ___vfprintf_internal_r
10105244 g     F .text	00000310 _free_r
10105c20 g     F .text	00000010 __locale_mb_cur_max
10100a24 g     F .text	0000002c LCD_reset
1010074c g     F .text	00000088 LCD_SetCursor
1010ff70 g     F .text	00000180 __call_exitprocs
10100aec g     F .text	000000f8 test
10113b50 g     O .bss	00000004 __mlocale_changed
10111f74 g     O .rwdata	00000004 __malloc_sbrk_base
10100244 g     F .text	0000004c _start
10113b78 g     O .bss	00000004 _alt_tick_rate
1010726c g     F .text	00000148 __lshift
10113b7c g     O .bss	00000004 _alt_nticks
1010db74 g     F .text	000000fc read
1010df24 g     F .text	00000054 alt_sys_init
1010fe58 g     F .text	00000118 __register_exitproc
10106f34 g     F .text	000001f8 __multiply
1010e448 g     F .text	00000068 altera_avalon_jtag_uart_close
10110494 g       *ABS*	00000000 __ram_rwdata_start
10110124 g       *ABS*	00000000 __ram_rodata_start
10113b84 g     O .bss	00000028 __malloc_current_mallinfo
10107780 g     F .text	0000014c __d2b
1010df78 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1010fbc0 g     F .text	000000a4 alt_get_fd
101099d4 g     F .text	00000054 _close_r
1010fddc g     F .text	0000007c memcmp
1010e038 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
10113cac g       *ABS*	00000000 __alt_stack_base
1010e088 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
101030fc g     F .text	00000154 __swsetup_r
1010b7b8 g     F .text	000008e8 .hidden __divdf3
10104fa0 g     F .text	00000118 __sfp
101079e4 g     F .text	00000078 __copybits
10110930 g     O .rwdata	00000408 __malloc_av_
101050ec g     F .text	00000004 __sinit_lock_release
1010c2f8 g     F .text	00000718 .hidden __muldf3
10108114 g     F .text	00000054 __sread
1010fab8 g     F .text	00000108 alt_find_file
1010f014 g     F .text	000000a4 alt_dev_llist_insert
1010daf0 g     F .text	00000024 __malloc_lock
1010dcd4 g     F .text	000000b0 sbrk
10104cf4 g     F .text	0000005c _fflush_r
10109a28 g     F .text	000000c4 _calloc_r
10113b4c g       *ABS*	00000000 __bss_start
10100348 g     F .text	00000394 LCD_Init
101069c4 g     F .text	00000128 memset
10100be4 g     F .text	00000070 main
10113b70 g     O .bss	00000004 alt_envp
10113b58 g     O .bss	00000004 __malloc_max_total_mem
10100abc g     F .text	00000030 BUFF_LEN_WR
1010dfd8 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1010a0a8 g     F .text	00000018 __swbuf
10108248 g     F .text	00000008 __sclose
10120000 g       *ABS*	00000000 __alt_heap_limit
10109bdc g     F .text	00000014 fclose
10103450 g     F .text	00001688 _dtoa_r
10105e30 g     F .text	0000080c _malloc_r
1010a21c g     F .text	00000030 __ascii_wctomb
10111f94 g     O .rwdata	00000004 alt_errno
10105a10 g     F .text	000000c4 _fwalk
1010ad58 g     F .text	00000084 .hidden __divsi3
10105120 g     F .text	00000124 _malloc_trim_r
10110124 g       *ABS*	00000000 __CTOR_END__
10108250 g     F .text	000000dc strcmp
10110124 g       *ABS*	00000000 __flash_rodata_start
10110124 g       *ABS*	00000000 __DTOR_LIST__
1010c0a0 g     F .text	00000088 .hidden __nedf2
1010deec g     F .text	00000038 alt_irq_init
1010dc70 g     F .text	00000064 alt_release_fd
10110354 g     O .rodata	00000100 .hidden __clz_tab
10113b4c g     O .bss	00000004 _PathLocale
1010fd90 g     F .text	00000014 atexit
10109974 g     F .text	00000060 _write_r
10105c50 g     F .text	00000018 setlocale
10111f6c g     O .rwdata	00000004 _impure_ptr
10113b68 g     O .bss	00000004 alt_argc
10104ad8 g     F .text	0000021c __sflush_r
1010f118 g     F .text	00000060 _do_dtors
10105c3c g     F .text	00000008 __locale_cjk_lang
10100020 g       .exceptions	00000000 alt_irq_entry
10107610 g     F .text	00000064 __ulp
10105108 g     F .text	00000018 __fp_unlock_all
10111f80 g     O .rwdata	00000008 alt_fs_list
1010ebac g     F .text	0000006c alt_hostfs_write
10100020 g       *ABS*	00000000 __ram_exceptions_start
10105c68 g     F .text	0000000c localeconv
1010f22c g     F .text	00000050 alt_ic_isr_register
10111ff0 g       *ABS*	00000000 _edata
10113cac g       *ABS*	00000000 _end
10109bf0 g     F .text	00000164 __fputwc
10100244 g       *ABS*	00000000 __ram_exceptions_end
1010e4b0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
1010f304 g     F .text	0000008c alt_ic_irq_disable
10108170 g     F .text	0000007c __swrite
10111f78 g     O .rwdata	00000004 __malloc_trim_threshold
10105c30 g     F .text	0000000c __locale_msgcharset
1010fda4 g     F .text	00000038 exit
10105ad4 g     F .text	000000c4 _fwalk_reent
10107414 g     F .text	000001fc __mdiff
1010addc g     F .text	00000074 .hidden __modsi3
10120000 g       *ABS*	00000000 __alt_data_end
10100020 g     F .exceptions	00000000 alt_exception
101050e4 g     F .text	00000004 __sfp_lock_release
101100f0 g     F .text	00000034 _exit
1010ee64 g     F .text	0000012c alt_alarm_start
10105c74 g     F .text	000001bc __smakebuf_r
10100d94 g     F .text	00000098 strlen
1010f70c g     F .text	00000154 open
1010c128 g     F .text	000000dc .hidden __gedf2
10111f7c g     O .rwdata	00000004 __wctomb
10108428 g     F .text	00000018 __sprint_r
1010f1f8 g     F .text	00000034 alt_icache_flush_all
10100a50 g     F .text	0000003c MEM_WR
10111fe4 g     O .rwdata	00000004 alt_priority_mask
1010f27c g     F .text	00000088 alt_ic_irq_enable
10103024 g     F .text	0000001c __vfprintf_internal
1010a24c g     F .text	0000005c _wctomb_r
1010ca10 g     F .text	000008fc .hidden __subdf3
10106e48 g     F .text	000000b0 __lo0bits
10111fe8 g     O .rwdata	00000008 alt_alarm_list
1010f0b8 g     F .text	00000060 _do_ctors
1010a15c g     F .text	000000c0 wcrtomb
1010d5b0 g     F .text	000000d0 close
1010d8e0 g     F .text	00000084 alt_load
101007d4 g     F .text	00000250 LCD_Swiss
10109d78 g     F .text	00000080 fputwc
101050e8 g     F .text	00000004 __sinit_lock_acquire
10106bbc g     F .text	00000120 __multadd
10106b94 g     F .text	00000028 _Bfree
1010ec80 g     F .text	000001e4 alt_hostfs_fstat



Disassembly of section .entry:

10100000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
10100000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
10100004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
10100008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
1010000c:	00bffd16 	blt	zero,r2,10100004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10100010:	00440434 	movhi	at,4112
    ori r1, r1, %lo(_start)
10100014:	08409114 	ori	at,at,580
    jmp r1
10100018:	0800683a 	jmp	at
1010001c:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>

Disassembly of section .exceptions:

10100020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10100020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10100024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10100028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1010002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10100030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10100034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10100038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1010003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10100040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10100044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10100048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1010004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10100050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10100054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10100058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1010005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10100060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10100064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10100068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1010006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10100070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10100074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10100078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1010007c:	10000326 	beq	r2,zero,1010008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10100080:	20000226 	beq	r4,zero,1010008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10100084:	01000fc0 	call	101000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10100088:	00000706 	br	101000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
1010008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
10100090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
10100094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
10100098:	01001d00 	call	101001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
1010009c:	1000021e 	bne	r2,zero,101000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
101000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
101000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
101000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
101000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
101000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
101000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
101000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
101000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
101000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
101000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
101000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
101000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
101000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
101000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
101000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
101000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
101000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
101000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
101000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
101000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
101000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
101000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
101000f8:	ef80083a 	eret

101000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
101000fc:	defff904 	addi	sp,sp,-28
10100100:	dfc00615 	stw	ra,24(sp)
10100104:	df000515 	stw	fp,20(sp)
10100108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
1010010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10100110:	0005313a 	rdctl	r2,ipending
10100114:	e0bffe15 	stw	r2,-8(fp)

  return active;
10100118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1010011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10100120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10100124:	00800044 	movi	r2,1
10100128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1010012c:	e0fffb17 	ldw	r3,-20(fp)
10100130:	e0bffc17 	ldw	r2,-16(fp)
10100134:	1884703a 	and	r2,r3,r2
10100138:	10001426 	beq	r2,zero,1010018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1010013c:	00840474 	movhi	r2,4113
10100140:	108eeb04 	addi	r2,r2,15276
10100144:	e0fffd17 	ldw	r3,-12(fp)
10100148:	180690fa 	slli	r3,r3,3
1010014c:	10c5883a 	add	r2,r2,r3
10100150:	10c00017 	ldw	r3,0(r2)
10100154:	00840474 	movhi	r2,4113
10100158:	108eeb04 	addi	r2,r2,15276
1010015c:	e13ffd17 	ldw	r4,-12(fp)
10100160:	200890fa 	slli	r4,r4,3
10100164:	1105883a 	add	r2,r2,r4
10100168:	10800104 	addi	r2,r2,4
1010016c:	10800017 	ldw	r2,0(r2)
10100170:	1009883a 	mov	r4,r2
10100174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10100178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1010017c:	0005313a 	rdctl	r2,ipending
10100180:	e0bfff15 	stw	r2,-4(fp)

  return active;
10100184:	e0bfff17 	ldw	r2,-4(fp)
10100188:	00000706 	br	101001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
1010018c:	e0bffc17 	ldw	r2,-16(fp)
10100190:	1085883a 	add	r2,r2,r2
10100194:	e0bffc15 	stw	r2,-16(fp)
      i++;
10100198:	e0bffd17 	ldw	r2,-12(fp)
1010019c:	10800044 	addi	r2,r2,1
101001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
101001a4:	003fe106 	br	1010012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
101001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
101001ac:	e0bffb17 	ldw	r2,-20(fp)
101001b0:	103fdb1e 	bne	r2,zero,10100120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
101001b4:	0001883a 	nop
}
101001b8:	0001883a 	nop
101001bc:	e037883a 	mov	sp,fp
101001c0:	dfc00117 	ldw	ra,4(sp)
101001c4:	df000017 	ldw	fp,0(sp)
101001c8:	dec00204 	addi	sp,sp,8
101001cc:	f800283a 	ret

101001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
101001d0:	defffb04 	addi	sp,sp,-20
101001d4:	dfc00415 	stw	ra,16(sp)
101001d8:	df000315 	stw	fp,12(sp)
101001dc:	df000304 	addi	fp,sp,12
101001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
101001e4:	000531fa 	rdctl	r2,exception
101001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
101001ec:	e0bffd17 	ldw	r2,-12(fp)
101001f0:	10801f0c 	andi	r2,r2,124
101001f4:	1004d0ba 	srli	r2,r2,2
101001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
101001fc:	0005333a 	rdctl	r2,badaddr
10100200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
10100204:	d0a70617 	ldw	r2,-25576(gp)
10100208:	10000726 	beq	r2,zero,10100228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
1010020c:	d0a70617 	ldw	r2,-25576(gp)
10100210:	e0fffd17 	ldw	r3,-12(fp)
10100214:	e1bffe17 	ldw	r6,-8(fp)
10100218:	e17fff17 	ldw	r5,-4(fp)
1010021c:	1809883a 	mov	r4,r3
10100220:	103ee83a 	callr	r2
10100224:	00000206 	br	10100230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
10100228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
1010022c:	0005883a 	mov	r2,zero
}
10100230:	e037883a 	mov	sp,fp
10100234:	dfc00117 	ldw	ra,4(sp)
10100238:	df000017 	ldw	fp,0(sp)
1010023c:	dec00204 	addi	sp,sp,8
10100240:	f800283a 	ret

Disassembly of section .text:

10100244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
10100244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
10100248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
1010024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
10100250:	00bffd16 	blt	zero,r2,10100248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
10100254:	06c404b4 	movhi	sp,4114
    ori sp, sp, %lo(__alt_stack_pointer)
10100258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
1010025c:	06840474 	movhi	gp,4113
    ori gp, gp, %lo(_gp)
10100260:	d6a7da14 	ori	gp,gp,40808
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
10100264:	00840474 	movhi	r2,4113
    ori r2, r2, %lo(__bss_start)
10100268:	108ed314 	ori	r2,r2,15180

    movhi r3, %hi(__bss_end)
1010026c:	00c40474 	movhi	r3,4113
    ori r3, r3, %lo(__bss_end)
10100270:	18cf2b14 	ori	r3,r3,15532

    beq r2, r3, 1f
10100274:	10c00326 	beq	r2,r3,10100284 <_start+0x40>

0:
    stw zero, (r2)
10100278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
1010027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
10100280:	10fffd36 	bltu	r2,r3,10100278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
10100284:	010d8e00 	call	1010d8e0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
10100288:	010da740 	call	1010da74 <alt_main>

1010028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
1010028c:	003fff06 	br	1010028c <__alt_data_end+0xfffe028c>

10100290 <waitms>:
#define GREEN 0x07e0
#define BLUE 0x001f
#define BLACK  0x0000
#define WHITE 0xffff

void waitms(int t) {
10100290:	defffd04 	addi	sp,sp,-12
10100294:	df000215 	stw	fp,8(sp)
10100298:	df000204 	addi	fp,sp,8
1010029c:	e13fff15 	stw	r4,-4(fp)
    while(t--) {
101002a0:	00000806 	br	101002c4 <waitms+0x34>
        for(int i = 0; i < 3125; i++) {
101002a4:	e03ffe15 	stw	zero,-8(fp)
101002a8:	00000306 	br	101002b8 <waitms+0x28>
101002ac:	e0bffe17 	ldw	r2,-8(fp)
101002b0:	10800044 	addi	r2,r2,1
101002b4:	e0bffe15 	stw	r2,-8(fp)
101002b8:	e0bffe17 	ldw	r2,-8(fp)
101002bc:	10830d50 	cmplti	r2,r2,3125
101002c0:	103ffa1e 	bne	r2,zero,101002ac <__alt_data_end+0xfffe02ac>
#define BLUE 0x001f
#define BLACK  0x0000
#define WHITE 0xffff

void waitms(int t) {
    while(t--) {
101002c4:	e0bfff17 	ldw	r2,-4(fp)
101002c8:	10ffffc4 	addi	r3,r2,-1
101002cc:	e0ffff15 	stw	r3,-4(fp)
101002d0:	103ff41e 	bne	r2,zero,101002a4 <__alt_data_end+0xfffe02a4>
        for(int i = 0; i < 3125; i++) {
            ;
        }
    }
}
101002d4:	0001883a 	nop
101002d8:	e037883a 	mov	sp,fp
101002dc:	df000017 	ldw	fp,0(sp)
101002e0:	dec00104 	addi	sp,sp,4
101002e4:	f800283a 	ret

101002e8 <LCD_WR_DATA>:

void LCD_WR_DATA(uint data) {
101002e8:	defffe04 	addi	sp,sp,-8
101002ec:	df000115 	stw	fp,4(sp)
101002f0:	df000104 	addi	fp,sp,4
101002f4:	e13fff15 	stw	r4,-4(fp)
    IOWR_32DIRECT(LCD_CONTROLLER_0_BASE, LCD_DATA_OFFSET, data);
101002f8:	e0ffff17 	ldw	r3,-4(fp)
101002fc:	00800304 	movi	r2,12
10100300:	10c00035 	stwio	r3,0(r2)
}
10100304:	0001883a 	nop
10100308:	e037883a 	mov	sp,fp
1010030c:	df000017 	ldw	fp,0(sp)
10100310:	dec00104 	addi	sp,sp,4
10100314:	f800283a 	ret

10100318 <LCD_WR_REG>:

void LCD_WR_REG(uint data) {
10100318:	defffe04 	addi	sp,sp,-8
1010031c:	df000115 	stw	fp,4(sp)
10100320:	df000104 	addi	fp,sp,4
10100324:	e13fff15 	stw	r4,-4(fp)
    IOWR_32DIRECT(LCD_CONTROLLER_0_BASE, LCD_COMMAND_OFFSET, data);
10100328:	e0ffff17 	ldw	r3,-4(fp)
1010032c:	00800204 	movi	r2,8
10100330:	10c00035 	stwio	r3,0(r2)
}
10100334:	0001883a 	nop
10100338:	e037883a 	mov	sp,fp
1010033c:	df000017 	ldw	fp,0(sp)
10100340:	dec00104 	addi	sp,sp,4
10100344:	f800283a 	ret

10100348 <LCD_Init>:

void LCD_Init(void) {
10100348:	defffe04 	addi	sp,sp,-8
1010034c:	dfc00115 	stw	ra,4(sp)
10100350:	df000015 	stw	fp,0(sp)
10100354:	d839883a 	mov	fp,sp

    // software reset
    LCD_reset();
10100358:	0100a240 	call	10100a24 <LCD_reset>
    waitms(120);
1010035c:	01001e04 	movi	r4,120
10100360:	01002900 	call	10100290 <waitms>

    LCD_WR_REG(0x0011); //Exit Sleep
10100364:	01000444 	movi	r4,17
10100368:	01003180 	call	10100318 <LCD_WR_REG>
    LCD_WR_REG(0x00CF);
1010036c:	010033c4 	movi	r4,207
10100370:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000);
10100374:	0009883a 	mov	r4,zero
10100378:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0081);
1010037c:	01002044 	movi	r4,129
10100380:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0X00c0);
10100384:	01003004 	movi	r4,192
10100388:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00ED);
1010038c:	01003b44 	movi	r4,237
10100390:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0064);
10100394:	01001904 	movi	r4,100
10100398:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0003);
1010039c:	010000c4 	movi	r4,3
101003a0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0X0012);
101003a4:	01000484 	movi	r4,18
101003a8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0X0081);
101003ac:	01002044 	movi	r4,129
101003b0:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00E8);
101003b4:	01003a04 	movi	r4,232
101003b8:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0085);
101003bc:	01002144 	movi	r4,133
101003c0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0001);
101003c4:	01000044 	movi	r4,1
101003c8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x00798);
101003cc:	0101e604 	movi	r4,1944
101003d0:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00CB);
101003d4:	010032c4 	movi	r4,203
101003d8:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0039);
101003dc:	01000e44 	movi	r4,57
101003e0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x002C);
101003e4:	01000b04 	movi	r4,44
101003e8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000);
101003ec:	0009883a 	mov	r4,zero
101003f0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0034);
101003f4:	01000d04 	movi	r4,52
101003f8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0002);
101003fc:	01000084 	movi	r4,2
10100400:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00F7);
10100404:	01003dc4 	movi	r4,247
10100408:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0020);
1010040c:	01000804 	movi	r4,32
10100410:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00EA);
10100414:	01003a84 	movi	r4,234
10100418:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000);
1010041c:	0009883a 	mov	r4,zero
10100420:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000);
10100424:	0009883a 	mov	r4,zero
10100428:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00B1);
1010042c:	01002c44 	movi	r4,177
10100430:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000);
10100434:	0009883a 	mov	r4,zero
10100438:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x001b);
1010043c:	010006c4 	movi	r4,27
10100440:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00B6);
10100444:	01002d84 	movi	r4,182
10100448:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x000A);
1010044c:	01000284 	movi	r4,10
10100450:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x00A2);
10100454:	01002884 	movi	r4,162
10100458:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00C0);    //Power control
1010045c:	01003004 	movi	r4,192
10100460:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0005);   //VRH[5:0]
10100464:	01000144 	movi	r4,5
10100468:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00C1);    //Power control
1010046c:	01003044 	movi	r4,193
10100470:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0011);   //SAP[2:0];BT[3:0]
10100474:	01000444 	movi	r4,17
10100478:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00C5);    //VCM control
1010047c:	01003144 	movi	r4,197
10100480:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0045);       //3F
10100484:	01001144 	movi	r4,69
10100488:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0045);       //3C
1010048c:	01001144 	movi	r4,69
10100490:	01002e80 	call	101002e8 <LCD_WR_DATA>

     LCD_WR_REG(0x00C7);    //VCM control2
10100494:	010031c4 	movi	r4,199
10100498:	01003180 	call	10100318 <LCD_WR_REG>
         LCD_WR_DATA(0X00a2);
1010049c:	01002884 	movi	r4,162
101004a0:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x0036);    // Memory Access Control
101004a4:	01000d84 	movi	r4,54
101004a8:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0008);//48
101004ac:	01000204 	movi	r4,8
101004b0:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00F2);    // 3Gamma Function Disable
101004b4:	01003c84 	movi	r4,242
101004b8:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000);
101004bc:	0009883a 	mov	r4,zero
101004c0:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x0026);    //Gamma curve selected
101004c4:	01000984 	movi	r4,38
101004c8:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0001);
101004cc:	01000044 	movi	r4,1
101004d0:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00E0);    //Set Gamma
101004d4:	01003804 	movi	r4,224
101004d8:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x000F);
101004dc:	010003c4 	movi	r4,15
101004e0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0026);
101004e4:	01000984 	movi	r4,38
101004e8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0024);
101004ec:	01000904 	movi	r4,36
101004f0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x000b);
101004f4:	010002c4 	movi	r4,11
101004f8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x000E);
101004fc:	01000384 	movi	r4,14
10100500:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0008);
10100504:	01000204 	movi	r4,8
10100508:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x004b);
1010050c:	010012c4 	movi	r4,75
10100510:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0X00a8);
10100514:	01002a04 	movi	r4,168
10100518:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x003b);
1010051c:	01000ec4 	movi	r4,59
10100520:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x000a);
10100524:	01000284 	movi	r4,10
10100528:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0014);
1010052c:	01000504 	movi	r4,20
10100530:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0006);
10100534:	01000184 	movi	r4,6
10100538:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0010);
1010053c:	01000404 	movi	r4,16
10100540:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0009);
10100544:	01000244 	movi	r4,9
10100548:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000);
1010054c:	0009883a 	mov	r4,zero
10100550:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0X00E1);    //Set Gamma
10100554:	01003844 	movi	r4,225
10100558:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000);
1010055c:	0009883a 	mov	r4,zero
10100560:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x001c);
10100564:	01000704 	movi	r4,28
10100568:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0020);
1010056c:	01000804 	movi	r4,32
10100570:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0004);
10100574:	01000104 	movi	r4,4
10100578:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0010);
1010057c:	01000404 	movi	r4,16
10100580:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0008);
10100584:	01000204 	movi	r4,8
10100588:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0034);
1010058c:	01000d04 	movi	r4,52
10100590:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0047);
10100594:	010011c4 	movi	r4,71
10100598:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0044);
1010059c:	01001104 	movi	r4,68
101005a0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0005);
101005a4:	01000144 	movi	r4,5
101005a8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x000b);
101005ac:	010002c4 	movi	r4,11
101005b0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0009);
101005b4:	01000244 	movi	r4,9
101005b8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x002f);
101005bc:	01000bc4 	movi	r4,47
101005c0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0036);
101005c4:	01000d84 	movi	r4,54
101005c8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x000f);
101005cc:	010003c4 	movi	r4,15
101005d0:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x002A);
101005d4:	01000a84 	movi	r4,42
101005d8:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000);
101005dc:	0009883a 	mov	r4,zero
101005e0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000);
101005e4:	0009883a 	mov	r4,zero
101005e8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000);
101005ec:	0009883a 	mov	r4,zero
101005f0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x00ef);
101005f4:	01003bc4 	movi	r4,239
101005f8:	01002e80 	call	101002e8 <LCD_WR_DATA>

     LCD_WR_REG(0x002B);
101005fc:	01000ac4 	movi	r4,43
10100600:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000);
10100604:	0009883a 	mov	r4,zero
10100608:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000);
1010060c:	0009883a 	mov	r4,zero
10100610:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0001);
10100614:	01000044 	movi	r4,1
10100618:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x003f);
1010061c:	01000fc4 	movi	r4,63
10100620:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x003A);
10100624:	01000e84 	movi	r4,58
10100628:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0055);
1010062c:	01001544 	movi	r4,85
10100630:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x00f6);
10100634:	01003d84 	movi	r4,246
10100638:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0001);
1010063c:	01000044 	movi	r4,1
10100640:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0030);
10100644:	01000c04 	movi	r4,48
10100648:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000);
1010064c:	0009883a 	mov	r4,zero
10100650:	01002e80 	call	101002e8 <LCD_WR_DATA>

    LCD_WR_REG(0x0029); //display on
10100654:	01000a44 	movi	r4,41
10100658:	01003180 	call	10100318 <LCD_WR_REG>


    LCD_WR_REG(0x0036); // Memory access control (MADCTL B5 = 1)
1010065c:	01000d84 	movi	r4,54
10100660:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0028); // MY MX MV ML_BGR MH 0 0 -> 0b0010 0000
10100664:	01000a04 	movi	r4,40
10100668:	01002e80 	call	101002e8 <LCD_WR_DATA>


    LCD_WR_REG(0x002A); // Column Address Set
1010066c:	01000a84 	movi	r4,42
10100670:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000); // SC0-7
10100674:	0009883a 	mov	r4,zero
10100678:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000); // SC8-15 -> 0x0000
1010067c:	0009883a 	mov	r4,zero
10100680:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0001); // EC0-7
10100684:	01000044 	movi	r4,1
10100688:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x003F); // EC8-15 -> 0x013F
1010068c:	01000fc4 	movi	r4,63
10100690:	01002e80 	call	101002e8 <LCD_WR_DATA>


    LCD_WR_REG(0x002B); // Page Address Set
10100694:	01000ac4 	movi	r4,43
10100698:	01003180 	call	10100318 <LCD_WR_REG>
        LCD_WR_DATA(0x0000); // SP0-7
1010069c:	0009883a 	mov	r4,zero
101006a0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000); // SP8-15 -> 0x0000
101006a4:	0009883a 	mov	r4,zero
101006a8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x0000); // EP0-7
101006ac:	0009883a 	mov	r4,zero
101006b0:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_DATA(0x00EF); // EP8-15 -> 0x00EF
101006b4:	01003bc4 	movi	r4,239
101006b8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_WR_REG(0x0029);
101006bc:	01000a44 	movi	r4,41
101006c0:	01003180 	call	10100318 <LCD_WR_REG>
}
101006c4:	0001883a 	nop
101006c8:	e037883a 	mov	sp,fp
101006cc:	dfc00117 	ldw	ra,4(sp)
101006d0:	df000017 	ldw	fp,0(sp)
101006d4:	dec00204 	addi	sp,sp,8
101006d8:	f800283a 	ret

101006dc <LCD_Clear>:

void LCD_Clear(uint Color)
{
101006dc:	defffc04 	addi	sp,sp,-16
101006e0:	dfc00315 	stw	ra,12(sp)
101006e4:	df000215 	stw	fp,8(sp)
101006e8:	df000204 	addi	fp,sp,8
101006ec:	e13fff15 	stw	r4,-4(fp)
        uint index=0;
101006f0:	e03ffe15 	stw	zero,-8(fp)
        LCD_SetCursor(0x00,0x0000);
101006f4:	000b883a 	mov	r5,zero
101006f8:	0009883a 	mov	r4,zero
101006fc:	010074c0 	call	1010074c <LCD_SetCursor>
        LCD_WR_REG(0x002C);
10100700:	01000b04 	movi	r4,44
10100704:	01003180 	call	10100318 <LCD_WR_REG>
        for(index=0;index<76800;index++)
10100708:	e03ffe15 	stw	zero,-8(fp)
1010070c:	00000506 	br	10100724 <LCD_Clear+0x48>
        {
            LCD_WR_DATA(Color);
10100710:	e13fff17 	ldw	r4,-4(fp)
10100714:	01002e80 	call	101002e8 <LCD_WR_DATA>
void LCD_Clear(uint Color)
{
        uint index=0;
        LCD_SetCursor(0x00,0x0000);
        LCD_WR_REG(0x002C);
        for(index=0;index<76800;index++)
10100718:	e0bffe17 	ldw	r2,-8(fp)
1010071c:	10800044 	addi	r2,r2,1
10100720:	e0bffe15 	stw	r2,-8(fp)
10100724:	e0fffe17 	ldw	r3,-8(fp)
10100728:	00800074 	movhi	r2,1
1010072c:	108affc4 	addi	r2,r2,11263
10100730:	10fff72e 	bgeu	r2,r3,10100710 <__alt_data_end+0xfffe0710>
        {
            LCD_WR_DATA(Color);
        }
}
10100734:	0001883a 	nop
10100738:	e037883a 	mov	sp,fp
1010073c:	dfc00117 	ldw	ra,4(sp)
10100740:	df000017 	ldw	fp,0(sp)
10100744:	dec00204 	addi	sp,sp,8
10100748:	f800283a 	ret

1010074c <LCD_SetCursor>:

void LCD_SetCursor(uint Xpos, uint Ypos)
{
1010074c:	defffc04 	addi	sp,sp,-16
10100750:	dfc00315 	stw	ra,12(sp)
10100754:	df000215 	stw	fp,8(sp)
10100758:	df000204 	addi	fp,sp,8
1010075c:	e13ffe15 	stw	r4,-8(fp)
10100760:	e17fff15 	stw	r5,-4(fp)
     LCD_WR_REG(0x002A);
10100764:	01000a84 	movi	r4,42
10100768:	01003180 	call	10100318 <LCD_WR_REG>
         LCD_WR_DATA(Xpos>>8);
1010076c:	e0bffe17 	ldw	r2,-8(fp)
10100770:	1004d23a 	srli	r2,r2,8
10100774:	1009883a 	mov	r4,r2
10100778:	01002e80 	call	101002e8 <LCD_WR_DATA>
         LCD_WR_DATA(Xpos&0XFF);
1010077c:	e0bffe17 	ldw	r2,-8(fp)
10100780:	10803fcc 	andi	r2,r2,255
10100784:	1009883a 	mov	r4,r2
10100788:	01002e80 	call	101002e8 <LCD_WR_DATA>
     LCD_WR_REG(0x002B);
1010078c:	01000ac4 	movi	r4,43
10100790:	01003180 	call	10100318 <LCD_WR_REG>
         LCD_WR_DATA(Ypos>>8);
10100794:	e0bfff17 	ldw	r2,-4(fp)
10100798:	1004d23a 	srli	r2,r2,8
1010079c:	1009883a 	mov	r4,r2
101007a0:	01002e80 	call	101002e8 <LCD_WR_DATA>
         LCD_WR_DATA(Ypos&0XFF);
101007a4:	e0bfff17 	ldw	r2,-4(fp)
101007a8:	10803fcc 	andi	r2,r2,255
101007ac:	1009883a 	mov	r4,r2
101007b0:	01002e80 	call	101002e8 <LCD_WR_DATA>
     LCD_WR_REG(0x002C);
101007b4:	01000b04 	movi	r4,44
101007b8:	01003180 	call	10100318 <LCD_WR_REG>
}
101007bc:	0001883a 	nop
101007c0:	e037883a 	mov	sp,fp
101007c4:	dfc00117 	ldw	ra,4(sp)
101007c8:	df000017 	ldw	fp,0(sp)
101007cc:	dec00204 	addi	sp,sp,8
101007d0:	f800283a 	ret

101007d4 <LCD_Swiss>:

void LCD_Swiss(uint size) {
101007d4:	defff704 	addi	sp,sp,-36
101007d8:	dfc00815 	stw	ra,32(sp)
101007dc:	df000715 	stw	fp,28(sp)
101007e0:	df000704 	addi	fp,sp,28
101007e4:	e13fff15 	stw	r4,-4(fp)

    LCD_WR_REG(0x002c);
101007e8:	01000b04 	movi	r4,44
101007ec:	01003180 	call	10100318 <LCD_WR_REG>
    LCD_Clear(RED);
101007f0:	013e0014 	movui	r4,63488
101007f4:	01006dc0 	call	101006dc <LCD_Clear>
    // 140 - 180, 60 - 140
    LCD_SetCursor(160 - size * 1/2 , 120 - size * 3/2);
101007f8:	e0bfff17 	ldw	r2,-4(fp)
101007fc:	1004d07a 	srli	r2,r2,1
10100800:	00c02804 	movi	r3,160
10100804:	1889c83a 	sub	r4,r3,r2
10100808:	e0ffff17 	ldw	r3,-4(fp)
1010080c:	1805883a 	mov	r2,r3
10100810:	1085883a 	add	r2,r2,r2
10100814:	10c5883a 	add	r2,r2,r3
10100818:	1004d07a 	srli	r2,r2,1
1010081c:	00c01e04 	movi	r3,120
10100820:	1885c83a 	sub	r2,r3,r2
10100824:	100b883a 	mov	r5,r2
10100828:	010074c0 	call	1010074c <LCD_SetCursor>
    for(int i = 0; i < size; i++) {
1010082c:	e03ff915 	stw	zero,-28(fp)
10100830:	00001c06 	br	101008a4 <LCD_Swiss+0xd0>
        for(int j = 0; j < size; j++) {
10100834:	e03ffa15 	stw	zero,-24(fp)
10100838:	00000506 	br	10100850 <LCD_Swiss+0x7c>
            LCD_WR_DATA(WHITE);
1010083c:	013fffd4 	movui	r4,65535
10100840:	01002e80 	call	101002e8 <LCD_WR_DATA>
    LCD_WR_REG(0x002c);
    LCD_Clear(RED);
    // 140 - 180, 60 - 140
    LCD_SetCursor(160 - size * 1/2 , 120 - size * 3/2);
    for(int i = 0; i < size; i++) {
        for(int j = 0; j < size; j++) {
10100844:	e0bffa17 	ldw	r2,-24(fp)
10100848:	10800044 	addi	r2,r2,1
1010084c:	e0bffa15 	stw	r2,-24(fp)
10100850:	e0fffa17 	ldw	r3,-24(fp)
10100854:	e0bfff17 	ldw	r2,-4(fp)
10100858:	18bff836 	bltu	r3,r2,1010083c <__alt_data_end+0xfffe083c>
            LCD_WR_DATA(WHITE);
        }
        LCD_SetCursor(160 - size * 1/2, 120 - size * 3/2 + i);
1010085c:	e0bfff17 	ldw	r2,-4(fp)
10100860:	1004d07a 	srli	r2,r2,1
10100864:	00c02804 	movi	r3,160
10100868:	188dc83a 	sub	r6,r3,r2
1010086c:	e13ff917 	ldw	r4,-28(fp)
10100870:	e0ffff17 	ldw	r3,-4(fp)
10100874:	1805883a 	mov	r2,r3
10100878:	1085883a 	add	r2,r2,r2
1010087c:	10c5883a 	add	r2,r2,r3
10100880:	1004d07a 	srli	r2,r2,1
10100884:	2085c83a 	sub	r2,r4,r2
10100888:	10801e04 	addi	r2,r2,120
1010088c:	100b883a 	mov	r5,r2
10100890:	3009883a 	mov	r4,r6
10100894:	010074c0 	call	1010074c <LCD_SetCursor>

    LCD_WR_REG(0x002c);
    LCD_Clear(RED);
    // 140 - 180, 60 - 140
    LCD_SetCursor(160 - size * 1/2 , 120 - size * 3/2);
    for(int i = 0; i < size; i++) {
10100898:	e0bff917 	ldw	r2,-28(fp)
1010089c:	10800044 	addi	r2,r2,1
101008a0:	e0bff915 	stw	r2,-28(fp)
101008a4:	e0fff917 	ldw	r3,-28(fp)
101008a8:	e0bfff17 	ldw	r2,-4(fp)
101008ac:	18bfe136 	bltu	r3,r2,10100834 <__alt_data_end+0xfffe0834>
            LCD_WR_DATA(WHITE);
        }
        LCD_SetCursor(160 - size * 1/2, 120 - size * 3/2 + i);
    }

    LCD_SetCursor(160 - size * 3/2 , 120 - size * 1/2);
101008b0:	e0ffff17 	ldw	r3,-4(fp)
101008b4:	1805883a 	mov	r2,r3
101008b8:	1085883a 	add	r2,r2,r2
101008bc:	10c5883a 	add	r2,r2,r3
101008c0:	1004d07a 	srli	r2,r2,1
101008c4:	00c02804 	movi	r3,160
101008c8:	1889c83a 	sub	r4,r3,r2
101008cc:	e0bfff17 	ldw	r2,-4(fp)
101008d0:	1004d07a 	srli	r2,r2,1
101008d4:	00c01e04 	movi	r3,120
101008d8:	1885c83a 	sub	r2,r3,r2
101008dc:	100b883a 	mov	r5,r2
101008e0:	010074c0 	call	1010074c <LCD_SetCursor>
    for(int i = 0; i < size; i++) {
101008e4:	e03ffb15 	stw	zero,-20(fp)
101008e8:	00001e06 	br	10100964 <LCD_Swiss+0x190>
        for(int j = 0; j < 3*size; j++) {
101008ec:	e03ffc15 	stw	zero,-16(fp)
101008f0:	00000506 	br	10100908 <LCD_Swiss+0x134>
            LCD_WR_DATA(WHITE);
101008f4:	013fffd4 	movui	r4,65535
101008f8:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_SetCursor(160 - size * 1/2, 120 - size * 3/2 + i);
    }

    LCD_SetCursor(160 - size * 3/2 , 120 - size * 1/2);
    for(int i = 0; i < size; i++) {
        for(int j = 0; j < 3*size; j++) {
101008fc:	e0bffc17 	ldw	r2,-16(fp)
10100900:	10800044 	addi	r2,r2,1
10100904:	e0bffc15 	stw	r2,-16(fp)
10100908:	e0ffff17 	ldw	r3,-4(fp)
1010090c:	1805883a 	mov	r2,r3
10100910:	1085883a 	add	r2,r2,r2
10100914:	10c5883a 	add	r2,r2,r3
10100918:	e0fffc17 	ldw	r3,-16(fp)
1010091c:	18bff536 	bltu	r3,r2,101008f4 <__alt_data_end+0xfffe08f4>
            LCD_WR_DATA(WHITE);
        }
        LCD_SetCursor(160 - size * 3/2, 120 - size * 1/2 + i);
10100920:	e0ffff17 	ldw	r3,-4(fp)
10100924:	1805883a 	mov	r2,r3
10100928:	1085883a 	add	r2,r2,r2
1010092c:	10c5883a 	add	r2,r2,r3
10100930:	1004d07a 	srli	r2,r2,1
10100934:	00c02804 	movi	r3,160
10100938:	1889c83a 	sub	r4,r3,r2
1010093c:	e0fffb17 	ldw	r3,-20(fp)
10100940:	e0bfff17 	ldw	r2,-4(fp)
10100944:	1004d07a 	srli	r2,r2,1
10100948:	1885c83a 	sub	r2,r3,r2
1010094c:	10801e04 	addi	r2,r2,120
10100950:	100b883a 	mov	r5,r2
10100954:	010074c0 	call	1010074c <LCD_SetCursor>
        }
        LCD_SetCursor(160 - size * 1/2, 120 - size * 3/2 + i);
    }

    LCD_SetCursor(160 - size * 3/2 , 120 - size * 1/2);
    for(int i = 0; i < size; i++) {
10100958:	e0bffb17 	ldw	r2,-20(fp)
1010095c:	10800044 	addi	r2,r2,1
10100960:	e0bffb15 	stw	r2,-20(fp)
10100964:	e0fffb17 	ldw	r3,-20(fp)
10100968:	e0bfff17 	ldw	r2,-4(fp)
1010096c:	18bfdf36 	bltu	r3,r2,101008ec <__alt_data_end+0xfffe08ec>
            LCD_WR_DATA(WHITE);
        }
        LCD_SetCursor(160 - size * 3/2, 120 - size * 1/2 + i);
    }

    LCD_SetCursor(160 - size * 1/2 , 120 + size * 1/2);
10100970:	e0bfff17 	ldw	r2,-4(fp)
10100974:	1004d07a 	srli	r2,r2,1
10100978:	00c02804 	movi	r3,160
1010097c:	1887c83a 	sub	r3,r3,r2
10100980:	e0bfff17 	ldw	r2,-4(fp)
10100984:	1004d07a 	srli	r2,r2,1
10100988:	10801e04 	addi	r2,r2,120
1010098c:	100b883a 	mov	r5,r2
10100990:	1809883a 	mov	r4,r3
10100994:	010074c0 	call	1010074c <LCD_SetCursor>
   for(int i = 0; i < size; i++) {
10100998:	e03ffd15 	stw	zero,-12(fp)
1010099c:	00001806 	br	10100a00 <LCD_Swiss+0x22c>
       for(int j = 0; j < size; j++) {
101009a0:	e03ffe15 	stw	zero,-8(fp)
101009a4:	00000506 	br	101009bc <LCD_Swiss+0x1e8>
           LCD_WR_DATA(WHITE);
101009a8:	013fffd4 	movui	r4,65535
101009ac:	01002e80 	call	101002e8 <LCD_WR_DATA>
        LCD_SetCursor(160 - size * 3/2, 120 - size * 1/2 + i);
    }

    LCD_SetCursor(160 - size * 1/2 , 120 + size * 1/2);
   for(int i = 0; i < size; i++) {
       for(int j = 0; j < size; j++) {
101009b0:	e0bffe17 	ldw	r2,-8(fp)
101009b4:	10800044 	addi	r2,r2,1
101009b8:	e0bffe15 	stw	r2,-8(fp)
101009bc:	e0fffe17 	ldw	r3,-8(fp)
101009c0:	e0bfff17 	ldw	r2,-4(fp)
101009c4:	18bff836 	bltu	r3,r2,101009a8 <__alt_data_end+0xfffe09a8>
           LCD_WR_DATA(WHITE);
       }
       LCD_SetCursor(160 - size * 1/2, 120 + size * 1/2 + i);
101009c8:	e0bfff17 	ldw	r2,-4(fp)
101009cc:	1004d07a 	srli	r2,r2,1
101009d0:	00c02804 	movi	r3,160
101009d4:	1889c83a 	sub	r4,r3,r2
101009d8:	e0bfff17 	ldw	r2,-4(fp)
101009dc:	1006d07a 	srli	r3,r2,1
101009e0:	e0bffd17 	ldw	r2,-12(fp)
101009e4:	1885883a 	add	r2,r3,r2
101009e8:	10801e04 	addi	r2,r2,120
101009ec:	100b883a 	mov	r5,r2
101009f0:	010074c0 	call	1010074c <LCD_SetCursor>
        }
        LCD_SetCursor(160 - size * 3/2, 120 - size * 1/2 + i);
    }

    LCD_SetCursor(160 - size * 1/2 , 120 + size * 1/2);
   for(int i = 0; i < size; i++) {
101009f4:	e0bffd17 	ldw	r2,-12(fp)
101009f8:	10800044 	addi	r2,r2,1
101009fc:	e0bffd15 	stw	r2,-12(fp)
10100a00:	e0fffd17 	ldw	r3,-12(fp)
10100a04:	e0bfff17 	ldw	r2,-4(fp)
10100a08:	18bfe536 	bltu	r3,r2,101009a0 <__alt_data_end+0xfffe09a0>
           LCD_WR_DATA(WHITE);
       }
       LCD_SetCursor(160 - size * 1/2, 120 + size * 1/2 + i);
   }

}
10100a0c:	0001883a 	nop
10100a10:	e037883a 	mov	sp,fp
10100a14:	dfc00117 	ldw	ra,4(sp)
10100a18:	df000017 	ldw	fp,0(sp)
10100a1c:	dec00204 	addi	sp,sp,8
10100a20:	f800283a 	ret

10100a24 <LCD_reset>:

void LCD_reset(void) {
10100a24:	deffff04 	addi	sp,sp,-4
10100a28:	df000015 	stw	fp,0(sp)
10100a2c:	d839883a 	mov	fp,sp
    IOWR_32DIRECT(LCD_CONTROLLER_0_BASE, LCD_COMMAND_OFFSET, 0x0001);
10100a30:	00c00044 	movi	r3,1
10100a34:	00800204 	movi	r2,8
10100a38:	10c00035 	stwio	r3,0(r2)
}
10100a3c:	0001883a 	nop
10100a40:	e037883a 	mov	sp,fp
10100a44:	df000017 	ldw	fp,0(sp)
10100a48:	dec00104 	addi	sp,sp,4
10100a4c:	f800283a 	ret

10100a50 <MEM_WR>:

void MEM_WR(uint offset, uint data) {
10100a50:	defffd04 	addi	sp,sp,-12
10100a54:	df000215 	stw	fp,8(sp)
10100a58:	df000204 	addi	fp,sp,8
10100a5c:	e13ffe15 	stw	r4,-8(fp)
10100a60:	e17fff15 	stw	r5,-4(fp)
    IOWR_32DIRECT(HPS_0_BRIDGES_BASE, offset, data);
10100a64:	e0fffe17 	ldw	r3,-8(fp)
10100a68:	00900034 	movhi	r2,16384
10100a6c:	1885883a 	add	r2,r3,r2
10100a70:	e0ffff17 	ldw	r3,-4(fp)
10100a74:	10c00035 	stwio	r3,0(r2)
}
10100a78:	0001883a 	nop
10100a7c:	e037883a 	mov	sp,fp
10100a80:	df000017 	ldw	fp,0(sp)
10100a84:	dec00104 	addi	sp,sp,4
10100a88:	f800283a 	ret

10100a8c <BUFF_ADD_WR>:

void BUFF_ADD_WR(uint data){
10100a8c:	defffe04 	addi	sp,sp,-8
10100a90:	df000115 	stw	fp,4(sp)
10100a94:	df000104 	addi	fp,sp,4
10100a98:	e13fff15 	stw	r4,-4(fp)
    IOWR_32DIRECT(LCD_CONTROLLER_0_BASE, BUFFER_ADDRESS_OFFSET, data);
10100a9c:	e0bfff17 	ldw	r2,-4(fp)
10100aa0:	0007883a 	mov	r3,zero
10100aa4:	18800035 	stwio	r2,0(r3)
}
10100aa8:	0001883a 	nop
10100aac:	e037883a 	mov	sp,fp
10100ab0:	df000017 	ldw	fp,0(sp)
10100ab4:	dec00104 	addi	sp,sp,4
10100ab8:	f800283a 	ret

10100abc <BUFF_LEN_WR>:

void BUFF_LEN_WR(uint data){
10100abc:	defffe04 	addi	sp,sp,-8
10100ac0:	df000115 	stw	fp,4(sp)
10100ac4:	df000104 	addi	fp,sp,4
10100ac8:	e13fff15 	stw	r4,-4(fp)
    IOWR_32DIRECT(LCD_CONTROLLER_0_BASE, BUFFER_LENGTH_OFFSET, data);
10100acc:	e0ffff17 	ldw	r3,-4(fp)
10100ad0:	00800104 	movi	r2,4
10100ad4:	10c00035 	stwio	r3,0(r2)
}
10100ad8:	0001883a 	nop
10100adc:	e037883a 	mov	sp,fp
10100ae0:	df000017 	ldw	fp,0(sp)
10100ae4:	dec00104 	addi	sp,sp,4
10100ae8:	f800283a 	ret

10100aec <test>:

void test(void) {
10100aec:	defffa04 	addi	sp,sp,-24
10100af0:	dfc00515 	stw	ra,20(sp)
10100af4:	df000415 	stw	fp,16(sp)
10100af8:	df000404 	addi	fp,sp,16
    int verbose = 0;
10100afc:	e03ffe15 	stw	zero,-8(fp)
    printf("sending data to SDRAM... \n");
10100b00:	01040474 	movhi	r4,4113
10100b04:	21004904 	addi	r4,r4,292
10100b08:	0100d800 	call	10100d80 <puts>
    // write to SDRAM
    for(int i = 0; i < BUFFER_LENGTH; i = i + 4){
10100b0c:	e03ffc15 	stw	zero,-16(fp)
10100b10:	00000706 	br	10100b30 <test+0x44>
        MEM_WR(BUFFER1_OFFSET + i, 0xffffffff);
10100b14:	e0bffc17 	ldw	r2,-16(fp)
10100b18:	017fffc4 	movi	r5,-1
10100b1c:	1009883a 	mov	r4,r2
10100b20:	0100a500 	call	10100a50 <MEM_WR>

void test(void) {
    int verbose = 0;
    printf("sending data to SDRAM... \n");
    // write to SDRAM
    for(int i = 0; i < BUFFER_LENGTH; i = i + 4){
10100b24:	e0bffc17 	ldw	r2,-16(fp)
10100b28:	10800104 	addi	r2,r2,4
10100b2c:	e0bffc15 	stw	r2,-16(fp)
10100b30:	e0fffc17 	ldw	r3,-16(fp)
10100b34:	008000b4 	movhi	r2,2
10100b38:	108dffc4 	addi	r2,r2,14335
10100b3c:	10fff50e 	bge	r2,r3,10100b14 <__alt_data_end+0xfffe0b14>
        MEM_WR(BUFFER1_OFFSET + i, 0xffffffff);
    }
    printf("Data successfully sent. reading \n");
10100b40:	01040474 	movhi	r4,4113
10100b44:	21005004 	addi	r4,r4,320
10100b48:	0100d800 	call	10100d80 <puts>

    if(verbose == 1){
10100b4c:	e0bffe17 	ldw	r2,-8(fp)
10100b50:	10800058 	cmpnei	r2,r2,1
10100b54:	1000131e 	bne	r2,zero,10100ba4 <test+0xb8>
        unsigned char r;
        for(int i = 0; i < BUFFER_LENGTH; i = i + 4){
10100b58:	e03ffd15 	stw	zero,-12(fp)
10100b5c:	00000d06 	br	10100b94 <test+0xa8>
            r =  IORD_32DIRECT(HPS_0_BRIDGES_BASE, BUFFER1_OFFSET + i);
10100b60:	e0fffd17 	ldw	r3,-12(fp)
10100b64:	00900034 	movhi	r2,16384
10100b68:	1885883a 	add	r2,r3,r2
10100b6c:	10800037 	ldwio	r2,0(r2)
10100b70:	e0bfff05 	stb	r2,-4(fp)
            printf("%x \n", r);
10100b74:	e0bfff03 	ldbu	r2,-4(fp)
10100b78:	100b883a 	mov	r5,r2
10100b7c:	01040474 	movhi	r4,4113
10100b80:	21005904 	addi	r4,r4,356
10100b84:	0100c840 	call	10100c84 <printf>
    }
    printf("Data successfully sent. reading \n");

    if(verbose == 1){
        unsigned char r;
        for(int i = 0; i < BUFFER_LENGTH; i = i + 4){
10100b88:	e0bffd17 	ldw	r2,-12(fp)
10100b8c:	10800104 	addi	r2,r2,4
10100b90:	e0bffd15 	stw	r2,-12(fp)
10100b94:	e0fffd17 	ldw	r3,-12(fp)
10100b98:	008000b4 	movhi	r2,2
10100b9c:	108dffc4 	addi	r2,r2,14335
10100ba0:	10ffef0e 	bge	r2,r3,10100b60 <__alt_data_end+0xfffe0b60>
        }
    }


    // buffer address
    BUFF_ADD_WR(BUFFER1_OFFSET);
10100ba4:	0009883a 	mov	r4,zero
10100ba8:	0100a8c0 	call	10100a8c <BUFF_ADD_WR>
    waitms(1);
10100bac:	01000044 	movi	r4,1
10100bb0:	01002900 	call	10100290 <waitms>
    // buffer length
    BUFF_LEN_WR(BUFFER_LENGTH);
10100bb4:	010000b4 	movhi	r4,2
10100bb8:	210e0004 	addi	r4,r4,14336
10100bbc:	0100abc0 	call	10100abc <BUFF_LEN_WR>

    printf("Buffer info sent. \n");
10100bc0:	01040474 	movhi	r4,4113
10100bc4:	21005b04 	addi	r4,r4,364
10100bc8:	0100d800 	call	10100d80 <puts>
}
10100bcc:	0001883a 	nop
10100bd0:	e037883a 	mov	sp,fp
10100bd4:	dfc00117 	ldw	ra,4(sp)
10100bd8:	df000017 	ldw	fp,0(sp)
10100bdc:	dec00204 	addi	sp,sp,8
10100be0:	f800283a 	ret

10100be4 <main>:

int main(void)
{
10100be4:	defffe04 	addi	sp,sp,-8
10100be8:	dfc00115 	stw	ra,4(sp)
10100bec:	df000015 	stw	fp,0(sp)
10100bf0:	d839883a 	mov	fp,sp

    printf("start:\n");
10100bf4:	01040474 	movhi	r4,4113
10100bf8:	21006004 	addi	r4,r4,384
10100bfc:	0100d800 	call	10100d80 <puts>
    LCD_Init();
10100c00:	01003480 	call	10100348 <LCD_Init>
    LCD_Clear(0x0000);
10100c04:	0009883a 	mov	r4,zero
10100c08:	01006dc0 	call	101006dc <LCD_Clear>
    IOWR_8DIRECT(PIO_LEDS_BASE, 1, 0x0);
10100c0c:	0007883a 	mov	r3,zero
10100c10:	00840034 	movhi	r2,4096
10100c14:	10820444 	addi	r2,r2,2065
10100c18:	10c00025 	stbio	r3,0(r2)

    test();
10100c1c:	0100aec0 	call	10100aec <test>
    while(1) {
        IOWR_8DIRECT(PIO_LEDS_BASE, 1, 0xAA);
10100c20:	00ffea84 	movi	r3,-86
10100c24:	00840034 	movhi	r2,4096
10100c28:	10820444 	addi	r2,r2,2065
10100c2c:	10c00025 	stbio	r3,0(r2)
        waitms(1000);
10100c30:	0100fa04 	movi	r4,1000
10100c34:	01002900 	call	10100290 <waitms>
        IOWR_8DIRECT(PIO_LEDS_BASE, 1, 0x55);
10100c38:	00c01544 	movi	r3,85
10100c3c:	00840034 	movhi	r2,4096
10100c40:	10820444 	addi	r2,r2,2065
10100c44:	10c00025 	stbio	r3,0(r2)
        waitms(1000);
10100c48:	0100fa04 	movi	r4,1000
10100c4c:	01002900 	call	10100290 <waitms>
    }
10100c50:	003ff306 	br	10100c20 <__alt_data_end+0xfffe0c20>

10100c54 <_printf_r>:
10100c54:	defffd04 	addi	sp,sp,-12
10100c58:	2805883a 	mov	r2,r5
10100c5c:	dfc00015 	stw	ra,0(sp)
10100c60:	d9800115 	stw	r6,4(sp)
10100c64:	d9c00215 	stw	r7,8(sp)
10100c68:	21400217 	ldw	r5,8(r4)
10100c6c:	d9c00104 	addi	r7,sp,4
10100c70:	100d883a 	mov	r6,r2
10100c74:	0100e2c0 	call	10100e2c <___vfprintf_internal_r>
10100c78:	dfc00017 	ldw	ra,0(sp)
10100c7c:	dec00304 	addi	sp,sp,12
10100c80:	f800283a 	ret

10100c84 <printf>:
10100c84:	defffc04 	addi	sp,sp,-16
10100c88:	dfc00015 	stw	ra,0(sp)
10100c8c:	d9400115 	stw	r5,4(sp)
10100c90:	d9800215 	stw	r6,8(sp)
10100c94:	d9c00315 	stw	r7,12(sp)
10100c98:	00840474 	movhi	r2,4113
10100c9c:	1087db04 	addi	r2,r2,8044
10100ca0:	10800017 	ldw	r2,0(r2)
10100ca4:	200b883a 	mov	r5,r4
10100ca8:	d9800104 	addi	r6,sp,4
10100cac:	11000217 	ldw	r4,8(r2)
10100cb0:	01030240 	call	10103024 <__vfprintf_internal>
10100cb4:	dfc00017 	ldw	ra,0(sp)
10100cb8:	dec00404 	addi	sp,sp,16
10100cbc:	f800283a 	ret

10100cc0 <_puts_r>:
10100cc0:	defff604 	addi	sp,sp,-40
10100cc4:	dc000715 	stw	r16,28(sp)
10100cc8:	2021883a 	mov	r16,r4
10100ccc:	2809883a 	mov	r4,r5
10100cd0:	dc400815 	stw	r17,32(sp)
10100cd4:	dfc00915 	stw	ra,36(sp)
10100cd8:	2823883a 	mov	r17,r5
10100cdc:	0100d940 	call	10100d94 <strlen>
10100ce0:	10c00044 	addi	r3,r2,1
10100ce4:	d8800115 	stw	r2,4(sp)
10100ce8:	00840474 	movhi	r2,4113
10100cec:	10806204 	addi	r2,r2,392
10100cf0:	d8800215 	stw	r2,8(sp)
10100cf4:	00800044 	movi	r2,1
10100cf8:	d8800315 	stw	r2,12(sp)
10100cfc:	00800084 	movi	r2,2
10100d00:	dc400015 	stw	r17,0(sp)
10100d04:	d8c00615 	stw	r3,24(sp)
10100d08:	dec00415 	stw	sp,16(sp)
10100d0c:	d8800515 	stw	r2,20(sp)
10100d10:	80000226 	beq	r16,zero,10100d1c <_puts_r+0x5c>
10100d14:	80800e17 	ldw	r2,56(r16)
10100d18:	10001426 	beq	r2,zero,10100d6c <_puts_r+0xac>
10100d1c:	81400217 	ldw	r5,8(r16)
10100d20:	2880030b 	ldhu	r2,12(r5)
10100d24:	10c8000c 	andi	r3,r2,8192
10100d28:	1800061e 	bne	r3,zero,10100d44 <_puts_r+0x84>
10100d2c:	29001917 	ldw	r4,100(r5)
10100d30:	00f7ffc4 	movi	r3,-8193
10100d34:	10880014 	ori	r2,r2,8192
10100d38:	20c6703a 	and	r3,r4,r3
10100d3c:	2880030d 	sth	r2,12(r5)
10100d40:	28c01915 	stw	r3,100(r5)
10100d44:	d9800404 	addi	r6,sp,16
10100d48:	8009883a 	mov	r4,r16
10100d4c:	01055540 	call	10105554 <__sfvwrite_r>
10100d50:	1000091e 	bne	r2,zero,10100d78 <_puts_r+0xb8>
10100d54:	00800284 	movi	r2,10
10100d58:	dfc00917 	ldw	ra,36(sp)
10100d5c:	dc400817 	ldw	r17,32(sp)
10100d60:	dc000717 	ldw	r16,28(sp)
10100d64:	dec00a04 	addi	sp,sp,40
10100d68:	f800283a 	ret
10100d6c:	8009883a 	mov	r4,r16
10100d70:	01050d00 	call	101050d0 <__sinit>
10100d74:	003fe906 	br	10100d1c <__alt_data_end+0xfffe0d1c>
10100d78:	00bfffc4 	movi	r2,-1
10100d7c:	003ff606 	br	10100d58 <__alt_data_end+0xfffe0d58>

10100d80 <puts>:
10100d80:	00840474 	movhi	r2,4113
10100d84:	1087db04 	addi	r2,r2,8044
10100d88:	200b883a 	mov	r5,r4
10100d8c:	11000017 	ldw	r4,0(r2)
10100d90:	0100cc01 	jmpi	10100cc0 <_puts_r>

10100d94 <strlen>:
10100d94:	208000cc 	andi	r2,r4,3
10100d98:	10002026 	beq	r2,zero,10100e1c <strlen+0x88>
10100d9c:	20800007 	ldb	r2,0(r4)
10100da0:	10002026 	beq	r2,zero,10100e24 <strlen+0x90>
10100da4:	2005883a 	mov	r2,r4
10100da8:	00000206 	br	10100db4 <strlen+0x20>
10100dac:	10c00007 	ldb	r3,0(r2)
10100db0:	18001826 	beq	r3,zero,10100e14 <strlen+0x80>
10100db4:	10800044 	addi	r2,r2,1
10100db8:	10c000cc 	andi	r3,r2,3
10100dbc:	183ffb1e 	bne	r3,zero,10100dac <__alt_data_end+0xfffe0dac>
10100dc0:	10c00017 	ldw	r3,0(r2)
10100dc4:	01ffbff4 	movhi	r7,65279
10100dc8:	39ffbfc4 	addi	r7,r7,-257
10100dcc:	00ca303a 	nor	r5,zero,r3
10100dd0:	01a02074 	movhi	r6,32897
10100dd4:	19c7883a 	add	r3,r3,r7
10100dd8:	31a02004 	addi	r6,r6,-32640
10100ddc:	1946703a 	and	r3,r3,r5
10100de0:	1986703a 	and	r3,r3,r6
10100de4:	1800091e 	bne	r3,zero,10100e0c <strlen+0x78>
10100de8:	10800104 	addi	r2,r2,4
10100dec:	10c00017 	ldw	r3,0(r2)
10100df0:	19cb883a 	add	r5,r3,r7
10100df4:	00c6303a 	nor	r3,zero,r3
10100df8:	28c6703a 	and	r3,r5,r3
10100dfc:	1986703a 	and	r3,r3,r6
10100e00:	183ff926 	beq	r3,zero,10100de8 <__alt_data_end+0xfffe0de8>
10100e04:	00000106 	br	10100e0c <strlen+0x78>
10100e08:	10800044 	addi	r2,r2,1
10100e0c:	10c00007 	ldb	r3,0(r2)
10100e10:	183ffd1e 	bne	r3,zero,10100e08 <__alt_data_end+0xfffe0e08>
10100e14:	1105c83a 	sub	r2,r2,r4
10100e18:	f800283a 	ret
10100e1c:	2005883a 	mov	r2,r4
10100e20:	003fe706 	br	10100dc0 <__alt_data_end+0xfffe0dc0>
10100e24:	0005883a 	mov	r2,zero
10100e28:	f800283a 	ret

10100e2c <___vfprintf_internal_r>:
10100e2c:	deffb804 	addi	sp,sp,-288
10100e30:	dfc04715 	stw	ra,284(sp)
10100e34:	ddc04515 	stw	r23,276(sp)
10100e38:	dd404315 	stw	r21,268(sp)
10100e3c:	d9002c15 	stw	r4,176(sp)
10100e40:	282f883a 	mov	r23,r5
10100e44:	302b883a 	mov	r21,r6
10100e48:	d9c02d15 	stw	r7,180(sp)
10100e4c:	df004615 	stw	fp,280(sp)
10100e50:	dd804415 	stw	r22,272(sp)
10100e54:	dd004215 	stw	r20,264(sp)
10100e58:	dcc04115 	stw	r19,260(sp)
10100e5c:	dc804015 	stw	r18,256(sp)
10100e60:	dc403f15 	stw	r17,252(sp)
10100e64:	dc003e15 	stw	r16,248(sp)
10100e68:	0105c440 	call	10105c44 <_localeconv_r>
10100e6c:	10800017 	ldw	r2,0(r2)
10100e70:	1009883a 	mov	r4,r2
10100e74:	d8803415 	stw	r2,208(sp)
10100e78:	0100d940 	call	10100d94 <strlen>
10100e7c:	d8803715 	stw	r2,220(sp)
10100e80:	d8802c17 	ldw	r2,176(sp)
10100e84:	10000226 	beq	r2,zero,10100e90 <___vfprintf_internal_r+0x64>
10100e88:	10800e17 	ldw	r2,56(r2)
10100e8c:	1000f926 	beq	r2,zero,10101274 <___vfprintf_internal_r+0x448>
10100e90:	b880030b 	ldhu	r2,12(r23)
10100e94:	10c8000c 	andi	r3,r2,8192
10100e98:	1800061e 	bne	r3,zero,10100eb4 <___vfprintf_internal_r+0x88>
10100e9c:	b9001917 	ldw	r4,100(r23)
10100ea0:	00f7ffc4 	movi	r3,-8193
10100ea4:	10880014 	ori	r2,r2,8192
10100ea8:	20c6703a 	and	r3,r4,r3
10100eac:	b880030d 	sth	r2,12(r23)
10100eb0:	b8c01915 	stw	r3,100(r23)
10100eb4:	10c0020c 	andi	r3,r2,8
10100eb8:	1800c126 	beq	r3,zero,101011c0 <___vfprintf_internal_r+0x394>
10100ebc:	b8c00417 	ldw	r3,16(r23)
10100ec0:	1800bf26 	beq	r3,zero,101011c0 <___vfprintf_internal_r+0x394>
10100ec4:	1080068c 	andi	r2,r2,26
10100ec8:	00c00284 	movi	r3,10
10100ecc:	10c0c426 	beq	r2,r3,101011e0 <___vfprintf_internal_r+0x3b4>
10100ed0:	d8c00404 	addi	r3,sp,16
10100ed4:	05040474 	movhi	r20,4113
10100ed8:	d9001e04 	addi	r4,sp,120
10100edc:	a5007384 	addi	r20,r20,462
10100ee0:	d8c01e15 	stw	r3,120(sp)
10100ee4:	d8002015 	stw	zero,128(sp)
10100ee8:	d8001f15 	stw	zero,124(sp)
10100eec:	d8003315 	stw	zero,204(sp)
10100ef0:	d8003615 	stw	zero,216(sp)
10100ef4:	d8003815 	stw	zero,224(sp)
10100ef8:	1811883a 	mov	r8,r3
10100efc:	d8003915 	stw	zero,228(sp)
10100f00:	d8003a15 	stw	zero,232(sp)
10100f04:	d8002f15 	stw	zero,188(sp)
10100f08:	d9002815 	stw	r4,160(sp)
10100f0c:	a8800007 	ldb	r2,0(r21)
10100f10:	10027b26 	beq	r2,zero,10101900 <___vfprintf_internal_r+0xad4>
10100f14:	00c00944 	movi	r3,37
10100f18:	a821883a 	mov	r16,r21
10100f1c:	10c0021e 	bne	r2,r3,10100f28 <___vfprintf_internal_r+0xfc>
10100f20:	00001406 	br	10100f74 <___vfprintf_internal_r+0x148>
10100f24:	10c00326 	beq	r2,r3,10100f34 <___vfprintf_internal_r+0x108>
10100f28:	84000044 	addi	r16,r16,1
10100f2c:	80800007 	ldb	r2,0(r16)
10100f30:	103ffc1e 	bne	r2,zero,10100f24 <__alt_data_end+0xfffe0f24>
10100f34:	8563c83a 	sub	r17,r16,r21
10100f38:	88000e26 	beq	r17,zero,10100f74 <___vfprintf_internal_r+0x148>
10100f3c:	d8c02017 	ldw	r3,128(sp)
10100f40:	d8801f17 	ldw	r2,124(sp)
10100f44:	45400015 	stw	r21,0(r8)
10100f48:	1c47883a 	add	r3,r3,r17
10100f4c:	10800044 	addi	r2,r2,1
10100f50:	d8c02015 	stw	r3,128(sp)
10100f54:	44400115 	stw	r17,4(r8)
10100f58:	d8801f15 	stw	r2,124(sp)
10100f5c:	00c001c4 	movi	r3,7
10100f60:	1880a716 	blt	r3,r2,10101200 <___vfprintf_internal_r+0x3d4>
10100f64:	42000204 	addi	r8,r8,8
10100f68:	d9402f17 	ldw	r5,188(sp)
10100f6c:	2c4b883a 	add	r5,r5,r17
10100f70:	d9402f15 	stw	r5,188(sp)
10100f74:	80800007 	ldb	r2,0(r16)
10100f78:	1000a826 	beq	r2,zero,1010121c <___vfprintf_internal_r+0x3f0>
10100f7c:	84400047 	ldb	r17,1(r16)
10100f80:	00bfffc4 	movi	r2,-1
10100f84:	85400044 	addi	r21,r16,1
10100f88:	d8002785 	stb	zero,158(sp)
10100f8c:	0007883a 	mov	r3,zero
10100f90:	000f883a 	mov	r7,zero
10100f94:	d8802915 	stw	r2,164(sp)
10100f98:	d8003115 	stw	zero,196(sp)
10100f9c:	0025883a 	mov	r18,zero
10100fa0:	01401604 	movi	r5,88
10100fa4:	01800244 	movi	r6,9
10100fa8:	02800a84 	movi	r10,42
10100fac:	02401b04 	movi	r9,108
10100fb0:	ad400044 	addi	r21,r21,1
10100fb4:	88bff804 	addi	r2,r17,-32
10100fb8:	28830436 	bltu	r5,r2,10101bcc <___vfprintf_internal_r+0xda0>
10100fbc:	100490ba 	slli	r2,r2,2
10100fc0:	01040434 	movhi	r4,4112
10100fc4:	2103f504 	addi	r4,r4,4052
10100fc8:	1105883a 	add	r2,r2,r4
10100fcc:	10800017 	ldw	r2,0(r2)
10100fd0:	1000683a 	jmp	r2
10100fd4:	10101aec 	andhi	zero,r2,16491
10100fd8:	10101bcc 	andi	zero,r2,16495
10100fdc:	10101bcc 	andi	zero,r2,16495
10100fe0:	10101b0c 	andi	zero,r2,16492
10100fe4:	10101bcc 	andi	zero,r2,16495
10100fe8:	10101bcc 	andi	zero,r2,16495
10100fec:	10101bcc 	andi	zero,r2,16495
10100ff0:	10101bcc 	andi	zero,r2,16495
10100ff4:	10101bcc 	andi	zero,r2,16495
10100ff8:	10101bcc 	andi	zero,r2,16495
10100ffc:	10101280 	call	11010128 <__alt_data_end+0xef0128>
10101000:	10101a28 	cmpgeui	zero,r2,16488
10101004:	10101bcc 	andi	zero,r2,16495
10101008:	10101148 	cmpgei	zero,r2,16453
1010100c:	101012a8 	cmpgeui	zero,r2,16458
10101010:	10101bcc 	andi	zero,r2,16495
10101014:	101012e8 	cmpgeui	zero,r2,16459
10101018:	101012f4 	orhi	zero,r2,16459
1010101c:	101012f4 	orhi	zero,r2,16459
10101020:	101012f4 	orhi	zero,r2,16459
10101024:	101012f4 	orhi	zero,r2,16459
10101028:	101012f4 	orhi	zero,r2,16459
1010102c:	101012f4 	orhi	zero,r2,16459
10101030:	101012f4 	orhi	zero,r2,16459
10101034:	101012f4 	orhi	zero,r2,16459
10101038:	101012f4 	orhi	zero,r2,16459
1010103c:	10101bcc 	andi	zero,r2,16495
10101040:	10101bcc 	andi	zero,r2,16495
10101044:	10101bcc 	andi	zero,r2,16495
10101048:	10101bcc 	andi	zero,r2,16495
1010104c:	10101bcc 	andi	zero,r2,16495
10101050:	10101bcc 	andi	zero,r2,16495
10101054:	10101bcc 	andi	zero,r2,16495
10101058:	10101bcc 	andi	zero,r2,16495
1010105c:	10101bcc 	andi	zero,r2,16495
10101060:	10101bcc 	andi	zero,r2,16495
10101064:	10101328 	cmpgeui	zero,r2,16460
10101068:	101013e4 	muli	zero,r2,16463
1010106c:	10101bcc 	andi	zero,r2,16495
10101070:	101013e4 	muli	zero,r2,16463
10101074:	10101bcc 	andi	zero,r2,16495
10101078:	10101bcc 	andi	zero,r2,16495
1010107c:	10101bcc 	andi	zero,r2,16495
10101080:	10101bcc 	andi	zero,r2,16495
10101084:	10101484 	addi	zero,r2,16466
10101088:	10101bcc 	andi	zero,r2,16495
1010108c:	10101bcc 	andi	zero,r2,16495
10101090:	10101490 	cmplti	zero,r2,16466
10101094:	10101bcc 	andi	zero,r2,16495
10101098:	10101bcc 	andi	zero,r2,16495
1010109c:	10101bcc 	andi	zero,r2,16495
101010a0:	10101bcc 	andi	zero,r2,16495
101010a4:	10101bcc 	andi	zero,r2,16495
101010a8:	10101908 	cmpgei	zero,r2,16484
101010ac:	10101bcc 	andi	zero,r2,16495
101010b0:	10101bcc 	andi	zero,r2,16495
101010b4:	10101968 	cmpgeui	zero,r2,16485
101010b8:	10101bcc 	andi	zero,r2,16495
101010bc:	10101bcc 	andi	zero,r2,16495
101010c0:	10101bcc 	andi	zero,r2,16495
101010c4:	10101bcc 	andi	zero,r2,16495
101010c8:	10101bcc 	andi	zero,r2,16495
101010cc:	10101bcc 	andi	zero,r2,16495
101010d0:	10101bcc 	andi	zero,r2,16495
101010d4:	10101bcc 	andi	zero,r2,16495
101010d8:	10101bcc 	andi	zero,r2,16495
101010dc:	10101bcc 	andi	zero,r2,16495
101010e0:	10101b78 	rdprs	zero,r2,16493
101010e4:	10101b18 	cmpnei	zero,r2,16492
101010e8:	101013e4 	muli	zero,r2,16463
101010ec:	101013e4 	muli	zero,r2,16463
101010f0:	101013e4 	muli	zero,r2,16463
101010f4:	10101b28 	cmpgeui	zero,r2,16492
101010f8:	10101b18 	cmpnei	zero,r2,16492
101010fc:	10101bcc 	andi	zero,r2,16495
10101100:	10101bcc 	andi	zero,r2,16495
10101104:	10101b34 	orhi	zero,r2,16492
10101108:	10101bcc 	andi	zero,r2,16495
1010110c:	10101b44 	addi	zero,r2,16493
10101110:	10101a18 	cmpnei	zero,r2,16488
10101114:	10101154 	ori	zero,r2,16453
10101118:	10101a38 	rdprs	zero,r2,16488
1010111c:	10101bcc 	andi	zero,r2,16495
10101120:	10101a44 	addi	zero,r2,16489
10101124:	10101bcc 	andi	zero,r2,16495
10101128:	10101aa0 	cmpeqi	zero,r2,16490
1010112c:	10101bcc 	andi	zero,r2,16495
10101130:	10101bcc 	andi	zero,r2,16495
10101134:	10101ab0 	cmpltui	zero,r2,16490
10101138:	d9003117 	ldw	r4,196(sp)
1010113c:	d8802d15 	stw	r2,180(sp)
10101140:	0109c83a 	sub	r4,zero,r4
10101144:	d9003115 	stw	r4,196(sp)
10101148:	94800114 	ori	r18,r18,4
1010114c:	ac400007 	ldb	r17,0(r21)
10101150:	003f9706 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101154:	00800c04 	movi	r2,48
10101158:	d9002d17 	ldw	r4,180(sp)
1010115c:	d9402917 	ldw	r5,164(sp)
10101160:	d8802705 	stb	r2,156(sp)
10101164:	00801e04 	movi	r2,120
10101168:	d8802745 	stb	r2,157(sp)
1010116c:	d8002785 	stb	zero,158(sp)
10101170:	20c00104 	addi	r3,r4,4
10101174:	24c00017 	ldw	r19,0(r4)
10101178:	002d883a 	mov	r22,zero
1010117c:	90800094 	ori	r2,r18,2
10101180:	28029a16 	blt	r5,zero,10101bec <___vfprintf_internal_r+0xdc0>
10101184:	00bfdfc4 	movi	r2,-129
10101188:	90a4703a 	and	r18,r18,r2
1010118c:	d8c02d15 	stw	r3,180(sp)
10101190:	94800094 	ori	r18,r18,2
10101194:	9802871e 	bne	r19,zero,10101bb4 <___vfprintf_internal_r+0xd88>
10101198:	00840474 	movhi	r2,4113
1010119c:	10806c04 	addi	r2,r2,432
101011a0:	d8803915 	stw	r2,228(sp)
101011a4:	04401e04 	movi	r17,120
101011a8:	d8802917 	ldw	r2,164(sp)
101011ac:	0039883a 	mov	fp,zero
101011b0:	1001e926 	beq	r2,zero,10101958 <___vfprintf_internal_r+0xb2c>
101011b4:	0027883a 	mov	r19,zero
101011b8:	002d883a 	mov	r22,zero
101011bc:	00020506 	br	101019d4 <___vfprintf_internal_r+0xba8>
101011c0:	d9002c17 	ldw	r4,176(sp)
101011c4:	b80b883a 	mov	r5,r23
101011c8:	01030fc0 	call	101030fc <__swsetup_r>
101011cc:	1005ac1e 	bne	r2,zero,10102880 <___vfprintf_internal_r+0x1a54>
101011d0:	b880030b 	ldhu	r2,12(r23)
101011d4:	00c00284 	movi	r3,10
101011d8:	1080068c 	andi	r2,r2,26
101011dc:	10ff3c1e 	bne	r2,r3,10100ed0 <__alt_data_end+0xfffe0ed0>
101011e0:	b880038f 	ldh	r2,14(r23)
101011e4:	103f3a16 	blt	r2,zero,10100ed0 <__alt_data_end+0xfffe0ed0>
101011e8:	d9c02d17 	ldw	r7,180(sp)
101011ec:	d9002c17 	ldw	r4,176(sp)
101011f0:	a80d883a 	mov	r6,r21
101011f4:	b80b883a 	mov	r5,r23
101011f8:	01030400 	call	10103040 <__sbprintf>
101011fc:	00001106 	br	10101244 <___vfprintf_internal_r+0x418>
10101200:	d9002c17 	ldw	r4,176(sp)
10101204:	d9801e04 	addi	r6,sp,120
10101208:	b80b883a 	mov	r5,r23
1010120c:	01084280 	call	10108428 <__sprint_r>
10101210:	1000081e 	bne	r2,zero,10101234 <___vfprintf_internal_r+0x408>
10101214:	da000404 	addi	r8,sp,16
10101218:	003f5306 	br	10100f68 <__alt_data_end+0xfffe0f68>
1010121c:	d8802017 	ldw	r2,128(sp)
10101220:	10000426 	beq	r2,zero,10101234 <___vfprintf_internal_r+0x408>
10101224:	d9002c17 	ldw	r4,176(sp)
10101228:	d9801e04 	addi	r6,sp,120
1010122c:	b80b883a 	mov	r5,r23
10101230:	01084280 	call	10108428 <__sprint_r>
10101234:	b880030b 	ldhu	r2,12(r23)
10101238:	1080100c 	andi	r2,r2,64
1010123c:	1005901e 	bne	r2,zero,10102880 <___vfprintf_internal_r+0x1a54>
10101240:	d8802f17 	ldw	r2,188(sp)
10101244:	dfc04717 	ldw	ra,284(sp)
10101248:	df004617 	ldw	fp,280(sp)
1010124c:	ddc04517 	ldw	r23,276(sp)
10101250:	dd804417 	ldw	r22,272(sp)
10101254:	dd404317 	ldw	r21,268(sp)
10101258:	dd004217 	ldw	r20,264(sp)
1010125c:	dcc04117 	ldw	r19,260(sp)
10101260:	dc804017 	ldw	r18,256(sp)
10101264:	dc403f17 	ldw	r17,252(sp)
10101268:	dc003e17 	ldw	r16,248(sp)
1010126c:	dec04804 	addi	sp,sp,288
10101270:	f800283a 	ret
10101274:	d9002c17 	ldw	r4,176(sp)
10101278:	01050d00 	call	101050d0 <__sinit>
1010127c:	003f0406 	br	10100e90 <__alt_data_end+0xfffe0e90>
10101280:	d8802d17 	ldw	r2,180(sp)
10101284:	d9002d17 	ldw	r4,180(sp)
10101288:	10800017 	ldw	r2,0(r2)
1010128c:	d8803115 	stw	r2,196(sp)
10101290:	20800104 	addi	r2,r4,4
10101294:	d9003117 	ldw	r4,196(sp)
10101298:	203fa716 	blt	r4,zero,10101138 <__alt_data_end+0xfffe1138>
1010129c:	d8802d15 	stw	r2,180(sp)
101012a0:	ac400007 	ldb	r17,0(r21)
101012a4:	003f4206 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
101012a8:	ac400007 	ldb	r17,0(r21)
101012ac:	aac00044 	addi	r11,r21,1
101012b0:	8a872826 	beq	r17,r10,10102f54 <___vfprintf_internal_r+0x2128>
101012b4:	88bff404 	addi	r2,r17,-48
101012b8:	0009883a 	mov	r4,zero
101012bc:	30867d36 	bltu	r6,r2,10102cb4 <___vfprintf_internal_r+0x1e88>
101012c0:	5c400007 	ldb	r17,0(r11)
101012c4:	210002a4 	muli	r4,r4,10
101012c8:	5d400044 	addi	r21,r11,1
101012cc:	a817883a 	mov	r11,r21
101012d0:	2089883a 	add	r4,r4,r2
101012d4:	88bff404 	addi	r2,r17,-48
101012d8:	30bff92e 	bgeu	r6,r2,101012c0 <__alt_data_end+0xfffe12c0>
101012dc:	2005c916 	blt	r4,zero,10102a04 <___vfprintf_internal_r+0x1bd8>
101012e0:	d9002915 	stw	r4,164(sp)
101012e4:	003f3306 	br	10100fb4 <__alt_data_end+0xfffe0fb4>
101012e8:	94802014 	ori	r18,r18,128
101012ec:	ac400007 	ldb	r17,0(r21)
101012f0:	003f2f06 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
101012f4:	a809883a 	mov	r4,r21
101012f8:	d8003115 	stw	zero,196(sp)
101012fc:	88bff404 	addi	r2,r17,-48
10101300:	0017883a 	mov	r11,zero
10101304:	24400007 	ldb	r17,0(r4)
10101308:	5ac002a4 	muli	r11,r11,10
1010130c:	ad400044 	addi	r21,r21,1
10101310:	a809883a 	mov	r4,r21
10101314:	12d7883a 	add	r11,r2,r11
10101318:	88bff404 	addi	r2,r17,-48
1010131c:	30bff92e 	bgeu	r6,r2,10101304 <__alt_data_end+0xfffe1304>
10101320:	dac03115 	stw	r11,196(sp)
10101324:	003f2306 	br	10100fb4 <__alt_data_end+0xfffe0fb4>
10101328:	18c03fcc 	andi	r3,r3,255
1010132c:	18072b1e 	bne	r3,zero,10102fdc <___vfprintf_internal_r+0x21b0>
10101330:	94800414 	ori	r18,r18,16
10101334:	9080080c 	andi	r2,r18,32
10101338:	10037b26 	beq	r2,zero,10102128 <___vfprintf_internal_r+0x12fc>
1010133c:	d9402d17 	ldw	r5,180(sp)
10101340:	28800117 	ldw	r2,4(r5)
10101344:	2cc00017 	ldw	r19,0(r5)
10101348:	29400204 	addi	r5,r5,8
1010134c:	d9402d15 	stw	r5,180(sp)
10101350:	102d883a 	mov	r22,r2
10101354:	10044b16 	blt	r2,zero,10102484 <___vfprintf_internal_r+0x1658>
10101358:	d9402917 	ldw	r5,164(sp)
1010135c:	df002783 	ldbu	fp,158(sp)
10101360:	2803bc16 	blt	r5,zero,10102254 <___vfprintf_internal_r+0x1428>
10101364:	00ffdfc4 	movi	r3,-129
10101368:	9d84b03a 	or	r2,r19,r22
1010136c:	90e4703a 	and	r18,r18,r3
10101370:	10017726 	beq	r2,zero,10101950 <___vfprintf_internal_r+0xb24>
10101374:	b0038326 	beq	r22,zero,10102184 <___vfprintf_internal_r+0x1358>
10101378:	dc402a15 	stw	r17,168(sp)
1010137c:	dc001e04 	addi	r16,sp,120
10101380:	b023883a 	mov	r17,r22
10101384:	402d883a 	mov	r22,r8
10101388:	9809883a 	mov	r4,r19
1010138c:	880b883a 	mov	r5,r17
10101390:	01800284 	movi	r6,10
10101394:	000f883a 	mov	r7,zero
10101398:	010a8200 	call	1010a820 <__umoddi3>
1010139c:	10800c04 	addi	r2,r2,48
101013a0:	843fffc4 	addi	r16,r16,-1
101013a4:	9809883a 	mov	r4,r19
101013a8:	880b883a 	mov	r5,r17
101013ac:	80800005 	stb	r2,0(r16)
101013b0:	01800284 	movi	r6,10
101013b4:	000f883a 	mov	r7,zero
101013b8:	010a2a80 	call	1010a2a8 <__udivdi3>
101013bc:	1027883a 	mov	r19,r2
101013c0:	10c4b03a 	or	r2,r2,r3
101013c4:	1823883a 	mov	r17,r3
101013c8:	103fef1e 	bne	r2,zero,10101388 <__alt_data_end+0xfffe1388>
101013cc:	d8c02817 	ldw	r3,160(sp)
101013d0:	dc402a17 	ldw	r17,168(sp)
101013d4:	b011883a 	mov	r8,r22
101013d8:	1c07c83a 	sub	r3,r3,r16
101013dc:	d8c02e15 	stw	r3,184(sp)
101013e0:	00005906 	br	10101548 <___vfprintf_internal_r+0x71c>
101013e4:	18c03fcc 	andi	r3,r3,255
101013e8:	1806fa1e 	bne	r3,zero,10102fd4 <___vfprintf_internal_r+0x21a8>
101013ec:	9080020c 	andi	r2,r18,8
101013f0:	10048a26 	beq	r2,zero,1010261c <___vfprintf_internal_r+0x17f0>
101013f4:	d8c02d17 	ldw	r3,180(sp)
101013f8:	d9002d17 	ldw	r4,180(sp)
101013fc:	d9402d17 	ldw	r5,180(sp)
10101400:	18c00017 	ldw	r3,0(r3)
10101404:	21000117 	ldw	r4,4(r4)
10101408:	29400204 	addi	r5,r5,8
1010140c:	d8c03615 	stw	r3,216(sp)
10101410:	d9003815 	stw	r4,224(sp)
10101414:	d9402d15 	stw	r5,180(sp)
10101418:	d9003617 	ldw	r4,216(sp)
1010141c:	d9403817 	ldw	r5,224(sp)
10101420:	da003d15 	stw	r8,244(sp)
10101424:	04000044 	movi	r16,1
10101428:	010804c0 	call	1010804c <__fpclassifyd>
1010142c:	da003d17 	ldw	r8,244(sp)
10101430:	14041f1e 	bne	r2,r16,101024b0 <___vfprintf_internal_r+0x1684>
10101434:	d9003617 	ldw	r4,216(sp)
10101438:	d9403817 	ldw	r5,224(sp)
1010143c:	000d883a 	mov	r6,zero
10101440:	000f883a 	mov	r7,zero
10101444:	010c2040 	call	1010c204 <__ledf2>
10101448:	da003d17 	ldw	r8,244(sp)
1010144c:	1005be16 	blt	r2,zero,10102b48 <___vfprintf_internal_r+0x1d1c>
10101450:	df002783 	ldbu	fp,158(sp)
10101454:	008011c4 	movi	r2,71
10101458:	1445330e 	bge	r2,r17,10102928 <___vfprintf_internal_r+0x1afc>
1010145c:	04040474 	movhi	r16,4113
10101460:	84006404 	addi	r16,r16,400
10101464:	00c000c4 	movi	r3,3
10101468:	00bfdfc4 	movi	r2,-129
1010146c:	d8c02a15 	stw	r3,168(sp)
10101470:	90a4703a 	and	r18,r18,r2
10101474:	d8c02e15 	stw	r3,184(sp)
10101478:	d8002915 	stw	zero,164(sp)
1010147c:	d8003215 	stw	zero,200(sp)
10101480:	00003706 	br	10101560 <___vfprintf_internal_r+0x734>
10101484:	94800214 	ori	r18,r18,8
10101488:	ac400007 	ldb	r17,0(r21)
1010148c:	003ec806 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101490:	18c03fcc 	andi	r3,r3,255
10101494:	1806db1e 	bne	r3,zero,10103004 <___vfprintf_internal_r+0x21d8>
10101498:	94800414 	ori	r18,r18,16
1010149c:	9080080c 	andi	r2,r18,32
101014a0:	1002d826 	beq	r2,zero,10102004 <___vfprintf_internal_r+0x11d8>
101014a4:	d9402d17 	ldw	r5,180(sp)
101014a8:	d8c02917 	ldw	r3,164(sp)
101014ac:	d8002785 	stb	zero,158(sp)
101014b0:	28800204 	addi	r2,r5,8
101014b4:	2cc00017 	ldw	r19,0(r5)
101014b8:	2d800117 	ldw	r22,4(r5)
101014bc:	18048f16 	blt	r3,zero,101026fc <___vfprintf_internal_r+0x18d0>
101014c0:	013fdfc4 	movi	r4,-129
101014c4:	9d86b03a 	or	r3,r19,r22
101014c8:	d8802d15 	stw	r2,180(sp)
101014cc:	9124703a 	and	r18,r18,r4
101014d0:	1802d91e 	bne	r3,zero,10102038 <___vfprintf_internal_r+0x120c>
101014d4:	d8c02917 	ldw	r3,164(sp)
101014d8:	0039883a 	mov	fp,zero
101014dc:	1805c326 	beq	r3,zero,10102bec <___vfprintf_internal_r+0x1dc0>
101014e0:	0027883a 	mov	r19,zero
101014e4:	002d883a 	mov	r22,zero
101014e8:	dc001e04 	addi	r16,sp,120
101014ec:	9806d0fa 	srli	r3,r19,3
101014f0:	b008977a 	slli	r4,r22,29
101014f4:	b02cd0fa 	srli	r22,r22,3
101014f8:	9cc001cc 	andi	r19,r19,7
101014fc:	98800c04 	addi	r2,r19,48
10101500:	843fffc4 	addi	r16,r16,-1
10101504:	20e6b03a 	or	r19,r4,r3
10101508:	80800005 	stb	r2,0(r16)
1010150c:	9d86b03a 	or	r3,r19,r22
10101510:	183ff61e 	bne	r3,zero,101014ec <__alt_data_end+0xfffe14ec>
10101514:	90c0004c 	andi	r3,r18,1
10101518:	18013b26 	beq	r3,zero,10101a08 <___vfprintf_internal_r+0xbdc>
1010151c:	10803fcc 	andi	r2,r2,255
10101520:	1080201c 	xori	r2,r2,128
10101524:	10bfe004 	addi	r2,r2,-128
10101528:	00c00c04 	movi	r3,48
1010152c:	10c13626 	beq	r2,r3,10101a08 <___vfprintf_internal_r+0xbdc>
10101530:	80ffffc5 	stb	r3,-1(r16)
10101534:	d8c02817 	ldw	r3,160(sp)
10101538:	80bfffc4 	addi	r2,r16,-1
1010153c:	1021883a 	mov	r16,r2
10101540:	1887c83a 	sub	r3,r3,r2
10101544:	d8c02e15 	stw	r3,184(sp)
10101548:	d8802e17 	ldw	r2,184(sp)
1010154c:	d9002917 	ldw	r4,164(sp)
10101550:	1100010e 	bge	r2,r4,10101558 <___vfprintf_internal_r+0x72c>
10101554:	2005883a 	mov	r2,r4
10101558:	d8802a15 	stw	r2,168(sp)
1010155c:	d8003215 	stw	zero,200(sp)
10101560:	e7003fcc 	andi	fp,fp,255
10101564:	e700201c 	xori	fp,fp,128
10101568:	e73fe004 	addi	fp,fp,-128
1010156c:	e0000326 	beq	fp,zero,1010157c <___vfprintf_internal_r+0x750>
10101570:	d8c02a17 	ldw	r3,168(sp)
10101574:	18c00044 	addi	r3,r3,1
10101578:	d8c02a15 	stw	r3,168(sp)
1010157c:	90c0008c 	andi	r3,r18,2
10101580:	d8c02b15 	stw	r3,172(sp)
10101584:	18000326 	beq	r3,zero,10101594 <___vfprintf_internal_r+0x768>
10101588:	d8c02a17 	ldw	r3,168(sp)
1010158c:	18c00084 	addi	r3,r3,2
10101590:	d8c02a15 	stw	r3,168(sp)
10101594:	90c0210c 	andi	r3,r18,132
10101598:	d8c03015 	stw	r3,192(sp)
1010159c:	1801a31e 	bne	r3,zero,10101c2c <___vfprintf_internal_r+0xe00>
101015a0:	d9003117 	ldw	r4,196(sp)
101015a4:	d8c02a17 	ldw	r3,168(sp)
101015a8:	20e7c83a 	sub	r19,r4,r3
101015ac:	04c19f0e 	bge	zero,r19,10101c2c <___vfprintf_internal_r+0xe00>
101015b0:	02400404 	movi	r9,16
101015b4:	d8c02017 	ldw	r3,128(sp)
101015b8:	d8801f17 	ldw	r2,124(sp)
101015bc:	4cc50d0e 	bge	r9,r19,101029f4 <___vfprintf_internal_r+0x1bc8>
101015c0:	01440474 	movhi	r5,4113
101015c4:	29407784 	addi	r5,r5,478
101015c8:	dc403b15 	stw	r17,236(sp)
101015cc:	d9403515 	stw	r5,212(sp)
101015d0:	9823883a 	mov	r17,r19
101015d4:	482d883a 	mov	r22,r9
101015d8:	9027883a 	mov	r19,r18
101015dc:	070001c4 	movi	fp,7
101015e0:	8025883a 	mov	r18,r16
101015e4:	dc002c17 	ldw	r16,176(sp)
101015e8:	00000306 	br	101015f8 <___vfprintf_internal_r+0x7cc>
101015ec:	8c7ffc04 	addi	r17,r17,-16
101015f0:	42000204 	addi	r8,r8,8
101015f4:	b440130e 	bge	r22,r17,10101644 <___vfprintf_internal_r+0x818>
101015f8:	01040474 	movhi	r4,4113
101015fc:	18c00404 	addi	r3,r3,16
10101600:	10800044 	addi	r2,r2,1
10101604:	21007784 	addi	r4,r4,478
10101608:	41000015 	stw	r4,0(r8)
1010160c:	45800115 	stw	r22,4(r8)
10101610:	d8c02015 	stw	r3,128(sp)
10101614:	d8801f15 	stw	r2,124(sp)
10101618:	e0bff40e 	bge	fp,r2,101015ec <__alt_data_end+0xfffe15ec>
1010161c:	d9801e04 	addi	r6,sp,120
10101620:	b80b883a 	mov	r5,r23
10101624:	8009883a 	mov	r4,r16
10101628:	01084280 	call	10108428 <__sprint_r>
1010162c:	103f011e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101630:	8c7ffc04 	addi	r17,r17,-16
10101634:	d8c02017 	ldw	r3,128(sp)
10101638:	d8801f17 	ldw	r2,124(sp)
1010163c:	da000404 	addi	r8,sp,16
10101640:	b47fed16 	blt	r22,r17,101015f8 <__alt_data_end+0xfffe15f8>
10101644:	9021883a 	mov	r16,r18
10101648:	9825883a 	mov	r18,r19
1010164c:	8827883a 	mov	r19,r17
10101650:	dc403b17 	ldw	r17,236(sp)
10101654:	d9403517 	ldw	r5,212(sp)
10101658:	98c7883a 	add	r3,r19,r3
1010165c:	10800044 	addi	r2,r2,1
10101660:	41400015 	stw	r5,0(r8)
10101664:	44c00115 	stw	r19,4(r8)
10101668:	d8c02015 	stw	r3,128(sp)
1010166c:	d8801f15 	stw	r2,124(sp)
10101670:	010001c4 	movi	r4,7
10101674:	2082a316 	blt	r4,r2,10102104 <___vfprintf_internal_r+0x12d8>
10101678:	df002787 	ldb	fp,158(sp)
1010167c:	42000204 	addi	r8,r8,8
10101680:	e0000c26 	beq	fp,zero,101016b4 <___vfprintf_internal_r+0x888>
10101684:	d8801f17 	ldw	r2,124(sp)
10101688:	d9002784 	addi	r4,sp,158
1010168c:	18c00044 	addi	r3,r3,1
10101690:	10800044 	addi	r2,r2,1
10101694:	41000015 	stw	r4,0(r8)
10101698:	01000044 	movi	r4,1
1010169c:	41000115 	stw	r4,4(r8)
101016a0:	d8c02015 	stw	r3,128(sp)
101016a4:	d8801f15 	stw	r2,124(sp)
101016a8:	010001c4 	movi	r4,7
101016ac:	20823c16 	blt	r4,r2,10101fa0 <___vfprintf_internal_r+0x1174>
101016b0:	42000204 	addi	r8,r8,8
101016b4:	d8802b17 	ldw	r2,172(sp)
101016b8:	10000c26 	beq	r2,zero,101016ec <___vfprintf_internal_r+0x8c0>
101016bc:	d8801f17 	ldw	r2,124(sp)
101016c0:	d9002704 	addi	r4,sp,156
101016c4:	18c00084 	addi	r3,r3,2
101016c8:	10800044 	addi	r2,r2,1
101016cc:	41000015 	stw	r4,0(r8)
101016d0:	01000084 	movi	r4,2
101016d4:	41000115 	stw	r4,4(r8)
101016d8:	d8c02015 	stw	r3,128(sp)
101016dc:	d8801f15 	stw	r2,124(sp)
101016e0:	010001c4 	movi	r4,7
101016e4:	20823616 	blt	r4,r2,10101fc0 <___vfprintf_internal_r+0x1194>
101016e8:	42000204 	addi	r8,r8,8
101016ec:	d9003017 	ldw	r4,192(sp)
101016f0:	00802004 	movi	r2,128
101016f4:	20819926 	beq	r4,r2,10101d5c <___vfprintf_internal_r+0xf30>
101016f8:	d9402917 	ldw	r5,164(sp)
101016fc:	d8802e17 	ldw	r2,184(sp)
10101700:	28adc83a 	sub	r22,r5,r2
10101704:	0580310e 	bge	zero,r22,101017cc <___vfprintf_internal_r+0x9a0>
10101708:	07000404 	movi	fp,16
1010170c:	d8801f17 	ldw	r2,124(sp)
10101710:	e584140e 	bge	fp,r22,10102764 <___vfprintf_internal_r+0x1938>
10101714:	01440474 	movhi	r5,4113
10101718:	29407384 	addi	r5,r5,462
1010171c:	dc402915 	stw	r17,164(sp)
10101720:	d9402b15 	stw	r5,172(sp)
10101724:	b023883a 	mov	r17,r22
10101728:	04c001c4 	movi	r19,7
1010172c:	a82d883a 	mov	r22,r21
10101730:	902b883a 	mov	r21,r18
10101734:	8025883a 	mov	r18,r16
10101738:	dc002c17 	ldw	r16,176(sp)
1010173c:	00000306 	br	1010174c <___vfprintf_internal_r+0x920>
10101740:	8c7ffc04 	addi	r17,r17,-16
10101744:	42000204 	addi	r8,r8,8
10101748:	e440110e 	bge	fp,r17,10101790 <___vfprintf_internal_r+0x964>
1010174c:	18c00404 	addi	r3,r3,16
10101750:	10800044 	addi	r2,r2,1
10101754:	45000015 	stw	r20,0(r8)
10101758:	47000115 	stw	fp,4(r8)
1010175c:	d8c02015 	stw	r3,128(sp)
10101760:	d8801f15 	stw	r2,124(sp)
10101764:	98bff60e 	bge	r19,r2,10101740 <__alt_data_end+0xfffe1740>
10101768:	d9801e04 	addi	r6,sp,120
1010176c:	b80b883a 	mov	r5,r23
10101770:	8009883a 	mov	r4,r16
10101774:	01084280 	call	10108428 <__sprint_r>
10101778:	103eae1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
1010177c:	8c7ffc04 	addi	r17,r17,-16
10101780:	d8c02017 	ldw	r3,128(sp)
10101784:	d8801f17 	ldw	r2,124(sp)
10101788:	da000404 	addi	r8,sp,16
1010178c:	e47fef16 	blt	fp,r17,1010174c <__alt_data_end+0xfffe174c>
10101790:	9021883a 	mov	r16,r18
10101794:	a825883a 	mov	r18,r21
10101798:	b02b883a 	mov	r21,r22
1010179c:	882d883a 	mov	r22,r17
101017a0:	dc402917 	ldw	r17,164(sp)
101017a4:	d9002b17 	ldw	r4,172(sp)
101017a8:	1d87883a 	add	r3,r3,r22
101017ac:	10800044 	addi	r2,r2,1
101017b0:	41000015 	stw	r4,0(r8)
101017b4:	45800115 	stw	r22,4(r8)
101017b8:	d8c02015 	stw	r3,128(sp)
101017bc:	d8801f15 	stw	r2,124(sp)
101017c0:	010001c4 	movi	r4,7
101017c4:	2081ee16 	blt	r4,r2,10101f80 <___vfprintf_internal_r+0x1154>
101017c8:	42000204 	addi	r8,r8,8
101017cc:	9080400c 	andi	r2,r18,256
101017d0:	1001181e 	bne	r2,zero,10101c34 <___vfprintf_internal_r+0xe08>
101017d4:	d9402e17 	ldw	r5,184(sp)
101017d8:	d8801f17 	ldw	r2,124(sp)
101017dc:	44000015 	stw	r16,0(r8)
101017e0:	1947883a 	add	r3,r3,r5
101017e4:	10800044 	addi	r2,r2,1
101017e8:	41400115 	stw	r5,4(r8)
101017ec:	d8c02015 	stw	r3,128(sp)
101017f0:	d8801f15 	stw	r2,124(sp)
101017f4:	010001c4 	movi	r4,7
101017f8:	2081d316 	blt	r4,r2,10101f48 <___vfprintf_internal_r+0x111c>
101017fc:	42000204 	addi	r8,r8,8
10101800:	9480010c 	andi	r18,r18,4
10101804:	90003226 	beq	r18,zero,101018d0 <___vfprintf_internal_r+0xaa4>
10101808:	d9403117 	ldw	r5,196(sp)
1010180c:	d8802a17 	ldw	r2,168(sp)
10101810:	28a1c83a 	sub	r16,r5,r2
10101814:	04002e0e 	bge	zero,r16,101018d0 <___vfprintf_internal_r+0xaa4>
10101818:	04400404 	movi	r17,16
1010181c:	d8801f17 	ldw	r2,124(sp)
10101820:	8c04a20e 	bge	r17,r16,10102aac <___vfprintf_internal_r+0x1c80>
10101824:	01440474 	movhi	r5,4113
10101828:	29407784 	addi	r5,r5,478
1010182c:	d9403515 	stw	r5,212(sp)
10101830:	048001c4 	movi	r18,7
10101834:	dcc02c17 	ldw	r19,176(sp)
10101838:	00000306 	br	10101848 <___vfprintf_internal_r+0xa1c>
1010183c:	843ffc04 	addi	r16,r16,-16
10101840:	42000204 	addi	r8,r8,8
10101844:	8c00130e 	bge	r17,r16,10101894 <___vfprintf_internal_r+0xa68>
10101848:	01040474 	movhi	r4,4113
1010184c:	18c00404 	addi	r3,r3,16
10101850:	10800044 	addi	r2,r2,1
10101854:	21007784 	addi	r4,r4,478
10101858:	41000015 	stw	r4,0(r8)
1010185c:	44400115 	stw	r17,4(r8)
10101860:	d8c02015 	stw	r3,128(sp)
10101864:	d8801f15 	stw	r2,124(sp)
10101868:	90bff40e 	bge	r18,r2,1010183c <__alt_data_end+0xfffe183c>
1010186c:	d9801e04 	addi	r6,sp,120
10101870:	b80b883a 	mov	r5,r23
10101874:	9809883a 	mov	r4,r19
10101878:	01084280 	call	10108428 <__sprint_r>
1010187c:	103e6d1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101880:	843ffc04 	addi	r16,r16,-16
10101884:	d8c02017 	ldw	r3,128(sp)
10101888:	d8801f17 	ldw	r2,124(sp)
1010188c:	da000404 	addi	r8,sp,16
10101890:	8c3fed16 	blt	r17,r16,10101848 <__alt_data_end+0xfffe1848>
10101894:	d9403517 	ldw	r5,212(sp)
10101898:	1c07883a 	add	r3,r3,r16
1010189c:	10800044 	addi	r2,r2,1
101018a0:	41400015 	stw	r5,0(r8)
101018a4:	44000115 	stw	r16,4(r8)
101018a8:	d8c02015 	stw	r3,128(sp)
101018ac:	d8801f15 	stw	r2,124(sp)
101018b0:	010001c4 	movi	r4,7
101018b4:	2080060e 	bge	r4,r2,101018d0 <___vfprintf_internal_r+0xaa4>
101018b8:	d9002c17 	ldw	r4,176(sp)
101018bc:	d9801e04 	addi	r6,sp,120
101018c0:	b80b883a 	mov	r5,r23
101018c4:	01084280 	call	10108428 <__sprint_r>
101018c8:	103e5a1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
101018cc:	d8c02017 	ldw	r3,128(sp)
101018d0:	d8803117 	ldw	r2,196(sp)
101018d4:	d9002a17 	ldw	r4,168(sp)
101018d8:	1100010e 	bge	r2,r4,101018e0 <___vfprintf_internal_r+0xab4>
101018dc:	2005883a 	mov	r2,r4
101018e0:	d9402f17 	ldw	r5,188(sp)
101018e4:	288b883a 	add	r5,r5,r2
101018e8:	d9402f15 	stw	r5,188(sp)
101018ec:	18019e1e 	bne	r3,zero,10101f68 <___vfprintf_internal_r+0x113c>
101018f0:	a8800007 	ldb	r2,0(r21)
101018f4:	d8001f15 	stw	zero,124(sp)
101018f8:	da000404 	addi	r8,sp,16
101018fc:	103d851e 	bne	r2,zero,10100f14 <__alt_data_end+0xfffe0f14>
10101900:	a821883a 	mov	r16,r21
10101904:	003d9b06 	br	10100f74 <__alt_data_end+0xfffe0f74>
10101908:	18c03fcc 	andi	r3,r3,255
1010190c:	1805c11e 	bne	r3,zero,10103014 <___vfprintf_internal_r+0x21e8>
10101910:	94800414 	ori	r18,r18,16
10101914:	9080080c 	andi	r2,r18,32
10101918:	10020c26 	beq	r2,zero,1010214c <___vfprintf_internal_r+0x1320>
1010191c:	d8802d17 	ldw	r2,180(sp)
10101920:	d9002917 	ldw	r4,164(sp)
10101924:	d8002785 	stb	zero,158(sp)
10101928:	10c00204 	addi	r3,r2,8
1010192c:	14c00017 	ldw	r19,0(r2)
10101930:	15800117 	ldw	r22,4(r2)
10101934:	20040f16 	blt	r4,zero,10102974 <___vfprintf_internal_r+0x1b48>
10101938:	013fdfc4 	movi	r4,-129
1010193c:	9d84b03a 	or	r2,r19,r22
10101940:	d8c02d15 	stw	r3,180(sp)
10101944:	9124703a 	and	r18,r18,r4
10101948:	0039883a 	mov	fp,zero
1010194c:	103e891e 	bne	r2,zero,10101374 <__alt_data_end+0xfffe1374>
10101950:	d9002917 	ldw	r4,164(sp)
10101954:	2002c11e 	bne	r4,zero,1010245c <___vfprintf_internal_r+0x1630>
10101958:	d8002915 	stw	zero,164(sp)
1010195c:	d8002e15 	stw	zero,184(sp)
10101960:	dc001e04 	addi	r16,sp,120
10101964:	003ef806 	br	10101548 <__alt_data_end+0xfffe1548>
10101968:	18c03fcc 	andi	r3,r3,255
1010196c:	18059d1e 	bne	r3,zero,10102fe4 <___vfprintf_internal_r+0x21b8>
10101970:	01440474 	movhi	r5,4113
10101974:	29406704 	addi	r5,r5,412
10101978:	d9403915 	stw	r5,228(sp)
1010197c:	9080080c 	andi	r2,r18,32
10101980:	10005226 	beq	r2,zero,10101acc <___vfprintf_internal_r+0xca0>
10101984:	d8802d17 	ldw	r2,180(sp)
10101988:	14c00017 	ldw	r19,0(r2)
1010198c:	15800117 	ldw	r22,4(r2)
10101990:	10800204 	addi	r2,r2,8
10101994:	d8802d15 	stw	r2,180(sp)
10101998:	9080004c 	andi	r2,r18,1
1010199c:	10019026 	beq	r2,zero,10101fe0 <___vfprintf_internal_r+0x11b4>
101019a0:	9d84b03a 	or	r2,r19,r22
101019a4:	10036926 	beq	r2,zero,1010274c <___vfprintf_internal_r+0x1920>
101019a8:	d8c02917 	ldw	r3,164(sp)
101019ac:	00800c04 	movi	r2,48
101019b0:	d8802705 	stb	r2,156(sp)
101019b4:	dc402745 	stb	r17,157(sp)
101019b8:	d8002785 	stb	zero,158(sp)
101019bc:	90800094 	ori	r2,r18,2
101019c0:	18045d16 	blt	r3,zero,10102b38 <___vfprintf_internal_r+0x1d0c>
101019c4:	00bfdfc4 	movi	r2,-129
101019c8:	90a4703a 	and	r18,r18,r2
101019cc:	94800094 	ori	r18,r18,2
101019d0:	0039883a 	mov	fp,zero
101019d4:	d9003917 	ldw	r4,228(sp)
101019d8:	dc001e04 	addi	r16,sp,120
101019dc:	988003cc 	andi	r2,r19,15
101019e0:	b006973a 	slli	r3,r22,28
101019e4:	2085883a 	add	r2,r4,r2
101019e8:	9826d13a 	srli	r19,r19,4
101019ec:	10800003 	ldbu	r2,0(r2)
101019f0:	b02cd13a 	srli	r22,r22,4
101019f4:	843fffc4 	addi	r16,r16,-1
101019f8:	1ce6b03a 	or	r19,r3,r19
101019fc:	80800005 	stb	r2,0(r16)
10101a00:	9d84b03a 	or	r2,r19,r22
10101a04:	103ff51e 	bne	r2,zero,101019dc <__alt_data_end+0xfffe19dc>
10101a08:	d8c02817 	ldw	r3,160(sp)
10101a0c:	1c07c83a 	sub	r3,r3,r16
10101a10:	d8c02e15 	stw	r3,184(sp)
10101a14:	003ecc06 	br	10101548 <__alt_data_end+0xfffe1548>
10101a18:	18c03fcc 	andi	r3,r3,255
10101a1c:	183e9f26 	beq	r3,zero,1010149c <__alt_data_end+0xfffe149c>
10101a20:	d9c02785 	stb	r7,158(sp)
10101a24:	003e9d06 	br	1010149c <__alt_data_end+0xfffe149c>
10101a28:	00c00044 	movi	r3,1
10101a2c:	01c00ac4 	movi	r7,43
10101a30:	ac400007 	ldb	r17,0(r21)
10101a34:	003d5e06 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101a38:	94800814 	ori	r18,r18,32
10101a3c:	ac400007 	ldb	r17,0(r21)
10101a40:	003d5b06 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101a44:	d8c02d17 	ldw	r3,180(sp)
10101a48:	d8002785 	stb	zero,158(sp)
10101a4c:	1c000017 	ldw	r16,0(r3)
10101a50:	1cc00104 	addi	r19,r3,4
10101a54:	80041926 	beq	r16,zero,10102abc <___vfprintf_internal_r+0x1c90>
10101a58:	d9002917 	ldw	r4,164(sp)
10101a5c:	2003d016 	blt	r4,zero,101029a0 <___vfprintf_internal_r+0x1b74>
10101a60:	200d883a 	mov	r6,r4
10101a64:	000b883a 	mov	r5,zero
10101a68:	8009883a 	mov	r4,r16
10101a6c:	da003d15 	stw	r8,244(sp)
10101a70:	010663c0 	call	1010663c <memchr>
10101a74:	da003d17 	ldw	r8,244(sp)
10101a78:	10045426 	beq	r2,zero,10102bcc <___vfprintf_internal_r+0x1da0>
10101a7c:	1405c83a 	sub	r2,r2,r16
10101a80:	d8802e15 	stw	r2,184(sp)
10101a84:	1003cc16 	blt	r2,zero,101029b8 <___vfprintf_internal_r+0x1b8c>
10101a88:	df002783 	ldbu	fp,158(sp)
10101a8c:	d8802a15 	stw	r2,168(sp)
10101a90:	dcc02d15 	stw	r19,180(sp)
10101a94:	d8002915 	stw	zero,164(sp)
10101a98:	d8003215 	stw	zero,200(sp)
10101a9c:	003eb006 	br	10101560 <__alt_data_end+0xfffe1560>
10101aa0:	18c03fcc 	andi	r3,r3,255
10101aa4:	183f9b26 	beq	r3,zero,10101914 <__alt_data_end+0xfffe1914>
10101aa8:	d9c02785 	stb	r7,158(sp)
10101aac:	003f9906 	br	10101914 <__alt_data_end+0xfffe1914>
10101ab0:	18c03fcc 	andi	r3,r3,255
10101ab4:	1805551e 	bne	r3,zero,1010300c <___vfprintf_internal_r+0x21e0>
10101ab8:	01440474 	movhi	r5,4113
10101abc:	29406c04 	addi	r5,r5,432
10101ac0:	d9403915 	stw	r5,228(sp)
10101ac4:	9080080c 	andi	r2,r18,32
10101ac8:	103fae1e 	bne	r2,zero,10101984 <__alt_data_end+0xfffe1984>
10101acc:	9080040c 	andi	r2,r18,16
10101ad0:	1002de26 	beq	r2,zero,1010264c <___vfprintf_internal_r+0x1820>
10101ad4:	d8c02d17 	ldw	r3,180(sp)
10101ad8:	002d883a 	mov	r22,zero
10101adc:	1cc00017 	ldw	r19,0(r3)
10101ae0:	18c00104 	addi	r3,r3,4
10101ae4:	d8c02d15 	stw	r3,180(sp)
10101ae8:	003fab06 	br	10101998 <__alt_data_end+0xfffe1998>
10101aec:	38803fcc 	andi	r2,r7,255
10101af0:	1080201c 	xori	r2,r2,128
10101af4:	10bfe004 	addi	r2,r2,-128
10101af8:	1002d21e 	bne	r2,zero,10102644 <___vfprintf_internal_r+0x1818>
10101afc:	00c00044 	movi	r3,1
10101b00:	01c00804 	movi	r7,32
10101b04:	ac400007 	ldb	r17,0(r21)
10101b08:	003d2906 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101b0c:	94800054 	ori	r18,r18,1
10101b10:	ac400007 	ldb	r17,0(r21)
10101b14:	003d2606 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101b18:	18c03fcc 	andi	r3,r3,255
10101b1c:	183e0526 	beq	r3,zero,10101334 <__alt_data_end+0xfffe1334>
10101b20:	d9c02785 	stb	r7,158(sp)
10101b24:	003e0306 	br	10101334 <__alt_data_end+0xfffe1334>
10101b28:	94801014 	ori	r18,r18,64
10101b2c:	ac400007 	ldb	r17,0(r21)
10101b30:	003d1f06 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101b34:	ac400007 	ldb	r17,0(r21)
10101b38:	8a438726 	beq	r17,r9,10102958 <___vfprintf_internal_r+0x1b2c>
10101b3c:	94800414 	ori	r18,r18,16
10101b40:	003d1b06 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10101b44:	18c03fcc 	andi	r3,r3,255
10101b48:	1805341e 	bne	r3,zero,1010301c <___vfprintf_internal_r+0x21f0>
10101b4c:	9080080c 	andi	r2,r18,32
10101b50:	1002cd26 	beq	r2,zero,10102688 <___vfprintf_internal_r+0x185c>
10101b54:	d9402d17 	ldw	r5,180(sp)
10101b58:	d9002f17 	ldw	r4,188(sp)
10101b5c:	28800017 	ldw	r2,0(r5)
10101b60:	2007d7fa 	srai	r3,r4,31
10101b64:	29400104 	addi	r5,r5,4
10101b68:	d9402d15 	stw	r5,180(sp)
10101b6c:	11000015 	stw	r4,0(r2)
10101b70:	10c00115 	stw	r3,4(r2)
10101b74:	003ce506 	br	10100f0c <__alt_data_end+0xfffe0f0c>
10101b78:	d8c02d17 	ldw	r3,180(sp)
10101b7c:	d9002d17 	ldw	r4,180(sp)
10101b80:	d8002785 	stb	zero,158(sp)
10101b84:	18800017 	ldw	r2,0(r3)
10101b88:	21000104 	addi	r4,r4,4
10101b8c:	00c00044 	movi	r3,1
10101b90:	d8c02a15 	stw	r3,168(sp)
10101b94:	d8801405 	stb	r2,80(sp)
10101b98:	d9002d15 	stw	r4,180(sp)
10101b9c:	d8c02e15 	stw	r3,184(sp)
10101ba0:	d8002915 	stw	zero,164(sp)
10101ba4:	d8003215 	stw	zero,200(sp)
10101ba8:	dc001404 	addi	r16,sp,80
10101bac:	0039883a 	mov	fp,zero
10101bb0:	003e7206 	br	1010157c <__alt_data_end+0xfffe157c>
10101bb4:	01040474 	movhi	r4,4113
10101bb8:	21006c04 	addi	r4,r4,432
10101bbc:	0039883a 	mov	fp,zero
10101bc0:	d9003915 	stw	r4,228(sp)
10101bc4:	04401e04 	movi	r17,120
10101bc8:	003f8206 	br	101019d4 <__alt_data_end+0xfffe19d4>
10101bcc:	18c03fcc 	andi	r3,r3,255
10101bd0:	1805061e 	bne	r3,zero,10102fec <___vfprintf_internal_r+0x21c0>
10101bd4:	883d9126 	beq	r17,zero,1010121c <__alt_data_end+0xfffe121c>
10101bd8:	00c00044 	movi	r3,1
10101bdc:	d8c02a15 	stw	r3,168(sp)
10101be0:	dc401405 	stb	r17,80(sp)
10101be4:	d8002785 	stb	zero,158(sp)
10101be8:	003fec06 	br	10101b9c <__alt_data_end+0xfffe1b9c>
10101bec:	01440474 	movhi	r5,4113
10101bf0:	29406c04 	addi	r5,r5,432
10101bf4:	d9403915 	stw	r5,228(sp)
10101bf8:	d8c02d15 	stw	r3,180(sp)
10101bfc:	1025883a 	mov	r18,r2
10101c00:	04401e04 	movi	r17,120
10101c04:	9d84b03a 	or	r2,r19,r22
10101c08:	1000fc1e 	bne	r2,zero,10101ffc <___vfprintf_internal_r+0x11d0>
10101c0c:	0039883a 	mov	fp,zero
10101c10:	00800084 	movi	r2,2
10101c14:	10803fcc 	andi	r2,r2,255
10101c18:	00c00044 	movi	r3,1
10101c1c:	10c20f26 	beq	r2,r3,1010245c <___vfprintf_internal_r+0x1630>
10101c20:	00c00084 	movi	r3,2
10101c24:	10fd6326 	beq	r2,r3,101011b4 <__alt_data_end+0xfffe11b4>
10101c28:	003e2d06 	br	101014e0 <__alt_data_end+0xfffe14e0>
10101c2c:	d8c02017 	ldw	r3,128(sp)
10101c30:	003e9306 	br	10101680 <__alt_data_end+0xfffe1680>
10101c34:	00801944 	movi	r2,101
10101c38:	14407e0e 	bge	r2,r17,10101e34 <___vfprintf_internal_r+0x1008>
10101c3c:	d9003617 	ldw	r4,216(sp)
10101c40:	d9403817 	ldw	r5,224(sp)
10101c44:	000d883a 	mov	r6,zero
10101c48:	000f883a 	mov	r7,zero
10101c4c:	d8c03c15 	stw	r3,240(sp)
10101c50:	da003d15 	stw	r8,244(sp)
10101c54:	010c0a00 	call	1010c0a0 <__eqdf2>
10101c58:	d8c03c17 	ldw	r3,240(sp)
10101c5c:	da003d17 	ldw	r8,244(sp)
10101c60:	1000f71e 	bne	r2,zero,10102040 <___vfprintf_internal_r+0x1214>
10101c64:	d8801f17 	ldw	r2,124(sp)
10101c68:	01040474 	movhi	r4,4113
10101c6c:	21007304 	addi	r4,r4,460
10101c70:	18c00044 	addi	r3,r3,1
10101c74:	10800044 	addi	r2,r2,1
10101c78:	41000015 	stw	r4,0(r8)
10101c7c:	01000044 	movi	r4,1
10101c80:	41000115 	stw	r4,4(r8)
10101c84:	d8c02015 	stw	r3,128(sp)
10101c88:	d8801f15 	stw	r2,124(sp)
10101c8c:	010001c4 	movi	r4,7
10101c90:	2082b816 	blt	r4,r2,10102774 <___vfprintf_internal_r+0x1948>
10101c94:	42000204 	addi	r8,r8,8
10101c98:	d8802617 	ldw	r2,152(sp)
10101c9c:	d9403317 	ldw	r5,204(sp)
10101ca0:	11400216 	blt	r2,r5,10101cac <___vfprintf_internal_r+0xe80>
10101ca4:	9080004c 	andi	r2,r18,1
10101ca8:	103ed526 	beq	r2,zero,10101800 <__alt_data_end+0xfffe1800>
10101cac:	d8803717 	ldw	r2,220(sp)
10101cb0:	d9003417 	ldw	r4,208(sp)
10101cb4:	d9403717 	ldw	r5,220(sp)
10101cb8:	1887883a 	add	r3,r3,r2
10101cbc:	d8801f17 	ldw	r2,124(sp)
10101cc0:	41000015 	stw	r4,0(r8)
10101cc4:	41400115 	stw	r5,4(r8)
10101cc8:	10800044 	addi	r2,r2,1
10101ccc:	d8c02015 	stw	r3,128(sp)
10101cd0:	d8801f15 	stw	r2,124(sp)
10101cd4:	010001c4 	movi	r4,7
10101cd8:	20832916 	blt	r4,r2,10102980 <___vfprintf_internal_r+0x1b54>
10101cdc:	42000204 	addi	r8,r8,8
10101ce0:	d8803317 	ldw	r2,204(sp)
10101ce4:	143fffc4 	addi	r16,r2,-1
10101ce8:	043ec50e 	bge	zero,r16,10101800 <__alt_data_end+0xfffe1800>
10101cec:	04400404 	movi	r17,16
10101cf0:	d8801f17 	ldw	r2,124(sp)
10101cf4:	8c00880e 	bge	r17,r16,10101f18 <___vfprintf_internal_r+0x10ec>
10101cf8:	01440474 	movhi	r5,4113
10101cfc:	29407384 	addi	r5,r5,462
10101d00:	d9402b15 	stw	r5,172(sp)
10101d04:	058001c4 	movi	r22,7
10101d08:	dcc02c17 	ldw	r19,176(sp)
10101d0c:	00000306 	br	10101d1c <___vfprintf_internal_r+0xef0>
10101d10:	42000204 	addi	r8,r8,8
10101d14:	843ffc04 	addi	r16,r16,-16
10101d18:	8c00820e 	bge	r17,r16,10101f24 <___vfprintf_internal_r+0x10f8>
10101d1c:	18c00404 	addi	r3,r3,16
10101d20:	10800044 	addi	r2,r2,1
10101d24:	45000015 	stw	r20,0(r8)
10101d28:	44400115 	stw	r17,4(r8)
10101d2c:	d8c02015 	stw	r3,128(sp)
10101d30:	d8801f15 	stw	r2,124(sp)
10101d34:	b0bff60e 	bge	r22,r2,10101d10 <__alt_data_end+0xfffe1d10>
10101d38:	d9801e04 	addi	r6,sp,120
10101d3c:	b80b883a 	mov	r5,r23
10101d40:	9809883a 	mov	r4,r19
10101d44:	01084280 	call	10108428 <__sprint_r>
10101d48:	103d3a1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101d4c:	d8c02017 	ldw	r3,128(sp)
10101d50:	d8801f17 	ldw	r2,124(sp)
10101d54:	da000404 	addi	r8,sp,16
10101d58:	003fee06 	br	10101d14 <__alt_data_end+0xfffe1d14>
10101d5c:	d9403117 	ldw	r5,196(sp)
10101d60:	d8802a17 	ldw	r2,168(sp)
10101d64:	28adc83a 	sub	r22,r5,r2
10101d68:	05be630e 	bge	zero,r22,101016f8 <__alt_data_end+0xfffe16f8>
10101d6c:	07000404 	movi	fp,16
10101d70:	d8801f17 	ldw	r2,124(sp)
10101d74:	e5838f0e 	bge	fp,r22,10102bb4 <___vfprintf_internal_r+0x1d88>
10101d78:	01440474 	movhi	r5,4113
10101d7c:	29407384 	addi	r5,r5,462
10101d80:	dc403015 	stw	r17,192(sp)
10101d84:	d9402b15 	stw	r5,172(sp)
10101d88:	b023883a 	mov	r17,r22
10101d8c:	04c001c4 	movi	r19,7
10101d90:	a82d883a 	mov	r22,r21
10101d94:	902b883a 	mov	r21,r18
10101d98:	8025883a 	mov	r18,r16
10101d9c:	dc002c17 	ldw	r16,176(sp)
10101da0:	00000306 	br	10101db0 <___vfprintf_internal_r+0xf84>
10101da4:	8c7ffc04 	addi	r17,r17,-16
10101da8:	42000204 	addi	r8,r8,8
10101dac:	e440110e 	bge	fp,r17,10101df4 <___vfprintf_internal_r+0xfc8>
10101db0:	18c00404 	addi	r3,r3,16
10101db4:	10800044 	addi	r2,r2,1
10101db8:	45000015 	stw	r20,0(r8)
10101dbc:	47000115 	stw	fp,4(r8)
10101dc0:	d8c02015 	stw	r3,128(sp)
10101dc4:	d8801f15 	stw	r2,124(sp)
10101dc8:	98bff60e 	bge	r19,r2,10101da4 <__alt_data_end+0xfffe1da4>
10101dcc:	d9801e04 	addi	r6,sp,120
10101dd0:	b80b883a 	mov	r5,r23
10101dd4:	8009883a 	mov	r4,r16
10101dd8:	01084280 	call	10108428 <__sprint_r>
10101ddc:	103d151e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101de0:	8c7ffc04 	addi	r17,r17,-16
10101de4:	d8c02017 	ldw	r3,128(sp)
10101de8:	d8801f17 	ldw	r2,124(sp)
10101dec:	da000404 	addi	r8,sp,16
10101df0:	e47fef16 	blt	fp,r17,10101db0 <__alt_data_end+0xfffe1db0>
10101df4:	9021883a 	mov	r16,r18
10101df8:	a825883a 	mov	r18,r21
10101dfc:	b02b883a 	mov	r21,r22
10101e00:	882d883a 	mov	r22,r17
10101e04:	dc403017 	ldw	r17,192(sp)
10101e08:	d9002b17 	ldw	r4,172(sp)
10101e0c:	1d87883a 	add	r3,r3,r22
10101e10:	10800044 	addi	r2,r2,1
10101e14:	41000015 	stw	r4,0(r8)
10101e18:	45800115 	stw	r22,4(r8)
10101e1c:	d8c02015 	stw	r3,128(sp)
10101e20:	d8801f15 	stw	r2,124(sp)
10101e24:	010001c4 	movi	r4,7
10101e28:	20818e16 	blt	r4,r2,10102464 <___vfprintf_internal_r+0x1638>
10101e2c:	42000204 	addi	r8,r8,8
10101e30:	003e3106 	br	101016f8 <__alt_data_end+0xfffe16f8>
10101e34:	d9403317 	ldw	r5,204(sp)
10101e38:	00800044 	movi	r2,1
10101e3c:	18c00044 	addi	r3,r3,1
10101e40:	1141530e 	bge	r2,r5,10102390 <___vfprintf_internal_r+0x1564>
10101e44:	dc401f17 	ldw	r17,124(sp)
10101e48:	00800044 	movi	r2,1
10101e4c:	40800115 	stw	r2,4(r8)
10101e50:	8c400044 	addi	r17,r17,1
10101e54:	44000015 	stw	r16,0(r8)
10101e58:	d8c02015 	stw	r3,128(sp)
10101e5c:	dc401f15 	stw	r17,124(sp)
10101e60:	008001c4 	movi	r2,7
10101e64:	14416b16 	blt	r2,r17,10102414 <___vfprintf_internal_r+0x15e8>
10101e68:	42000204 	addi	r8,r8,8
10101e6c:	d8803717 	ldw	r2,220(sp)
10101e70:	d9003417 	ldw	r4,208(sp)
10101e74:	8c400044 	addi	r17,r17,1
10101e78:	10c7883a 	add	r3,r2,r3
10101e7c:	40800115 	stw	r2,4(r8)
10101e80:	41000015 	stw	r4,0(r8)
10101e84:	d8c02015 	stw	r3,128(sp)
10101e88:	dc401f15 	stw	r17,124(sp)
10101e8c:	008001c4 	movi	r2,7
10101e90:	14416916 	blt	r2,r17,10102438 <___vfprintf_internal_r+0x160c>
10101e94:	45800204 	addi	r22,r8,8
10101e98:	d9003617 	ldw	r4,216(sp)
10101e9c:	d9403817 	ldw	r5,224(sp)
10101ea0:	000d883a 	mov	r6,zero
10101ea4:	000f883a 	mov	r7,zero
10101ea8:	d8c03c15 	stw	r3,240(sp)
10101eac:	010c0a00 	call	1010c0a0 <__eqdf2>
10101eb0:	d8c03c17 	ldw	r3,240(sp)
10101eb4:	1000bc26 	beq	r2,zero,101021a8 <___vfprintf_internal_r+0x137c>
10101eb8:	d9403317 	ldw	r5,204(sp)
10101ebc:	84000044 	addi	r16,r16,1
10101ec0:	8c400044 	addi	r17,r17,1
10101ec4:	28bfffc4 	addi	r2,r5,-1
10101ec8:	1887883a 	add	r3,r3,r2
10101ecc:	b0800115 	stw	r2,4(r22)
10101ed0:	b4000015 	stw	r16,0(r22)
10101ed4:	d8c02015 	stw	r3,128(sp)
10101ed8:	dc401f15 	stw	r17,124(sp)
10101edc:	008001c4 	movi	r2,7
10101ee0:	14414316 	blt	r2,r17,101023f0 <___vfprintf_internal_r+0x15c4>
10101ee4:	b5800204 	addi	r22,r22,8
10101ee8:	d9003a17 	ldw	r4,232(sp)
10101eec:	df0022c4 	addi	fp,sp,139
10101ef0:	8c400044 	addi	r17,r17,1
10101ef4:	20c7883a 	add	r3,r4,r3
10101ef8:	b7000015 	stw	fp,0(r22)
10101efc:	b1000115 	stw	r4,4(r22)
10101f00:	d8c02015 	stw	r3,128(sp)
10101f04:	dc401f15 	stw	r17,124(sp)
10101f08:	008001c4 	movi	r2,7
10101f0c:	14400e16 	blt	r2,r17,10101f48 <___vfprintf_internal_r+0x111c>
10101f10:	b2000204 	addi	r8,r22,8
10101f14:	003e3a06 	br	10101800 <__alt_data_end+0xfffe1800>
10101f18:	01040474 	movhi	r4,4113
10101f1c:	21007384 	addi	r4,r4,462
10101f20:	d9002b15 	stw	r4,172(sp)
10101f24:	d9002b17 	ldw	r4,172(sp)
10101f28:	1c07883a 	add	r3,r3,r16
10101f2c:	44000115 	stw	r16,4(r8)
10101f30:	41000015 	stw	r4,0(r8)
10101f34:	10800044 	addi	r2,r2,1
10101f38:	d8c02015 	stw	r3,128(sp)
10101f3c:	d8801f15 	stw	r2,124(sp)
10101f40:	010001c4 	movi	r4,7
10101f44:	20be2d0e 	bge	r4,r2,101017fc <__alt_data_end+0xfffe17fc>
10101f48:	d9002c17 	ldw	r4,176(sp)
10101f4c:	d9801e04 	addi	r6,sp,120
10101f50:	b80b883a 	mov	r5,r23
10101f54:	01084280 	call	10108428 <__sprint_r>
10101f58:	103cb61e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101f5c:	d8c02017 	ldw	r3,128(sp)
10101f60:	da000404 	addi	r8,sp,16
10101f64:	003e2606 	br	10101800 <__alt_data_end+0xfffe1800>
10101f68:	d9002c17 	ldw	r4,176(sp)
10101f6c:	d9801e04 	addi	r6,sp,120
10101f70:	b80b883a 	mov	r5,r23
10101f74:	01084280 	call	10108428 <__sprint_r>
10101f78:	103e5d26 	beq	r2,zero,101018f0 <__alt_data_end+0xfffe18f0>
10101f7c:	003cad06 	br	10101234 <__alt_data_end+0xfffe1234>
10101f80:	d9002c17 	ldw	r4,176(sp)
10101f84:	d9801e04 	addi	r6,sp,120
10101f88:	b80b883a 	mov	r5,r23
10101f8c:	01084280 	call	10108428 <__sprint_r>
10101f90:	103ca81e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101f94:	d8c02017 	ldw	r3,128(sp)
10101f98:	da000404 	addi	r8,sp,16
10101f9c:	003e0b06 	br	101017cc <__alt_data_end+0xfffe17cc>
10101fa0:	d9002c17 	ldw	r4,176(sp)
10101fa4:	d9801e04 	addi	r6,sp,120
10101fa8:	b80b883a 	mov	r5,r23
10101fac:	01084280 	call	10108428 <__sprint_r>
10101fb0:	103ca01e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101fb4:	d8c02017 	ldw	r3,128(sp)
10101fb8:	da000404 	addi	r8,sp,16
10101fbc:	003dbd06 	br	101016b4 <__alt_data_end+0xfffe16b4>
10101fc0:	d9002c17 	ldw	r4,176(sp)
10101fc4:	d9801e04 	addi	r6,sp,120
10101fc8:	b80b883a 	mov	r5,r23
10101fcc:	01084280 	call	10108428 <__sprint_r>
10101fd0:	103c981e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10101fd4:	d8c02017 	ldw	r3,128(sp)
10101fd8:	da000404 	addi	r8,sp,16
10101fdc:	003dc306 	br	101016ec <__alt_data_end+0xfffe16ec>
10101fe0:	d8802917 	ldw	r2,164(sp)
10101fe4:	d8002785 	stb	zero,158(sp)
10101fe8:	103f0616 	blt	r2,zero,10101c04 <__alt_data_end+0xfffe1c04>
10101fec:	00ffdfc4 	movi	r3,-129
10101ff0:	9d84b03a 	or	r2,r19,r22
10101ff4:	90e4703a 	and	r18,r18,r3
10101ff8:	103c6b26 	beq	r2,zero,101011a8 <__alt_data_end+0xfffe11a8>
10101ffc:	0039883a 	mov	fp,zero
10102000:	003e7406 	br	101019d4 <__alt_data_end+0xfffe19d4>
10102004:	9080040c 	andi	r2,r18,16
10102008:	1001b326 	beq	r2,zero,101026d8 <___vfprintf_internal_r+0x18ac>
1010200c:	d9002d17 	ldw	r4,180(sp)
10102010:	d9402917 	ldw	r5,164(sp)
10102014:	d8002785 	stb	zero,158(sp)
10102018:	20800104 	addi	r2,r4,4
1010201c:	24c00017 	ldw	r19,0(r4)
10102020:	002d883a 	mov	r22,zero
10102024:	2801b516 	blt	r5,zero,101026fc <___vfprintf_internal_r+0x18d0>
10102028:	00ffdfc4 	movi	r3,-129
1010202c:	d8802d15 	stw	r2,180(sp)
10102030:	90e4703a 	and	r18,r18,r3
10102034:	983d2726 	beq	r19,zero,101014d4 <__alt_data_end+0xfffe14d4>
10102038:	0039883a 	mov	fp,zero
1010203c:	003d2a06 	br	101014e8 <__alt_data_end+0xfffe14e8>
10102040:	dc402617 	ldw	r17,152(sp)
10102044:	0441d30e 	bge	zero,r17,10102794 <___vfprintf_internal_r+0x1968>
10102048:	dc403217 	ldw	r17,200(sp)
1010204c:	d8803317 	ldw	r2,204(sp)
10102050:	1440010e 	bge	r2,r17,10102058 <___vfprintf_internal_r+0x122c>
10102054:	1023883a 	mov	r17,r2
10102058:	04400a0e 	bge	zero,r17,10102084 <___vfprintf_internal_r+0x1258>
1010205c:	d8801f17 	ldw	r2,124(sp)
10102060:	1c47883a 	add	r3,r3,r17
10102064:	44000015 	stw	r16,0(r8)
10102068:	10800044 	addi	r2,r2,1
1010206c:	44400115 	stw	r17,4(r8)
10102070:	d8c02015 	stw	r3,128(sp)
10102074:	d8801f15 	stw	r2,124(sp)
10102078:	010001c4 	movi	r4,7
1010207c:	20826516 	blt	r4,r2,10102a14 <___vfprintf_internal_r+0x1be8>
10102080:	42000204 	addi	r8,r8,8
10102084:	88026116 	blt	r17,zero,10102a0c <___vfprintf_internal_r+0x1be0>
10102088:	d9003217 	ldw	r4,200(sp)
1010208c:	2463c83a 	sub	r17,r4,r17
10102090:	04407b0e 	bge	zero,r17,10102280 <___vfprintf_internal_r+0x1454>
10102094:	05800404 	movi	r22,16
10102098:	d8801f17 	ldw	r2,124(sp)
1010209c:	b4419d0e 	bge	r22,r17,10102714 <___vfprintf_internal_r+0x18e8>
101020a0:	01040474 	movhi	r4,4113
101020a4:	21007384 	addi	r4,r4,462
101020a8:	d9002b15 	stw	r4,172(sp)
101020ac:	070001c4 	movi	fp,7
101020b0:	dcc02c17 	ldw	r19,176(sp)
101020b4:	00000306 	br	101020c4 <___vfprintf_internal_r+0x1298>
101020b8:	42000204 	addi	r8,r8,8
101020bc:	8c7ffc04 	addi	r17,r17,-16
101020c0:	b441970e 	bge	r22,r17,10102720 <___vfprintf_internal_r+0x18f4>
101020c4:	18c00404 	addi	r3,r3,16
101020c8:	10800044 	addi	r2,r2,1
101020cc:	45000015 	stw	r20,0(r8)
101020d0:	45800115 	stw	r22,4(r8)
101020d4:	d8c02015 	stw	r3,128(sp)
101020d8:	d8801f15 	stw	r2,124(sp)
101020dc:	e0bff60e 	bge	fp,r2,101020b8 <__alt_data_end+0xfffe20b8>
101020e0:	d9801e04 	addi	r6,sp,120
101020e4:	b80b883a 	mov	r5,r23
101020e8:	9809883a 	mov	r4,r19
101020ec:	01084280 	call	10108428 <__sprint_r>
101020f0:	103c501e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
101020f4:	d8c02017 	ldw	r3,128(sp)
101020f8:	d8801f17 	ldw	r2,124(sp)
101020fc:	da000404 	addi	r8,sp,16
10102100:	003fee06 	br	101020bc <__alt_data_end+0xfffe20bc>
10102104:	d9002c17 	ldw	r4,176(sp)
10102108:	d9801e04 	addi	r6,sp,120
1010210c:	b80b883a 	mov	r5,r23
10102110:	01084280 	call	10108428 <__sprint_r>
10102114:	103c471e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102118:	d8c02017 	ldw	r3,128(sp)
1010211c:	df002787 	ldb	fp,158(sp)
10102120:	da000404 	addi	r8,sp,16
10102124:	003d5606 	br	10101680 <__alt_data_end+0xfffe1680>
10102128:	9080040c 	andi	r2,r18,16
1010212c:	10016126 	beq	r2,zero,101026b4 <___vfprintf_internal_r+0x1888>
10102130:	d8802d17 	ldw	r2,180(sp)
10102134:	14c00017 	ldw	r19,0(r2)
10102138:	10800104 	addi	r2,r2,4
1010213c:	d8802d15 	stw	r2,180(sp)
10102140:	982dd7fa 	srai	r22,r19,31
10102144:	b005883a 	mov	r2,r22
10102148:	003c8206 	br	10101354 <__alt_data_end+0xfffe1354>
1010214c:	9080040c 	andi	r2,r18,16
10102150:	10003526 	beq	r2,zero,10102228 <___vfprintf_internal_r+0x13fc>
10102154:	d9402d17 	ldw	r5,180(sp)
10102158:	d8c02917 	ldw	r3,164(sp)
1010215c:	d8002785 	stb	zero,158(sp)
10102160:	28800104 	addi	r2,r5,4
10102164:	2cc00017 	ldw	r19,0(r5)
10102168:	002d883a 	mov	r22,zero
1010216c:	18003716 	blt	r3,zero,1010224c <___vfprintf_internal_r+0x1420>
10102170:	00ffdfc4 	movi	r3,-129
10102174:	d8802d15 	stw	r2,180(sp)
10102178:	90e4703a 	and	r18,r18,r3
1010217c:	0039883a 	mov	fp,zero
10102180:	983df326 	beq	r19,zero,10101950 <__alt_data_end+0xfffe1950>
10102184:	00800244 	movi	r2,9
10102188:	14fc7b36 	bltu	r2,r19,10101378 <__alt_data_end+0xfffe1378>
1010218c:	d8c02817 	ldw	r3,160(sp)
10102190:	dc001dc4 	addi	r16,sp,119
10102194:	9cc00c04 	addi	r19,r19,48
10102198:	1c07c83a 	sub	r3,r3,r16
1010219c:	dcc01dc5 	stb	r19,119(sp)
101021a0:	d8c02e15 	stw	r3,184(sp)
101021a4:	003ce806 	br	10101548 <__alt_data_end+0xfffe1548>
101021a8:	d8803317 	ldw	r2,204(sp)
101021ac:	143fffc4 	addi	r16,r2,-1
101021b0:	043f4d0e 	bge	zero,r16,10101ee8 <__alt_data_end+0xfffe1ee8>
101021b4:	07000404 	movi	fp,16
101021b8:	e400810e 	bge	fp,r16,101023c0 <___vfprintf_internal_r+0x1594>
101021bc:	01440474 	movhi	r5,4113
101021c0:	29407384 	addi	r5,r5,462
101021c4:	d9402b15 	stw	r5,172(sp)
101021c8:	01c001c4 	movi	r7,7
101021cc:	dcc02c17 	ldw	r19,176(sp)
101021d0:	00000306 	br	101021e0 <___vfprintf_internal_r+0x13b4>
101021d4:	b5800204 	addi	r22,r22,8
101021d8:	843ffc04 	addi	r16,r16,-16
101021dc:	e4007b0e 	bge	fp,r16,101023cc <___vfprintf_internal_r+0x15a0>
101021e0:	18c00404 	addi	r3,r3,16
101021e4:	8c400044 	addi	r17,r17,1
101021e8:	b5000015 	stw	r20,0(r22)
101021ec:	b7000115 	stw	fp,4(r22)
101021f0:	d8c02015 	stw	r3,128(sp)
101021f4:	dc401f15 	stw	r17,124(sp)
101021f8:	3c7ff60e 	bge	r7,r17,101021d4 <__alt_data_end+0xfffe21d4>
101021fc:	d9801e04 	addi	r6,sp,120
10102200:	b80b883a 	mov	r5,r23
10102204:	9809883a 	mov	r4,r19
10102208:	d9c03c15 	stw	r7,240(sp)
1010220c:	01084280 	call	10108428 <__sprint_r>
10102210:	d9c03c17 	ldw	r7,240(sp)
10102214:	103c071e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102218:	d8c02017 	ldw	r3,128(sp)
1010221c:	dc401f17 	ldw	r17,124(sp)
10102220:	dd800404 	addi	r22,sp,16
10102224:	003fec06 	br	101021d8 <__alt_data_end+0xfffe21d8>
10102228:	9080100c 	andi	r2,r18,64
1010222c:	d8002785 	stb	zero,158(sp)
10102230:	10010e26 	beq	r2,zero,1010266c <___vfprintf_internal_r+0x1840>
10102234:	d9002d17 	ldw	r4,180(sp)
10102238:	d9402917 	ldw	r5,164(sp)
1010223c:	002d883a 	mov	r22,zero
10102240:	20800104 	addi	r2,r4,4
10102244:	24c0000b 	ldhu	r19,0(r4)
10102248:	283fc90e 	bge	r5,zero,10102170 <__alt_data_end+0xfffe2170>
1010224c:	d8802d15 	stw	r2,180(sp)
10102250:	0039883a 	mov	fp,zero
10102254:	9d84b03a 	or	r2,r19,r22
10102258:	103c461e 	bne	r2,zero,10101374 <__alt_data_end+0xfffe1374>
1010225c:	00800044 	movi	r2,1
10102260:	003e6c06 	br	10101c14 <__alt_data_end+0xfffe1c14>
10102264:	d9002c17 	ldw	r4,176(sp)
10102268:	d9801e04 	addi	r6,sp,120
1010226c:	b80b883a 	mov	r5,r23
10102270:	01084280 	call	10108428 <__sprint_r>
10102274:	103bef1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102278:	d8c02017 	ldw	r3,128(sp)
1010227c:	da000404 	addi	r8,sp,16
10102280:	d9003217 	ldw	r4,200(sp)
10102284:	d8802617 	ldw	r2,152(sp)
10102288:	d9403317 	ldw	r5,204(sp)
1010228c:	8123883a 	add	r17,r16,r4
10102290:	11400216 	blt	r2,r5,1010229c <___vfprintf_internal_r+0x1470>
10102294:	9100004c 	andi	r4,r18,1
10102298:	20000d26 	beq	r4,zero,101022d0 <___vfprintf_internal_r+0x14a4>
1010229c:	d9003717 	ldw	r4,220(sp)
101022a0:	d9403417 	ldw	r5,208(sp)
101022a4:	1907883a 	add	r3,r3,r4
101022a8:	d9001f17 	ldw	r4,124(sp)
101022ac:	41400015 	stw	r5,0(r8)
101022b0:	d9403717 	ldw	r5,220(sp)
101022b4:	21000044 	addi	r4,r4,1
101022b8:	d8c02015 	stw	r3,128(sp)
101022bc:	41400115 	stw	r5,4(r8)
101022c0:	d9001f15 	stw	r4,124(sp)
101022c4:	014001c4 	movi	r5,7
101022c8:	2901e816 	blt	r5,r4,10102a6c <___vfprintf_internal_r+0x1c40>
101022cc:	42000204 	addi	r8,r8,8
101022d0:	d9003317 	ldw	r4,204(sp)
101022d4:	8121883a 	add	r16,r16,r4
101022d8:	2085c83a 	sub	r2,r4,r2
101022dc:	8461c83a 	sub	r16,r16,r17
101022e0:	1400010e 	bge	r2,r16,101022e8 <___vfprintf_internal_r+0x14bc>
101022e4:	1021883a 	mov	r16,r2
101022e8:	04000a0e 	bge	zero,r16,10102314 <___vfprintf_internal_r+0x14e8>
101022ec:	d9001f17 	ldw	r4,124(sp)
101022f0:	1c07883a 	add	r3,r3,r16
101022f4:	44400015 	stw	r17,0(r8)
101022f8:	21000044 	addi	r4,r4,1
101022fc:	44000115 	stw	r16,4(r8)
10102300:	d8c02015 	stw	r3,128(sp)
10102304:	d9001f15 	stw	r4,124(sp)
10102308:	014001c4 	movi	r5,7
1010230c:	2901fb16 	blt	r5,r4,10102afc <___vfprintf_internal_r+0x1cd0>
10102310:	42000204 	addi	r8,r8,8
10102314:	8001f716 	blt	r16,zero,10102af4 <___vfprintf_internal_r+0x1cc8>
10102318:	1421c83a 	sub	r16,r2,r16
1010231c:	043d380e 	bge	zero,r16,10101800 <__alt_data_end+0xfffe1800>
10102320:	04400404 	movi	r17,16
10102324:	d8801f17 	ldw	r2,124(sp)
10102328:	8c3efb0e 	bge	r17,r16,10101f18 <__alt_data_end+0xfffe1f18>
1010232c:	01440474 	movhi	r5,4113
10102330:	29407384 	addi	r5,r5,462
10102334:	d9402b15 	stw	r5,172(sp)
10102338:	058001c4 	movi	r22,7
1010233c:	dcc02c17 	ldw	r19,176(sp)
10102340:	00000306 	br	10102350 <___vfprintf_internal_r+0x1524>
10102344:	42000204 	addi	r8,r8,8
10102348:	843ffc04 	addi	r16,r16,-16
1010234c:	8c3ef50e 	bge	r17,r16,10101f24 <__alt_data_end+0xfffe1f24>
10102350:	18c00404 	addi	r3,r3,16
10102354:	10800044 	addi	r2,r2,1
10102358:	45000015 	stw	r20,0(r8)
1010235c:	44400115 	stw	r17,4(r8)
10102360:	d8c02015 	stw	r3,128(sp)
10102364:	d8801f15 	stw	r2,124(sp)
10102368:	b0bff60e 	bge	r22,r2,10102344 <__alt_data_end+0xfffe2344>
1010236c:	d9801e04 	addi	r6,sp,120
10102370:	b80b883a 	mov	r5,r23
10102374:	9809883a 	mov	r4,r19
10102378:	01084280 	call	10108428 <__sprint_r>
1010237c:	103bad1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102380:	d8c02017 	ldw	r3,128(sp)
10102384:	d8801f17 	ldw	r2,124(sp)
10102388:	da000404 	addi	r8,sp,16
1010238c:	003fee06 	br	10102348 <__alt_data_end+0xfffe2348>
10102390:	9088703a 	and	r4,r18,r2
10102394:	203eab1e 	bne	r4,zero,10101e44 <__alt_data_end+0xfffe1e44>
10102398:	dc401f17 	ldw	r17,124(sp)
1010239c:	40800115 	stw	r2,4(r8)
101023a0:	44000015 	stw	r16,0(r8)
101023a4:	8c400044 	addi	r17,r17,1
101023a8:	d8c02015 	stw	r3,128(sp)
101023ac:	dc401f15 	stw	r17,124(sp)
101023b0:	008001c4 	movi	r2,7
101023b4:	14400e16 	blt	r2,r17,101023f0 <___vfprintf_internal_r+0x15c4>
101023b8:	45800204 	addi	r22,r8,8
101023bc:	003eca06 	br	10101ee8 <__alt_data_end+0xfffe1ee8>
101023c0:	01040474 	movhi	r4,4113
101023c4:	21007384 	addi	r4,r4,462
101023c8:	d9002b15 	stw	r4,172(sp)
101023cc:	d8802b17 	ldw	r2,172(sp)
101023d0:	1c07883a 	add	r3,r3,r16
101023d4:	8c400044 	addi	r17,r17,1
101023d8:	b0800015 	stw	r2,0(r22)
101023dc:	b4000115 	stw	r16,4(r22)
101023e0:	d8c02015 	stw	r3,128(sp)
101023e4:	dc401f15 	stw	r17,124(sp)
101023e8:	008001c4 	movi	r2,7
101023ec:	147ebd0e 	bge	r2,r17,10101ee4 <__alt_data_end+0xfffe1ee4>
101023f0:	d9002c17 	ldw	r4,176(sp)
101023f4:	d9801e04 	addi	r6,sp,120
101023f8:	b80b883a 	mov	r5,r23
101023fc:	01084280 	call	10108428 <__sprint_r>
10102400:	103b8c1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102404:	d8c02017 	ldw	r3,128(sp)
10102408:	dc401f17 	ldw	r17,124(sp)
1010240c:	dd800404 	addi	r22,sp,16
10102410:	003eb506 	br	10101ee8 <__alt_data_end+0xfffe1ee8>
10102414:	d9002c17 	ldw	r4,176(sp)
10102418:	d9801e04 	addi	r6,sp,120
1010241c:	b80b883a 	mov	r5,r23
10102420:	01084280 	call	10108428 <__sprint_r>
10102424:	103b831e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102428:	d8c02017 	ldw	r3,128(sp)
1010242c:	dc401f17 	ldw	r17,124(sp)
10102430:	da000404 	addi	r8,sp,16
10102434:	003e8d06 	br	10101e6c <__alt_data_end+0xfffe1e6c>
10102438:	d9002c17 	ldw	r4,176(sp)
1010243c:	d9801e04 	addi	r6,sp,120
10102440:	b80b883a 	mov	r5,r23
10102444:	01084280 	call	10108428 <__sprint_r>
10102448:	103b7a1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
1010244c:	d8c02017 	ldw	r3,128(sp)
10102450:	dc401f17 	ldw	r17,124(sp)
10102454:	dd800404 	addi	r22,sp,16
10102458:	003e8f06 	br	10101e98 <__alt_data_end+0xfffe1e98>
1010245c:	0027883a 	mov	r19,zero
10102460:	003f4a06 	br	1010218c <__alt_data_end+0xfffe218c>
10102464:	d9002c17 	ldw	r4,176(sp)
10102468:	d9801e04 	addi	r6,sp,120
1010246c:	b80b883a 	mov	r5,r23
10102470:	01084280 	call	10108428 <__sprint_r>
10102474:	103b6f1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102478:	d8c02017 	ldw	r3,128(sp)
1010247c:	da000404 	addi	r8,sp,16
10102480:	003c9d06 	br	101016f8 <__alt_data_end+0xfffe16f8>
10102484:	04e7c83a 	sub	r19,zero,r19
10102488:	9804c03a 	cmpne	r2,r19,zero
1010248c:	05adc83a 	sub	r22,zero,r22
10102490:	b0adc83a 	sub	r22,r22,r2
10102494:	d8802917 	ldw	r2,164(sp)
10102498:	07000b44 	movi	fp,45
1010249c:	df002785 	stb	fp,158(sp)
101024a0:	10017b16 	blt	r2,zero,10102a90 <___vfprintf_internal_r+0x1c64>
101024a4:	00bfdfc4 	movi	r2,-129
101024a8:	90a4703a 	and	r18,r18,r2
101024ac:	003bb106 	br	10101374 <__alt_data_end+0xfffe1374>
101024b0:	d9003617 	ldw	r4,216(sp)
101024b4:	d9403817 	ldw	r5,224(sp)
101024b8:	da003d15 	stw	r8,244(sp)
101024bc:	010804c0 	call	1010804c <__fpclassifyd>
101024c0:	da003d17 	ldw	r8,244(sp)
101024c4:	1000f026 	beq	r2,zero,10102888 <___vfprintf_internal_r+0x1a5c>
101024c8:	d9002917 	ldw	r4,164(sp)
101024cc:	05bff7c4 	movi	r22,-33
101024d0:	00bfffc4 	movi	r2,-1
101024d4:	8dac703a 	and	r22,r17,r22
101024d8:	20820026 	beq	r4,r2,10102cdc <___vfprintf_internal_r+0x1eb0>
101024dc:	008011c4 	movi	r2,71
101024e0:	b081f726 	beq	r22,r2,10102cc0 <___vfprintf_internal_r+0x1e94>
101024e4:	d9003817 	ldw	r4,224(sp)
101024e8:	90c04014 	ori	r3,r18,256
101024ec:	d8c02b15 	stw	r3,172(sp)
101024f0:	20021516 	blt	r4,zero,10102d48 <___vfprintf_internal_r+0x1f1c>
101024f4:	dcc03817 	ldw	r19,224(sp)
101024f8:	d8002a05 	stb	zero,168(sp)
101024fc:	00801984 	movi	r2,102
10102500:	8881f926 	beq	r17,r2,10102ce8 <___vfprintf_internal_r+0x1ebc>
10102504:	00801184 	movi	r2,70
10102508:	88821c26 	beq	r17,r2,10102d7c <___vfprintf_internal_r+0x1f50>
1010250c:	00801144 	movi	r2,69
10102510:	b081ef26 	beq	r22,r2,10102cd0 <___vfprintf_internal_r+0x1ea4>
10102514:	d8c02917 	ldw	r3,164(sp)
10102518:	d8802104 	addi	r2,sp,132
1010251c:	d8800315 	stw	r2,12(sp)
10102520:	d9403617 	ldw	r5,216(sp)
10102524:	d8802504 	addi	r2,sp,148
10102528:	d9002c17 	ldw	r4,176(sp)
1010252c:	d8800215 	stw	r2,8(sp)
10102530:	d8802604 	addi	r2,sp,152
10102534:	d8c00015 	stw	r3,0(sp)
10102538:	d8800115 	stw	r2,4(sp)
1010253c:	01c00084 	movi	r7,2
10102540:	980d883a 	mov	r6,r19
10102544:	d8c03c15 	stw	r3,240(sp)
10102548:	da003d15 	stw	r8,244(sp)
1010254c:	01034500 	call	10103450 <_dtoa_r>
10102550:	1021883a 	mov	r16,r2
10102554:	008019c4 	movi	r2,103
10102558:	d8c03c17 	ldw	r3,240(sp)
1010255c:	da003d17 	ldw	r8,244(sp)
10102560:	88817126 	beq	r17,r2,10102b28 <___vfprintf_internal_r+0x1cfc>
10102564:	008011c4 	movi	r2,71
10102568:	88829226 	beq	r17,r2,10102fb4 <___vfprintf_internal_r+0x2188>
1010256c:	80f9883a 	add	fp,r16,r3
10102570:	d9003617 	ldw	r4,216(sp)
10102574:	000d883a 	mov	r6,zero
10102578:	000f883a 	mov	r7,zero
1010257c:	980b883a 	mov	r5,r19
10102580:	da003d15 	stw	r8,244(sp)
10102584:	010c0a00 	call	1010c0a0 <__eqdf2>
10102588:	da003d17 	ldw	r8,244(sp)
1010258c:	10018d26 	beq	r2,zero,10102bc4 <___vfprintf_internal_r+0x1d98>
10102590:	d8802117 	ldw	r2,132(sp)
10102594:	1700062e 	bgeu	r2,fp,101025b0 <___vfprintf_internal_r+0x1784>
10102598:	01000c04 	movi	r4,48
1010259c:	10c00044 	addi	r3,r2,1
101025a0:	d8c02115 	stw	r3,132(sp)
101025a4:	11000005 	stb	r4,0(r2)
101025a8:	d8802117 	ldw	r2,132(sp)
101025ac:	173ffb36 	bltu	r2,fp,1010259c <__alt_data_end+0xfffe259c>
101025b0:	1405c83a 	sub	r2,r2,r16
101025b4:	d8803315 	stw	r2,204(sp)
101025b8:	008011c4 	movi	r2,71
101025bc:	b0817626 	beq	r22,r2,10102b98 <___vfprintf_internal_r+0x1d6c>
101025c0:	00801944 	movi	r2,101
101025c4:	1442810e 	bge	r2,r17,10102fcc <___vfprintf_internal_r+0x21a0>
101025c8:	d8c02617 	ldw	r3,152(sp)
101025cc:	00801984 	movi	r2,102
101025d0:	d8c03215 	stw	r3,200(sp)
101025d4:	8881fe26 	beq	r17,r2,10102dd0 <___vfprintf_internal_r+0x1fa4>
101025d8:	d8c03217 	ldw	r3,200(sp)
101025dc:	d9003317 	ldw	r4,204(sp)
101025e0:	1901dd16 	blt	r3,r4,10102d58 <___vfprintf_internal_r+0x1f2c>
101025e4:	9480004c 	andi	r18,r18,1
101025e8:	90022b1e 	bne	r18,zero,10102e98 <___vfprintf_internal_r+0x206c>
101025ec:	1805883a 	mov	r2,r3
101025f0:	18028016 	blt	r3,zero,10102ff4 <___vfprintf_internal_r+0x21c8>
101025f4:	d8c03217 	ldw	r3,200(sp)
101025f8:	044019c4 	movi	r17,103
101025fc:	d8c02e15 	stw	r3,184(sp)
10102600:	df002a07 	ldb	fp,168(sp)
10102604:	e001531e 	bne	fp,zero,10102b54 <___vfprintf_internal_r+0x1d28>
10102608:	df002783 	ldbu	fp,158(sp)
1010260c:	d8802a15 	stw	r2,168(sp)
10102610:	dc802b17 	ldw	r18,172(sp)
10102614:	d8002915 	stw	zero,164(sp)
10102618:	003bd106 	br	10101560 <__alt_data_end+0xfffe1560>
1010261c:	d8802d17 	ldw	r2,180(sp)
10102620:	d8c02d17 	ldw	r3,180(sp)
10102624:	d9002d17 	ldw	r4,180(sp)
10102628:	10800017 	ldw	r2,0(r2)
1010262c:	18c00117 	ldw	r3,4(r3)
10102630:	21000204 	addi	r4,r4,8
10102634:	d8803615 	stw	r2,216(sp)
10102638:	d8c03815 	stw	r3,224(sp)
1010263c:	d9002d15 	stw	r4,180(sp)
10102640:	003b7506 	br	10101418 <__alt_data_end+0xfffe1418>
10102644:	ac400007 	ldb	r17,0(r21)
10102648:	003a5906 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
1010264c:	9080100c 	andi	r2,r18,64
10102650:	1000a826 	beq	r2,zero,101028f4 <___vfprintf_internal_r+0x1ac8>
10102654:	d9002d17 	ldw	r4,180(sp)
10102658:	002d883a 	mov	r22,zero
1010265c:	24c0000b 	ldhu	r19,0(r4)
10102660:	21000104 	addi	r4,r4,4
10102664:	d9002d15 	stw	r4,180(sp)
10102668:	003ccb06 	br	10101998 <__alt_data_end+0xfffe1998>
1010266c:	d8c02d17 	ldw	r3,180(sp)
10102670:	d9002917 	ldw	r4,164(sp)
10102674:	002d883a 	mov	r22,zero
10102678:	18800104 	addi	r2,r3,4
1010267c:	1cc00017 	ldw	r19,0(r3)
10102680:	203ebb0e 	bge	r4,zero,10102170 <__alt_data_end+0xfffe2170>
10102684:	003ef106 	br	1010224c <__alt_data_end+0xfffe224c>
10102688:	9080040c 	andi	r2,r18,16
1010268c:	1000921e 	bne	r2,zero,101028d8 <___vfprintf_internal_r+0x1aac>
10102690:	9480100c 	andi	r18,r18,64
10102694:	90013926 	beq	r18,zero,10102b7c <___vfprintf_internal_r+0x1d50>
10102698:	d9002d17 	ldw	r4,180(sp)
1010269c:	d9402f17 	ldw	r5,188(sp)
101026a0:	20800017 	ldw	r2,0(r4)
101026a4:	21000104 	addi	r4,r4,4
101026a8:	d9002d15 	stw	r4,180(sp)
101026ac:	1140000d 	sth	r5,0(r2)
101026b0:	003a1606 	br	10100f0c <__alt_data_end+0xfffe0f0c>
101026b4:	9080100c 	andi	r2,r18,64
101026b8:	10008026 	beq	r2,zero,101028bc <___vfprintf_internal_r+0x1a90>
101026bc:	d8c02d17 	ldw	r3,180(sp)
101026c0:	1cc0000f 	ldh	r19,0(r3)
101026c4:	18c00104 	addi	r3,r3,4
101026c8:	d8c02d15 	stw	r3,180(sp)
101026cc:	982dd7fa 	srai	r22,r19,31
101026d0:	b005883a 	mov	r2,r22
101026d4:	003b1f06 	br	10101354 <__alt_data_end+0xfffe1354>
101026d8:	9080100c 	andi	r2,r18,64
101026dc:	d8002785 	stb	zero,158(sp)
101026e0:	10008a1e 	bne	r2,zero,1010290c <___vfprintf_internal_r+0x1ae0>
101026e4:	d9402d17 	ldw	r5,180(sp)
101026e8:	d8c02917 	ldw	r3,164(sp)
101026ec:	002d883a 	mov	r22,zero
101026f0:	28800104 	addi	r2,r5,4
101026f4:	2cc00017 	ldw	r19,0(r5)
101026f8:	183e4b0e 	bge	r3,zero,10102028 <__alt_data_end+0xfffe2028>
101026fc:	9d86b03a 	or	r3,r19,r22
10102700:	d8802d15 	stw	r2,180(sp)
10102704:	183e4c1e 	bne	r3,zero,10102038 <__alt_data_end+0xfffe2038>
10102708:	0039883a 	mov	fp,zero
1010270c:	0005883a 	mov	r2,zero
10102710:	003d4006 	br	10101c14 <__alt_data_end+0xfffe1c14>
10102714:	01440474 	movhi	r5,4113
10102718:	29407384 	addi	r5,r5,462
1010271c:	d9402b15 	stw	r5,172(sp)
10102720:	d9402b17 	ldw	r5,172(sp)
10102724:	1c47883a 	add	r3,r3,r17
10102728:	10800044 	addi	r2,r2,1
1010272c:	41400015 	stw	r5,0(r8)
10102730:	44400115 	stw	r17,4(r8)
10102734:	d8c02015 	stw	r3,128(sp)
10102738:	d8801f15 	stw	r2,124(sp)
1010273c:	010001c4 	movi	r4,7
10102740:	20bec816 	blt	r4,r2,10102264 <__alt_data_end+0xfffe2264>
10102744:	42000204 	addi	r8,r8,8
10102748:	003ecd06 	br	10102280 <__alt_data_end+0xfffe2280>
1010274c:	d9002917 	ldw	r4,164(sp)
10102750:	d8002785 	stb	zero,158(sp)
10102754:	203d2d16 	blt	r4,zero,10101c0c <__alt_data_end+0xfffe1c0c>
10102758:	00bfdfc4 	movi	r2,-129
1010275c:	90a4703a 	and	r18,r18,r2
10102760:	003a9106 	br	101011a8 <__alt_data_end+0xfffe11a8>
10102764:	01040474 	movhi	r4,4113
10102768:	21007384 	addi	r4,r4,462
1010276c:	d9002b15 	stw	r4,172(sp)
10102770:	003c0c06 	br	101017a4 <__alt_data_end+0xfffe17a4>
10102774:	d9002c17 	ldw	r4,176(sp)
10102778:	d9801e04 	addi	r6,sp,120
1010277c:	b80b883a 	mov	r5,r23
10102780:	01084280 	call	10108428 <__sprint_r>
10102784:	103aab1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102788:	d8c02017 	ldw	r3,128(sp)
1010278c:	da000404 	addi	r8,sp,16
10102790:	003d4106 	br	10101c98 <__alt_data_end+0xfffe1c98>
10102794:	d8801f17 	ldw	r2,124(sp)
10102798:	01440474 	movhi	r5,4113
1010279c:	01000044 	movi	r4,1
101027a0:	18c00044 	addi	r3,r3,1
101027a4:	10800044 	addi	r2,r2,1
101027a8:	29407304 	addi	r5,r5,460
101027ac:	41000115 	stw	r4,4(r8)
101027b0:	41400015 	stw	r5,0(r8)
101027b4:	d8c02015 	stw	r3,128(sp)
101027b8:	d8801f15 	stw	r2,124(sp)
101027bc:	010001c4 	movi	r4,7
101027c0:	20805c16 	blt	r4,r2,10102934 <___vfprintf_internal_r+0x1b08>
101027c4:	42000204 	addi	r8,r8,8
101027c8:	8800041e 	bne	r17,zero,101027dc <___vfprintf_internal_r+0x19b0>
101027cc:	d8803317 	ldw	r2,204(sp)
101027d0:	1000021e 	bne	r2,zero,101027dc <___vfprintf_internal_r+0x19b0>
101027d4:	9080004c 	andi	r2,r18,1
101027d8:	103c0926 	beq	r2,zero,10101800 <__alt_data_end+0xfffe1800>
101027dc:	d9003717 	ldw	r4,220(sp)
101027e0:	d8801f17 	ldw	r2,124(sp)
101027e4:	d9403417 	ldw	r5,208(sp)
101027e8:	20c7883a 	add	r3,r4,r3
101027ec:	10800044 	addi	r2,r2,1
101027f0:	41000115 	stw	r4,4(r8)
101027f4:	41400015 	stw	r5,0(r8)
101027f8:	d8c02015 	stw	r3,128(sp)
101027fc:	d8801f15 	stw	r2,124(sp)
10102800:	010001c4 	movi	r4,7
10102804:	20812116 	blt	r4,r2,10102c8c <___vfprintf_internal_r+0x1e60>
10102808:	42000204 	addi	r8,r8,8
1010280c:	0463c83a 	sub	r17,zero,r17
10102810:	0440730e 	bge	zero,r17,101029e0 <___vfprintf_internal_r+0x1bb4>
10102814:	05800404 	movi	r22,16
10102818:	b440860e 	bge	r22,r17,10102a34 <___vfprintf_internal_r+0x1c08>
1010281c:	01440474 	movhi	r5,4113
10102820:	29407384 	addi	r5,r5,462
10102824:	d9402b15 	stw	r5,172(sp)
10102828:	070001c4 	movi	fp,7
1010282c:	dcc02c17 	ldw	r19,176(sp)
10102830:	00000306 	br	10102840 <___vfprintf_internal_r+0x1a14>
10102834:	42000204 	addi	r8,r8,8
10102838:	8c7ffc04 	addi	r17,r17,-16
1010283c:	b440800e 	bge	r22,r17,10102a40 <___vfprintf_internal_r+0x1c14>
10102840:	18c00404 	addi	r3,r3,16
10102844:	10800044 	addi	r2,r2,1
10102848:	45000015 	stw	r20,0(r8)
1010284c:	45800115 	stw	r22,4(r8)
10102850:	d8c02015 	stw	r3,128(sp)
10102854:	d8801f15 	stw	r2,124(sp)
10102858:	e0bff60e 	bge	fp,r2,10102834 <__alt_data_end+0xfffe2834>
1010285c:	d9801e04 	addi	r6,sp,120
10102860:	b80b883a 	mov	r5,r23
10102864:	9809883a 	mov	r4,r19
10102868:	01084280 	call	10108428 <__sprint_r>
1010286c:	103a711e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102870:	d8c02017 	ldw	r3,128(sp)
10102874:	d8801f17 	ldw	r2,124(sp)
10102878:	da000404 	addi	r8,sp,16
1010287c:	003fee06 	br	10102838 <__alt_data_end+0xfffe2838>
10102880:	00bfffc4 	movi	r2,-1
10102884:	003a6f06 	br	10101244 <__alt_data_end+0xfffe1244>
10102888:	008011c4 	movi	r2,71
1010288c:	1440b816 	blt	r2,r17,10102b70 <___vfprintf_internal_r+0x1d44>
10102890:	04040474 	movhi	r16,4113
10102894:	84006504 	addi	r16,r16,404
10102898:	00c000c4 	movi	r3,3
1010289c:	00bfdfc4 	movi	r2,-129
101028a0:	d8c02a15 	stw	r3,168(sp)
101028a4:	90a4703a 	and	r18,r18,r2
101028a8:	df002783 	ldbu	fp,158(sp)
101028ac:	d8c02e15 	stw	r3,184(sp)
101028b0:	d8002915 	stw	zero,164(sp)
101028b4:	d8003215 	stw	zero,200(sp)
101028b8:	003b2906 	br	10101560 <__alt_data_end+0xfffe1560>
101028bc:	d9002d17 	ldw	r4,180(sp)
101028c0:	24c00017 	ldw	r19,0(r4)
101028c4:	21000104 	addi	r4,r4,4
101028c8:	d9002d15 	stw	r4,180(sp)
101028cc:	982dd7fa 	srai	r22,r19,31
101028d0:	b005883a 	mov	r2,r22
101028d4:	003a9f06 	br	10101354 <__alt_data_end+0xfffe1354>
101028d8:	d9402d17 	ldw	r5,180(sp)
101028dc:	d8c02f17 	ldw	r3,188(sp)
101028e0:	28800017 	ldw	r2,0(r5)
101028e4:	29400104 	addi	r5,r5,4
101028e8:	d9402d15 	stw	r5,180(sp)
101028ec:	10c00015 	stw	r3,0(r2)
101028f0:	00398606 	br	10100f0c <__alt_data_end+0xfffe0f0c>
101028f4:	d9402d17 	ldw	r5,180(sp)
101028f8:	002d883a 	mov	r22,zero
101028fc:	2cc00017 	ldw	r19,0(r5)
10102900:	29400104 	addi	r5,r5,4
10102904:	d9402d15 	stw	r5,180(sp)
10102908:	003c2306 	br	10101998 <__alt_data_end+0xfffe1998>
1010290c:	d8c02d17 	ldw	r3,180(sp)
10102910:	d9002917 	ldw	r4,164(sp)
10102914:	002d883a 	mov	r22,zero
10102918:	18800104 	addi	r2,r3,4
1010291c:	1cc0000b 	ldhu	r19,0(r3)
10102920:	203dc10e 	bge	r4,zero,10102028 <__alt_data_end+0xfffe2028>
10102924:	003f7506 	br	101026fc <__alt_data_end+0xfffe26fc>
10102928:	04040474 	movhi	r16,4113
1010292c:	84006304 	addi	r16,r16,396
10102930:	003acc06 	br	10101464 <__alt_data_end+0xfffe1464>
10102934:	d9002c17 	ldw	r4,176(sp)
10102938:	d9801e04 	addi	r6,sp,120
1010293c:	b80b883a 	mov	r5,r23
10102940:	01084280 	call	10108428 <__sprint_r>
10102944:	103a3b1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102948:	dc402617 	ldw	r17,152(sp)
1010294c:	d8c02017 	ldw	r3,128(sp)
10102950:	da000404 	addi	r8,sp,16
10102954:	003f9c06 	br	101027c8 <__alt_data_end+0xfffe27c8>
10102958:	ac400043 	ldbu	r17,1(r21)
1010295c:	94800814 	ori	r18,r18,32
10102960:	ad400044 	addi	r21,r21,1
10102964:	8c403fcc 	andi	r17,r17,255
10102968:	8c40201c 	xori	r17,r17,128
1010296c:	8c7fe004 	addi	r17,r17,-128
10102970:	00398f06 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10102974:	d8c02d15 	stw	r3,180(sp)
10102978:	0039883a 	mov	fp,zero
1010297c:	003e3506 	br	10102254 <__alt_data_end+0xfffe2254>
10102980:	d9002c17 	ldw	r4,176(sp)
10102984:	d9801e04 	addi	r6,sp,120
10102988:	b80b883a 	mov	r5,r23
1010298c:	01084280 	call	10108428 <__sprint_r>
10102990:	103a281e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102994:	d8c02017 	ldw	r3,128(sp)
10102998:	da000404 	addi	r8,sp,16
1010299c:	003cd006 	br	10101ce0 <__alt_data_end+0xfffe1ce0>
101029a0:	8009883a 	mov	r4,r16
101029a4:	da003d15 	stw	r8,244(sp)
101029a8:	0100d940 	call	10100d94 <strlen>
101029ac:	d8802e15 	stw	r2,184(sp)
101029b0:	da003d17 	ldw	r8,244(sp)
101029b4:	103c340e 	bge	r2,zero,10101a88 <__alt_data_end+0xfffe1a88>
101029b8:	0005883a 	mov	r2,zero
101029bc:	003c3206 	br	10101a88 <__alt_data_end+0xfffe1a88>
101029c0:	d9002c17 	ldw	r4,176(sp)
101029c4:	d9801e04 	addi	r6,sp,120
101029c8:	b80b883a 	mov	r5,r23
101029cc:	01084280 	call	10108428 <__sprint_r>
101029d0:	103a181e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
101029d4:	d8c02017 	ldw	r3,128(sp)
101029d8:	d8801f17 	ldw	r2,124(sp)
101029dc:	da000404 	addi	r8,sp,16
101029e0:	d9403317 	ldw	r5,204(sp)
101029e4:	10800044 	addi	r2,r2,1
101029e8:	44000015 	stw	r16,0(r8)
101029ec:	28c7883a 	add	r3,r5,r3
101029f0:	003b7d06 	br	101017e8 <__alt_data_end+0xfffe17e8>
101029f4:	01040474 	movhi	r4,4113
101029f8:	21007784 	addi	r4,r4,478
101029fc:	d9003515 	stw	r4,212(sp)
10102a00:	003b1406 	br	10101654 <__alt_data_end+0xfffe1654>
10102a04:	013fffc4 	movi	r4,-1
10102a08:	003a3506 	br	101012e0 <__alt_data_end+0xfffe12e0>
10102a0c:	0023883a 	mov	r17,zero
10102a10:	003d9d06 	br	10102088 <__alt_data_end+0xfffe2088>
10102a14:	d9002c17 	ldw	r4,176(sp)
10102a18:	d9801e04 	addi	r6,sp,120
10102a1c:	b80b883a 	mov	r5,r23
10102a20:	01084280 	call	10108428 <__sprint_r>
10102a24:	103a031e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102a28:	d8c02017 	ldw	r3,128(sp)
10102a2c:	da000404 	addi	r8,sp,16
10102a30:	003d9406 	br	10102084 <__alt_data_end+0xfffe2084>
10102a34:	01040474 	movhi	r4,4113
10102a38:	21007384 	addi	r4,r4,462
10102a3c:	d9002b15 	stw	r4,172(sp)
10102a40:	d9002b17 	ldw	r4,172(sp)
10102a44:	1c47883a 	add	r3,r3,r17
10102a48:	10800044 	addi	r2,r2,1
10102a4c:	41000015 	stw	r4,0(r8)
10102a50:	44400115 	stw	r17,4(r8)
10102a54:	d8c02015 	stw	r3,128(sp)
10102a58:	d8801f15 	stw	r2,124(sp)
10102a5c:	010001c4 	movi	r4,7
10102a60:	20bfd716 	blt	r4,r2,101029c0 <__alt_data_end+0xfffe29c0>
10102a64:	42000204 	addi	r8,r8,8
10102a68:	003fdd06 	br	101029e0 <__alt_data_end+0xfffe29e0>
10102a6c:	d9002c17 	ldw	r4,176(sp)
10102a70:	d9801e04 	addi	r6,sp,120
10102a74:	b80b883a 	mov	r5,r23
10102a78:	01084280 	call	10108428 <__sprint_r>
10102a7c:	1039ed1e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102a80:	d8802617 	ldw	r2,152(sp)
10102a84:	d8c02017 	ldw	r3,128(sp)
10102a88:	da000404 	addi	r8,sp,16
10102a8c:	003e1006 	br	101022d0 <__alt_data_end+0xfffe22d0>
10102a90:	00800044 	movi	r2,1
10102a94:	10803fcc 	andi	r2,r2,255
10102a98:	00c00044 	movi	r3,1
10102a9c:	10fa3526 	beq	r2,r3,10101374 <__alt_data_end+0xfffe1374>
10102aa0:	00c00084 	movi	r3,2
10102aa4:	10fbcb26 	beq	r2,r3,101019d4 <__alt_data_end+0xfffe19d4>
10102aa8:	003a8f06 	br	101014e8 <__alt_data_end+0xfffe14e8>
10102aac:	01040474 	movhi	r4,4113
10102ab0:	21007784 	addi	r4,r4,478
10102ab4:	d9003515 	stw	r4,212(sp)
10102ab8:	003b7606 	br	10101894 <__alt_data_end+0xfffe1894>
10102abc:	d8802917 	ldw	r2,164(sp)
10102ac0:	00c00184 	movi	r3,6
10102ac4:	1880012e 	bgeu	r3,r2,10102acc <___vfprintf_internal_r+0x1ca0>
10102ac8:	1805883a 	mov	r2,r3
10102acc:	d8802e15 	stw	r2,184(sp)
10102ad0:	1000ef16 	blt	r2,zero,10102e90 <___vfprintf_internal_r+0x2064>
10102ad4:	04040474 	movhi	r16,4113
10102ad8:	d8802a15 	stw	r2,168(sp)
10102adc:	dcc02d15 	stw	r19,180(sp)
10102ae0:	d8002915 	stw	zero,164(sp)
10102ae4:	d8003215 	stw	zero,200(sp)
10102ae8:	84007104 	addi	r16,r16,452
10102aec:	0039883a 	mov	fp,zero
10102af0:	003aa206 	br	1010157c <__alt_data_end+0xfffe157c>
10102af4:	0021883a 	mov	r16,zero
10102af8:	003e0706 	br	10102318 <__alt_data_end+0xfffe2318>
10102afc:	d9002c17 	ldw	r4,176(sp)
10102b00:	d9801e04 	addi	r6,sp,120
10102b04:	b80b883a 	mov	r5,r23
10102b08:	01084280 	call	10108428 <__sprint_r>
10102b0c:	1039c91e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102b10:	d8802617 	ldw	r2,152(sp)
10102b14:	d9403317 	ldw	r5,204(sp)
10102b18:	d8c02017 	ldw	r3,128(sp)
10102b1c:	da000404 	addi	r8,sp,16
10102b20:	2885c83a 	sub	r2,r5,r2
10102b24:	003dfb06 	br	10102314 <__alt_data_end+0xfffe2314>
10102b28:	9080004c 	andi	r2,r18,1
10102b2c:	103e8f1e 	bne	r2,zero,1010256c <__alt_data_end+0xfffe256c>
10102b30:	d8802117 	ldw	r2,132(sp)
10102b34:	003e9e06 	br	101025b0 <__alt_data_end+0xfffe25b0>
10102b38:	1025883a 	mov	r18,r2
10102b3c:	0039883a 	mov	fp,zero
10102b40:	00800084 	movi	r2,2
10102b44:	003fd306 	br	10102a94 <__alt_data_end+0xfffe2a94>
10102b48:	07000b44 	movi	fp,45
10102b4c:	df002785 	stb	fp,158(sp)
10102b50:	003a4006 	br	10101454 <__alt_data_end+0xfffe1454>
10102b54:	00c00b44 	movi	r3,45
10102b58:	d8c02785 	stb	r3,158(sp)
10102b5c:	d8802a15 	stw	r2,168(sp)
10102b60:	dc802b17 	ldw	r18,172(sp)
10102b64:	d8002915 	stw	zero,164(sp)
10102b68:	07000b44 	movi	fp,45
10102b6c:	003a8006 	br	10101570 <__alt_data_end+0xfffe1570>
10102b70:	04040474 	movhi	r16,4113
10102b74:	84006604 	addi	r16,r16,408
10102b78:	003f4706 	br	10102898 <__alt_data_end+0xfffe2898>
10102b7c:	d8c02d17 	ldw	r3,180(sp)
10102b80:	d9002f17 	ldw	r4,188(sp)
10102b84:	18800017 	ldw	r2,0(r3)
10102b88:	18c00104 	addi	r3,r3,4
10102b8c:	d8c02d15 	stw	r3,180(sp)
10102b90:	11000015 	stw	r4,0(r2)
10102b94:	0038dd06 	br	10100f0c <__alt_data_end+0xfffe0f0c>
10102b98:	dd802617 	ldw	r22,152(sp)
10102b9c:	00bfff44 	movi	r2,-3
10102ba0:	b0801c16 	blt	r22,r2,10102c14 <___vfprintf_internal_r+0x1de8>
10102ba4:	d9402917 	ldw	r5,164(sp)
10102ba8:	2d801a16 	blt	r5,r22,10102c14 <___vfprintf_internal_r+0x1de8>
10102bac:	dd803215 	stw	r22,200(sp)
10102bb0:	003e8906 	br	101025d8 <__alt_data_end+0xfffe25d8>
10102bb4:	01040474 	movhi	r4,4113
10102bb8:	21007384 	addi	r4,r4,462
10102bbc:	d9002b15 	stw	r4,172(sp)
10102bc0:	003c9106 	br	10101e08 <__alt_data_end+0xfffe1e08>
10102bc4:	e005883a 	mov	r2,fp
10102bc8:	003e7906 	br	101025b0 <__alt_data_end+0xfffe25b0>
10102bcc:	d9402917 	ldw	r5,164(sp)
10102bd0:	df002783 	ldbu	fp,158(sp)
10102bd4:	dcc02d15 	stw	r19,180(sp)
10102bd8:	d9402a15 	stw	r5,168(sp)
10102bdc:	d9402e15 	stw	r5,184(sp)
10102be0:	d8002915 	stw	zero,164(sp)
10102be4:	d8003215 	stw	zero,200(sp)
10102be8:	003a5d06 	br	10101560 <__alt_data_end+0xfffe1560>
10102bec:	9080004c 	andi	r2,r18,1
10102bf0:	0039883a 	mov	fp,zero
10102bf4:	10000426 	beq	r2,zero,10102c08 <___vfprintf_internal_r+0x1ddc>
10102bf8:	00800c04 	movi	r2,48
10102bfc:	dc001dc4 	addi	r16,sp,119
10102c00:	d8801dc5 	stb	r2,119(sp)
10102c04:	003b8006 	br	10101a08 <__alt_data_end+0xfffe1a08>
10102c08:	d8002e15 	stw	zero,184(sp)
10102c0c:	dc001e04 	addi	r16,sp,120
10102c10:	003a4d06 	br	10101548 <__alt_data_end+0xfffe1548>
10102c14:	8c7fff84 	addi	r17,r17,-2
10102c18:	b5bfffc4 	addi	r22,r22,-1
10102c1c:	dd802615 	stw	r22,152(sp)
10102c20:	dc4022c5 	stb	r17,139(sp)
10102c24:	b000bf16 	blt	r22,zero,10102f24 <___vfprintf_internal_r+0x20f8>
10102c28:	00800ac4 	movi	r2,43
10102c2c:	d8802305 	stb	r2,140(sp)
10102c30:	00800244 	movi	r2,9
10102c34:	15807016 	blt	r2,r22,10102df8 <___vfprintf_internal_r+0x1fcc>
10102c38:	00800c04 	movi	r2,48
10102c3c:	b5800c04 	addi	r22,r22,48
10102c40:	d8802345 	stb	r2,141(sp)
10102c44:	dd802385 	stb	r22,142(sp)
10102c48:	d88023c4 	addi	r2,sp,143
10102c4c:	df0022c4 	addi	fp,sp,139
10102c50:	d8c03317 	ldw	r3,204(sp)
10102c54:	1739c83a 	sub	fp,r2,fp
10102c58:	d9003317 	ldw	r4,204(sp)
10102c5c:	e0c7883a 	add	r3,fp,r3
10102c60:	df003a15 	stw	fp,232(sp)
10102c64:	d8c02e15 	stw	r3,184(sp)
10102c68:	00800044 	movi	r2,1
10102c6c:	1100b30e 	bge	r2,r4,10102f3c <___vfprintf_internal_r+0x2110>
10102c70:	d8c02e17 	ldw	r3,184(sp)
10102c74:	18c00044 	addi	r3,r3,1
10102c78:	d8c02e15 	stw	r3,184(sp)
10102c7c:	1805883a 	mov	r2,r3
10102c80:	1800ac16 	blt	r3,zero,10102f34 <___vfprintf_internal_r+0x2108>
10102c84:	d8003215 	stw	zero,200(sp)
10102c88:	003e5d06 	br	10102600 <__alt_data_end+0xfffe2600>
10102c8c:	d9002c17 	ldw	r4,176(sp)
10102c90:	d9801e04 	addi	r6,sp,120
10102c94:	b80b883a 	mov	r5,r23
10102c98:	01084280 	call	10108428 <__sprint_r>
10102c9c:	1039651e 	bne	r2,zero,10101234 <__alt_data_end+0xfffe1234>
10102ca0:	dc402617 	ldw	r17,152(sp)
10102ca4:	d8c02017 	ldw	r3,128(sp)
10102ca8:	d8801f17 	ldw	r2,124(sp)
10102cac:	da000404 	addi	r8,sp,16
10102cb0:	003ed606 	br	1010280c <__alt_data_end+0xfffe280c>
10102cb4:	582b883a 	mov	r21,r11
10102cb8:	d8002915 	stw	zero,164(sp)
10102cbc:	0038bd06 	br	10100fb4 <__alt_data_end+0xfffe0fb4>
10102cc0:	d8802917 	ldw	r2,164(sp)
10102cc4:	103e071e 	bne	r2,zero,101024e4 <__alt_data_end+0xfffe24e4>
10102cc8:	dc002915 	stw	r16,164(sp)
10102ccc:	003e0506 	br	101024e4 <__alt_data_end+0xfffe24e4>
10102cd0:	d9002917 	ldw	r4,164(sp)
10102cd4:	20c00044 	addi	r3,r4,1
10102cd8:	003e0f06 	br	10102518 <__alt_data_end+0xfffe2518>
10102cdc:	01400184 	movi	r5,6
10102ce0:	d9402915 	stw	r5,164(sp)
10102ce4:	003dff06 	br	101024e4 <__alt_data_end+0xfffe24e4>
10102ce8:	d8802104 	addi	r2,sp,132
10102cec:	d8800315 	stw	r2,12(sp)
10102cf0:	d8802504 	addi	r2,sp,148
10102cf4:	d8800215 	stw	r2,8(sp)
10102cf8:	d8802604 	addi	r2,sp,152
10102cfc:	d8800115 	stw	r2,4(sp)
10102d00:	d8802917 	ldw	r2,164(sp)
10102d04:	d9403617 	ldw	r5,216(sp)
10102d08:	d9002c17 	ldw	r4,176(sp)
10102d0c:	d8800015 	stw	r2,0(sp)
10102d10:	01c000c4 	movi	r7,3
10102d14:	980d883a 	mov	r6,r19
10102d18:	da003d15 	stw	r8,244(sp)
10102d1c:	01034500 	call	10103450 <_dtoa_r>
10102d20:	d8c02917 	ldw	r3,164(sp)
10102d24:	da003d17 	ldw	r8,244(sp)
10102d28:	1021883a 	mov	r16,r2
10102d2c:	10f9883a 	add	fp,r2,r3
10102d30:	81000007 	ldb	r4,0(r16)
10102d34:	00800c04 	movi	r2,48
10102d38:	20805e26 	beq	r4,r2,10102eb4 <___vfprintf_internal_r+0x2088>
10102d3c:	d8c02617 	ldw	r3,152(sp)
10102d40:	e0f9883a 	add	fp,fp,r3
10102d44:	003e0a06 	br	10102570 <__alt_data_end+0xfffe2570>
10102d48:	00c00b44 	movi	r3,45
10102d4c:	24e0003c 	xorhi	r19,r4,32768
10102d50:	d8c02a05 	stb	r3,168(sp)
10102d54:	003de906 	br	101024fc <__alt_data_end+0xfffe24fc>
10102d58:	d8c03217 	ldw	r3,200(sp)
10102d5c:	00c07a0e 	bge	zero,r3,10102f48 <___vfprintf_internal_r+0x211c>
10102d60:	00800044 	movi	r2,1
10102d64:	d9003317 	ldw	r4,204(sp)
10102d68:	1105883a 	add	r2,r2,r4
10102d6c:	d8802e15 	stw	r2,184(sp)
10102d70:	10004e16 	blt	r2,zero,10102eac <___vfprintf_internal_r+0x2080>
10102d74:	044019c4 	movi	r17,103
10102d78:	003e2106 	br	10102600 <__alt_data_end+0xfffe2600>
10102d7c:	d9002917 	ldw	r4,164(sp)
10102d80:	d8802104 	addi	r2,sp,132
10102d84:	d8800315 	stw	r2,12(sp)
10102d88:	d9000015 	stw	r4,0(sp)
10102d8c:	d8802504 	addi	r2,sp,148
10102d90:	d9403617 	ldw	r5,216(sp)
10102d94:	d9002c17 	ldw	r4,176(sp)
10102d98:	d8800215 	stw	r2,8(sp)
10102d9c:	d8802604 	addi	r2,sp,152
10102da0:	d8800115 	stw	r2,4(sp)
10102da4:	01c000c4 	movi	r7,3
10102da8:	980d883a 	mov	r6,r19
10102dac:	da003d15 	stw	r8,244(sp)
10102db0:	01034500 	call	10103450 <_dtoa_r>
10102db4:	d8c02917 	ldw	r3,164(sp)
10102db8:	da003d17 	ldw	r8,244(sp)
10102dbc:	1021883a 	mov	r16,r2
10102dc0:	00801184 	movi	r2,70
10102dc4:	80f9883a 	add	fp,r16,r3
10102dc8:	88bfd926 	beq	r17,r2,10102d30 <__alt_data_end+0xfffe2d30>
10102dcc:	003de806 	br	10102570 <__alt_data_end+0xfffe2570>
10102dd0:	d9002917 	ldw	r4,164(sp)
10102dd4:	00c04d0e 	bge	zero,r3,10102f0c <___vfprintf_internal_r+0x20e0>
10102dd8:	2000441e 	bne	r4,zero,10102eec <___vfprintf_internal_r+0x20c0>
10102ddc:	9480004c 	andi	r18,r18,1
10102de0:	9000421e 	bne	r18,zero,10102eec <___vfprintf_internal_r+0x20c0>
10102de4:	1805883a 	mov	r2,r3
10102de8:	18007016 	blt	r3,zero,10102fac <___vfprintf_internal_r+0x2180>
10102dec:	d8c03217 	ldw	r3,200(sp)
10102df0:	d8c02e15 	stw	r3,184(sp)
10102df4:	003e0206 	br	10102600 <__alt_data_end+0xfffe2600>
10102df8:	df0022c4 	addi	fp,sp,139
10102dfc:	dc002915 	stw	r16,164(sp)
10102e00:	4027883a 	mov	r19,r8
10102e04:	e021883a 	mov	r16,fp
10102e08:	b009883a 	mov	r4,r22
10102e0c:	01400284 	movi	r5,10
10102e10:	010addc0 	call	1010addc <__modsi3>
10102e14:	10800c04 	addi	r2,r2,48
10102e18:	843fffc4 	addi	r16,r16,-1
10102e1c:	b009883a 	mov	r4,r22
10102e20:	01400284 	movi	r5,10
10102e24:	80800005 	stb	r2,0(r16)
10102e28:	010ad580 	call	1010ad58 <__divsi3>
10102e2c:	102d883a 	mov	r22,r2
10102e30:	00800244 	movi	r2,9
10102e34:	15bff416 	blt	r2,r22,10102e08 <__alt_data_end+0xfffe2e08>
10102e38:	9811883a 	mov	r8,r19
10102e3c:	b0800c04 	addi	r2,r22,48
10102e40:	8027883a 	mov	r19,r16
10102e44:	997fffc4 	addi	r5,r19,-1
10102e48:	98bfffc5 	stb	r2,-1(r19)
10102e4c:	dc002917 	ldw	r16,164(sp)
10102e50:	2f006a2e 	bgeu	r5,fp,10102ffc <___vfprintf_internal_r+0x21d0>
10102e54:	d9c02384 	addi	r7,sp,142
10102e58:	3ccfc83a 	sub	r7,r7,r19
10102e5c:	d9002344 	addi	r4,sp,141
10102e60:	e1cf883a 	add	r7,fp,r7
10102e64:	00000106 	br	10102e6c <___vfprintf_internal_r+0x2040>
10102e68:	28800003 	ldbu	r2,0(r5)
10102e6c:	20800005 	stb	r2,0(r4)
10102e70:	21000044 	addi	r4,r4,1
10102e74:	29400044 	addi	r5,r5,1
10102e78:	393ffb1e 	bne	r7,r4,10102e68 <__alt_data_end+0xfffe2e68>
10102e7c:	d8802304 	addi	r2,sp,140
10102e80:	14c5c83a 	sub	r2,r2,r19
10102e84:	d8c02344 	addi	r3,sp,141
10102e88:	1885883a 	add	r2,r3,r2
10102e8c:	003f7006 	br	10102c50 <__alt_data_end+0xfffe2c50>
10102e90:	0005883a 	mov	r2,zero
10102e94:	003f0f06 	br	10102ad4 <__alt_data_end+0xfffe2ad4>
10102e98:	d8c03217 	ldw	r3,200(sp)
10102e9c:	18c00044 	addi	r3,r3,1
10102ea0:	d8c02e15 	stw	r3,184(sp)
10102ea4:	1805883a 	mov	r2,r3
10102ea8:	183fb20e 	bge	r3,zero,10102d74 <__alt_data_end+0xfffe2d74>
10102eac:	0005883a 	mov	r2,zero
10102eb0:	003fb006 	br	10102d74 <__alt_data_end+0xfffe2d74>
10102eb4:	d9003617 	ldw	r4,216(sp)
10102eb8:	000d883a 	mov	r6,zero
10102ebc:	000f883a 	mov	r7,zero
10102ec0:	980b883a 	mov	r5,r19
10102ec4:	d8c03c15 	stw	r3,240(sp)
10102ec8:	da003d15 	stw	r8,244(sp)
10102ecc:	010c0a00 	call	1010c0a0 <__eqdf2>
10102ed0:	d8c03c17 	ldw	r3,240(sp)
10102ed4:	da003d17 	ldw	r8,244(sp)
10102ed8:	103f9826 	beq	r2,zero,10102d3c <__alt_data_end+0xfffe2d3c>
10102edc:	00800044 	movi	r2,1
10102ee0:	10c7c83a 	sub	r3,r2,r3
10102ee4:	d8c02615 	stw	r3,152(sp)
10102ee8:	003f9506 	br	10102d40 <__alt_data_end+0xfffe2d40>
10102eec:	d9002917 	ldw	r4,164(sp)
10102ef0:	d8c03217 	ldw	r3,200(sp)
10102ef4:	20800044 	addi	r2,r4,1
10102ef8:	1885883a 	add	r2,r3,r2
10102efc:	d8802e15 	stw	r2,184(sp)
10102f00:	103dbf0e 	bge	r2,zero,10102600 <__alt_data_end+0xfffe2600>
10102f04:	0005883a 	mov	r2,zero
10102f08:	003dbd06 	br	10102600 <__alt_data_end+0xfffe2600>
10102f0c:	2000211e 	bne	r4,zero,10102f94 <___vfprintf_internal_r+0x2168>
10102f10:	9480004c 	andi	r18,r18,1
10102f14:	90001f1e 	bne	r18,zero,10102f94 <___vfprintf_internal_r+0x2168>
10102f18:	00800044 	movi	r2,1
10102f1c:	d8802e15 	stw	r2,184(sp)
10102f20:	003db706 	br	10102600 <__alt_data_end+0xfffe2600>
10102f24:	00800b44 	movi	r2,45
10102f28:	05adc83a 	sub	r22,zero,r22
10102f2c:	d8802305 	stb	r2,140(sp)
10102f30:	003f3f06 	br	10102c30 <__alt_data_end+0xfffe2c30>
10102f34:	0005883a 	mov	r2,zero
10102f38:	003f5206 	br	10102c84 <__alt_data_end+0xfffe2c84>
10102f3c:	90a4703a 	and	r18,r18,r2
10102f40:	903f4e26 	beq	r18,zero,10102c7c <__alt_data_end+0xfffe2c7c>
10102f44:	003f4a06 	br	10102c70 <__alt_data_end+0xfffe2c70>
10102f48:	00800084 	movi	r2,2
10102f4c:	10c5c83a 	sub	r2,r2,r3
10102f50:	003f8406 	br	10102d64 <__alt_data_end+0xfffe2d64>
10102f54:	d8802d17 	ldw	r2,180(sp)
10102f58:	d9002d17 	ldw	r4,180(sp)
10102f5c:	ac400043 	ldbu	r17,1(r21)
10102f60:	10800017 	ldw	r2,0(r2)
10102f64:	582b883a 	mov	r21,r11
10102f68:	d8802915 	stw	r2,164(sp)
10102f6c:	20800104 	addi	r2,r4,4
10102f70:	d9002917 	ldw	r4,164(sp)
10102f74:	d8802d15 	stw	r2,180(sp)
10102f78:	203e7a0e 	bge	r4,zero,10102964 <__alt_data_end+0xfffe2964>
10102f7c:	8c403fcc 	andi	r17,r17,255
10102f80:	00bfffc4 	movi	r2,-1
10102f84:	8c40201c 	xori	r17,r17,128
10102f88:	d8802915 	stw	r2,164(sp)
10102f8c:	8c7fe004 	addi	r17,r17,-128
10102f90:	00380706 	br	10100fb0 <__alt_data_end+0xfffe0fb0>
10102f94:	d8c02917 	ldw	r3,164(sp)
10102f98:	18c00084 	addi	r3,r3,2
10102f9c:	d8c02e15 	stw	r3,184(sp)
10102fa0:	1805883a 	mov	r2,r3
10102fa4:	183d960e 	bge	r3,zero,10102600 <__alt_data_end+0xfffe2600>
10102fa8:	003fd606 	br	10102f04 <__alt_data_end+0xfffe2f04>
10102fac:	0005883a 	mov	r2,zero
10102fb0:	003f8e06 	br	10102dec <__alt_data_end+0xfffe2dec>
10102fb4:	9080004c 	andi	r2,r18,1
10102fb8:	103f811e 	bne	r2,zero,10102dc0 <__alt_data_end+0xfffe2dc0>
10102fbc:	d8802117 	ldw	r2,132(sp)
10102fc0:	1405c83a 	sub	r2,r2,r16
10102fc4:	d8803315 	stw	r2,204(sp)
10102fc8:	b47ef326 	beq	r22,r17,10102b98 <__alt_data_end+0xfffe2b98>
10102fcc:	dd802617 	ldw	r22,152(sp)
10102fd0:	003f1106 	br	10102c18 <__alt_data_end+0xfffe2c18>
10102fd4:	d9c02785 	stb	r7,158(sp)
10102fd8:	00390406 	br	101013ec <__alt_data_end+0xfffe13ec>
10102fdc:	d9c02785 	stb	r7,158(sp)
10102fe0:	0038d306 	br	10101330 <__alt_data_end+0xfffe1330>
10102fe4:	d9c02785 	stb	r7,158(sp)
10102fe8:	003a6106 	br	10101970 <__alt_data_end+0xfffe1970>
10102fec:	d9c02785 	stb	r7,158(sp)
10102ff0:	003af806 	br	10101bd4 <__alt_data_end+0xfffe1bd4>
10102ff4:	0005883a 	mov	r2,zero
10102ff8:	003d7e06 	br	101025f4 <__alt_data_end+0xfffe25f4>
10102ffc:	d8802344 	addi	r2,sp,141
10103000:	003f1306 	br	10102c50 <__alt_data_end+0xfffe2c50>
10103004:	d9c02785 	stb	r7,158(sp)
10103008:	00392306 	br	10101498 <__alt_data_end+0xfffe1498>
1010300c:	d9c02785 	stb	r7,158(sp)
10103010:	003aa906 	br	10101ab8 <__alt_data_end+0xfffe1ab8>
10103014:	d9c02785 	stb	r7,158(sp)
10103018:	003a3d06 	br	10101910 <__alt_data_end+0xfffe1910>
1010301c:	d9c02785 	stb	r7,158(sp)
10103020:	003aca06 	br	10101b4c <__alt_data_end+0xfffe1b4c>

10103024 <__vfprintf_internal>:
10103024:	00840474 	movhi	r2,4113
10103028:	1087db04 	addi	r2,r2,8044
1010302c:	300f883a 	mov	r7,r6
10103030:	280d883a 	mov	r6,r5
10103034:	200b883a 	mov	r5,r4
10103038:	11000017 	ldw	r4,0(r2)
1010303c:	0100e2c1 	jmpi	10100e2c <___vfprintf_internal_r>

10103040 <__sbprintf>:
10103040:	2880030b 	ldhu	r2,12(r5)
10103044:	2ac01917 	ldw	r11,100(r5)
10103048:	2a80038b 	ldhu	r10,14(r5)
1010304c:	2a400717 	ldw	r9,28(r5)
10103050:	2a000917 	ldw	r8,36(r5)
10103054:	defee204 	addi	sp,sp,-1144
10103058:	00c10004 	movi	r3,1024
1010305c:	dc011a15 	stw	r16,1128(sp)
10103060:	10bfff4c 	andi	r2,r2,65533
10103064:	2821883a 	mov	r16,r5
10103068:	d8cb883a 	add	r5,sp,r3
1010306c:	dc811c15 	stw	r18,1136(sp)
10103070:	dc411b15 	stw	r17,1132(sp)
10103074:	dfc11d15 	stw	ra,1140(sp)
10103078:	2025883a 	mov	r18,r4
1010307c:	d881030d 	sth	r2,1036(sp)
10103080:	dac11915 	stw	r11,1124(sp)
10103084:	da81038d 	sth	r10,1038(sp)
10103088:	da410715 	stw	r9,1052(sp)
1010308c:	da010915 	stw	r8,1060(sp)
10103090:	dec10015 	stw	sp,1024(sp)
10103094:	dec10415 	stw	sp,1040(sp)
10103098:	d8c10215 	stw	r3,1032(sp)
1010309c:	d8c10515 	stw	r3,1044(sp)
101030a0:	d8010615 	stw	zero,1048(sp)
101030a4:	0100e2c0 	call	10100e2c <___vfprintf_internal_r>
101030a8:	1023883a 	mov	r17,r2
101030ac:	10000416 	blt	r2,zero,101030c0 <__sbprintf+0x80>
101030b0:	d9410004 	addi	r5,sp,1024
101030b4:	9009883a 	mov	r4,r18
101030b8:	0104cf40 	call	10104cf4 <_fflush_r>
101030bc:	10000d1e 	bne	r2,zero,101030f4 <__sbprintf+0xb4>
101030c0:	d881030b 	ldhu	r2,1036(sp)
101030c4:	1080100c 	andi	r2,r2,64
101030c8:	10000326 	beq	r2,zero,101030d8 <__sbprintf+0x98>
101030cc:	8080030b 	ldhu	r2,12(r16)
101030d0:	10801014 	ori	r2,r2,64
101030d4:	8080030d 	sth	r2,12(r16)
101030d8:	8805883a 	mov	r2,r17
101030dc:	dfc11d17 	ldw	ra,1140(sp)
101030e0:	dc811c17 	ldw	r18,1136(sp)
101030e4:	dc411b17 	ldw	r17,1132(sp)
101030e8:	dc011a17 	ldw	r16,1128(sp)
101030ec:	dec11e04 	addi	sp,sp,1144
101030f0:	f800283a 	ret
101030f4:	047fffc4 	movi	r17,-1
101030f8:	003ff106 	br	101030c0 <__alt_data_end+0xfffe30c0>

101030fc <__swsetup_r>:
101030fc:	00840474 	movhi	r2,4113
10103100:	defffd04 	addi	sp,sp,-12
10103104:	1087db04 	addi	r2,r2,8044
10103108:	dc400115 	stw	r17,4(sp)
1010310c:	2023883a 	mov	r17,r4
10103110:	11000017 	ldw	r4,0(r2)
10103114:	dc000015 	stw	r16,0(sp)
10103118:	dfc00215 	stw	ra,8(sp)
1010311c:	2821883a 	mov	r16,r5
10103120:	20000226 	beq	r4,zero,1010312c <__swsetup_r+0x30>
10103124:	20800e17 	ldw	r2,56(r4)
10103128:	10003126 	beq	r2,zero,101031f0 <__swsetup_r+0xf4>
1010312c:	8080030b 	ldhu	r2,12(r16)
10103130:	10c0020c 	andi	r3,r2,8
10103134:	1009883a 	mov	r4,r2
10103138:	18000f26 	beq	r3,zero,10103178 <__swsetup_r+0x7c>
1010313c:	80c00417 	ldw	r3,16(r16)
10103140:	18001526 	beq	r3,zero,10103198 <__swsetup_r+0x9c>
10103144:	1100004c 	andi	r4,r2,1
10103148:	20001c1e 	bne	r4,zero,101031bc <__swsetup_r+0xc0>
1010314c:	1080008c 	andi	r2,r2,2
10103150:	1000291e 	bne	r2,zero,101031f8 <__swsetup_r+0xfc>
10103154:	80800517 	ldw	r2,20(r16)
10103158:	80800215 	stw	r2,8(r16)
1010315c:	18001c26 	beq	r3,zero,101031d0 <__swsetup_r+0xd4>
10103160:	0005883a 	mov	r2,zero
10103164:	dfc00217 	ldw	ra,8(sp)
10103168:	dc400117 	ldw	r17,4(sp)
1010316c:	dc000017 	ldw	r16,0(sp)
10103170:	dec00304 	addi	sp,sp,12
10103174:	f800283a 	ret
10103178:	2080040c 	andi	r2,r4,16
1010317c:	10002e26 	beq	r2,zero,10103238 <__swsetup_r+0x13c>
10103180:	2080010c 	andi	r2,r4,4
10103184:	10001e1e 	bne	r2,zero,10103200 <__swsetup_r+0x104>
10103188:	80c00417 	ldw	r3,16(r16)
1010318c:	20800214 	ori	r2,r4,8
10103190:	8080030d 	sth	r2,12(r16)
10103194:	183feb1e 	bne	r3,zero,10103144 <__alt_data_end+0xfffe3144>
10103198:	1100a00c 	andi	r4,r2,640
1010319c:	01408004 	movi	r5,512
101031a0:	217fe826 	beq	r4,r5,10103144 <__alt_data_end+0xfffe3144>
101031a4:	800b883a 	mov	r5,r16
101031a8:	8809883a 	mov	r4,r17
101031ac:	0105c740 	call	10105c74 <__smakebuf_r>
101031b0:	8080030b 	ldhu	r2,12(r16)
101031b4:	80c00417 	ldw	r3,16(r16)
101031b8:	003fe206 	br	10103144 <__alt_data_end+0xfffe3144>
101031bc:	80800517 	ldw	r2,20(r16)
101031c0:	80000215 	stw	zero,8(r16)
101031c4:	0085c83a 	sub	r2,zero,r2
101031c8:	80800615 	stw	r2,24(r16)
101031cc:	183fe41e 	bne	r3,zero,10103160 <__alt_data_end+0xfffe3160>
101031d0:	80c0030b 	ldhu	r3,12(r16)
101031d4:	0005883a 	mov	r2,zero
101031d8:	1900200c 	andi	r4,r3,128
101031dc:	203fe126 	beq	r4,zero,10103164 <__alt_data_end+0xfffe3164>
101031e0:	18c01014 	ori	r3,r3,64
101031e4:	80c0030d 	sth	r3,12(r16)
101031e8:	00bfffc4 	movi	r2,-1
101031ec:	003fdd06 	br	10103164 <__alt_data_end+0xfffe3164>
101031f0:	01050d00 	call	101050d0 <__sinit>
101031f4:	003fcd06 	br	1010312c <__alt_data_end+0xfffe312c>
101031f8:	0005883a 	mov	r2,zero
101031fc:	003fd606 	br	10103158 <__alt_data_end+0xfffe3158>
10103200:	81400c17 	ldw	r5,48(r16)
10103204:	28000626 	beq	r5,zero,10103220 <__swsetup_r+0x124>
10103208:	80801004 	addi	r2,r16,64
1010320c:	28800326 	beq	r5,r2,1010321c <__swsetup_r+0x120>
10103210:	8809883a 	mov	r4,r17
10103214:	01052440 	call	10105244 <_free_r>
10103218:	8100030b 	ldhu	r4,12(r16)
1010321c:	80000c15 	stw	zero,48(r16)
10103220:	80c00417 	ldw	r3,16(r16)
10103224:	00bff6c4 	movi	r2,-37
10103228:	1108703a 	and	r4,r2,r4
1010322c:	80000115 	stw	zero,4(r16)
10103230:	80c00015 	stw	r3,0(r16)
10103234:	003fd506 	br	1010318c <__alt_data_end+0xfffe318c>
10103238:	00800244 	movi	r2,9
1010323c:	88800015 	stw	r2,0(r17)
10103240:	20801014 	ori	r2,r4,64
10103244:	8080030d 	sth	r2,12(r16)
10103248:	00bfffc4 	movi	r2,-1
1010324c:	003fc506 	br	10103164 <__alt_data_end+0xfffe3164>

10103250 <quorem>:
10103250:	defff704 	addi	sp,sp,-36
10103254:	dc800215 	stw	r18,8(sp)
10103258:	20800417 	ldw	r2,16(r4)
1010325c:	2c800417 	ldw	r18,16(r5)
10103260:	dfc00815 	stw	ra,32(sp)
10103264:	ddc00715 	stw	r23,28(sp)
10103268:	dd800615 	stw	r22,24(sp)
1010326c:	dd400515 	stw	r21,20(sp)
10103270:	dd000415 	stw	r20,16(sp)
10103274:	dcc00315 	stw	r19,12(sp)
10103278:	dc400115 	stw	r17,4(sp)
1010327c:	dc000015 	stw	r16,0(sp)
10103280:	14807116 	blt	r2,r18,10103448 <quorem+0x1f8>
10103284:	94bfffc4 	addi	r18,r18,-1
10103288:	94ad883a 	add	r22,r18,r18
1010328c:	b5ad883a 	add	r22,r22,r22
10103290:	2c400504 	addi	r17,r5,20
10103294:	8da9883a 	add	r20,r17,r22
10103298:	25400504 	addi	r21,r4,20
1010329c:	282f883a 	mov	r23,r5
101032a0:	adad883a 	add	r22,r21,r22
101032a4:	a1400017 	ldw	r5,0(r20)
101032a8:	2021883a 	mov	r16,r4
101032ac:	b1000017 	ldw	r4,0(r22)
101032b0:	29400044 	addi	r5,r5,1
101032b4:	010ae500 	call	1010ae50 <__udivsi3>
101032b8:	1027883a 	mov	r19,r2
101032bc:	10002c26 	beq	r2,zero,10103370 <quorem+0x120>
101032c0:	a813883a 	mov	r9,r21
101032c4:	880b883a 	mov	r5,r17
101032c8:	0009883a 	mov	r4,zero
101032cc:	000d883a 	mov	r6,zero
101032d0:	2a000017 	ldw	r8,0(r5)
101032d4:	49c00017 	ldw	r7,0(r9)
101032d8:	29400104 	addi	r5,r5,4
101032dc:	40bfffcc 	andi	r2,r8,65535
101032e0:	14c5383a 	mul	r2,r2,r19
101032e4:	4010d43a 	srli	r8,r8,16
101032e8:	38ffffcc 	andi	r3,r7,65535
101032ec:	1105883a 	add	r2,r2,r4
101032f0:	1008d43a 	srli	r4,r2,16
101032f4:	44d1383a 	mul	r8,r8,r19
101032f8:	198d883a 	add	r6,r3,r6
101032fc:	10ffffcc 	andi	r3,r2,65535
10103300:	30c7c83a 	sub	r3,r6,r3
10103304:	380ed43a 	srli	r7,r7,16
10103308:	4105883a 	add	r2,r8,r4
1010330c:	180dd43a 	srai	r6,r3,16
10103310:	113fffcc 	andi	r4,r2,65535
10103314:	390fc83a 	sub	r7,r7,r4
10103318:	398d883a 	add	r6,r7,r6
1010331c:	300e943a 	slli	r7,r6,16
10103320:	18ffffcc 	andi	r3,r3,65535
10103324:	1008d43a 	srli	r4,r2,16
10103328:	38ceb03a 	or	r7,r7,r3
1010332c:	49c00015 	stw	r7,0(r9)
10103330:	300dd43a 	srai	r6,r6,16
10103334:	4a400104 	addi	r9,r9,4
10103338:	a17fe52e 	bgeu	r20,r5,101032d0 <__alt_data_end+0xfffe32d0>
1010333c:	b0800017 	ldw	r2,0(r22)
10103340:	10000b1e 	bne	r2,zero,10103370 <quorem+0x120>
10103344:	b0bfff04 	addi	r2,r22,-4
10103348:	a880082e 	bgeu	r21,r2,1010336c <quorem+0x11c>
1010334c:	b0ffff17 	ldw	r3,-4(r22)
10103350:	18000326 	beq	r3,zero,10103360 <quorem+0x110>
10103354:	00000506 	br	1010336c <quorem+0x11c>
10103358:	10c00017 	ldw	r3,0(r2)
1010335c:	1800031e 	bne	r3,zero,1010336c <quorem+0x11c>
10103360:	10bfff04 	addi	r2,r2,-4
10103364:	94bfffc4 	addi	r18,r18,-1
10103368:	a8bffb36 	bltu	r21,r2,10103358 <__alt_data_end+0xfffe3358>
1010336c:	84800415 	stw	r18,16(r16)
10103370:	b80b883a 	mov	r5,r23
10103374:	8009883a 	mov	r4,r16
10103378:	01073b40 	call	101073b4 <__mcmp>
1010337c:	10002616 	blt	r2,zero,10103418 <quorem+0x1c8>
10103380:	9cc00044 	addi	r19,r19,1
10103384:	a805883a 	mov	r2,r21
10103388:	000b883a 	mov	r5,zero
1010338c:	11000017 	ldw	r4,0(r2)
10103390:	89800017 	ldw	r6,0(r17)
10103394:	10800104 	addi	r2,r2,4
10103398:	20ffffcc 	andi	r3,r4,65535
1010339c:	194b883a 	add	r5,r3,r5
101033a0:	30ffffcc 	andi	r3,r6,65535
101033a4:	28c7c83a 	sub	r3,r5,r3
101033a8:	300cd43a 	srli	r6,r6,16
101033ac:	2008d43a 	srli	r4,r4,16
101033b0:	180bd43a 	srai	r5,r3,16
101033b4:	18ffffcc 	andi	r3,r3,65535
101033b8:	2189c83a 	sub	r4,r4,r6
101033bc:	2149883a 	add	r4,r4,r5
101033c0:	200c943a 	slli	r6,r4,16
101033c4:	8c400104 	addi	r17,r17,4
101033c8:	200bd43a 	srai	r5,r4,16
101033cc:	30c6b03a 	or	r3,r6,r3
101033d0:	10ffff15 	stw	r3,-4(r2)
101033d4:	a47fed2e 	bgeu	r20,r17,1010338c <__alt_data_end+0xfffe338c>
101033d8:	9485883a 	add	r2,r18,r18
101033dc:	1085883a 	add	r2,r2,r2
101033e0:	a887883a 	add	r3,r21,r2
101033e4:	18800017 	ldw	r2,0(r3)
101033e8:	10000b1e 	bne	r2,zero,10103418 <quorem+0x1c8>
101033ec:	18bfff04 	addi	r2,r3,-4
101033f0:	a880082e 	bgeu	r21,r2,10103414 <quorem+0x1c4>
101033f4:	18ffff17 	ldw	r3,-4(r3)
101033f8:	18000326 	beq	r3,zero,10103408 <quorem+0x1b8>
101033fc:	00000506 	br	10103414 <quorem+0x1c4>
10103400:	10c00017 	ldw	r3,0(r2)
10103404:	1800031e 	bne	r3,zero,10103414 <quorem+0x1c4>
10103408:	10bfff04 	addi	r2,r2,-4
1010340c:	94bfffc4 	addi	r18,r18,-1
10103410:	a8bffb36 	bltu	r21,r2,10103400 <__alt_data_end+0xfffe3400>
10103414:	84800415 	stw	r18,16(r16)
10103418:	9805883a 	mov	r2,r19
1010341c:	dfc00817 	ldw	ra,32(sp)
10103420:	ddc00717 	ldw	r23,28(sp)
10103424:	dd800617 	ldw	r22,24(sp)
10103428:	dd400517 	ldw	r21,20(sp)
1010342c:	dd000417 	ldw	r20,16(sp)
10103430:	dcc00317 	ldw	r19,12(sp)
10103434:	dc800217 	ldw	r18,8(sp)
10103438:	dc400117 	ldw	r17,4(sp)
1010343c:	dc000017 	ldw	r16,0(sp)
10103440:	dec00904 	addi	sp,sp,36
10103444:	f800283a 	ret
10103448:	0005883a 	mov	r2,zero
1010344c:	003ff306 	br	1010341c <__alt_data_end+0xfffe341c>

10103450 <_dtoa_r>:
10103450:	20801017 	ldw	r2,64(r4)
10103454:	deffde04 	addi	sp,sp,-136
10103458:	df002015 	stw	fp,128(sp)
1010345c:	dcc01b15 	stw	r19,108(sp)
10103460:	dc801a15 	stw	r18,104(sp)
10103464:	dc401915 	stw	r17,100(sp)
10103468:	dc001815 	stw	r16,96(sp)
1010346c:	dfc02115 	stw	ra,132(sp)
10103470:	ddc01f15 	stw	r23,124(sp)
10103474:	dd801e15 	stw	r22,120(sp)
10103478:	dd401d15 	stw	r21,116(sp)
1010347c:	dd001c15 	stw	r20,112(sp)
10103480:	d9c00315 	stw	r7,12(sp)
10103484:	2039883a 	mov	fp,r4
10103488:	3023883a 	mov	r17,r6
1010348c:	2825883a 	mov	r18,r5
10103490:	dc002417 	ldw	r16,144(sp)
10103494:	3027883a 	mov	r19,r6
10103498:	10000826 	beq	r2,zero,101034bc <_dtoa_r+0x6c>
1010349c:	21801117 	ldw	r6,68(r4)
101034a0:	00c00044 	movi	r3,1
101034a4:	100b883a 	mov	r5,r2
101034a8:	1986983a 	sll	r3,r3,r6
101034ac:	11800115 	stw	r6,4(r2)
101034b0:	10c00215 	stw	r3,8(r2)
101034b4:	0106b940 	call	10106b94 <_Bfree>
101034b8:	e0001015 	stw	zero,64(fp)
101034bc:	88002e16 	blt	r17,zero,10103578 <_dtoa_r+0x128>
101034c0:	80000015 	stw	zero,0(r16)
101034c4:	889ffc2c 	andhi	r2,r17,32752
101034c8:	00dffc34 	movhi	r3,32752
101034cc:	10c01c26 	beq	r2,r3,10103540 <_dtoa_r+0xf0>
101034d0:	000d883a 	mov	r6,zero
101034d4:	000f883a 	mov	r7,zero
101034d8:	9009883a 	mov	r4,r18
101034dc:	980b883a 	mov	r5,r19
101034e0:	010c0a00 	call	1010c0a0 <__eqdf2>
101034e4:	10002b1e 	bne	r2,zero,10103594 <_dtoa_r+0x144>
101034e8:	d9c02317 	ldw	r7,140(sp)
101034ec:	00800044 	movi	r2,1
101034f0:	38800015 	stw	r2,0(r7)
101034f4:	d8802517 	ldw	r2,148(sp)
101034f8:	10019e26 	beq	r2,zero,10103b74 <_dtoa_r+0x724>
101034fc:	d8c02517 	ldw	r3,148(sp)
10103500:	00840474 	movhi	r2,4113
10103504:	10807344 	addi	r2,r2,461
10103508:	18800015 	stw	r2,0(r3)
1010350c:	10bfffc4 	addi	r2,r2,-1
10103510:	dfc02117 	ldw	ra,132(sp)
10103514:	df002017 	ldw	fp,128(sp)
10103518:	ddc01f17 	ldw	r23,124(sp)
1010351c:	dd801e17 	ldw	r22,120(sp)
10103520:	dd401d17 	ldw	r21,116(sp)
10103524:	dd001c17 	ldw	r20,112(sp)
10103528:	dcc01b17 	ldw	r19,108(sp)
1010352c:	dc801a17 	ldw	r18,104(sp)
10103530:	dc401917 	ldw	r17,100(sp)
10103534:	dc001817 	ldw	r16,96(sp)
10103538:	dec02204 	addi	sp,sp,136
1010353c:	f800283a 	ret
10103540:	d8c02317 	ldw	r3,140(sp)
10103544:	0089c3c4 	movi	r2,9999
10103548:	18800015 	stw	r2,0(r3)
1010354c:	90017726 	beq	r18,zero,10103b2c <_dtoa_r+0x6dc>
10103550:	00840474 	movhi	r2,4113
10103554:	10807f04 	addi	r2,r2,508
10103558:	d9002517 	ldw	r4,148(sp)
1010355c:	203fec26 	beq	r4,zero,10103510 <__alt_data_end+0xfffe3510>
10103560:	10c000c7 	ldb	r3,3(r2)
10103564:	1801781e 	bne	r3,zero,10103b48 <_dtoa_r+0x6f8>
10103568:	10c000c4 	addi	r3,r2,3
1010356c:	d9802517 	ldw	r6,148(sp)
10103570:	30c00015 	stw	r3,0(r6)
10103574:	003fe606 	br	10103510 <__alt_data_end+0xfffe3510>
10103578:	04e00034 	movhi	r19,32768
1010357c:	9cffffc4 	addi	r19,r19,-1
10103580:	00800044 	movi	r2,1
10103584:	8ce6703a 	and	r19,r17,r19
10103588:	80800015 	stw	r2,0(r16)
1010358c:	9823883a 	mov	r17,r19
10103590:	003fcc06 	br	101034c4 <__alt_data_end+0xfffe34c4>
10103594:	d8800204 	addi	r2,sp,8
10103598:	d8800015 	stw	r2,0(sp)
1010359c:	d9c00104 	addi	r7,sp,4
101035a0:	900b883a 	mov	r5,r18
101035a4:	980d883a 	mov	r6,r19
101035a8:	e009883a 	mov	r4,fp
101035ac:	8820d53a 	srli	r16,r17,20
101035b0:	01077800 	call	10107780 <__d2b>
101035b4:	d8800915 	stw	r2,36(sp)
101035b8:	8001651e 	bne	r16,zero,10103b50 <_dtoa_r+0x700>
101035bc:	dd800217 	ldw	r22,8(sp)
101035c0:	dc000117 	ldw	r16,4(sp)
101035c4:	00800804 	movi	r2,32
101035c8:	b421883a 	add	r16,r22,r16
101035cc:	80c10c84 	addi	r3,r16,1074
101035d0:	10c2d10e 	bge	r2,r3,10104118 <_dtoa_r+0xcc8>
101035d4:	00801004 	movi	r2,64
101035d8:	81010484 	addi	r4,r16,1042
101035dc:	10c7c83a 	sub	r3,r2,r3
101035e0:	9108d83a 	srl	r4,r18,r4
101035e4:	88e2983a 	sll	r17,r17,r3
101035e8:	2448b03a 	or	r4,r4,r17
101035ec:	010d4680 	call	1010d468 <__floatunsidf>
101035f0:	017f8434 	movhi	r5,65040
101035f4:	01800044 	movi	r6,1
101035f8:	1009883a 	mov	r4,r2
101035fc:	194b883a 	add	r5,r3,r5
10103600:	843fffc4 	addi	r16,r16,-1
10103604:	d9801115 	stw	r6,68(sp)
10103608:	000d883a 	mov	r6,zero
1010360c:	01cffe34 	movhi	r7,16376
10103610:	010ca100 	call	1010ca10 <__subdf3>
10103614:	0198dbf4 	movhi	r6,25455
10103618:	01cff4f4 	movhi	r7,16339
1010361c:	3190d844 	addi	r6,r6,17249
10103620:	39e1e9c4 	addi	r7,r7,-30809
10103624:	1009883a 	mov	r4,r2
10103628:	180b883a 	mov	r5,r3
1010362c:	010c2f80 	call	1010c2f8 <__muldf3>
10103630:	01a2d874 	movhi	r6,35681
10103634:	01cff1f4 	movhi	r7,16327
10103638:	31b22cc4 	addi	r6,r6,-14157
1010363c:	39e28a04 	addi	r7,r7,-30168
10103640:	180b883a 	mov	r5,r3
10103644:	1009883a 	mov	r4,r2
10103648:	010af0c0 	call	1010af0c <__adddf3>
1010364c:	8009883a 	mov	r4,r16
10103650:	1029883a 	mov	r20,r2
10103654:	1823883a 	mov	r17,r3
10103658:	010d38c0 	call	1010d38c <__floatsidf>
1010365c:	019427f4 	movhi	r6,20639
10103660:	01cff4f4 	movhi	r7,16339
10103664:	319e7ec4 	addi	r6,r6,31227
10103668:	39d104c4 	addi	r7,r7,17427
1010366c:	1009883a 	mov	r4,r2
10103670:	180b883a 	mov	r5,r3
10103674:	010c2f80 	call	1010c2f8 <__muldf3>
10103678:	100d883a 	mov	r6,r2
1010367c:	180f883a 	mov	r7,r3
10103680:	a009883a 	mov	r4,r20
10103684:	880b883a 	mov	r5,r17
10103688:	010af0c0 	call	1010af0c <__adddf3>
1010368c:	1009883a 	mov	r4,r2
10103690:	180b883a 	mov	r5,r3
10103694:	1029883a 	mov	r20,r2
10103698:	1823883a 	mov	r17,r3
1010369c:	010d30c0 	call	1010d30c <__fixdfsi>
101036a0:	000d883a 	mov	r6,zero
101036a4:	000f883a 	mov	r7,zero
101036a8:	a009883a 	mov	r4,r20
101036ac:	880b883a 	mov	r5,r17
101036b0:	d8800515 	stw	r2,20(sp)
101036b4:	010c2040 	call	1010c204 <__ledf2>
101036b8:	10028716 	blt	r2,zero,101040d8 <_dtoa_r+0xc88>
101036bc:	d8c00517 	ldw	r3,20(sp)
101036c0:	00800584 	movi	r2,22
101036c4:	10c27536 	bltu	r2,r3,1010409c <_dtoa_r+0xc4c>
101036c8:	180490fa 	slli	r2,r3,3
101036cc:	00c40474 	movhi	r3,4113
101036d0:	18c09b04 	addi	r3,r3,620
101036d4:	1885883a 	add	r2,r3,r2
101036d8:	11000017 	ldw	r4,0(r2)
101036dc:	11400117 	ldw	r5,4(r2)
101036e0:	900d883a 	mov	r6,r18
101036e4:	980f883a 	mov	r7,r19
101036e8:	010c1280 	call	1010c128 <__gedf2>
101036ec:	00828d0e 	bge	zero,r2,10104124 <_dtoa_r+0xcd4>
101036f0:	d9000517 	ldw	r4,20(sp)
101036f4:	d8000e15 	stw	zero,56(sp)
101036f8:	213fffc4 	addi	r4,r4,-1
101036fc:	d9000515 	stw	r4,20(sp)
10103700:	b42dc83a 	sub	r22,r22,r16
10103704:	b5bfffc4 	addi	r22,r22,-1
10103708:	b0026f16 	blt	r22,zero,101040c8 <_dtoa_r+0xc78>
1010370c:	d8000815 	stw	zero,32(sp)
10103710:	d9c00517 	ldw	r7,20(sp)
10103714:	38026416 	blt	r7,zero,101040a8 <_dtoa_r+0xc58>
10103718:	b1ed883a 	add	r22,r22,r7
1010371c:	d9c00d15 	stw	r7,52(sp)
10103720:	d8000a15 	stw	zero,40(sp)
10103724:	d9800317 	ldw	r6,12(sp)
10103728:	00800244 	movi	r2,9
1010372c:	11811436 	bltu	r2,r6,10103b80 <_dtoa_r+0x730>
10103730:	00800144 	movi	r2,5
10103734:	1184e10e 	bge	r2,r6,10104abc <_dtoa_r+0x166c>
10103738:	31bfff04 	addi	r6,r6,-4
1010373c:	d9800315 	stw	r6,12(sp)
10103740:	0023883a 	mov	r17,zero
10103744:	d9800317 	ldw	r6,12(sp)
10103748:	008000c4 	movi	r2,3
1010374c:	30836726 	beq	r6,r2,101044ec <_dtoa_r+0x109c>
10103750:	1183410e 	bge	r2,r6,10104458 <_dtoa_r+0x1008>
10103754:	d9c00317 	ldw	r7,12(sp)
10103758:	00800104 	movi	r2,4
1010375c:	38827c26 	beq	r7,r2,10104150 <_dtoa_r+0xd00>
10103760:	00800144 	movi	r2,5
10103764:	3884c41e 	bne	r7,r2,10104a78 <_dtoa_r+0x1628>
10103768:	00800044 	movi	r2,1
1010376c:	d8800b15 	stw	r2,44(sp)
10103770:	d8c00517 	ldw	r3,20(sp)
10103774:	d9002217 	ldw	r4,136(sp)
10103778:	1907883a 	add	r3,r3,r4
1010377c:	19800044 	addi	r6,r3,1
10103780:	d8c00c15 	stw	r3,48(sp)
10103784:	d9800615 	stw	r6,24(sp)
10103788:	0183a40e 	bge	zero,r6,1010461c <_dtoa_r+0x11cc>
1010378c:	d9800617 	ldw	r6,24(sp)
10103790:	3021883a 	mov	r16,r6
10103794:	e0001115 	stw	zero,68(fp)
10103798:	008005c4 	movi	r2,23
1010379c:	1184c92e 	bgeu	r2,r6,10104ac4 <_dtoa_r+0x1674>
101037a0:	00c00044 	movi	r3,1
101037a4:	00800104 	movi	r2,4
101037a8:	1085883a 	add	r2,r2,r2
101037ac:	11000504 	addi	r4,r2,20
101037b0:	180b883a 	mov	r5,r3
101037b4:	18c00044 	addi	r3,r3,1
101037b8:	313ffb2e 	bgeu	r6,r4,101037a8 <__alt_data_end+0xfffe37a8>
101037bc:	e1401115 	stw	r5,68(fp)
101037c0:	e009883a 	mov	r4,fp
101037c4:	0106aec0 	call	10106aec <_Balloc>
101037c8:	d8800715 	stw	r2,28(sp)
101037cc:	e0801015 	stw	r2,64(fp)
101037d0:	00800384 	movi	r2,14
101037d4:	1400f736 	bltu	r2,r16,10103bb4 <_dtoa_r+0x764>
101037d8:	8800f626 	beq	r17,zero,10103bb4 <_dtoa_r+0x764>
101037dc:	d9c00517 	ldw	r7,20(sp)
101037e0:	01c39a0e 	bge	zero,r7,1010464c <_dtoa_r+0x11fc>
101037e4:	388003cc 	andi	r2,r7,15
101037e8:	100490fa 	slli	r2,r2,3
101037ec:	382bd13a 	srai	r21,r7,4
101037f0:	00c40474 	movhi	r3,4113
101037f4:	18c09b04 	addi	r3,r3,620
101037f8:	1885883a 	add	r2,r3,r2
101037fc:	a8c0040c 	andi	r3,r21,16
10103800:	12400017 	ldw	r9,0(r2)
10103804:	12000117 	ldw	r8,4(r2)
10103808:	18037926 	beq	r3,zero,101045f0 <_dtoa_r+0x11a0>
1010380c:	00840474 	movhi	r2,4113
10103810:	10809104 	addi	r2,r2,580
10103814:	11800817 	ldw	r6,32(r2)
10103818:	11c00917 	ldw	r7,36(r2)
1010381c:	9009883a 	mov	r4,r18
10103820:	980b883a 	mov	r5,r19
10103824:	da001715 	stw	r8,92(sp)
10103828:	da401615 	stw	r9,88(sp)
1010382c:	010b7b80 	call	1010b7b8 <__divdf3>
10103830:	da001717 	ldw	r8,92(sp)
10103834:	da401617 	ldw	r9,88(sp)
10103838:	ad4003cc 	andi	r21,r21,15
1010383c:	040000c4 	movi	r16,3
10103840:	1023883a 	mov	r17,r2
10103844:	1829883a 	mov	r20,r3
10103848:	a8001126 	beq	r21,zero,10103890 <_dtoa_r+0x440>
1010384c:	05c40474 	movhi	r23,4113
10103850:	bdc09104 	addi	r23,r23,580
10103854:	4805883a 	mov	r2,r9
10103858:	4007883a 	mov	r3,r8
1010385c:	a980004c 	andi	r6,r21,1
10103860:	1009883a 	mov	r4,r2
10103864:	a82bd07a 	srai	r21,r21,1
10103868:	180b883a 	mov	r5,r3
1010386c:	30000426 	beq	r6,zero,10103880 <_dtoa_r+0x430>
10103870:	b9800017 	ldw	r6,0(r23)
10103874:	b9c00117 	ldw	r7,4(r23)
10103878:	84000044 	addi	r16,r16,1
1010387c:	010c2f80 	call	1010c2f8 <__muldf3>
10103880:	bdc00204 	addi	r23,r23,8
10103884:	a83ff51e 	bne	r21,zero,1010385c <__alt_data_end+0xfffe385c>
10103888:	1013883a 	mov	r9,r2
1010388c:	1811883a 	mov	r8,r3
10103890:	480d883a 	mov	r6,r9
10103894:	400f883a 	mov	r7,r8
10103898:	8809883a 	mov	r4,r17
1010389c:	a00b883a 	mov	r5,r20
101038a0:	010b7b80 	call	1010b7b8 <__divdf3>
101038a4:	d8800f15 	stw	r2,60(sp)
101038a8:	d8c01015 	stw	r3,64(sp)
101038ac:	d8c00e17 	ldw	r3,56(sp)
101038b0:	18000626 	beq	r3,zero,101038cc <_dtoa_r+0x47c>
101038b4:	d9000f17 	ldw	r4,60(sp)
101038b8:	d9401017 	ldw	r5,64(sp)
101038bc:	000d883a 	mov	r6,zero
101038c0:	01cffc34 	movhi	r7,16368
101038c4:	010c2040 	call	1010c204 <__ledf2>
101038c8:	10040b16 	blt	r2,zero,101048f8 <_dtoa_r+0x14a8>
101038cc:	8009883a 	mov	r4,r16
101038d0:	010d38c0 	call	1010d38c <__floatsidf>
101038d4:	d9800f17 	ldw	r6,60(sp)
101038d8:	d9c01017 	ldw	r7,64(sp)
101038dc:	1009883a 	mov	r4,r2
101038e0:	180b883a 	mov	r5,r3
101038e4:	010c2f80 	call	1010c2f8 <__muldf3>
101038e8:	000d883a 	mov	r6,zero
101038ec:	01d00734 	movhi	r7,16412
101038f0:	1009883a 	mov	r4,r2
101038f4:	180b883a 	mov	r5,r3
101038f8:	010af0c0 	call	1010af0c <__adddf3>
101038fc:	1021883a 	mov	r16,r2
10103900:	d8800617 	ldw	r2,24(sp)
10103904:	047f3034 	movhi	r17,64704
10103908:	1c63883a 	add	r17,r3,r17
1010390c:	10031826 	beq	r2,zero,10104570 <_dtoa_r+0x1120>
10103910:	d8c00517 	ldw	r3,20(sp)
10103914:	db000617 	ldw	r12,24(sp)
10103918:	d8c01315 	stw	r3,76(sp)
1010391c:	d9000b17 	ldw	r4,44(sp)
10103920:	20038f26 	beq	r4,zero,10104760 <_dtoa_r+0x1310>
10103924:	60bfffc4 	addi	r2,r12,-1
10103928:	100490fa 	slli	r2,r2,3
1010392c:	00c40474 	movhi	r3,4113
10103930:	18c09b04 	addi	r3,r3,620
10103934:	1885883a 	add	r2,r3,r2
10103938:	11800017 	ldw	r6,0(r2)
1010393c:	11c00117 	ldw	r7,4(r2)
10103940:	d8800717 	ldw	r2,28(sp)
10103944:	0009883a 	mov	r4,zero
10103948:	014ff834 	movhi	r5,16352
1010394c:	db001615 	stw	r12,88(sp)
10103950:	15c00044 	addi	r23,r2,1
10103954:	010b7b80 	call	1010b7b8 <__divdf3>
10103958:	800d883a 	mov	r6,r16
1010395c:	880f883a 	mov	r7,r17
10103960:	1009883a 	mov	r4,r2
10103964:	180b883a 	mov	r5,r3
10103968:	010ca100 	call	1010ca10 <__subdf3>
1010396c:	d9401017 	ldw	r5,64(sp)
10103970:	d9000f17 	ldw	r4,60(sp)
10103974:	102b883a 	mov	r21,r2
10103978:	d8c01215 	stw	r3,72(sp)
1010397c:	010d30c0 	call	1010d30c <__fixdfsi>
10103980:	1009883a 	mov	r4,r2
10103984:	1029883a 	mov	r20,r2
10103988:	010d38c0 	call	1010d38c <__floatsidf>
1010398c:	d9000f17 	ldw	r4,60(sp)
10103990:	d9401017 	ldw	r5,64(sp)
10103994:	100d883a 	mov	r6,r2
10103998:	180f883a 	mov	r7,r3
1010399c:	010ca100 	call	1010ca10 <__subdf3>
101039a0:	1823883a 	mov	r17,r3
101039a4:	d8c00717 	ldw	r3,28(sp)
101039a8:	d9401217 	ldw	r5,72(sp)
101039ac:	a2000c04 	addi	r8,r20,48
101039b0:	1021883a 	mov	r16,r2
101039b4:	1a000005 	stb	r8,0(r3)
101039b8:	800d883a 	mov	r6,r16
101039bc:	880f883a 	mov	r7,r17
101039c0:	a809883a 	mov	r4,r21
101039c4:	4029883a 	mov	r20,r8
101039c8:	010c1280 	call	1010c128 <__gedf2>
101039cc:	00841d16 	blt	zero,r2,10104a44 <_dtoa_r+0x15f4>
101039d0:	800d883a 	mov	r6,r16
101039d4:	880f883a 	mov	r7,r17
101039d8:	0009883a 	mov	r4,zero
101039dc:	014ffc34 	movhi	r5,16368
101039e0:	010ca100 	call	1010ca10 <__subdf3>
101039e4:	d9401217 	ldw	r5,72(sp)
101039e8:	100d883a 	mov	r6,r2
101039ec:	180f883a 	mov	r7,r3
101039f0:	a809883a 	mov	r4,r21
101039f4:	010c1280 	call	1010c128 <__gedf2>
101039f8:	db001617 	ldw	r12,88(sp)
101039fc:	00840e16 	blt	zero,r2,10104a38 <_dtoa_r+0x15e8>
10103a00:	00800044 	movi	r2,1
10103a04:	13006b0e 	bge	r2,r12,10103bb4 <_dtoa_r+0x764>
10103a08:	d9000717 	ldw	r4,28(sp)
10103a0c:	dd800f15 	stw	r22,60(sp)
10103a10:	dcc01015 	stw	r19,64(sp)
10103a14:	2319883a 	add	r12,r4,r12
10103a18:	dcc01217 	ldw	r19,72(sp)
10103a1c:	602d883a 	mov	r22,r12
10103a20:	dc801215 	stw	r18,72(sp)
10103a24:	b825883a 	mov	r18,r23
10103a28:	00000906 	br	10103a50 <_dtoa_r+0x600>
10103a2c:	010ca100 	call	1010ca10 <__subdf3>
10103a30:	a80d883a 	mov	r6,r21
10103a34:	980f883a 	mov	r7,r19
10103a38:	1009883a 	mov	r4,r2
10103a3c:	180b883a 	mov	r5,r3
10103a40:	010c2040 	call	1010c204 <__ledf2>
10103a44:	1003e816 	blt	r2,zero,101049e8 <_dtoa_r+0x1598>
10103a48:	b825883a 	mov	r18,r23
10103a4c:	bd83e926 	beq	r23,r22,101049f4 <_dtoa_r+0x15a4>
10103a50:	a809883a 	mov	r4,r21
10103a54:	980b883a 	mov	r5,r19
10103a58:	000d883a 	mov	r6,zero
10103a5c:	01d00934 	movhi	r7,16420
10103a60:	010c2f80 	call	1010c2f8 <__muldf3>
10103a64:	000d883a 	mov	r6,zero
10103a68:	01d00934 	movhi	r7,16420
10103a6c:	8009883a 	mov	r4,r16
10103a70:	880b883a 	mov	r5,r17
10103a74:	102b883a 	mov	r21,r2
10103a78:	1827883a 	mov	r19,r3
10103a7c:	010c2f80 	call	1010c2f8 <__muldf3>
10103a80:	180b883a 	mov	r5,r3
10103a84:	1009883a 	mov	r4,r2
10103a88:	1821883a 	mov	r16,r3
10103a8c:	1023883a 	mov	r17,r2
10103a90:	010d30c0 	call	1010d30c <__fixdfsi>
10103a94:	1009883a 	mov	r4,r2
10103a98:	1029883a 	mov	r20,r2
10103a9c:	010d38c0 	call	1010d38c <__floatsidf>
10103aa0:	8809883a 	mov	r4,r17
10103aa4:	800b883a 	mov	r5,r16
10103aa8:	100d883a 	mov	r6,r2
10103aac:	180f883a 	mov	r7,r3
10103ab0:	010ca100 	call	1010ca10 <__subdf3>
10103ab4:	a5000c04 	addi	r20,r20,48
10103ab8:	a80d883a 	mov	r6,r21
10103abc:	980f883a 	mov	r7,r19
10103ac0:	1009883a 	mov	r4,r2
10103ac4:	180b883a 	mov	r5,r3
10103ac8:	95000005 	stb	r20,0(r18)
10103acc:	1021883a 	mov	r16,r2
10103ad0:	1823883a 	mov	r17,r3
10103ad4:	010c2040 	call	1010c204 <__ledf2>
10103ad8:	bdc00044 	addi	r23,r23,1
10103adc:	800d883a 	mov	r6,r16
10103ae0:	880f883a 	mov	r7,r17
10103ae4:	0009883a 	mov	r4,zero
10103ae8:	014ffc34 	movhi	r5,16368
10103aec:	103fcf0e 	bge	r2,zero,10103a2c <__alt_data_end+0xfffe3a2c>
10103af0:	d8c01317 	ldw	r3,76(sp)
10103af4:	d8c00515 	stw	r3,20(sp)
10103af8:	d9400917 	ldw	r5,36(sp)
10103afc:	e009883a 	mov	r4,fp
10103b00:	0106b940 	call	10106b94 <_Bfree>
10103b04:	d9000517 	ldw	r4,20(sp)
10103b08:	d9802317 	ldw	r6,140(sp)
10103b0c:	d9c02517 	ldw	r7,148(sp)
10103b10:	b8000005 	stb	zero,0(r23)
10103b14:	20800044 	addi	r2,r4,1
10103b18:	30800015 	stw	r2,0(r6)
10103b1c:	3802aa26 	beq	r7,zero,101045c8 <_dtoa_r+0x1178>
10103b20:	3dc00015 	stw	r23,0(r7)
10103b24:	d8800717 	ldw	r2,28(sp)
10103b28:	003e7906 	br	10103510 <__alt_data_end+0xfffe3510>
10103b2c:	00800434 	movhi	r2,16
10103b30:	10bfffc4 	addi	r2,r2,-1
10103b34:	88a2703a 	and	r17,r17,r2
10103b38:	883e851e 	bne	r17,zero,10103550 <__alt_data_end+0xfffe3550>
10103b3c:	00840474 	movhi	r2,4113
10103b40:	10807c04 	addi	r2,r2,496
10103b44:	003e8406 	br	10103558 <__alt_data_end+0xfffe3558>
10103b48:	10c00204 	addi	r3,r2,8
10103b4c:	003e8706 	br	1010356c <__alt_data_end+0xfffe356c>
10103b50:	01400434 	movhi	r5,16
10103b54:	297fffc4 	addi	r5,r5,-1
10103b58:	994a703a 	and	r5,r19,r5
10103b5c:	9009883a 	mov	r4,r18
10103b60:	843f0044 	addi	r16,r16,-1023
10103b64:	294ffc34 	orhi	r5,r5,16368
10103b68:	dd800217 	ldw	r22,8(sp)
10103b6c:	d8001115 	stw	zero,68(sp)
10103b70:	003ea506 	br	10103608 <__alt_data_end+0xfffe3608>
10103b74:	00840474 	movhi	r2,4113
10103b78:	10807304 	addi	r2,r2,460
10103b7c:	003e6406 	br	10103510 <__alt_data_end+0xfffe3510>
10103b80:	e0001115 	stw	zero,68(fp)
10103b84:	000b883a 	mov	r5,zero
10103b88:	e009883a 	mov	r4,fp
10103b8c:	0106aec0 	call	10106aec <_Balloc>
10103b90:	01bfffc4 	movi	r6,-1
10103b94:	01c00044 	movi	r7,1
10103b98:	d8800715 	stw	r2,28(sp)
10103b9c:	d9800c15 	stw	r6,48(sp)
10103ba0:	e0801015 	stw	r2,64(fp)
10103ba4:	d8000315 	stw	zero,12(sp)
10103ba8:	d9c00b15 	stw	r7,44(sp)
10103bac:	d9800615 	stw	r6,24(sp)
10103bb0:	d8002215 	stw	zero,136(sp)
10103bb4:	d8800117 	ldw	r2,4(sp)
10103bb8:	10008916 	blt	r2,zero,10103de0 <_dtoa_r+0x990>
10103bbc:	d9000517 	ldw	r4,20(sp)
10103bc0:	00c00384 	movi	r3,14
10103bc4:	19008616 	blt	r3,r4,10103de0 <_dtoa_r+0x990>
10103bc8:	200490fa 	slli	r2,r4,3
10103bcc:	00c40474 	movhi	r3,4113
10103bd0:	d9802217 	ldw	r6,136(sp)
10103bd4:	18c09b04 	addi	r3,r3,620
10103bd8:	1885883a 	add	r2,r3,r2
10103bdc:	14000017 	ldw	r16,0(r2)
10103be0:	14400117 	ldw	r17,4(r2)
10103be4:	30016316 	blt	r6,zero,10104174 <_dtoa_r+0xd24>
10103be8:	800d883a 	mov	r6,r16
10103bec:	880f883a 	mov	r7,r17
10103bf0:	9009883a 	mov	r4,r18
10103bf4:	980b883a 	mov	r5,r19
10103bf8:	010b7b80 	call	1010b7b8 <__divdf3>
10103bfc:	180b883a 	mov	r5,r3
10103c00:	1009883a 	mov	r4,r2
10103c04:	010d30c0 	call	1010d30c <__fixdfsi>
10103c08:	1009883a 	mov	r4,r2
10103c0c:	102b883a 	mov	r21,r2
10103c10:	010d38c0 	call	1010d38c <__floatsidf>
10103c14:	800d883a 	mov	r6,r16
10103c18:	880f883a 	mov	r7,r17
10103c1c:	1009883a 	mov	r4,r2
10103c20:	180b883a 	mov	r5,r3
10103c24:	010c2f80 	call	1010c2f8 <__muldf3>
10103c28:	100d883a 	mov	r6,r2
10103c2c:	180f883a 	mov	r7,r3
10103c30:	9009883a 	mov	r4,r18
10103c34:	980b883a 	mov	r5,r19
10103c38:	010ca100 	call	1010ca10 <__subdf3>
10103c3c:	d9c00717 	ldw	r7,28(sp)
10103c40:	1009883a 	mov	r4,r2
10103c44:	a8800c04 	addi	r2,r21,48
10103c48:	38800005 	stb	r2,0(r7)
10103c4c:	3dc00044 	addi	r23,r7,1
10103c50:	d9c00617 	ldw	r7,24(sp)
10103c54:	01800044 	movi	r6,1
10103c58:	180b883a 	mov	r5,r3
10103c5c:	2005883a 	mov	r2,r4
10103c60:	39803826 	beq	r7,r6,10103d44 <_dtoa_r+0x8f4>
10103c64:	000d883a 	mov	r6,zero
10103c68:	01d00934 	movhi	r7,16420
10103c6c:	010c2f80 	call	1010c2f8 <__muldf3>
10103c70:	000d883a 	mov	r6,zero
10103c74:	000f883a 	mov	r7,zero
10103c78:	1009883a 	mov	r4,r2
10103c7c:	180b883a 	mov	r5,r3
10103c80:	1025883a 	mov	r18,r2
10103c84:	1827883a 	mov	r19,r3
10103c88:	010c0a00 	call	1010c0a0 <__eqdf2>
10103c8c:	103f9a26 	beq	r2,zero,10103af8 <__alt_data_end+0xfffe3af8>
10103c90:	d9c00617 	ldw	r7,24(sp)
10103c94:	d8c00717 	ldw	r3,28(sp)
10103c98:	b829883a 	mov	r20,r23
10103c9c:	38bfffc4 	addi	r2,r7,-1
10103ca0:	18ad883a 	add	r22,r3,r2
10103ca4:	00000a06 	br	10103cd0 <_dtoa_r+0x880>
10103ca8:	010c2f80 	call	1010c2f8 <__muldf3>
10103cac:	000d883a 	mov	r6,zero
10103cb0:	000f883a 	mov	r7,zero
10103cb4:	1009883a 	mov	r4,r2
10103cb8:	180b883a 	mov	r5,r3
10103cbc:	1025883a 	mov	r18,r2
10103cc0:	1827883a 	mov	r19,r3
10103cc4:	b829883a 	mov	r20,r23
10103cc8:	010c0a00 	call	1010c0a0 <__eqdf2>
10103ccc:	103f8a26 	beq	r2,zero,10103af8 <__alt_data_end+0xfffe3af8>
10103cd0:	800d883a 	mov	r6,r16
10103cd4:	880f883a 	mov	r7,r17
10103cd8:	9009883a 	mov	r4,r18
10103cdc:	980b883a 	mov	r5,r19
10103ce0:	010b7b80 	call	1010b7b8 <__divdf3>
10103ce4:	180b883a 	mov	r5,r3
10103ce8:	1009883a 	mov	r4,r2
10103cec:	010d30c0 	call	1010d30c <__fixdfsi>
10103cf0:	1009883a 	mov	r4,r2
10103cf4:	102b883a 	mov	r21,r2
10103cf8:	010d38c0 	call	1010d38c <__floatsidf>
10103cfc:	800d883a 	mov	r6,r16
10103d00:	880f883a 	mov	r7,r17
10103d04:	1009883a 	mov	r4,r2
10103d08:	180b883a 	mov	r5,r3
10103d0c:	010c2f80 	call	1010c2f8 <__muldf3>
10103d10:	100d883a 	mov	r6,r2
10103d14:	180f883a 	mov	r7,r3
10103d18:	9009883a 	mov	r4,r18
10103d1c:	980b883a 	mov	r5,r19
10103d20:	010ca100 	call	1010ca10 <__subdf3>
10103d24:	aa000c04 	addi	r8,r21,48
10103d28:	a2000005 	stb	r8,0(r20)
10103d2c:	000d883a 	mov	r6,zero
10103d30:	01d00934 	movhi	r7,16420
10103d34:	1009883a 	mov	r4,r2
10103d38:	180b883a 	mov	r5,r3
10103d3c:	a5c00044 	addi	r23,r20,1
10103d40:	b53fd91e 	bne	r22,r20,10103ca8 <__alt_data_end+0xfffe3ca8>
10103d44:	100d883a 	mov	r6,r2
10103d48:	180f883a 	mov	r7,r3
10103d4c:	1009883a 	mov	r4,r2
10103d50:	180b883a 	mov	r5,r3
10103d54:	010af0c0 	call	1010af0c <__adddf3>
10103d58:	100d883a 	mov	r6,r2
10103d5c:	180f883a 	mov	r7,r3
10103d60:	8009883a 	mov	r4,r16
10103d64:	880b883a 	mov	r5,r17
10103d68:	1027883a 	mov	r19,r2
10103d6c:	1825883a 	mov	r18,r3
10103d70:	010c2040 	call	1010c204 <__ledf2>
10103d74:	10000816 	blt	r2,zero,10103d98 <_dtoa_r+0x948>
10103d78:	980d883a 	mov	r6,r19
10103d7c:	900f883a 	mov	r7,r18
10103d80:	8009883a 	mov	r4,r16
10103d84:	880b883a 	mov	r5,r17
10103d88:	010c0a00 	call	1010c0a0 <__eqdf2>
10103d8c:	103f5a1e 	bne	r2,zero,10103af8 <__alt_data_end+0xfffe3af8>
10103d90:	ad40004c 	andi	r21,r21,1
10103d94:	a83f5826 	beq	r21,zero,10103af8 <__alt_data_end+0xfffe3af8>
10103d98:	bd3fffc3 	ldbu	r20,-1(r23)
10103d9c:	b8bfffc4 	addi	r2,r23,-1
10103da0:	1007883a 	mov	r3,r2
10103da4:	01400e44 	movi	r5,57
10103da8:	d9800717 	ldw	r6,28(sp)
10103dac:	00000506 	br	10103dc4 <_dtoa_r+0x974>
10103db0:	18ffffc4 	addi	r3,r3,-1
10103db4:	11824726 	beq	r2,r6,101046d4 <_dtoa_r+0x1284>
10103db8:	1d000003 	ldbu	r20,0(r3)
10103dbc:	102f883a 	mov	r23,r2
10103dc0:	10bfffc4 	addi	r2,r2,-1
10103dc4:	a1003fcc 	andi	r4,r20,255
10103dc8:	2100201c 	xori	r4,r4,128
10103dcc:	213fe004 	addi	r4,r4,-128
10103dd0:	217ff726 	beq	r4,r5,10103db0 <__alt_data_end+0xfffe3db0>
10103dd4:	a2000044 	addi	r8,r20,1
10103dd8:	12000005 	stb	r8,0(r2)
10103ddc:	003f4606 	br	10103af8 <__alt_data_end+0xfffe3af8>
10103de0:	d9000b17 	ldw	r4,44(sp)
10103de4:	2000c826 	beq	r4,zero,10104108 <_dtoa_r+0xcb8>
10103de8:	d9800317 	ldw	r6,12(sp)
10103dec:	00c00044 	movi	r3,1
10103df0:	1980f90e 	bge	r3,r6,101041d8 <_dtoa_r+0xd88>
10103df4:	d8800617 	ldw	r2,24(sp)
10103df8:	d8c00a17 	ldw	r3,40(sp)
10103dfc:	157fffc4 	addi	r21,r2,-1
10103e00:	1d41f316 	blt	r3,r21,101045d0 <_dtoa_r+0x1180>
10103e04:	1d6bc83a 	sub	r21,r3,r21
10103e08:	d9c00617 	ldw	r7,24(sp)
10103e0c:	3802aa16 	blt	r7,zero,101048b8 <_dtoa_r+0x1468>
10103e10:	dd000817 	ldw	r20,32(sp)
10103e14:	d8800617 	ldw	r2,24(sp)
10103e18:	d8c00817 	ldw	r3,32(sp)
10103e1c:	01400044 	movi	r5,1
10103e20:	e009883a 	mov	r4,fp
10103e24:	1887883a 	add	r3,r3,r2
10103e28:	d8c00815 	stw	r3,32(sp)
10103e2c:	b0ad883a 	add	r22,r22,r2
10103e30:	0106ef80 	call	10106ef8 <__i2b>
10103e34:	1023883a 	mov	r17,r2
10103e38:	a0000826 	beq	r20,zero,10103e5c <_dtoa_r+0xa0c>
10103e3c:	0580070e 	bge	zero,r22,10103e5c <_dtoa_r+0xa0c>
10103e40:	a005883a 	mov	r2,r20
10103e44:	b500b916 	blt	r22,r20,1010412c <_dtoa_r+0xcdc>
10103e48:	d9000817 	ldw	r4,32(sp)
10103e4c:	a0a9c83a 	sub	r20,r20,r2
10103e50:	b0adc83a 	sub	r22,r22,r2
10103e54:	2089c83a 	sub	r4,r4,r2
10103e58:	d9000815 	stw	r4,32(sp)
10103e5c:	d9800a17 	ldw	r6,40(sp)
10103e60:	0181810e 	bge	zero,r6,10104468 <_dtoa_r+0x1018>
10103e64:	d9c00b17 	ldw	r7,44(sp)
10103e68:	3800b326 	beq	r7,zero,10104138 <_dtoa_r+0xce8>
10103e6c:	a800b226 	beq	r21,zero,10104138 <_dtoa_r+0xce8>
10103e70:	880b883a 	mov	r5,r17
10103e74:	a80d883a 	mov	r6,r21
10103e78:	e009883a 	mov	r4,fp
10103e7c:	010712c0 	call	1010712c <__pow5mult>
10103e80:	d9800917 	ldw	r6,36(sp)
10103e84:	100b883a 	mov	r5,r2
10103e88:	e009883a 	mov	r4,fp
10103e8c:	1023883a 	mov	r17,r2
10103e90:	0106f340 	call	10106f34 <__multiply>
10103e94:	1021883a 	mov	r16,r2
10103e98:	d8800a17 	ldw	r2,40(sp)
10103e9c:	d9400917 	ldw	r5,36(sp)
10103ea0:	e009883a 	mov	r4,fp
10103ea4:	1545c83a 	sub	r2,r2,r21
10103ea8:	d8800a15 	stw	r2,40(sp)
10103eac:	0106b940 	call	10106b94 <_Bfree>
10103eb0:	d8c00a17 	ldw	r3,40(sp)
10103eb4:	18009f1e 	bne	r3,zero,10104134 <_dtoa_r+0xce4>
10103eb8:	05c00044 	movi	r23,1
10103ebc:	e009883a 	mov	r4,fp
10103ec0:	b80b883a 	mov	r5,r23
10103ec4:	0106ef80 	call	10106ef8 <__i2b>
10103ec8:	d9000d17 	ldw	r4,52(sp)
10103ecc:	102b883a 	mov	r21,r2
10103ed0:	2000ce26 	beq	r4,zero,1010420c <_dtoa_r+0xdbc>
10103ed4:	200d883a 	mov	r6,r4
10103ed8:	100b883a 	mov	r5,r2
10103edc:	e009883a 	mov	r4,fp
10103ee0:	010712c0 	call	1010712c <__pow5mult>
10103ee4:	d9800317 	ldw	r6,12(sp)
10103ee8:	102b883a 	mov	r21,r2
10103eec:	b981810e 	bge	r23,r6,101044f4 <_dtoa_r+0x10a4>
10103ef0:	0027883a 	mov	r19,zero
10103ef4:	a8800417 	ldw	r2,16(r21)
10103ef8:	05c00804 	movi	r23,32
10103efc:	10800104 	addi	r2,r2,4
10103f00:	1085883a 	add	r2,r2,r2
10103f04:	1085883a 	add	r2,r2,r2
10103f08:	a885883a 	add	r2,r21,r2
10103f0c:	11000017 	ldw	r4,0(r2)
10103f10:	0106de00 	call	10106de0 <__hi0bits>
10103f14:	b885c83a 	sub	r2,r23,r2
10103f18:	1585883a 	add	r2,r2,r22
10103f1c:	108007cc 	andi	r2,r2,31
10103f20:	1000b326 	beq	r2,zero,101041f0 <_dtoa_r+0xda0>
10103f24:	00c00804 	movi	r3,32
10103f28:	1887c83a 	sub	r3,r3,r2
10103f2c:	01000104 	movi	r4,4
10103f30:	20c2cd0e 	bge	r4,r3,10104a68 <_dtoa_r+0x1618>
10103f34:	00c00704 	movi	r3,28
10103f38:	1885c83a 	sub	r2,r3,r2
10103f3c:	d8c00817 	ldw	r3,32(sp)
10103f40:	a0a9883a 	add	r20,r20,r2
10103f44:	b0ad883a 	add	r22,r22,r2
10103f48:	1887883a 	add	r3,r3,r2
10103f4c:	d8c00815 	stw	r3,32(sp)
10103f50:	d9800817 	ldw	r6,32(sp)
10103f54:	0180040e 	bge	zero,r6,10103f68 <_dtoa_r+0xb18>
10103f58:	800b883a 	mov	r5,r16
10103f5c:	e009883a 	mov	r4,fp
10103f60:	010726c0 	call	1010726c <__lshift>
10103f64:	1021883a 	mov	r16,r2
10103f68:	0580050e 	bge	zero,r22,10103f80 <_dtoa_r+0xb30>
10103f6c:	a80b883a 	mov	r5,r21
10103f70:	b00d883a 	mov	r6,r22
10103f74:	e009883a 	mov	r4,fp
10103f78:	010726c0 	call	1010726c <__lshift>
10103f7c:	102b883a 	mov	r21,r2
10103f80:	d9c00e17 	ldw	r7,56(sp)
10103f84:	3801211e 	bne	r7,zero,1010440c <_dtoa_r+0xfbc>
10103f88:	d9800617 	ldw	r6,24(sp)
10103f8c:	0181380e 	bge	zero,r6,10104470 <_dtoa_r+0x1020>
10103f90:	d8c00b17 	ldw	r3,44(sp)
10103f94:	1800ab1e 	bne	r3,zero,10104244 <_dtoa_r+0xdf4>
10103f98:	dc800717 	ldw	r18,28(sp)
10103f9c:	dcc00617 	ldw	r19,24(sp)
10103fa0:	9029883a 	mov	r20,r18
10103fa4:	00000206 	br	10103fb0 <_dtoa_r+0xb60>
10103fa8:	0106bbc0 	call	10106bbc <__multadd>
10103fac:	1021883a 	mov	r16,r2
10103fb0:	a80b883a 	mov	r5,r21
10103fb4:	8009883a 	mov	r4,r16
10103fb8:	01032500 	call	10103250 <quorem>
10103fbc:	10800c04 	addi	r2,r2,48
10103fc0:	90800005 	stb	r2,0(r18)
10103fc4:	94800044 	addi	r18,r18,1
10103fc8:	9507c83a 	sub	r3,r18,r20
10103fcc:	000f883a 	mov	r7,zero
10103fd0:	01800284 	movi	r6,10
10103fd4:	800b883a 	mov	r5,r16
10103fd8:	e009883a 	mov	r4,fp
10103fdc:	1cfff216 	blt	r3,r19,10103fa8 <__alt_data_end+0xfffe3fa8>
10103fe0:	1011883a 	mov	r8,r2
10103fe4:	d8800617 	ldw	r2,24(sp)
10103fe8:	0082370e 	bge	zero,r2,101048c8 <_dtoa_r+0x1478>
10103fec:	d9000717 	ldw	r4,28(sp)
10103ff0:	0025883a 	mov	r18,zero
10103ff4:	20af883a 	add	r23,r4,r2
10103ff8:	01800044 	movi	r6,1
10103ffc:	800b883a 	mov	r5,r16
10104000:	e009883a 	mov	r4,fp
10104004:	da001715 	stw	r8,92(sp)
10104008:	010726c0 	call	1010726c <__lshift>
1010400c:	a80b883a 	mov	r5,r21
10104010:	1009883a 	mov	r4,r2
10104014:	d8800915 	stw	r2,36(sp)
10104018:	01073b40 	call	101073b4 <__mcmp>
1010401c:	da001717 	ldw	r8,92(sp)
10104020:	0081800e 	bge	zero,r2,10104624 <_dtoa_r+0x11d4>
10104024:	b93fffc3 	ldbu	r4,-1(r23)
10104028:	b8bfffc4 	addi	r2,r23,-1
1010402c:	1007883a 	mov	r3,r2
10104030:	01800e44 	movi	r6,57
10104034:	d9c00717 	ldw	r7,28(sp)
10104038:	00000506 	br	10104050 <_dtoa_r+0xc00>
1010403c:	18ffffc4 	addi	r3,r3,-1
10104040:	11c12326 	beq	r2,r7,101044d0 <_dtoa_r+0x1080>
10104044:	19000003 	ldbu	r4,0(r3)
10104048:	102f883a 	mov	r23,r2
1010404c:	10bfffc4 	addi	r2,r2,-1
10104050:	21403fcc 	andi	r5,r4,255
10104054:	2940201c 	xori	r5,r5,128
10104058:	297fe004 	addi	r5,r5,-128
1010405c:	29bff726 	beq	r5,r6,1010403c <__alt_data_end+0xfffe403c>
10104060:	21000044 	addi	r4,r4,1
10104064:	11000005 	stb	r4,0(r2)
10104068:	a80b883a 	mov	r5,r21
1010406c:	e009883a 	mov	r4,fp
10104070:	0106b940 	call	10106b94 <_Bfree>
10104074:	883ea026 	beq	r17,zero,10103af8 <__alt_data_end+0xfffe3af8>
10104078:	90000426 	beq	r18,zero,1010408c <_dtoa_r+0xc3c>
1010407c:	94400326 	beq	r18,r17,1010408c <_dtoa_r+0xc3c>
10104080:	900b883a 	mov	r5,r18
10104084:	e009883a 	mov	r4,fp
10104088:	0106b940 	call	10106b94 <_Bfree>
1010408c:	880b883a 	mov	r5,r17
10104090:	e009883a 	mov	r4,fp
10104094:	0106b940 	call	10106b94 <_Bfree>
10104098:	003e9706 	br	10103af8 <__alt_data_end+0xfffe3af8>
1010409c:	01800044 	movi	r6,1
101040a0:	d9800e15 	stw	r6,56(sp)
101040a4:	003d9606 	br	10103700 <__alt_data_end+0xfffe3700>
101040a8:	d8800817 	ldw	r2,32(sp)
101040ac:	d8c00517 	ldw	r3,20(sp)
101040b0:	d8000d15 	stw	zero,52(sp)
101040b4:	10c5c83a 	sub	r2,r2,r3
101040b8:	00c9c83a 	sub	r4,zero,r3
101040bc:	d8800815 	stw	r2,32(sp)
101040c0:	d9000a15 	stw	r4,40(sp)
101040c4:	003d9706 	br	10103724 <__alt_data_end+0xfffe3724>
101040c8:	05adc83a 	sub	r22,zero,r22
101040cc:	dd800815 	stw	r22,32(sp)
101040d0:	002d883a 	mov	r22,zero
101040d4:	003d8e06 	br	10103710 <__alt_data_end+0xfffe3710>
101040d8:	d9000517 	ldw	r4,20(sp)
101040dc:	010d38c0 	call	1010d38c <__floatsidf>
101040e0:	100d883a 	mov	r6,r2
101040e4:	180f883a 	mov	r7,r3
101040e8:	a009883a 	mov	r4,r20
101040ec:	880b883a 	mov	r5,r17
101040f0:	010c0a00 	call	1010c0a0 <__eqdf2>
101040f4:	103d7126 	beq	r2,zero,101036bc <__alt_data_end+0xfffe36bc>
101040f8:	d9c00517 	ldw	r7,20(sp)
101040fc:	39ffffc4 	addi	r7,r7,-1
10104100:	d9c00515 	stw	r7,20(sp)
10104104:	003d6d06 	br	101036bc <__alt_data_end+0xfffe36bc>
10104108:	dd400a17 	ldw	r21,40(sp)
1010410c:	dd000817 	ldw	r20,32(sp)
10104110:	0023883a 	mov	r17,zero
10104114:	003f4806 	br	10103e38 <__alt_data_end+0xfffe3e38>
10104118:	10e3c83a 	sub	r17,r2,r3
1010411c:	9448983a 	sll	r4,r18,r17
10104120:	003d3206 	br	101035ec <__alt_data_end+0xfffe35ec>
10104124:	d8000e15 	stw	zero,56(sp)
10104128:	003d7506 	br	10103700 <__alt_data_end+0xfffe3700>
1010412c:	b005883a 	mov	r2,r22
10104130:	003f4506 	br	10103e48 <__alt_data_end+0xfffe3e48>
10104134:	dc000915 	stw	r16,36(sp)
10104138:	d9800a17 	ldw	r6,40(sp)
1010413c:	d9400917 	ldw	r5,36(sp)
10104140:	e009883a 	mov	r4,fp
10104144:	010712c0 	call	1010712c <__pow5mult>
10104148:	1021883a 	mov	r16,r2
1010414c:	003f5a06 	br	10103eb8 <__alt_data_end+0xfffe3eb8>
10104150:	01c00044 	movi	r7,1
10104154:	d9c00b15 	stw	r7,44(sp)
10104158:	d8802217 	ldw	r2,136(sp)
1010415c:	0081280e 	bge	zero,r2,10104600 <_dtoa_r+0x11b0>
10104160:	100d883a 	mov	r6,r2
10104164:	1021883a 	mov	r16,r2
10104168:	d8800c15 	stw	r2,48(sp)
1010416c:	d8800615 	stw	r2,24(sp)
10104170:	003d8806 	br	10103794 <__alt_data_end+0xfffe3794>
10104174:	d8800617 	ldw	r2,24(sp)
10104178:	00be9b16 	blt	zero,r2,10103be8 <__alt_data_end+0xfffe3be8>
1010417c:	10010f1e 	bne	r2,zero,101045bc <_dtoa_r+0x116c>
10104180:	880b883a 	mov	r5,r17
10104184:	000d883a 	mov	r6,zero
10104188:	01d00534 	movhi	r7,16404
1010418c:	8009883a 	mov	r4,r16
10104190:	010c2f80 	call	1010c2f8 <__muldf3>
10104194:	900d883a 	mov	r6,r18
10104198:	980f883a 	mov	r7,r19
1010419c:	1009883a 	mov	r4,r2
101041a0:	180b883a 	mov	r5,r3
101041a4:	010c1280 	call	1010c128 <__gedf2>
101041a8:	002b883a 	mov	r21,zero
101041ac:	0023883a 	mov	r17,zero
101041b0:	1000bf16 	blt	r2,zero,101044b0 <_dtoa_r+0x1060>
101041b4:	d9802217 	ldw	r6,136(sp)
101041b8:	ddc00717 	ldw	r23,28(sp)
101041bc:	018c303a 	nor	r6,zero,r6
101041c0:	d9800515 	stw	r6,20(sp)
101041c4:	a80b883a 	mov	r5,r21
101041c8:	e009883a 	mov	r4,fp
101041cc:	0106b940 	call	10106b94 <_Bfree>
101041d0:	883e4926 	beq	r17,zero,10103af8 <__alt_data_end+0xfffe3af8>
101041d4:	003fad06 	br	1010408c <__alt_data_end+0xfffe408c>
101041d8:	d9c01117 	ldw	r7,68(sp)
101041dc:	3801bc26 	beq	r7,zero,101048d0 <_dtoa_r+0x1480>
101041e0:	10810cc4 	addi	r2,r2,1075
101041e4:	dd400a17 	ldw	r21,40(sp)
101041e8:	dd000817 	ldw	r20,32(sp)
101041ec:	003f0a06 	br	10103e18 <__alt_data_end+0xfffe3e18>
101041f0:	00800704 	movi	r2,28
101041f4:	d9000817 	ldw	r4,32(sp)
101041f8:	a0a9883a 	add	r20,r20,r2
101041fc:	b0ad883a 	add	r22,r22,r2
10104200:	2089883a 	add	r4,r4,r2
10104204:	d9000815 	stw	r4,32(sp)
10104208:	003f5106 	br	10103f50 <__alt_data_end+0xfffe3f50>
1010420c:	d8c00317 	ldw	r3,12(sp)
10104210:	b8c1fc0e 	bge	r23,r3,10104a04 <_dtoa_r+0x15b4>
10104214:	0027883a 	mov	r19,zero
10104218:	b805883a 	mov	r2,r23
1010421c:	003f3e06 	br	10103f18 <__alt_data_end+0xfffe3f18>
10104220:	880b883a 	mov	r5,r17
10104224:	e009883a 	mov	r4,fp
10104228:	000f883a 	mov	r7,zero
1010422c:	01800284 	movi	r6,10
10104230:	0106bbc0 	call	10106bbc <__multadd>
10104234:	d9000c17 	ldw	r4,48(sp)
10104238:	1023883a 	mov	r17,r2
1010423c:	0102040e 	bge	zero,r4,10104a50 <_dtoa_r+0x1600>
10104240:	d9000615 	stw	r4,24(sp)
10104244:	0500050e 	bge	zero,r20,1010425c <_dtoa_r+0xe0c>
10104248:	880b883a 	mov	r5,r17
1010424c:	a00d883a 	mov	r6,r20
10104250:	e009883a 	mov	r4,fp
10104254:	010726c0 	call	1010726c <__lshift>
10104258:	1023883a 	mov	r17,r2
1010425c:	9801241e 	bne	r19,zero,101046f0 <_dtoa_r+0x12a0>
10104260:	8829883a 	mov	r20,r17
10104264:	d9000617 	ldw	r4,24(sp)
10104268:	dcc00717 	ldw	r19,28(sp)
1010426c:	9480004c 	andi	r18,r18,1
10104270:	20bfffc4 	addi	r2,r4,-1
10104274:	9885883a 	add	r2,r19,r2
10104278:	d8800415 	stw	r2,16(sp)
1010427c:	dc800615 	stw	r18,24(sp)
10104280:	a80b883a 	mov	r5,r21
10104284:	8009883a 	mov	r4,r16
10104288:	01032500 	call	10103250 <quorem>
1010428c:	880b883a 	mov	r5,r17
10104290:	8009883a 	mov	r4,r16
10104294:	102f883a 	mov	r23,r2
10104298:	01073b40 	call	101073b4 <__mcmp>
1010429c:	a80b883a 	mov	r5,r21
101042a0:	a00d883a 	mov	r6,r20
101042a4:	e009883a 	mov	r4,fp
101042a8:	102d883a 	mov	r22,r2
101042ac:	01074140 	call	10107414 <__mdiff>
101042b0:	1007883a 	mov	r3,r2
101042b4:	10800317 	ldw	r2,12(r2)
101042b8:	bc800c04 	addi	r18,r23,48
101042bc:	180b883a 	mov	r5,r3
101042c0:	10004e1e 	bne	r2,zero,101043fc <_dtoa_r+0xfac>
101042c4:	8009883a 	mov	r4,r16
101042c8:	d8c01615 	stw	r3,88(sp)
101042cc:	01073b40 	call	101073b4 <__mcmp>
101042d0:	d8c01617 	ldw	r3,88(sp)
101042d4:	e009883a 	mov	r4,fp
101042d8:	d8801615 	stw	r2,88(sp)
101042dc:	180b883a 	mov	r5,r3
101042e0:	0106b940 	call	10106b94 <_Bfree>
101042e4:	d8801617 	ldw	r2,88(sp)
101042e8:	1000041e 	bne	r2,zero,101042fc <_dtoa_r+0xeac>
101042ec:	d9800317 	ldw	r6,12(sp)
101042f0:	3000021e 	bne	r6,zero,101042fc <_dtoa_r+0xeac>
101042f4:	d8c00617 	ldw	r3,24(sp)
101042f8:	18003726 	beq	r3,zero,101043d8 <_dtoa_r+0xf88>
101042fc:	b0002016 	blt	r22,zero,10104380 <_dtoa_r+0xf30>
10104300:	b000041e 	bne	r22,zero,10104314 <_dtoa_r+0xec4>
10104304:	d9000317 	ldw	r4,12(sp)
10104308:	2000021e 	bne	r4,zero,10104314 <_dtoa_r+0xec4>
1010430c:	d8c00617 	ldw	r3,24(sp)
10104310:	18001b26 	beq	r3,zero,10104380 <_dtoa_r+0xf30>
10104314:	00810716 	blt	zero,r2,10104734 <_dtoa_r+0x12e4>
10104318:	d8c00417 	ldw	r3,16(sp)
1010431c:	9d800044 	addi	r22,r19,1
10104320:	9c800005 	stb	r18,0(r19)
10104324:	b02f883a 	mov	r23,r22
10104328:	98c10626 	beq	r19,r3,10104744 <_dtoa_r+0x12f4>
1010432c:	800b883a 	mov	r5,r16
10104330:	000f883a 	mov	r7,zero
10104334:	01800284 	movi	r6,10
10104338:	e009883a 	mov	r4,fp
1010433c:	0106bbc0 	call	10106bbc <__multadd>
10104340:	1021883a 	mov	r16,r2
10104344:	000f883a 	mov	r7,zero
10104348:	01800284 	movi	r6,10
1010434c:	880b883a 	mov	r5,r17
10104350:	e009883a 	mov	r4,fp
10104354:	8d002526 	beq	r17,r20,101043ec <_dtoa_r+0xf9c>
10104358:	0106bbc0 	call	10106bbc <__multadd>
1010435c:	a00b883a 	mov	r5,r20
10104360:	000f883a 	mov	r7,zero
10104364:	01800284 	movi	r6,10
10104368:	e009883a 	mov	r4,fp
1010436c:	1023883a 	mov	r17,r2
10104370:	0106bbc0 	call	10106bbc <__multadd>
10104374:	1029883a 	mov	r20,r2
10104378:	b027883a 	mov	r19,r22
1010437c:	003fc006 	br	10104280 <__alt_data_end+0xfffe4280>
10104380:	9011883a 	mov	r8,r18
10104384:	00800e0e 	bge	zero,r2,101043c0 <_dtoa_r+0xf70>
10104388:	800b883a 	mov	r5,r16
1010438c:	01800044 	movi	r6,1
10104390:	e009883a 	mov	r4,fp
10104394:	da001715 	stw	r8,92(sp)
10104398:	010726c0 	call	1010726c <__lshift>
1010439c:	a80b883a 	mov	r5,r21
101043a0:	1009883a 	mov	r4,r2
101043a4:	1021883a 	mov	r16,r2
101043a8:	01073b40 	call	101073b4 <__mcmp>
101043ac:	da001717 	ldw	r8,92(sp)
101043b0:	0081960e 	bge	zero,r2,10104a0c <_dtoa_r+0x15bc>
101043b4:	00800e44 	movi	r2,57
101043b8:	40817026 	beq	r8,r2,1010497c <_dtoa_r+0x152c>
101043bc:	ba000c44 	addi	r8,r23,49
101043c0:	8825883a 	mov	r18,r17
101043c4:	9dc00044 	addi	r23,r19,1
101043c8:	9a000005 	stb	r8,0(r19)
101043cc:	a023883a 	mov	r17,r20
101043d0:	dc000915 	stw	r16,36(sp)
101043d4:	003f2406 	br	10104068 <__alt_data_end+0xfffe4068>
101043d8:	00800e44 	movi	r2,57
101043dc:	9011883a 	mov	r8,r18
101043e0:	90816626 	beq	r18,r2,1010497c <_dtoa_r+0x152c>
101043e4:	05bff516 	blt	zero,r22,101043bc <__alt_data_end+0xfffe43bc>
101043e8:	003ff506 	br	101043c0 <__alt_data_end+0xfffe43c0>
101043ec:	0106bbc0 	call	10106bbc <__multadd>
101043f0:	1023883a 	mov	r17,r2
101043f4:	1029883a 	mov	r20,r2
101043f8:	003fdf06 	br	10104378 <__alt_data_end+0xfffe4378>
101043fc:	e009883a 	mov	r4,fp
10104400:	0106b940 	call	10106b94 <_Bfree>
10104404:	00800044 	movi	r2,1
10104408:	003fbc06 	br	101042fc <__alt_data_end+0xfffe42fc>
1010440c:	a80b883a 	mov	r5,r21
10104410:	8009883a 	mov	r4,r16
10104414:	01073b40 	call	101073b4 <__mcmp>
10104418:	103edb0e 	bge	r2,zero,10103f88 <__alt_data_end+0xfffe3f88>
1010441c:	800b883a 	mov	r5,r16
10104420:	000f883a 	mov	r7,zero
10104424:	01800284 	movi	r6,10
10104428:	e009883a 	mov	r4,fp
1010442c:	0106bbc0 	call	10106bbc <__multadd>
10104430:	1021883a 	mov	r16,r2
10104434:	d8800517 	ldw	r2,20(sp)
10104438:	d8c00b17 	ldw	r3,44(sp)
1010443c:	10bfffc4 	addi	r2,r2,-1
10104440:	d8800515 	stw	r2,20(sp)
10104444:	183f761e 	bne	r3,zero,10104220 <__alt_data_end+0xfffe4220>
10104448:	d9000c17 	ldw	r4,48(sp)
1010444c:	0101730e 	bge	zero,r4,10104a1c <_dtoa_r+0x15cc>
10104450:	d9000615 	stw	r4,24(sp)
10104454:	003ed006 	br	10103f98 <__alt_data_end+0xfffe3f98>
10104458:	00800084 	movi	r2,2
1010445c:	3081861e 	bne	r6,r2,10104a78 <_dtoa_r+0x1628>
10104460:	d8000b15 	stw	zero,44(sp)
10104464:	003f3c06 	br	10104158 <__alt_data_end+0xfffe4158>
10104468:	dc000917 	ldw	r16,36(sp)
1010446c:	003e9206 	br	10103eb8 <__alt_data_end+0xfffe3eb8>
10104470:	d9c00317 	ldw	r7,12(sp)
10104474:	00800084 	movi	r2,2
10104478:	11fec50e 	bge	r2,r7,10103f90 <__alt_data_end+0xfffe3f90>
1010447c:	d9000617 	ldw	r4,24(sp)
10104480:	20013c1e 	bne	r4,zero,10104974 <_dtoa_r+0x1524>
10104484:	a80b883a 	mov	r5,r21
10104488:	000f883a 	mov	r7,zero
1010448c:	01800144 	movi	r6,5
10104490:	e009883a 	mov	r4,fp
10104494:	0106bbc0 	call	10106bbc <__multadd>
10104498:	100b883a 	mov	r5,r2
1010449c:	8009883a 	mov	r4,r16
101044a0:	102b883a 	mov	r21,r2
101044a4:	01073b40 	call	101073b4 <__mcmp>
101044a8:	dc000915 	stw	r16,36(sp)
101044ac:	00bf410e 	bge	zero,r2,101041b4 <__alt_data_end+0xfffe41b4>
101044b0:	d9c00717 	ldw	r7,28(sp)
101044b4:	00800c44 	movi	r2,49
101044b8:	38800005 	stb	r2,0(r7)
101044bc:	d8800517 	ldw	r2,20(sp)
101044c0:	3dc00044 	addi	r23,r7,1
101044c4:	10800044 	addi	r2,r2,1
101044c8:	d8800515 	stw	r2,20(sp)
101044cc:	003f3d06 	br	101041c4 <__alt_data_end+0xfffe41c4>
101044d0:	d9800517 	ldw	r6,20(sp)
101044d4:	d9c00717 	ldw	r7,28(sp)
101044d8:	00800c44 	movi	r2,49
101044dc:	31800044 	addi	r6,r6,1
101044e0:	d9800515 	stw	r6,20(sp)
101044e4:	38800005 	stb	r2,0(r7)
101044e8:	003edf06 	br	10104068 <__alt_data_end+0xfffe4068>
101044ec:	d8000b15 	stw	zero,44(sp)
101044f0:	003c9f06 	br	10103770 <__alt_data_end+0xfffe3770>
101044f4:	903e7e1e 	bne	r18,zero,10103ef0 <__alt_data_end+0xfffe3ef0>
101044f8:	00800434 	movhi	r2,16
101044fc:	10bfffc4 	addi	r2,r2,-1
10104500:	9884703a 	and	r2,r19,r2
10104504:	1000ea1e 	bne	r2,zero,101048b0 <_dtoa_r+0x1460>
10104508:	9cdffc2c 	andhi	r19,r19,32752
1010450c:	9800e826 	beq	r19,zero,101048b0 <_dtoa_r+0x1460>
10104510:	d9c00817 	ldw	r7,32(sp)
10104514:	b5800044 	addi	r22,r22,1
10104518:	04c00044 	movi	r19,1
1010451c:	39c00044 	addi	r7,r7,1
10104520:	d9c00815 	stw	r7,32(sp)
10104524:	d8800d17 	ldw	r2,52(sp)
10104528:	103e721e 	bne	r2,zero,10103ef4 <__alt_data_end+0xfffe3ef4>
1010452c:	00800044 	movi	r2,1
10104530:	003e7906 	br	10103f18 <__alt_data_end+0xfffe3f18>
10104534:	8009883a 	mov	r4,r16
10104538:	010d38c0 	call	1010d38c <__floatsidf>
1010453c:	d9800f17 	ldw	r6,60(sp)
10104540:	d9c01017 	ldw	r7,64(sp)
10104544:	1009883a 	mov	r4,r2
10104548:	180b883a 	mov	r5,r3
1010454c:	010c2f80 	call	1010c2f8 <__muldf3>
10104550:	000d883a 	mov	r6,zero
10104554:	01d00734 	movhi	r7,16412
10104558:	1009883a 	mov	r4,r2
1010455c:	180b883a 	mov	r5,r3
10104560:	010af0c0 	call	1010af0c <__adddf3>
10104564:	047f3034 	movhi	r17,64704
10104568:	1021883a 	mov	r16,r2
1010456c:	1c63883a 	add	r17,r3,r17
10104570:	d9000f17 	ldw	r4,60(sp)
10104574:	d9401017 	ldw	r5,64(sp)
10104578:	000d883a 	mov	r6,zero
1010457c:	01d00534 	movhi	r7,16404
10104580:	010ca100 	call	1010ca10 <__subdf3>
10104584:	800d883a 	mov	r6,r16
10104588:	880f883a 	mov	r7,r17
1010458c:	1009883a 	mov	r4,r2
10104590:	180b883a 	mov	r5,r3
10104594:	102b883a 	mov	r21,r2
10104598:	1829883a 	mov	r20,r3
1010459c:	010c1280 	call	1010c128 <__gedf2>
101045a0:	00806c16 	blt	zero,r2,10104754 <_dtoa_r+0x1304>
101045a4:	89e0003c 	xorhi	r7,r17,32768
101045a8:	800d883a 	mov	r6,r16
101045ac:	a809883a 	mov	r4,r21
101045b0:	a00b883a 	mov	r5,r20
101045b4:	010c2040 	call	1010c204 <__ledf2>
101045b8:	103d7e0e 	bge	r2,zero,10103bb4 <__alt_data_end+0xfffe3bb4>
101045bc:	002b883a 	mov	r21,zero
101045c0:	0023883a 	mov	r17,zero
101045c4:	003efb06 	br	101041b4 <__alt_data_end+0xfffe41b4>
101045c8:	d8800717 	ldw	r2,28(sp)
101045cc:	003bd006 	br	10103510 <__alt_data_end+0xfffe3510>
101045d0:	d9000a17 	ldw	r4,40(sp)
101045d4:	d9800d17 	ldw	r6,52(sp)
101045d8:	dd400a15 	stw	r21,40(sp)
101045dc:	a905c83a 	sub	r2,r21,r4
101045e0:	308d883a 	add	r6,r6,r2
101045e4:	d9800d15 	stw	r6,52(sp)
101045e8:	002b883a 	mov	r21,zero
101045ec:	003e0606 	br	10103e08 <__alt_data_end+0xfffe3e08>
101045f0:	9023883a 	mov	r17,r18
101045f4:	9829883a 	mov	r20,r19
101045f8:	04000084 	movi	r16,2
101045fc:	003c9206 	br	10103848 <__alt_data_end+0xfffe3848>
10104600:	04000044 	movi	r16,1
10104604:	dc000c15 	stw	r16,48(sp)
10104608:	dc000615 	stw	r16,24(sp)
1010460c:	dc002215 	stw	r16,136(sp)
10104610:	e0001115 	stw	zero,68(fp)
10104614:	000b883a 	mov	r5,zero
10104618:	003c6906 	br	101037c0 <__alt_data_end+0xfffe37c0>
1010461c:	3021883a 	mov	r16,r6
10104620:	003ffb06 	br	10104610 <__alt_data_end+0xfffe4610>
10104624:	1000021e 	bne	r2,zero,10104630 <_dtoa_r+0x11e0>
10104628:	4200004c 	andi	r8,r8,1
1010462c:	403e7d1e 	bne	r8,zero,10104024 <__alt_data_end+0xfffe4024>
10104630:	01000c04 	movi	r4,48
10104634:	00000106 	br	1010463c <_dtoa_r+0x11ec>
10104638:	102f883a 	mov	r23,r2
1010463c:	b8bfffc4 	addi	r2,r23,-1
10104640:	10c00007 	ldb	r3,0(r2)
10104644:	193ffc26 	beq	r3,r4,10104638 <__alt_data_end+0xfffe4638>
10104648:	003e8706 	br	10104068 <__alt_data_end+0xfffe4068>
1010464c:	d8800517 	ldw	r2,20(sp)
10104650:	00a3c83a 	sub	r17,zero,r2
10104654:	8800a426 	beq	r17,zero,101048e8 <_dtoa_r+0x1498>
10104658:	888003cc 	andi	r2,r17,15
1010465c:	100490fa 	slli	r2,r2,3
10104660:	00c40474 	movhi	r3,4113
10104664:	18c09b04 	addi	r3,r3,620
10104668:	1885883a 	add	r2,r3,r2
1010466c:	11800017 	ldw	r6,0(r2)
10104670:	11c00117 	ldw	r7,4(r2)
10104674:	9009883a 	mov	r4,r18
10104678:	980b883a 	mov	r5,r19
1010467c:	8823d13a 	srai	r17,r17,4
10104680:	010c2f80 	call	1010c2f8 <__muldf3>
10104684:	d8800f15 	stw	r2,60(sp)
10104688:	d8c01015 	stw	r3,64(sp)
1010468c:	8800e826 	beq	r17,zero,10104a30 <_dtoa_r+0x15e0>
10104690:	05040474 	movhi	r20,4113
10104694:	a5009104 	addi	r20,r20,580
10104698:	04000084 	movi	r16,2
1010469c:	8980004c 	andi	r6,r17,1
101046a0:	1009883a 	mov	r4,r2
101046a4:	8823d07a 	srai	r17,r17,1
101046a8:	180b883a 	mov	r5,r3
101046ac:	30000426 	beq	r6,zero,101046c0 <_dtoa_r+0x1270>
101046b0:	a1800017 	ldw	r6,0(r20)
101046b4:	a1c00117 	ldw	r7,4(r20)
101046b8:	84000044 	addi	r16,r16,1
101046bc:	010c2f80 	call	1010c2f8 <__muldf3>
101046c0:	a5000204 	addi	r20,r20,8
101046c4:	883ff51e 	bne	r17,zero,1010469c <__alt_data_end+0xfffe469c>
101046c8:	d8800f15 	stw	r2,60(sp)
101046cc:	d8c01015 	stw	r3,64(sp)
101046d0:	003c7606 	br	101038ac <__alt_data_end+0xfffe38ac>
101046d4:	00c00c04 	movi	r3,48
101046d8:	10c00005 	stb	r3,0(r2)
101046dc:	d8c00517 	ldw	r3,20(sp)
101046e0:	bd3fffc3 	ldbu	r20,-1(r23)
101046e4:	18c00044 	addi	r3,r3,1
101046e8:	d8c00515 	stw	r3,20(sp)
101046ec:	003db906 	br	10103dd4 <__alt_data_end+0xfffe3dd4>
101046f0:	89400117 	ldw	r5,4(r17)
101046f4:	e009883a 	mov	r4,fp
101046f8:	0106aec0 	call	10106aec <_Balloc>
101046fc:	89800417 	ldw	r6,16(r17)
10104700:	89400304 	addi	r5,r17,12
10104704:	11000304 	addi	r4,r2,12
10104708:	31800084 	addi	r6,r6,2
1010470c:	318d883a 	add	r6,r6,r6
10104710:	318d883a 	add	r6,r6,r6
10104714:	1027883a 	mov	r19,r2
10104718:	01067200 	call	10106720 <memcpy>
1010471c:	01800044 	movi	r6,1
10104720:	980b883a 	mov	r5,r19
10104724:	e009883a 	mov	r4,fp
10104728:	010726c0 	call	1010726c <__lshift>
1010472c:	1029883a 	mov	r20,r2
10104730:	003ecc06 	br	10104264 <__alt_data_end+0xfffe4264>
10104734:	00800e44 	movi	r2,57
10104738:	90809026 	beq	r18,r2,1010497c <_dtoa_r+0x152c>
1010473c:	92000044 	addi	r8,r18,1
10104740:	003f1f06 	br	101043c0 <__alt_data_end+0xfffe43c0>
10104744:	9011883a 	mov	r8,r18
10104748:	8825883a 	mov	r18,r17
1010474c:	a023883a 	mov	r17,r20
10104750:	003e2906 	br	10103ff8 <__alt_data_end+0xfffe3ff8>
10104754:	002b883a 	mov	r21,zero
10104758:	0023883a 	mov	r17,zero
1010475c:	003f5406 	br	101044b0 <__alt_data_end+0xfffe44b0>
10104760:	61bfffc4 	addi	r6,r12,-1
10104764:	300490fa 	slli	r2,r6,3
10104768:	00c40474 	movhi	r3,4113
1010476c:	18c09b04 	addi	r3,r3,620
10104770:	1885883a 	add	r2,r3,r2
10104774:	11000017 	ldw	r4,0(r2)
10104778:	11400117 	ldw	r5,4(r2)
1010477c:	d8800717 	ldw	r2,28(sp)
10104780:	880f883a 	mov	r7,r17
10104784:	d9801215 	stw	r6,72(sp)
10104788:	800d883a 	mov	r6,r16
1010478c:	db001615 	stw	r12,88(sp)
10104790:	15c00044 	addi	r23,r2,1
10104794:	010c2f80 	call	1010c2f8 <__muldf3>
10104798:	d9401017 	ldw	r5,64(sp)
1010479c:	d9000f17 	ldw	r4,60(sp)
101047a0:	d8c01515 	stw	r3,84(sp)
101047a4:	d8801415 	stw	r2,80(sp)
101047a8:	010d30c0 	call	1010d30c <__fixdfsi>
101047ac:	1009883a 	mov	r4,r2
101047b0:	1021883a 	mov	r16,r2
101047b4:	010d38c0 	call	1010d38c <__floatsidf>
101047b8:	d9000f17 	ldw	r4,60(sp)
101047bc:	d9401017 	ldw	r5,64(sp)
101047c0:	100d883a 	mov	r6,r2
101047c4:	180f883a 	mov	r7,r3
101047c8:	010ca100 	call	1010ca10 <__subdf3>
101047cc:	1829883a 	mov	r20,r3
101047d0:	d8c00717 	ldw	r3,28(sp)
101047d4:	84000c04 	addi	r16,r16,48
101047d8:	1023883a 	mov	r17,r2
101047dc:	1c000005 	stb	r16,0(r3)
101047e0:	db001617 	ldw	r12,88(sp)
101047e4:	00800044 	movi	r2,1
101047e8:	60802226 	beq	r12,r2,10104874 <_dtoa_r+0x1424>
101047ec:	d9c00717 	ldw	r7,28(sp)
101047f0:	8805883a 	mov	r2,r17
101047f4:	b82b883a 	mov	r21,r23
101047f8:	3b19883a 	add	r12,r7,r12
101047fc:	6023883a 	mov	r17,r12
10104800:	a007883a 	mov	r3,r20
10104804:	dc800f15 	stw	r18,60(sp)
10104808:	000d883a 	mov	r6,zero
1010480c:	01d00934 	movhi	r7,16420
10104810:	1009883a 	mov	r4,r2
10104814:	180b883a 	mov	r5,r3
10104818:	010c2f80 	call	1010c2f8 <__muldf3>
1010481c:	180b883a 	mov	r5,r3
10104820:	1009883a 	mov	r4,r2
10104824:	1829883a 	mov	r20,r3
10104828:	1025883a 	mov	r18,r2
1010482c:	010d30c0 	call	1010d30c <__fixdfsi>
10104830:	1009883a 	mov	r4,r2
10104834:	1021883a 	mov	r16,r2
10104838:	010d38c0 	call	1010d38c <__floatsidf>
1010483c:	100d883a 	mov	r6,r2
10104840:	180f883a 	mov	r7,r3
10104844:	9009883a 	mov	r4,r18
10104848:	a00b883a 	mov	r5,r20
1010484c:	84000c04 	addi	r16,r16,48
10104850:	010ca100 	call	1010ca10 <__subdf3>
10104854:	ad400044 	addi	r21,r21,1
10104858:	ac3fffc5 	stb	r16,-1(r21)
1010485c:	ac7fea1e 	bne	r21,r17,10104808 <__alt_data_end+0xfffe4808>
10104860:	1023883a 	mov	r17,r2
10104864:	d8801217 	ldw	r2,72(sp)
10104868:	dc800f17 	ldw	r18,60(sp)
1010486c:	1829883a 	mov	r20,r3
10104870:	b8af883a 	add	r23,r23,r2
10104874:	d9001417 	ldw	r4,80(sp)
10104878:	d9401517 	ldw	r5,84(sp)
1010487c:	000d883a 	mov	r6,zero
10104880:	01cff834 	movhi	r7,16352
10104884:	010af0c0 	call	1010af0c <__adddf3>
10104888:	880d883a 	mov	r6,r17
1010488c:	a00f883a 	mov	r7,r20
10104890:	1009883a 	mov	r4,r2
10104894:	180b883a 	mov	r5,r3
10104898:	010c2040 	call	1010c204 <__ledf2>
1010489c:	10003e0e 	bge	r2,zero,10104998 <_dtoa_r+0x1548>
101048a0:	d9001317 	ldw	r4,76(sp)
101048a4:	bd3fffc3 	ldbu	r20,-1(r23)
101048a8:	d9000515 	stw	r4,20(sp)
101048ac:	003d3b06 	br	10103d9c <__alt_data_end+0xfffe3d9c>
101048b0:	0027883a 	mov	r19,zero
101048b4:	003f1b06 	br	10104524 <__alt_data_end+0xfffe4524>
101048b8:	d8800817 	ldw	r2,32(sp)
101048bc:	11e9c83a 	sub	r20,r2,r7
101048c0:	0005883a 	mov	r2,zero
101048c4:	003d5406 	br	10103e18 <__alt_data_end+0xfffe3e18>
101048c8:	00800044 	movi	r2,1
101048cc:	003dc706 	br	10103fec <__alt_data_end+0xfffe3fec>
101048d0:	d8c00217 	ldw	r3,8(sp)
101048d4:	00800d84 	movi	r2,54
101048d8:	dd400a17 	ldw	r21,40(sp)
101048dc:	10c5c83a 	sub	r2,r2,r3
101048e0:	dd000817 	ldw	r20,32(sp)
101048e4:	003d4c06 	br	10103e18 <__alt_data_end+0xfffe3e18>
101048e8:	dc800f15 	stw	r18,60(sp)
101048ec:	dcc01015 	stw	r19,64(sp)
101048f0:	04000084 	movi	r16,2
101048f4:	003bed06 	br	101038ac <__alt_data_end+0xfffe38ac>
101048f8:	d9000617 	ldw	r4,24(sp)
101048fc:	203f0d26 	beq	r4,zero,10104534 <__alt_data_end+0xfffe4534>
10104900:	d9800c17 	ldw	r6,48(sp)
10104904:	01bcab0e 	bge	zero,r6,10103bb4 <__alt_data_end+0xfffe3bb4>
10104908:	d9401017 	ldw	r5,64(sp)
1010490c:	d9000f17 	ldw	r4,60(sp)
10104910:	000d883a 	mov	r6,zero
10104914:	01d00934 	movhi	r7,16420
10104918:	010c2f80 	call	1010c2f8 <__muldf3>
1010491c:	81000044 	addi	r4,r16,1
10104920:	d8800f15 	stw	r2,60(sp)
10104924:	d8c01015 	stw	r3,64(sp)
10104928:	010d38c0 	call	1010d38c <__floatsidf>
1010492c:	d9800f17 	ldw	r6,60(sp)
10104930:	d9c01017 	ldw	r7,64(sp)
10104934:	1009883a 	mov	r4,r2
10104938:	180b883a 	mov	r5,r3
1010493c:	010c2f80 	call	1010c2f8 <__muldf3>
10104940:	01d00734 	movhi	r7,16412
10104944:	000d883a 	mov	r6,zero
10104948:	1009883a 	mov	r4,r2
1010494c:	180b883a 	mov	r5,r3
10104950:	010af0c0 	call	1010af0c <__adddf3>
10104954:	d9c00517 	ldw	r7,20(sp)
10104958:	047f3034 	movhi	r17,64704
1010495c:	1021883a 	mov	r16,r2
10104960:	39ffffc4 	addi	r7,r7,-1
10104964:	d9c01315 	stw	r7,76(sp)
10104968:	1c63883a 	add	r17,r3,r17
1010496c:	db000c17 	ldw	r12,48(sp)
10104970:	003bea06 	br	1010391c <__alt_data_end+0xfffe391c>
10104974:	dc000915 	stw	r16,36(sp)
10104978:	003e0e06 	br	101041b4 <__alt_data_end+0xfffe41b4>
1010497c:	01000e44 	movi	r4,57
10104980:	8825883a 	mov	r18,r17
10104984:	9dc00044 	addi	r23,r19,1
10104988:	99000005 	stb	r4,0(r19)
1010498c:	a023883a 	mov	r17,r20
10104990:	dc000915 	stw	r16,36(sp)
10104994:	003da406 	br	10104028 <__alt_data_end+0xfffe4028>
10104998:	d9801417 	ldw	r6,80(sp)
1010499c:	d9c01517 	ldw	r7,84(sp)
101049a0:	0009883a 	mov	r4,zero
101049a4:	014ff834 	movhi	r5,16352
101049a8:	010ca100 	call	1010ca10 <__subdf3>
101049ac:	880d883a 	mov	r6,r17
101049b0:	a00f883a 	mov	r7,r20
101049b4:	1009883a 	mov	r4,r2
101049b8:	180b883a 	mov	r5,r3
101049bc:	010c1280 	call	1010c128 <__gedf2>
101049c0:	00bc7c0e 	bge	zero,r2,10103bb4 <__alt_data_end+0xfffe3bb4>
101049c4:	01000c04 	movi	r4,48
101049c8:	00000106 	br	101049d0 <_dtoa_r+0x1580>
101049cc:	102f883a 	mov	r23,r2
101049d0:	b8bfffc4 	addi	r2,r23,-1
101049d4:	10c00007 	ldb	r3,0(r2)
101049d8:	193ffc26 	beq	r3,r4,101049cc <__alt_data_end+0xfffe49cc>
101049dc:	d9801317 	ldw	r6,76(sp)
101049e0:	d9800515 	stw	r6,20(sp)
101049e4:	003c4406 	br	10103af8 <__alt_data_end+0xfffe3af8>
101049e8:	d9801317 	ldw	r6,76(sp)
101049ec:	d9800515 	stw	r6,20(sp)
101049f0:	003cea06 	br	10103d9c <__alt_data_end+0xfffe3d9c>
101049f4:	dd800f17 	ldw	r22,60(sp)
101049f8:	dcc01017 	ldw	r19,64(sp)
101049fc:	dc801217 	ldw	r18,72(sp)
10104a00:	003c6c06 	br	10103bb4 <__alt_data_end+0xfffe3bb4>
10104a04:	903e031e 	bne	r18,zero,10104214 <__alt_data_end+0xfffe4214>
10104a08:	003ebb06 	br	101044f8 <__alt_data_end+0xfffe44f8>
10104a0c:	103e6c1e 	bne	r2,zero,101043c0 <__alt_data_end+0xfffe43c0>
10104a10:	4080004c 	andi	r2,r8,1
10104a14:	103e6a26 	beq	r2,zero,101043c0 <__alt_data_end+0xfffe43c0>
10104a18:	003e6606 	br	101043b4 <__alt_data_end+0xfffe43b4>
10104a1c:	d8c00317 	ldw	r3,12(sp)
10104a20:	00800084 	movi	r2,2
10104a24:	10c02916 	blt	r2,r3,10104acc <_dtoa_r+0x167c>
10104a28:	d9000c17 	ldw	r4,48(sp)
10104a2c:	003e8806 	br	10104450 <__alt_data_end+0xfffe4450>
10104a30:	04000084 	movi	r16,2
10104a34:	003b9d06 	br	101038ac <__alt_data_end+0xfffe38ac>
10104a38:	d9001317 	ldw	r4,76(sp)
10104a3c:	d9000515 	stw	r4,20(sp)
10104a40:	003cd606 	br	10103d9c <__alt_data_end+0xfffe3d9c>
10104a44:	d8801317 	ldw	r2,76(sp)
10104a48:	d8800515 	stw	r2,20(sp)
10104a4c:	003c2a06 	br	10103af8 <__alt_data_end+0xfffe3af8>
10104a50:	d9800317 	ldw	r6,12(sp)
10104a54:	00800084 	movi	r2,2
10104a58:	11801516 	blt	r2,r6,10104ab0 <_dtoa_r+0x1660>
10104a5c:	d9c00c17 	ldw	r7,48(sp)
10104a60:	d9c00615 	stw	r7,24(sp)
10104a64:	003df706 	br	10104244 <__alt_data_end+0xfffe4244>
10104a68:	193d3926 	beq	r3,r4,10103f50 <__alt_data_end+0xfffe3f50>
10104a6c:	00c00f04 	movi	r3,60
10104a70:	1885c83a 	sub	r2,r3,r2
10104a74:	003ddf06 	br	101041f4 <__alt_data_end+0xfffe41f4>
10104a78:	e009883a 	mov	r4,fp
10104a7c:	e0001115 	stw	zero,68(fp)
10104a80:	000b883a 	mov	r5,zero
10104a84:	0106aec0 	call	10106aec <_Balloc>
10104a88:	d8800715 	stw	r2,28(sp)
10104a8c:	d8c00717 	ldw	r3,28(sp)
10104a90:	00bfffc4 	movi	r2,-1
10104a94:	01000044 	movi	r4,1
10104a98:	d8800c15 	stw	r2,48(sp)
10104a9c:	e0c01015 	stw	r3,64(fp)
10104aa0:	d9000b15 	stw	r4,44(sp)
10104aa4:	d8800615 	stw	r2,24(sp)
10104aa8:	d8002215 	stw	zero,136(sp)
10104aac:	003c4106 	br	10103bb4 <__alt_data_end+0xfffe3bb4>
10104ab0:	d8c00c17 	ldw	r3,48(sp)
10104ab4:	d8c00615 	stw	r3,24(sp)
10104ab8:	003e7006 	br	1010447c <__alt_data_end+0xfffe447c>
10104abc:	04400044 	movi	r17,1
10104ac0:	003b2006 	br	10103744 <__alt_data_end+0xfffe3744>
10104ac4:	000b883a 	mov	r5,zero
10104ac8:	003b3d06 	br	101037c0 <__alt_data_end+0xfffe37c0>
10104acc:	d8800c17 	ldw	r2,48(sp)
10104ad0:	d8800615 	stw	r2,24(sp)
10104ad4:	003e6906 	br	1010447c <__alt_data_end+0xfffe447c>

10104ad8 <__sflush_r>:
10104ad8:	2880030b 	ldhu	r2,12(r5)
10104adc:	defffb04 	addi	sp,sp,-20
10104ae0:	dcc00315 	stw	r19,12(sp)
10104ae4:	dc400115 	stw	r17,4(sp)
10104ae8:	dfc00415 	stw	ra,16(sp)
10104aec:	dc800215 	stw	r18,8(sp)
10104af0:	dc000015 	stw	r16,0(sp)
10104af4:	10c0020c 	andi	r3,r2,8
10104af8:	2823883a 	mov	r17,r5
10104afc:	2027883a 	mov	r19,r4
10104b00:	1800311e 	bne	r3,zero,10104bc8 <__sflush_r+0xf0>
10104b04:	28c00117 	ldw	r3,4(r5)
10104b08:	10820014 	ori	r2,r2,2048
10104b0c:	2880030d 	sth	r2,12(r5)
10104b10:	00c04b0e 	bge	zero,r3,10104c40 <__sflush_r+0x168>
10104b14:	8a000a17 	ldw	r8,40(r17)
10104b18:	40002326 	beq	r8,zero,10104ba8 <__sflush_r+0xd0>
10104b1c:	9c000017 	ldw	r16,0(r19)
10104b20:	10c4000c 	andi	r3,r2,4096
10104b24:	98000015 	stw	zero,0(r19)
10104b28:	18004826 	beq	r3,zero,10104c4c <__sflush_r+0x174>
10104b2c:	89801417 	ldw	r6,80(r17)
10104b30:	10c0010c 	andi	r3,r2,4
10104b34:	18000626 	beq	r3,zero,10104b50 <__sflush_r+0x78>
10104b38:	88c00117 	ldw	r3,4(r17)
10104b3c:	88800c17 	ldw	r2,48(r17)
10104b40:	30cdc83a 	sub	r6,r6,r3
10104b44:	10000226 	beq	r2,zero,10104b50 <__sflush_r+0x78>
10104b48:	88800f17 	ldw	r2,60(r17)
10104b4c:	308dc83a 	sub	r6,r6,r2
10104b50:	89400717 	ldw	r5,28(r17)
10104b54:	000f883a 	mov	r7,zero
10104b58:	9809883a 	mov	r4,r19
10104b5c:	403ee83a 	callr	r8
10104b60:	00ffffc4 	movi	r3,-1
10104b64:	10c04426 	beq	r2,r3,10104c78 <__sflush_r+0x1a0>
10104b68:	88c0030b 	ldhu	r3,12(r17)
10104b6c:	89000417 	ldw	r4,16(r17)
10104b70:	88000115 	stw	zero,4(r17)
10104b74:	197dffcc 	andi	r5,r3,63487
10104b78:	8940030d 	sth	r5,12(r17)
10104b7c:	89000015 	stw	r4,0(r17)
10104b80:	18c4000c 	andi	r3,r3,4096
10104b84:	18002c1e 	bne	r3,zero,10104c38 <__sflush_r+0x160>
10104b88:	89400c17 	ldw	r5,48(r17)
10104b8c:	9c000015 	stw	r16,0(r19)
10104b90:	28000526 	beq	r5,zero,10104ba8 <__sflush_r+0xd0>
10104b94:	88801004 	addi	r2,r17,64
10104b98:	28800226 	beq	r5,r2,10104ba4 <__sflush_r+0xcc>
10104b9c:	9809883a 	mov	r4,r19
10104ba0:	01052440 	call	10105244 <_free_r>
10104ba4:	88000c15 	stw	zero,48(r17)
10104ba8:	0005883a 	mov	r2,zero
10104bac:	dfc00417 	ldw	ra,16(sp)
10104bb0:	dcc00317 	ldw	r19,12(sp)
10104bb4:	dc800217 	ldw	r18,8(sp)
10104bb8:	dc400117 	ldw	r17,4(sp)
10104bbc:	dc000017 	ldw	r16,0(sp)
10104bc0:	dec00504 	addi	sp,sp,20
10104bc4:	f800283a 	ret
10104bc8:	2c800417 	ldw	r18,16(r5)
10104bcc:	903ff626 	beq	r18,zero,10104ba8 <__alt_data_end+0xfffe4ba8>
10104bd0:	2c000017 	ldw	r16,0(r5)
10104bd4:	108000cc 	andi	r2,r2,3
10104bd8:	2c800015 	stw	r18,0(r5)
10104bdc:	84a1c83a 	sub	r16,r16,r18
10104be0:	1000131e 	bne	r2,zero,10104c30 <__sflush_r+0x158>
10104be4:	28800517 	ldw	r2,20(r5)
10104be8:	88800215 	stw	r2,8(r17)
10104bec:	04000316 	blt	zero,r16,10104bfc <__sflush_r+0x124>
10104bf0:	003fed06 	br	10104ba8 <__alt_data_end+0xfffe4ba8>
10104bf4:	90a5883a 	add	r18,r18,r2
10104bf8:	043feb0e 	bge	zero,r16,10104ba8 <__alt_data_end+0xfffe4ba8>
10104bfc:	88800917 	ldw	r2,36(r17)
10104c00:	89400717 	ldw	r5,28(r17)
10104c04:	800f883a 	mov	r7,r16
10104c08:	900d883a 	mov	r6,r18
10104c0c:	9809883a 	mov	r4,r19
10104c10:	103ee83a 	callr	r2
10104c14:	80a1c83a 	sub	r16,r16,r2
10104c18:	00bff616 	blt	zero,r2,10104bf4 <__alt_data_end+0xfffe4bf4>
10104c1c:	88c0030b 	ldhu	r3,12(r17)
10104c20:	00bfffc4 	movi	r2,-1
10104c24:	18c01014 	ori	r3,r3,64
10104c28:	88c0030d 	sth	r3,12(r17)
10104c2c:	003fdf06 	br	10104bac <__alt_data_end+0xfffe4bac>
10104c30:	0005883a 	mov	r2,zero
10104c34:	003fec06 	br	10104be8 <__alt_data_end+0xfffe4be8>
10104c38:	88801415 	stw	r2,80(r17)
10104c3c:	003fd206 	br	10104b88 <__alt_data_end+0xfffe4b88>
10104c40:	28c00f17 	ldw	r3,60(r5)
10104c44:	00ffb316 	blt	zero,r3,10104b14 <__alt_data_end+0xfffe4b14>
10104c48:	003fd706 	br	10104ba8 <__alt_data_end+0xfffe4ba8>
10104c4c:	89400717 	ldw	r5,28(r17)
10104c50:	000d883a 	mov	r6,zero
10104c54:	01c00044 	movi	r7,1
10104c58:	9809883a 	mov	r4,r19
10104c5c:	403ee83a 	callr	r8
10104c60:	100d883a 	mov	r6,r2
10104c64:	00bfffc4 	movi	r2,-1
10104c68:	30801426 	beq	r6,r2,10104cbc <__sflush_r+0x1e4>
10104c6c:	8880030b 	ldhu	r2,12(r17)
10104c70:	8a000a17 	ldw	r8,40(r17)
10104c74:	003fae06 	br	10104b30 <__alt_data_end+0xfffe4b30>
10104c78:	98c00017 	ldw	r3,0(r19)
10104c7c:	183fba26 	beq	r3,zero,10104b68 <__alt_data_end+0xfffe4b68>
10104c80:	01000744 	movi	r4,29
10104c84:	19000626 	beq	r3,r4,10104ca0 <__sflush_r+0x1c8>
10104c88:	01000584 	movi	r4,22
10104c8c:	19000426 	beq	r3,r4,10104ca0 <__sflush_r+0x1c8>
10104c90:	88c0030b 	ldhu	r3,12(r17)
10104c94:	18c01014 	ori	r3,r3,64
10104c98:	88c0030d 	sth	r3,12(r17)
10104c9c:	003fc306 	br	10104bac <__alt_data_end+0xfffe4bac>
10104ca0:	8880030b 	ldhu	r2,12(r17)
10104ca4:	88c00417 	ldw	r3,16(r17)
10104ca8:	88000115 	stw	zero,4(r17)
10104cac:	10bdffcc 	andi	r2,r2,63487
10104cb0:	8880030d 	sth	r2,12(r17)
10104cb4:	88c00015 	stw	r3,0(r17)
10104cb8:	003fb306 	br	10104b88 <__alt_data_end+0xfffe4b88>
10104cbc:	98800017 	ldw	r2,0(r19)
10104cc0:	103fea26 	beq	r2,zero,10104c6c <__alt_data_end+0xfffe4c6c>
10104cc4:	00c00744 	movi	r3,29
10104cc8:	10c00226 	beq	r2,r3,10104cd4 <__sflush_r+0x1fc>
10104ccc:	00c00584 	movi	r3,22
10104cd0:	10c0031e 	bne	r2,r3,10104ce0 <__sflush_r+0x208>
10104cd4:	9c000015 	stw	r16,0(r19)
10104cd8:	0005883a 	mov	r2,zero
10104cdc:	003fb306 	br	10104bac <__alt_data_end+0xfffe4bac>
10104ce0:	88c0030b 	ldhu	r3,12(r17)
10104ce4:	3005883a 	mov	r2,r6
10104ce8:	18c01014 	ori	r3,r3,64
10104cec:	88c0030d 	sth	r3,12(r17)
10104cf0:	003fae06 	br	10104bac <__alt_data_end+0xfffe4bac>

10104cf4 <_fflush_r>:
10104cf4:	defffd04 	addi	sp,sp,-12
10104cf8:	dc000115 	stw	r16,4(sp)
10104cfc:	dfc00215 	stw	ra,8(sp)
10104d00:	2021883a 	mov	r16,r4
10104d04:	20000226 	beq	r4,zero,10104d10 <_fflush_r+0x1c>
10104d08:	20800e17 	ldw	r2,56(r4)
10104d0c:	10000c26 	beq	r2,zero,10104d40 <_fflush_r+0x4c>
10104d10:	2880030f 	ldh	r2,12(r5)
10104d14:	1000051e 	bne	r2,zero,10104d2c <_fflush_r+0x38>
10104d18:	0005883a 	mov	r2,zero
10104d1c:	dfc00217 	ldw	ra,8(sp)
10104d20:	dc000117 	ldw	r16,4(sp)
10104d24:	dec00304 	addi	sp,sp,12
10104d28:	f800283a 	ret
10104d2c:	8009883a 	mov	r4,r16
10104d30:	dfc00217 	ldw	ra,8(sp)
10104d34:	dc000117 	ldw	r16,4(sp)
10104d38:	dec00304 	addi	sp,sp,12
10104d3c:	0104ad81 	jmpi	10104ad8 <__sflush_r>
10104d40:	d9400015 	stw	r5,0(sp)
10104d44:	01050d00 	call	101050d0 <__sinit>
10104d48:	d9400017 	ldw	r5,0(sp)
10104d4c:	003ff006 	br	10104d10 <__alt_data_end+0xfffe4d10>

10104d50 <fflush>:
10104d50:	20000526 	beq	r4,zero,10104d68 <fflush+0x18>
10104d54:	00840474 	movhi	r2,4113
10104d58:	1087db04 	addi	r2,r2,8044
10104d5c:	200b883a 	mov	r5,r4
10104d60:	11000017 	ldw	r4,0(r2)
10104d64:	0104cf41 	jmpi	10104cf4 <_fflush_r>
10104d68:	00840474 	movhi	r2,4113
10104d6c:	1087da04 	addi	r2,r2,8040
10104d70:	11000017 	ldw	r4,0(r2)
10104d74:	01440434 	movhi	r5,4112
10104d78:	29533d04 	addi	r5,r5,19700
10104d7c:	0105ad41 	jmpi	10105ad4 <_fwalk_reent>

10104d80 <__fp_unlock>:
10104d80:	0005883a 	mov	r2,zero
10104d84:	f800283a 	ret

10104d88 <_cleanup_r>:
10104d88:	01440474 	movhi	r5,4113
10104d8c:	2966bb04 	addi	r5,r5,-25876
10104d90:	0105ad41 	jmpi	10105ad4 <_fwalk_reent>

10104d94 <__sinit.part.1>:
10104d94:	defff704 	addi	sp,sp,-36
10104d98:	00c40434 	movhi	r3,4112
10104d9c:	dfc00815 	stw	ra,32(sp)
10104da0:	ddc00715 	stw	r23,28(sp)
10104da4:	dd800615 	stw	r22,24(sp)
10104da8:	dd400515 	stw	r21,20(sp)
10104dac:	dd000415 	stw	r20,16(sp)
10104db0:	dcc00315 	stw	r19,12(sp)
10104db4:	dc800215 	stw	r18,8(sp)
10104db8:	dc400115 	stw	r17,4(sp)
10104dbc:	dc000015 	stw	r16,0(sp)
10104dc0:	18d36204 	addi	r3,r3,19848
10104dc4:	24000117 	ldw	r16,4(r4)
10104dc8:	20c00f15 	stw	r3,60(r4)
10104dcc:	2080bb04 	addi	r2,r4,748
10104dd0:	00c000c4 	movi	r3,3
10104dd4:	20c0b915 	stw	r3,740(r4)
10104dd8:	2080ba15 	stw	r2,744(r4)
10104ddc:	2000b815 	stw	zero,736(r4)
10104de0:	05c00204 	movi	r23,8
10104de4:	00800104 	movi	r2,4
10104de8:	2025883a 	mov	r18,r4
10104dec:	b80d883a 	mov	r6,r23
10104df0:	81001704 	addi	r4,r16,92
10104df4:	000b883a 	mov	r5,zero
10104df8:	80000015 	stw	zero,0(r16)
10104dfc:	80000115 	stw	zero,4(r16)
10104e00:	80000215 	stw	zero,8(r16)
10104e04:	8080030d 	sth	r2,12(r16)
10104e08:	80001915 	stw	zero,100(r16)
10104e0c:	8000038d 	sth	zero,14(r16)
10104e10:	80000415 	stw	zero,16(r16)
10104e14:	80000515 	stw	zero,20(r16)
10104e18:	80000615 	stw	zero,24(r16)
10104e1c:	01069c40 	call	101069c4 <memset>
10104e20:	05840474 	movhi	r22,4113
10104e24:	94400217 	ldw	r17,8(r18)
10104e28:	05440474 	movhi	r21,4113
10104e2c:	05040474 	movhi	r20,4113
10104e30:	04c40474 	movhi	r19,4113
10104e34:	b5a04504 	addi	r22,r22,-32492
10104e38:	ad605c04 	addi	r21,r21,-32400
10104e3c:	a5207b04 	addi	r20,r20,-32276
10104e40:	9ce09204 	addi	r19,r19,-32184
10104e44:	85800815 	stw	r22,32(r16)
10104e48:	85400915 	stw	r21,36(r16)
10104e4c:	85000a15 	stw	r20,40(r16)
10104e50:	84c00b15 	stw	r19,44(r16)
10104e54:	84000715 	stw	r16,28(r16)
10104e58:	00800284 	movi	r2,10
10104e5c:	8880030d 	sth	r2,12(r17)
10104e60:	00800044 	movi	r2,1
10104e64:	b80d883a 	mov	r6,r23
10104e68:	89001704 	addi	r4,r17,92
10104e6c:	000b883a 	mov	r5,zero
10104e70:	88000015 	stw	zero,0(r17)
10104e74:	88000115 	stw	zero,4(r17)
10104e78:	88000215 	stw	zero,8(r17)
10104e7c:	88001915 	stw	zero,100(r17)
10104e80:	8880038d 	sth	r2,14(r17)
10104e84:	88000415 	stw	zero,16(r17)
10104e88:	88000515 	stw	zero,20(r17)
10104e8c:	88000615 	stw	zero,24(r17)
10104e90:	01069c40 	call	101069c4 <memset>
10104e94:	94000317 	ldw	r16,12(r18)
10104e98:	00800484 	movi	r2,18
10104e9c:	8c400715 	stw	r17,28(r17)
10104ea0:	8d800815 	stw	r22,32(r17)
10104ea4:	8d400915 	stw	r21,36(r17)
10104ea8:	8d000a15 	stw	r20,40(r17)
10104eac:	8cc00b15 	stw	r19,44(r17)
10104eb0:	8080030d 	sth	r2,12(r16)
10104eb4:	00800084 	movi	r2,2
10104eb8:	80000015 	stw	zero,0(r16)
10104ebc:	80000115 	stw	zero,4(r16)
10104ec0:	80000215 	stw	zero,8(r16)
10104ec4:	80001915 	stw	zero,100(r16)
10104ec8:	8080038d 	sth	r2,14(r16)
10104ecc:	80000415 	stw	zero,16(r16)
10104ed0:	80000515 	stw	zero,20(r16)
10104ed4:	80000615 	stw	zero,24(r16)
10104ed8:	b80d883a 	mov	r6,r23
10104edc:	000b883a 	mov	r5,zero
10104ee0:	81001704 	addi	r4,r16,92
10104ee4:	01069c40 	call	101069c4 <memset>
10104ee8:	00800044 	movi	r2,1
10104eec:	84000715 	stw	r16,28(r16)
10104ef0:	85800815 	stw	r22,32(r16)
10104ef4:	85400915 	stw	r21,36(r16)
10104ef8:	85000a15 	stw	r20,40(r16)
10104efc:	84c00b15 	stw	r19,44(r16)
10104f00:	90800e15 	stw	r2,56(r18)
10104f04:	dfc00817 	ldw	ra,32(sp)
10104f08:	ddc00717 	ldw	r23,28(sp)
10104f0c:	dd800617 	ldw	r22,24(sp)
10104f10:	dd400517 	ldw	r21,20(sp)
10104f14:	dd000417 	ldw	r20,16(sp)
10104f18:	dcc00317 	ldw	r19,12(sp)
10104f1c:	dc800217 	ldw	r18,8(sp)
10104f20:	dc400117 	ldw	r17,4(sp)
10104f24:	dc000017 	ldw	r16,0(sp)
10104f28:	dec00904 	addi	sp,sp,36
10104f2c:	f800283a 	ret

10104f30 <__fp_lock>:
10104f30:	0005883a 	mov	r2,zero
10104f34:	f800283a 	ret

10104f38 <__sfmoreglue>:
10104f38:	defffc04 	addi	sp,sp,-16
10104f3c:	dc400115 	stw	r17,4(sp)
10104f40:	2c7fffc4 	addi	r17,r5,-1
10104f44:	8c401a24 	muli	r17,r17,104
10104f48:	dc800215 	stw	r18,8(sp)
10104f4c:	2825883a 	mov	r18,r5
10104f50:	89401d04 	addi	r5,r17,116
10104f54:	dc000015 	stw	r16,0(sp)
10104f58:	dfc00315 	stw	ra,12(sp)
10104f5c:	0105e300 	call	10105e30 <_malloc_r>
10104f60:	1021883a 	mov	r16,r2
10104f64:	10000726 	beq	r2,zero,10104f84 <__sfmoreglue+0x4c>
10104f68:	11000304 	addi	r4,r2,12
10104f6c:	10000015 	stw	zero,0(r2)
10104f70:	14800115 	stw	r18,4(r2)
10104f74:	11000215 	stw	r4,8(r2)
10104f78:	89801a04 	addi	r6,r17,104
10104f7c:	000b883a 	mov	r5,zero
10104f80:	01069c40 	call	101069c4 <memset>
10104f84:	8005883a 	mov	r2,r16
10104f88:	dfc00317 	ldw	ra,12(sp)
10104f8c:	dc800217 	ldw	r18,8(sp)
10104f90:	dc400117 	ldw	r17,4(sp)
10104f94:	dc000017 	ldw	r16,0(sp)
10104f98:	dec00404 	addi	sp,sp,16
10104f9c:	f800283a 	ret

10104fa0 <__sfp>:
10104fa0:	defffb04 	addi	sp,sp,-20
10104fa4:	dc000015 	stw	r16,0(sp)
10104fa8:	04040474 	movhi	r16,4113
10104fac:	8407da04 	addi	r16,r16,8040
10104fb0:	dcc00315 	stw	r19,12(sp)
10104fb4:	2027883a 	mov	r19,r4
10104fb8:	81000017 	ldw	r4,0(r16)
10104fbc:	dfc00415 	stw	ra,16(sp)
10104fc0:	dc800215 	stw	r18,8(sp)
10104fc4:	20800e17 	ldw	r2,56(r4)
10104fc8:	dc400115 	stw	r17,4(sp)
10104fcc:	1000021e 	bne	r2,zero,10104fd8 <__sfp+0x38>
10104fd0:	0104d940 	call	10104d94 <__sinit.part.1>
10104fd4:	81000017 	ldw	r4,0(r16)
10104fd8:	2480b804 	addi	r18,r4,736
10104fdc:	047fffc4 	movi	r17,-1
10104fe0:	91000117 	ldw	r4,4(r18)
10104fe4:	94000217 	ldw	r16,8(r18)
10104fe8:	213fffc4 	addi	r4,r4,-1
10104fec:	20000a16 	blt	r4,zero,10105018 <__sfp+0x78>
10104ff0:	8080030f 	ldh	r2,12(r16)
10104ff4:	10000c26 	beq	r2,zero,10105028 <__sfp+0x88>
10104ff8:	80c01d04 	addi	r3,r16,116
10104ffc:	00000206 	br	10105008 <__sfp+0x68>
10105000:	18bfe60f 	ldh	r2,-104(r3)
10105004:	10000826 	beq	r2,zero,10105028 <__sfp+0x88>
10105008:	213fffc4 	addi	r4,r4,-1
1010500c:	1c3ffd04 	addi	r16,r3,-12
10105010:	18c01a04 	addi	r3,r3,104
10105014:	247ffa1e 	bne	r4,r17,10105000 <__alt_data_end+0xfffe5000>
10105018:	90800017 	ldw	r2,0(r18)
1010501c:	10001d26 	beq	r2,zero,10105094 <__sfp+0xf4>
10105020:	1025883a 	mov	r18,r2
10105024:	003fee06 	br	10104fe0 <__alt_data_end+0xfffe4fe0>
10105028:	00bfffc4 	movi	r2,-1
1010502c:	8080038d 	sth	r2,14(r16)
10105030:	00800044 	movi	r2,1
10105034:	8080030d 	sth	r2,12(r16)
10105038:	80001915 	stw	zero,100(r16)
1010503c:	80000015 	stw	zero,0(r16)
10105040:	80000215 	stw	zero,8(r16)
10105044:	80000115 	stw	zero,4(r16)
10105048:	80000415 	stw	zero,16(r16)
1010504c:	80000515 	stw	zero,20(r16)
10105050:	80000615 	stw	zero,24(r16)
10105054:	01800204 	movi	r6,8
10105058:	000b883a 	mov	r5,zero
1010505c:	81001704 	addi	r4,r16,92
10105060:	01069c40 	call	101069c4 <memset>
10105064:	8005883a 	mov	r2,r16
10105068:	80000c15 	stw	zero,48(r16)
1010506c:	80000d15 	stw	zero,52(r16)
10105070:	80001115 	stw	zero,68(r16)
10105074:	80001215 	stw	zero,72(r16)
10105078:	dfc00417 	ldw	ra,16(sp)
1010507c:	dcc00317 	ldw	r19,12(sp)
10105080:	dc800217 	ldw	r18,8(sp)
10105084:	dc400117 	ldw	r17,4(sp)
10105088:	dc000017 	ldw	r16,0(sp)
1010508c:	dec00504 	addi	sp,sp,20
10105090:	f800283a 	ret
10105094:	01400104 	movi	r5,4
10105098:	9809883a 	mov	r4,r19
1010509c:	0104f380 	call	10104f38 <__sfmoreglue>
101050a0:	90800015 	stw	r2,0(r18)
101050a4:	103fde1e 	bne	r2,zero,10105020 <__alt_data_end+0xfffe5020>
101050a8:	00800304 	movi	r2,12
101050ac:	98800015 	stw	r2,0(r19)
101050b0:	0005883a 	mov	r2,zero
101050b4:	003ff006 	br	10105078 <__alt_data_end+0xfffe5078>

101050b8 <_cleanup>:
101050b8:	00840474 	movhi	r2,4113
101050bc:	1087da04 	addi	r2,r2,8040
101050c0:	11000017 	ldw	r4,0(r2)
101050c4:	01440474 	movhi	r5,4113
101050c8:	2966bb04 	addi	r5,r5,-25876
101050cc:	0105ad41 	jmpi	10105ad4 <_fwalk_reent>

101050d0 <__sinit>:
101050d0:	20800e17 	ldw	r2,56(r4)
101050d4:	10000126 	beq	r2,zero,101050dc <__sinit+0xc>
101050d8:	f800283a 	ret
101050dc:	0104d941 	jmpi	10104d94 <__sinit.part.1>

101050e0 <__sfp_lock_acquire>:
101050e0:	f800283a 	ret

101050e4 <__sfp_lock_release>:
101050e4:	f800283a 	ret

101050e8 <__sinit_lock_acquire>:
101050e8:	f800283a 	ret

101050ec <__sinit_lock_release>:
101050ec:	f800283a 	ret

101050f0 <__fp_lock_all>:
101050f0:	00840474 	movhi	r2,4113
101050f4:	1087db04 	addi	r2,r2,8044
101050f8:	11000017 	ldw	r4,0(r2)
101050fc:	01440434 	movhi	r5,4112
10105100:	2953cc04 	addi	r5,r5,20272
10105104:	0105a101 	jmpi	10105a10 <_fwalk>

10105108 <__fp_unlock_all>:
10105108:	00840474 	movhi	r2,4113
1010510c:	1087db04 	addi	r2,r2,8044
10105110:	11000017 	ldw	r4,0(r2)
10105114:	01440434 	movhi	r5,4112
10105118:	29536004 	addi	r5,r5,19840
1010511c:	0105a101 	jmpi	10105a10 <_fwalk>

10105120 <_malloc_trim_r>:
10105120:	defffb04 	addi	sp,sp,-20
10105124:	dcc00315 	stw	r19,12(sp)
10105128:	04c40474 	movhi	r19,4113
1010512c:	dc800215 	stw	r18,8(sp)
10105130:	dc400115 	stw	r17,4(sp)
10105134:	dc000015 	stw	r16,0(sp)
10105138:	dfc00415 	stw	ra,16(sp)
1010513c:	2821883a 	mov	r16,r5
10105140:	9cc24c04 	addi	r19,r19,2352
10105144:	2025883a 	mov	r18,r4
10105148:	010daf00 	call	1010daf0 <__malloc_lock>
1010514c:	98800217 	ldw	r2,8(r19)
10105150:	14400117 	ldw	r17,4(r2)
10105154:	00bfff04 	movi	r2,-4
10105158:	88a2703a 	and	r17,r17,r2
1010515c:	8c21c83a 	sub	r16,r17,r16
10105160:	8403fbc4 	addi	r16,r16,4079
10105164:	8020d33a 	srli	r16,r16,12
10105168:	0083ffc4 	movi	r2,4095
1010516c:	843fffc4 	addi	r16,r16,-1
10105170:	8020933a 	slli	r16,r16,12
10105174:	1400060e 	bge	r2,r16,10105190 <_malloc_trim_r+0x70>
10105178:	000b883a 	mov	r5,zero
1010517c:	9009883a 	mov	r4,r18
10105180:	01080c00 	call	101080c0 <_sbrk_r>
10105184:	98c00217 	ldw	r3,8(r19)
10105188:	1c47883a 	add	r3,r3,r17
1010518c:	10c00a26 	beq	r2,r3,101051b8 <_malloc_trim_r+0x98>
10105190:	9009883a 	mov	r4,r18
10105194:	010db140 	call	1010db14 <__malloc_unlock>
10105198:	0005883a 	mov	r2,zero
1010519c:	dfc00417 	ldw	ra,16(sp)
101051a0:	dcc00317 	ldw	r19,12(sp)
101051a4:	dc800217 	ldw	r18,8(sp)
101051a8:	dc400117 	ldw	r17,4(sp)
101051ac:	dc000017 	ldw	r16,0(sp)
101051b0:	dec00504 	addi	sp,sp,20
101051b4:	f800283a 	ret
101051b8:	040bc83a 	sub	r5,zero,r16
101051bc:	9009883a 	mov	r4,r18
101051c0:	01080c00 	call	101080c0 <_sbrk_r>
101051c4:	00ffffc4 	movi	r3,-1
101051c8:	10c00d26 	beq	r2,r3,10105200 <_malloc_trim_r+0xe0>
101051cc:	00c40474 	movhi	r3,4113
101051d0:	18cee104 	addi	r3,r3,15236
101051d4:	18800017 	ldw	r2,0(r3)
101051d8:	99000217 	ldw	r4,8(r19)
101051dc:	8c23c83a 	sub	r17,r17,r16
101051e0:	8c400054 	ori	r17,r17,1
101051e4:	1421c83a 	sub	r16,r2,r16
101051e8:	24400115 	stw	r17,4(r4)
101051ec:	9009883a 	mov	r4,r18
101051f0:	1c000015 	stw	r16,0(r3)
101051f4:	010db140 	call	1010db14 <__malloc_unlock>
101051f8:	00800044 	movi	r2,1
101051fc:	003fe706 	br	1010519c <__alt_data_end+0xfffe519c>
10105200:	000b883a 	mov	r5,zero
10105204:	9009883a 	mov	r4,r18
10105208:	01080c00 	call	101080c0 <_sbrk_r>
1010520c:	99000217 	ldw	r4,8(r19)
10105210:	014003c4 	movi	r5,15
10105214:	1107c83a 	sub	r3,r2,r4
10105218:	28ffdd0e 	bge	r5,r3,10105190 <__alt_data_end+0xfffe5190>
1010521c:	01440474 	movhi	r5,4113
10105220:	2947dd04 	addi	r5,r5,8052
10105224:	29400017 	ldw	r5,0(r5)
10105228:	18c00054 	ori	r3,r3,1
1010522c:	20c00115 	stw	r3,4(r4)
10105230:	00c40474 	movhi	r3,4113
10105234:	1145c83a 	sub	r2,r2,r5
10105238:	18cee104 	addi	r3,r3,15236
1010523c:	18800015 	stw	r2,0(r3)
10105240:	003fd306 	br	10105190 <__alt_data_end+0xfffe5190>

10105244 <_free_r>:
10105244:	28004126 	beq	r5,zero,1010534c <_free_r+0x108>
10105248:	defffd04 	addi	sp,sp,-12
1010524c:	dc400115 	stw	r17,4(sp)
10105250:	dc000015 	stw	r16,0(sp)
10105254:	2023883a 	mov	r17,r4
10105258:	2821883a 	mov	r16,r5
1010525c:	dfc00215 	stw	ra,8(sp)
10105260:	010daf00 	call	1010daf0 <__malloc_lock>
10105264:	81ffff17 	ldw	r7,-4(r16)
10105268:	00bfff84 	movi	r2,-2
1010526c:	01040474 	movhi	r4,4113
10105270:	81bffe04 	addi	r6,r16,-8
10105274:	3884703a 	and	r2,r7,r2
10105278:	21024c04 	addi	r4,r4,2352
1010527c:	308b883a 	add	r5,r6,r2
10105280:	2a400117 	ldw	r9,4(r5)
10105284:	22000217 	ldw	r8,8(r4)
10105288:	00ffff04 	movi	r3,-4
1010528c:	48c6703a 	and	r3,r9,r3
10105290:	2a005726 	beq	r5,r8,101053f0 <_free_r+0x1ac>
10105294:	28c00115 	stw	r3,4(r5)
10105298:	39c0004c 	andi	r7,r7,1
1010529c:	3800091e 	bne	r7,zero,101052c4 <_free_r+0x80>
101052a0:	823ffe17 	ldw	r8,-8(r16)
101052a4:	22400204 	addi	r9,r4,8
101052a8:	320dc83a 	sub	r6,r6,r8
101052ac:	31c00217 	ldw	r7,8(r6)
101052b0:	1205883a 	add	r2,r2,r8
101052b4:	3a406526 	beq	r7,r9,1010544c <_free_r+0x208>
101052b8:	32000317 	ldw	r8,12(r6)
101052bc:	3a000315 	stw	r8,12(r7)
101052c0:	41c00215 	stw	r7,8(r8)
101052c4:	28cf883a 	add	r7,r5,r3
101052c8:	39c00117 	ldw	r7,4(r7)
101052cc:	39c0004c 	andi	r7,r7,1
101052d0:	38003a26 	beq	r7,zero,101053bc <_free_r+0x178>
101052d4:	10c00054 	ori	r3,r2,1
101052d8:	30c00115 	stw	r3,4(r6)
101052dc:	3087883a 	add	r3,r6,r2
101052e0:	18800015 	stw	r2,0(r3)
101052e4:	00c07fc4 	movi	r3,511
101052e8:	18801936 	bltu	r3,r2,10105350 <_free_r+0x10c>
101052ec:	1004d0fa 	srli	r2,r2,3
101052f0:	01c00044 	movi	r7,1
101052f4:	21400117 	ldw	r5,4(r4)
101052f8:	10c00044 	addi	r3,r2,1
101052fc:	18c7883a 	add	r3,r3,r3
10105300:	1005d0ba 	srai	r2,r2,2
10105304:	18c7883a 	add	r3,r3,r3
10105308:	18c7883a 	add	r3,r3,r3
1010530c:	1907883a 	add	r3,r3,r4
10105310:	3884983a 	sll	r2,r7,r2
10105314:	19c00017 	ldw	r7,0(r3)
10105318:	1a3ffe04 	addi	r8,r3,-8
1010531c:	1144b03a 	or	r2,r2,r5
10105320:	32000315 	stw	r8,12(r6)
10105324:	31c00215 	stw	r7,8(r6)
10105328:	20800115 	stw	r2,4(r4)
1010532c:	19800015 	stw	r6,0(r3)
10105330:	39800315 	stw	r6,12(r7)
10105334:	8809883a 	mov	r4,r17
10105338:	dfc00217 	ldw	ra,8(sp)
1010533c:	dc400117 	ldw	r17,4(sp)
10105340:	dc000017 	ldw	r16,0(sp)
10105344:	dec00304 	addi	sp,sp,12
10105348:	010db141 	jmpi	1010db14 <__malloc_unlock>
1010534c:	f800283a 	ret
10105350:	100ad27a 	srli	r5,r2,9
10105354:	00c00104 	movi	r3,4
10105358:	19404a36 	bltu	r3,r5,10105484 <_free_r+0x240>
1010535c:	100ad1ba 	srli	r5,r2,6
10105360:	28c00e44 	addi	r3,r5,57
10105364:	18c7883a 	add	r3,r3,r3
10105368:	29400e04 	addi	r5,r5,56
1010536c:	18c7883a 	add	r3,r3,r3
10105370:	18c7883a 	add	r3,r3,r3
10105374:	1909883a 	add	r4,r3,r4
10105378:	20c00017 	ldw	r3,0(r4)
1010537c:	01c40474 	movhi	r7,4113
10105380:	213ffe04 	addi	r4,r4,-8
10105384:	39c24c04 	addi	r7,r7,2352
10105388:	20c04426 	beq	r4,r3,1010549c <_free_r+0x258>
1010538c:	01ffff04 	movi	r7,-4
10105390:	19400117 	ldw	r5,4(r3)
10105394:	29ca703a 	and	r5,r5,r7
10105398:	1140022e 	bgeu	r2,r5,101053a4 <_free_r+0x160>
1010539c:	18c00217 	ldw	r3,8(r3)
101053a0:	20fffb1e 	bne	r4,r3,10105390 <__alt_data_end+0xfffe5390>
101053a4:	19000317 	ldw	r4,12(r3)
101053a8:	31000315 	stw	r4,12(r6)
101053ac:	30c00215 	stw	r3,8(r6)
101053b0:	21800215 	stw	r6,8(r4)
101053b4:	19800315 	stw	r6,12(r3)
101053b8:	003fde06 	br	10105334 <__alt_data_end+0xfffe5334>
101053bc:	29c00217 	ldw	r7,8(r5)
101053c0:	10c5883a 	add	r2,r2,r3
101053c4:	00c40474 	movhi	r3,4113
101053c8:	18c24e04 	addi	r3,r3,2360
101053cc:	38c03b26 	beq	r7,r3,101054bc <_free_r+0x278>
101053d0:	2a000317 	ldw	r8,12(r5)
101053d4:	11400054 	ori	r5,r2,1
101053d8:	3087883a 	add	r3,r6,r2
101053dc:	3a000315 	stw	r8,12(r7)
101053e0:	41c00215 	stw	r7,8(r8)
101053e4:	31400115 	stw	r5,4(r6)
101053e8:	18800015 	stw	r2,0(r3)
101053ec:	003fbd06 	br	101052e4 <__alt_data_end+0xfffe52e4>
101053f0:	39c0004c 	andi	r7,r7,1
101053f4:	10c5883a 	add	r2,r2,r3
101053f8:	3800071e 	bne	r7,zero,10105418 <_free_r+0x1d4>
101053fc:	81fffe17 	ldw	r7,-8(r16)
10105400:	31cdc83a 	sub	r6,r6,r7
10105404:	30c00317 	ldw	r3,12(r6)
10105408:	31400217 	ldw	r5,8(r6)
1010540c:	11c5883a 	add	r2,r2,r7
10105410:	28c00315 	stw	r3,12(r5)
10105414:	19400215 	stw	r5,8(r3)
10105418:	10c00054 	ori	r3,r2,1
1010541c:	30c00115 	stw	r3,4(r6)
10105420:	00c40474 	movhi	r3,4113
10105424:	18c7de04 	addi	r3,r3,8056
10105428:	18c00017 	ldw	r3,0(r3)
1010542c:	21800215 	stw	r6,8(r4)
10105430:	10ffc036 	bltu	r2,r3,10105334 <__alt_data_end+0xfffe5334>
10105434:	00840474 	movhi	r2,4113
10105438:	108ed804 	addi	r2,r2,15200
1010543c:	11400017 	ldw	r5,0(r2)
10105440:	8809883a 	mov	r4,r17
10105444:	01051200 	call	10105120 <_malloc_trim_r>
10105448:	003fba06 	br	10105334 <__alt_data_end+0xfffe5334>
1010544c:	28c9883a 	add	r4,r5,r3
10105450:	21000117 	ldw	r4,4(r4)
10105454:	2100004c 	andi	r4,r4,1
10105458:	2000391e 	bne	r4,zero,10105540 <_free_r+0x2fc>
1010545c:	29c00217 	ldw	r7,8(r5)
10105460:	29000317 	ldw	r4,12(r5)
10105464:	1885883a 	add	r2,r3,r2
10105468:	10c00054 	ori	r3,r2,1
1010546c:	39000315 	stw	r4,12(r7)
10105470:	21c00215 	stw	r7,8(r4)
10105474:	30c00115 	stw	r3,4(r6)
10105478:	308d883a 	add	r6,r6,r2
1010547c:	30800015 	stw	r2,0(r6)
10105480:	003fac06 	br	10105334 <__alt_data_end+0xfffe5334>
10105484:	00c00504 	movi	r3,20
10105488:	19401536 	bltu	r3,r5,101054e0 <_free_r+0x29c>
1010548c:	28c01704 	addi	r3,r5,92
10105490:	18c7883a 	add	r3,r3,r3
10105494:	294016c4 	addi	r5,r5,91
10105498:	003fb406 	br	1010536c <__alt_data_end+0xfffe536c>
1010549c:	280bd0ba 	srai	r5,r5,2
101054a0:	00c00044 	movi	r3,1
101054a4:	38800117 	ldw	r2,4(r7)
101054a8:	194a983a 	sll	r5,r3,r5
101054ac:	2007883a 	mov	r3,r4
101054b0:	2884b03a 	or	r2,r5,r2
101054b4:	38800115 	stw	r2,4(r7)
101054b8:	003fbb06 	br	101053a8 <__alt_data_end+0xfffe53a8>
101054bc:	21800515 	stw	r6,20(r4)
101054c0:	21800415 	stw	r6,16(r4)
101054c4:	10c00054 	ori	r3,r2,1
101054c8:	31c00315 	stw	r7,12(r6)
101054cc:	31c00215 	stw	r7,8(r6)
101054d0:	30c00115 	stw	r3,4(r6)
101054d4:	308d883a 	add	r6,r6,r2
101054d8:	30800015 	stw	r2,0(r6)
101054dc:	003f9506 	br	10105334 <__alt_data_end+0xfffe5334>
101054e0:	00c01504 	movi	r3,84
101054e4:	19400536 	bltu	r3,r5,101054fc <_free_r+0x2b8>
101054e8:	100ad33a 	srli	r5,r2,12
101054ec:	28c01bc4 	addi	r3,r5,111
101054f0:	18c7883a 	add	r3,r3,r3
101054f4:	29401b84 	addi	r5,r5,110
101054f8:	003f9c06 	br	1010536c <__alt_data_end+0xfffe536c>
101054fc:	00c05504 	movi	r3,340
10105500:	19400536 	bltu	r3,r5,10105518 <_free_r+0x2d4>
10105504:	100ad3fa 	srli	r5,r2,15
10105508:	28c01e04 	addi	r3,r5,120
1010550c:	18c7883a 	add	r3,r3,r3
10105510:	29401dc4 	addi	r5,r5,119
10105514:	003f9506 	br	1010536c <__alt_data_end+0xfffe536c>
10105518:	00c15504 	movi	r3,1364
1010551c:	19400536 	bltu	r3,r5,10105534 <_free_r+0x2f0>
10105520:	100ad4ba 	srli	r5,r2,18
10105524:	28c01f44 	addi	r3,r5,125
10105528:	18c7883a 	add	r3,r3,r3
1010552c:	29401f04 	addi	r5,r5,124
10105530:	003f8e06 	br	1010536c <__alt_data_end+0xfffe536c>
10105534:	00c03f84 	movi	r3,254
10105538:	01401f84 	movi	r5,126
1010553c:	003f8b06 	br	1010536c <__alt_data_end+0xfffe536c>
10105540:	10c00054 	ori	r3,r2,1
10105544:	30c00115 	stw	r3,4(r6)
10105548:	308d883a 	add	r6,r6,r2
1010554c:	30800015 	stw	r2,0(r6)
10105550:	003f7806 	br	10105334 <__alt_data_end+0xfffe5334>

10105554 <__sfvwrite_r>:
10105554:	30800217 	ldw	r2,8(r6)
10105558:	10006726 	beq	r2,zero,101056f8 <__sfvwrite_r+0x1a4>
1010555c:	28c0030b 	ldhu	r3,12(r5)
10105560:	defff404 	addi	sp,sp,-48
10105564:	dd400715 	stw	r21,28(sp)
10105568:	dd000615 	stw	r20,24(sp)
1010556c:	dc000215 	stw	r16,8(sp)
10105570:	dfc00b15 	stw	ra,44(sp)
10105574:	df000a15 	stw	fp,40(sp)
10105578:	ddc00915 	stw	r23,36(sp)
1010557c:	dd800815 	stw	r22,32(sp)
10105580:	dcc00515 	stw	r19,20(sp)
10105584:	dc800415 	stw	r18,16(sp)
10105588:	dc400315 	stw	r17,12(sp)
1010558c:	1880020c 	andi	r2,r3,8
10105590:	2821883a 	mov	r16,r5
10105594:	202b883a 	mov	r21,r4
10105598:	3029883a 	mov	r20,r6
1010559c:	10002726 	beq	r2,zero,1010563c <__sfvwrite_r+0xe8>
101055a0:	28800417 	ldw	r2,16(r5)
101055a4:	10002526 	beq	r2,zero,1010563c <__sfvwrite_r+0xe8>
101055a8:	1880008c 	andi	r2,r3,2
101055ac:	a4400017 	ldw	r17,0(r20)
101055b0:	10002a26 	beq	r2,zero,1010565c <__sfvwrite_r+0x108>
101055b4:	05a00034 	movhi	r22,32768
101055b8:	0027883a 	mov	r19,zero
101055bc:	0025883a 	mov	r18,zero
101055c0:	b5bf0004 	addi	r22,r22,-1024
101055c4:	980d883a 	mov	r6,r19
101055c8:	a809883a 	mov	r4,r21
101055cc:	90004626 	beq	r18,zero,101056e8 <__sfvwrite_r+0x194>
101055d0:	900f883a 	mov	r7,r18
101055d4:	b480022e 	bgeu	r22,r18,101055e0 <__sfvwrite_r+0x8c>
101055d8:	01e00034 	movhi	r7,32768
101055dc:	39ff0004 	addi	r7,r7,-1024
101055e0:	80800917 	ldw	r2,36(r16)
101055e4:	81400717 	ldw	r5,28(r16)
101055e8:	103ee83a 	callr	r2
101055ec:	0080570e 	bge	zero,r2,1010574c <__sfvwrite_r+0x1f8>
101055f0:	a0c00217 	ldw	r3,8(r20)
101055f4:	98a7883a 	add	r19,r19,r2
101055f8:	90a5c83a 	sub	r18,r18,r2
101055fc:	1885c83a 	sub	r2,r3,r2
10105600:	a0800215 	stw	r2,8(r20)
10105604:	103fef1e 	bne	r2,zero,101055c4 <__alt_data_end+0xfffe55c4>
10105608:	0005883a 	mov	r2,zero
1010560c:	dfc00b17 	ldw	ra,44(sp)
10105610:	df000a17 	ldw	fp,40(sp)
10105614:	ddc00917 	ldw	r23,36(sp)
10105618:	dd800817 	ldw	r22,32(sp)
1010561c:	dd400717 	ldw	r21,28(sp)
10105620:	dd000617 	ldw	r20,24(sp)
10105624:	dcc00517 	ldw	r19,20(sp)
10105628:	dc800417 	ldw	r18,16(sp)
1010562c:	dc400317 	ldw	r17,12(sp)
10105630:	dc000217 	ldw	r16,8(sp)
10105634:	dec00c04 	addi	sp,sp,48
10105638:	f800283a 	ret
1010563c:	800b883a 	mov	r5,r16
10105640:	a809883a 	mov	r4,r21
10105644:	01030fc0 	call	101030fc <__swsetup_r>
10105648:	1000eb1e 	bne	r2,zero,101059f8 <__sfvwrite_r+0x4a4>
1010564c:	80c0030b 	ldhu	r3,12(r16)
10105650:	a4400017 	ldw	r17,0(r20)
10105654:	1880008c 	andi	r2,r3,2
10105658:	103fd61e 	bne	r2,zero,101055b4 <__alt_data_end+0xfffe55b4>
1010565c:	1880004c 	andi	r2,r3,1
10105660:	10003f1e 	bne	r2,zero,10105760 <__sfvwrite_r+0x20c>
10105664:	0039883a 	mov	fp,zero
10105668:	0025883a 	mov	r18,zero
1010566c:	90001a26 	beq	r18,zero,101056d8 <__sfvwrite_r+0x184>
10105670:	1880800c 	andi	r2,r3,512
10105674:	84c00217 	ldw	r19,8(r16)
10105678:	10002126 	beq	r2,zero,10105700 <__sfvwrite_r+0x1ac>
1010567c:	982f883a 	mov	r23,r19
10105680:	94c09336 	bltu	r18,r19,101058d0 <__sfvwrite_r+0x37c>
10105684:	1881200c 	andi	r2,r3,1152
10105688:	10009e1e 	bne	r2,zero,10105904 <__sfvwrite_r+0x3b0>
1010568c:	81000017 	ldw	r4,0(r16)
10105690:	b80d883a 	mov	r6,r23
10105694:	e00b883a 	mov	r5,fp
10105698:	01068680 	call	10106868 <memmove>
1010569c:	80c00217 	ldw	r3,8(r16)
101056a0:	81000017 	ldw	r4,0(r16)
101056a4:	9005883a 	mov	r2,r18
101056a8:	1ce7c83a 	sub	r19,r3,r19
101056ac:	25cf883a 	add	r7,r4,r23
101056b0:	84c00215 	stw	r19,8(r16)
101056b4:	81c00015 	stw	r7,0(r16)
101056b8:	a0c00217 	ldw	r3,8(r20)
101056bc:	e0b9883a 	add	fp,fp,r2
101056c0:	90a5c83a 	sub	r18,r18,r2
101056c4:	18a7c83a 	sub	r19,r3,r2
101056c8:	a4c00215 	stw	r19,8(r20)
101056cc:	983fce26 	beq	r19,zero,10105608 <__alt_data_end+0xfffe5608>
101056d0:	80c0030b 	ldhu	r3,12(r16)
101056d4:	903fe61e 	bne	r18,zero,10105670 <__alt_data_end+0xfffe5670>
101056d8:	8f000017 	ldw	fp,0(r17)
101056dc:	8c800117 	ldw	r18,4(r17)
101056e0:	8c400204 	addi	r17,r17,8
101056e4:	003fe106 	br	1010566c <__alt_data_end+0xfffe566c>
101056e8:	8cc00017 	ldw	r19,0(r17)
101056ec:	8c800117 	ldw	r18,4(r17)
101056f0:	8c400204 	addi	r17,r17,8
101056f4:	003fb306 	br	101055c4 <__alt_data_end+0xfffe55c4>
101056f8:	0005883a 	mov	r2,zero
101056fc:	f800283a 	ret
10105700:	81000017 	ldw	r4,0(r16)
10105704:	80800417 	ldw	r2,16(r16)
10105708:	11005736 	bltu	r2,r4,10105868 <__sfvwrite_r+0x314>
1010570c:	85c00517 	ldw	r23,20(r16)
10105710:	95c05536 	bltu	r18,r23,10105868 <__sfvwrite_r+0x314>
10105714:	00a00034 	movhi	r2,32768
10105718:	10bfffc4 	addi	r2,r2,-1
1010571c:	9009883a 	mov	r4,r18
10105720:	1480012e 	bgeu	r2,r18,10105728 <__sfvwrite_r+0x1d4>
10105724:	1009883a 	mov	r4,r2
10105728:	b80b883a 	mov	r5,r23
1010572c:	010ad580 	call	1010ad58 <__divsi3>
10105730:	15cf383a 	mul	r7,r2,r23
10105734:	81400717 	ldw	r5,28(r16)
10105738:	80800917 	ldw	r2,36(r16)
1010573c:	e00d883a 	mov	r6,fp
10105740:	a809883a 	mov	r4,r21
10105744:	103ee83a 	callr	r2
10105748:	00bfdb16 	blt	zero,r2,101056b8 <__alt_data_end+0xfffe56b8>
1010574c:	8080030b 	ldhu	r2,12(r16)
10105750:	10801014 	ori	r2,r2,64
10105754:	8080030d 	sth	r2,12(r16)
10105758:	00bfffc4 	movi	r2,-1
1010575c:	003fab06 	br	1010560c <__alt_data_end+0xfffe560c>
10105760:	0027883a 	mov	r19,zero
10105764:	0011883a 	mov	r8,zero
10105768:	0039883a 	mov	fp,zero
1010576c:	0025883a 	mov	r18,zero
10105770:	90001f26 	beq	r18,zero,101057f0 <__sfvwrite_r+0x29c>
10105774:	40005a26 	beq	r8,zero,101058e0 <__sfvwrite_r+0x38c>
10105778:	982d883a 	mov	r22,r19
1010577c:	94c0012e 	bgeu	r18,r19,10105784 <__sfvwrite_r+0x230>
10105780:	902d883a 	mov	r22,r18
10105784:	81000017 	ldw	r4,0(r16)
10105788:	80800417 	ldw	r2,16(r16)
1010578c:	b02f883a 	mov	r23,r22
10105790:	81c00517 	ldw	r7,20(r16)
10105794:	1100032e 	bgeu	r2,r4,101057a4 <__sfvwrite_r+0x250>
10105798:	80c00217 	ldw	r3,8(r16)
1010579c:	38c7883a 	add	r3,r7,r3
101057a0:	1d801816 	blt	r3,r22,10105804 <__sfvwrite_r+0x2b0>
101057a4:	b1c03e16 	blt	r22,r7,101058a0 <__sfvwrite_r+0x34c>
101057a8:	80800917 	ldw	r2,36(r16)
101057ac:	81400717 	ldw	r5,28(r16)
101057b0:	e00d883a 	mov	r6,fp
101057b4:	da000115 	stw	r8,4(sp)
101057b8:	a809883a 	mov	r4,r21
101057bc:	103ee83a 	callr	r2
101057c0:	102f883a 	mov	r23,r2
101057c4:	da000117 	ldw	r8,4(sp)
101057c8:	00bfe00e 	bge	zero,r2,1010574c <__alt_data_end+0xfffe574c>
101057cc:	9de7c83a 	sub	r19,r19,r23
101057d0:	98001f26 	beq	r19,zero,10105850 <__sfvwrite_r+0x2fc>
101057d4:	a0800217 	ldw	r2,8(r20)
101057d8:	e5f9883a 	add	fp,fp,r23
101057dc:	95e5c83a 	sub	r18,r18,r23
101057e0:	15efc83a 	sub	r23,r2,r23
101057e4:	a5c00215 	stw	r23,8(r20)
101057e8:	b83f8726 	beq	r23,zero,10105608 <__alt_data_end+0xfffe5608>
101057ec:	903fe11e 	bne	r18,zero,10105774 <__alt_data_end+0xfffe5774>
101057f0:	8f000017 	ldw	fp,0(r17)
101057f4:	8c800117 	ldw	r18,4(r17)
101057f8:	0011883a 	mov	r8,zero
101057fc:	8c400204 	addi	r17,r17,8
10105800:	003fdb06 	br	10105770 <__alt_data_end+0xfffe5770>
10105804:	180d883a 	mov	r6,r3
10105808:	e00b883a 	mov	r5,fp
1010580c:	da000115 	stw	r8,4(sp)
10105810:	d8c00015 	stw	r3,0(sp)
10105814:	01068680 	call	10106868 <memmove>
10105818:	d8c00017 	ldw	r3,0(sp)
1010581c:	80800017 	ldw	r2,0(r16)
10105820:	800b883a 	mov	r5,r16
10105824:	a809883a 	mov	r4,r21
10105828:	10c5883a 	add	r2,r2,r3
1010582c:	80800015 	stw	r2,0(r16)
10105830:	d8c00015 	stw	r3,0(sp)
10105834:	0104cf40 	call	10104cf4 <_fflush_r>
10105838:	d8c00017 	ldw	r3,0(sp)
1010583c:	da000117 	ldw	r8,4(sp)
10105840:	103fc21e 	bne	r2,zero,1010574c <__alt_data_end+0xfffe574c>
10105844:	182f883a 	mov	r23,r3
10105848:	9de7c83a 	sub	r19,r19,r23
1010584c:	983fe11e 	bne	r19,zero,101057d4 <__alt_data_end+0xfffe57d4>
10105850:	800b883a 	mov	r5,r16
10105854:	a809883a 	mov	r4,r21
10105858:	0104cf40 	call	10104cf4 <_fflush_r>
1010585c:	103fbb1e 	bne	r2,zero,1010574c <__alt_data_end+0xfffe574c>
10105860:	0011883a 	mov	r8,zero
10105864:	003fdb06 	br	101057d4 <__alt_data_end+0xfffe57d4>
10105868:	94c0012e 	bgeu	r18,r19,10105870 <__sfvwrite_r+0x31c>
1010586c:	9027883a 	mov	r19,r18
10105870:	980d883a 	mov	r6,r19
10105874:	e00b883a 	mov	r5,fp
10105878:	01068680 	call	10106868 <memmove>
1010587c:	80800217 	ldw	r2,8(r16)
10105880:	80c00017 	ldw	r3,0(r16)
10105884:	14c5c83a 	sub	r2,r2,r19
10105888:	1cc7883a 	add	r3,r3,r19
1010588c:	80800215 	stw	r2,8(r16)
10105890:	80c00015 	stw	r3,0(r16)
10105894:	10004326 	beq	r2,zero,101059a4 <__sfvwrite_r+0x450>
10105898:	9805883a 	mov	r2,r19
1010589c:	003f8606 	br	101056b8 <__alt_data_end+0xfffe56b8>
101058a0:	b00d883a 	mov	r6,r22
101058a4:	e00b883a 	mov	r5,fp
101058a8:	da000115 	stw	r8,4(sp)
101058ac:	01068680 	call	10106868 <memmove>
101058b0:	80800217 	ldw	r2,8(r16)
101058b4:	80c00017 	ldw	r3,0(r16)
101058b8:	da000117 	ldw	r8,4(sp)
101058bc:	1585c83a 	sub	r2,r2,r22
101058c0:	1dad883a 	add	r22,r3,r22
101058c4:	80800215 	stw	r2,8(r16)
101058c8:	85800015 	stw	r22,0(r16)
101058cc:	003fbf06 	br	101057cc <__alt_data_end+0xfffe57cc>
101058d0:	81000017 	ldw	r4,0(r16)
101058d4:	9027883a 	mov	r19,r18
101058d8:	902f883a 	mov	r23,r18
101058dc:	003f6c06 	br	10105690 <__alt_data_end+0xfffe5690>
101058e0:	900d883a 	mov	r6,r18
101058e4:	01400284 	movi	r5,10
101058e8:	e009883a 	mov	r4,fp
101058ec:	010663c0 	call	1010663c <memchr>
101058f0:	10003e26 	beq	r2,zero,101059ec <__sfvwrite_r+0x498>
101058f4:	10800044 	addi	r2,r2,1
101058f8:	1727c83a 	sub	r19,r2,fp
101058fc:	02000044 	movi	r8,1
10105900:	003f9d06 	br	10105778 <__alt_data_end+0xfffe5778>
10105904:	80800517 	ldw	r2,20(r16)
10105908:	81400417 	ldw	r5,16(r16)
1010590c:	81c00017 	ldw	r7,0(r16)
10105910:	10a7883a 	add	r19,r2,r2
10105914:	9885883a 	add	r2,r19,r2
10105918:	1026d7fa 	srli	r19,r2,31
1010591c:	396dc83a 	sub	r22,r7,r5
10105920:	b1000044 	addi	r4,r22,1
10105924:	9885883a 	add	r2,r19,r2
10105928:	1027d07a 	srai	r19,r2,1
1010592c:	2485883a 	add	r2,r4,r18
10105930:	980d883a 	mov	r6,r19
10105934:	9880022e 	bgeu	r19,r2,10105940 <__sfvwrite_r+0x3ec>
10105938:	1027883a 	mov	r19,r2
1010593c:	100d883a 	mov	r6,r2
10105940:	18c1000c 	andi	r3,r3,1024
10105944:	18001c26 	beq	r3,zero,101059b8 <__sfvwrite_r+0x464>
10105948:	300b883a 	mov	r5,r6
1010594c:	a809883a 	mov	r4,r21
10105950:	0105e300 	call	10105e30 <_malloc_r>
10105954:	102f883a 	mov	r23,r2
10105958:	10002926 	beq	r2,zero,10105a00 <__sfvwrite_r+0x4ac>
1010595c:	81400417 	ldw	r5,16(r16)
10105960:	b00d883a 	mov	r6,r22
10105964:	1009883a 	mov	r4,r2
10105968:	01067200 	call	10106720 <memcpy>
1010596c:	8080030b 	ldhu	r2,12(r16)
10105970:	00fedfc4 	movi	r3,-1153
10105974:	10c4703a 	and	r2,r2,r3
10105978:	10802014 	ori	r2,r2,128
1010597c:	8080030d 	sth	r2,12(r16)
10105980:	bd89883a 	add	r4,r23,r22
10105984:	9d8fc83a 	sub	r7,r19,r22
10105988:	85c00415 	stw	r23,16(r16)
1010598c:	84c00515 	stw	r19,20(r16)
10105990:	81000015 	stw	r4,0(r16)
10105994:	9027883a 	mov	r19,r18
10105998:	81c00215 	stw	r7,8(r16)
1010599c:	902f883a 	mov	r23,r18
101059a0:	003f3b06 	br	10105690 <__alt_data_end+0xfffe5690>
101059a4:	800b883a 	mov	r5,r16
101059a8:	a809883a 	mov	r4,r21
101059ac:	0104cf40 	call	10104cf4 <_fflush_r>
101059b0:	103fb926 	beq	r2,zero,10105898 <__alt_data_end+0xfffe5898>
101059b4:	003f6506 	br	1010574c <__alt_data_end+0xfffe574c>
101059b8:	a809883a 	mov	r4,r21
101059bc:	0107ae80 	call	10107ae8 <_realloc_r>
101059c0:	102f883a 	mov	r23,r2
101059c4:	103fee1e 	bne	r2,zero,10105980 <__alt_data_end+0xfffe5980>
101059c8:	81400417 	ldw	r5,16(r16)
101059cc:	a809883a 	mov	r4,r21
101059d0:	01052440 	call	10105244 <_free_r>
101059d4:	8080030b 	ldhu	r2,12(r16)
101059d8:	00ffdfc4 	movi	r3,-129
101059dc:	1884703a 	and	r2,r3,r2
101059e0:	00c00304 	movi	r3,12
101059e4:	a8c00015 	stw	r3,0(r21)
101059e8:	003f5906 	br	10105750 <__alt_data_end+0xfffe5750>
101059ec:	94c00044 	addi	r19,r18,1
101059f0:	02000044 	movi	r8,1
101059f4:	003f6006 	br	10105778 <__alt_data_end+0xfffe5778>
101059f8:	00bfffc4 	movi	r2,-1
101059fc:	003f0306 	br	1010560c <__alt_data_end+0xfffe560c>
10105a00:	00800304 	movi	r2,12
10105a04:	a8800015 	stw	r2,0(r21)
10105a08:	8080030b 	ldhu	r2,12(r16)
10105a0c:	003f5006 	br	10105750 <__alt_data_end+0xfffe5750>

10105a10 <_fwalk>:
10105a10:	defff704 	addi	sp,sp,-36
10105a14:	dd000415 	stw	r20,16(sp)
10105a18:	dfc00815 	stw	ra,32(sp)
10105a1c:	ddc00715 	stw	r23,28(sp)
10105a20:	dd800615 	stw	r22,24(sp)
10105a24:	dd400515 	stw	r21,20(sp)
10105a28:	dcc00315 	stw	r19,12(sp)
10105a2c:	dc800215 	stw	r18,8(sp)
10105a30:	dc400115 	stw	r17,4(sp)
10105a34:	dc000015 	stw	r16,0(sp)
10105a38:	2500b804 	addi	r20,r4,736
10105a3c:	a0002326 	beq	r20,zero,10105acc <_fwalk+0xbc>
10105a40:	282b883a 	mov	r21,r5
10105a44:	002f883a 	mov	r23,zero
10105a48:	05800044 	movi	r22,1
10105a4c:	04ffffc4 	movi	r19,-1
10105a50:	a4400117 	ldw	r17,4(r20)
10105a54:	a4800217 	ldw	r18,8(r20)
10105a58:	8c7fffc4 	addi	r17,r17,-1
10105a5c:	88000d16 	blt	r17,zero,10105a94 <_fwalk+0x84>
10105a60:	94000304 	addi	r16,r18,12
10105a64:	94800384 	addi	r18,r18,14
10105a68:	8080000b 	ldhu	r2,0(r16)
10105a6c:	8c7fffc4 	addi	r17,r17,-1
10105a70:	813ffd04 	addi	r4,r16,-12
10105a74:	b080042e 	bgeu	r22,r2,10105a88 <_fwalk+0x78>
10105a78:	9080000f 	ldh	r2,0(r18)
10105a7c:	14c00226 	beq	r2,r19,10105a88 <_fwalk+0x78>
10105a80:	a83ee83a 	callr	r21
10105a84:	b8aeb03a 	or	r23,r23,r2
10105a88:	84001a04 	addi	r16,r16,104
10105a8c:	94801a04 	addi	r18,r18,104
10105a90:	8cfff51e 	bne	r17,r19,10105a68 <__alt_data_end+0xfffe5a68>
10105a94:	a5000017 	ldw	r20,0(r20)
10105a98:	a03fed1e 	bne	r20,zero,10105a50 <__alt_data_end+0xfffe5a50>
10105a9c:	b805883a 	mov	r2,r23
10105aa0:	dfc00817 	ldw	ra,32(sp)
10105aa4:	ddc00717 	ldw	r23,28(sp)
10105aa8:	dd800617 	ldw	r22,24(sp)
10105aac:	dd400517 	ldw	r21,20(sp)
10105ab0:	dd000417 	ldw	r20,16(sp)
10105ab4:	dcc00317 	ldw	r19,12(sp)
10105ab8:	dc800217 	ldw	r18,8(sp)
10105abc:	dc400117 	ldw	r17,4(sp)
10105ac0:	dc000017 	ldw	r16,0(sp)
10105ac4:	dec00904 	addi	sp,sp,36
10105ac8:	f800283a 	ret
10105acc:	002f883a 	mov	r23,zero
10105ad0:	003ff206 	br	10105a9c <__alt_data_end+0xfffe5a9c>

10105ad4 <_fwalk_reent>:
10105ad4:	defff704 	addi	sp,sp,-36
10105ad8:	dd000415 	stw	r20,16(sp)
10105adc:	dfc00815 	stw	ra,32(sp)
10105ae0:	ddc00715 	stw	r23,28(sp)
10105ae4:	dd800615 	stw	r22,24(sp)
10105ae8:	dd400515 	stw	r21,20(sp)
10105aec:	dcc00315 	stw	r19,12(sp)
10105af0:	dc800215 	stw	r18,8(sp)
10105af4:	dc400115 	stw	r17,4(sp)
10105af8:	dc000015 	stw	r16,0(sp)
10105afc:	2500b804 	addi	r20,r4,736
10105b00:	a0002326 	beq	r20,zero,10105b90 <_fwalk_reent+0xbc>
10105b04:	282b883a 	mov	r21,r5
10105b08:	2027883a 	mov	r19,r4
10105b0c:	002f883a 	mov	r23,zero
10105b10:	05800044 	movi	r22,1
10105b14:	04bfffc4 	movi	r18,-1
10105b18:	a4400117 	ldw	r17,4(r20)
10105b1c:	a4000217 	ldw	r16,8(r20)
10105b20:	8c7fffc4 	addi	r17,r17,-1
10105b24:	88000c16 	blt	r17,zero,10105b58 <_fwalk_reent+0x84>
10105b28:	84000304 	addi	r16,r16,12
10105b2c:	8080000b 	ldhu	r2,0(r16)
10105b30:	8c7fffc4 	addi	r17,r17,-1
10105b34:	817ffd04 	addi	r5,r16,-12
10105b38:	b080052e 	bgeu	r22,r2,10105b50 <_fwalk_reent+0x7c>
10105b3c:	8080008f 	ldh	r2,2(r16)
10105b40:	9809883a 	mov	r4,r19
10105b44:	14800226 	beq	r2,r18,10105b50 <_fwalk_reent+0x7c>
10105b48:	a83ee83a 	callr	r21
10105b4c:	b8aeb03a 	or	r23,r23,r2
10105b50:	84001a04 	addi	r16,r16,104
10105b54:	8cbff51e 	bne	r17,r18,10105b2c <__alt_data_end+0xfffe5b2c>
10105b58:	a5000017 	ldw	r20,0(r20)
10105b5c:	a03fee1e 	bne	r20,zero,10105b18 <__alt_data_end+0xfffe5b18>
10105b60:	b805883a 	mov	r2,r23
10105b64:	dfc00817 	ldw	ra,32(sp)
10105b68:	ddc00717 	ldw	r23,28(sp)
10105b6c:	dd800617 	ldw	r22,24(sp)
10105b70:	dd400517 	ldw	r21,20(sp)
10105b74:	dd000417 	ldw	r20,16(sp)
10105b78:	dcc00317 	ldw	r19,12(sp)
10105b7c:	dc800217 	ldw	r18,8(sp)
10105b80:	dc400117 	ldw	r17,4(sp)
10105b84:	dc000017 	ldw	r16,0(sp)
10105b88:	dec00904 	addi	sp,sp,36
10105b8c:	f800283a 	ret
10105b90:	002f883a 	mov	r23,zero
10105b94:	003ff206 	br	10105b60 <__alt_data_end+0xfffe5b60>

10105b98 <_setlocale_r>:
10105b98:	30001b26 	beq	r6,zero,10105c08 <_setlocale_r+0x70>
10105b9c:	01440474 	movhi	r5,4113
10105ba0:	defffe04 	addi	sp,sp,-8
10105ba4:	29408104 	addi	r5,r5,516
10105ba8:	3009883a 	mov	r4,r6
10105bac:	dc000015 	stw	r16,0(sp)
10105bb0:	dfc00115 	stw	ra,4(sp)
10105bb4:	3021883a 	mov	r16,r6
10105bb8:	01082500 	call	10108250 <strcmp>
10105bbc:	1000061e 	bne	r2,zero,10105bd8 <_setlocale_r+0x40>
10105bc0:	00840474 	movhi	r2,4113
10105bc4:	10808004 	addi	r2,r2,512
10105bc8:	dfc00117 	ldw	ra,4(sp)
10105bcc:	dc000017 	ldw	r16,0(sp)
10105bd0:	dec00204 	addi	sp,sp,8
10105bd4:	f800283a 	ret
10105bd8:	01440474 	movhi	r5,4113
10105bdc:	29408004 	addi	r5,r5,512
10105be0:	8009883a 	mov	r4,r16
10105be4:	01082500 	call	10108250 <strcmp>
10105be8:	103ff526 	beq	r2,zero,10105bc0 <__alt_data_end+0xfffe5bc0>
10105bec:	01440474 	movhi	r5,4113
10105bf0:	29406b04 	addi	r5,r5,428
10105bf4:	8009883a 	mov	r4,r16
10105bf8:	01082500 	call	10108250 <strcmp>
10105bfc:	103ff026 	beq	r2,zero,10105bc0 <__alt_data_end+0xfffe5bc0>
10105c00:	0005883a 	mov	r2,zero
10105c04:	003ff006 	br	10105bc8 <__alt_data_end+0xfffe5bc8>
10105c08:	00840474 	movhi	r2,4113
10105c0c:	10808004 	addi	r2,r2,512
10105c10:	f800283a 	ret

10105c14 <__locale_charset>:
10105c14:	00840474 	movhi	r2,4113
10105c18:	10823604 	addi	r2,r2,2264
10105c1c:	f800283a 	ret

10105c20 <__locale_mb_cur_max>:
10105c20:	00840474 	movhi	r2,4113
10105c24:	1087dc04 	addi	r2,r2,8048
10105c28:	10800017 	ldw	r2,0(r2)
10105c2c:	f800283a 	ret

10105c30 <__locale_msgcharset>:
10105c30:	00840474 	movhi	r2,4113
10105c34:	10822e04 	addi	r2,r2,2232
10105c38:	f800283a 	ret

10105c3c <__locale_cjk_lang>:
10105c3c:	0005883a 	mov	r2,zero
10105c40:	f800283a 	ret

10105c44 <_localeconv_r>:
10105c44:	00840474 	movhi	r2,4113
10105c48:	10823e04 	addi	r2,r2,2296
10105c4c:	f800283a 	ret

10105c50 <setlocale>:
10105c50:	00840474 	movhi	r2,4113
10105c54:	1087db04 	addi	r2,r2,8044
10105c58:	280d883a 	mov	r6,r5
10105c5c:	200b883a 	mov	r5,r4
10105c60:	11000017 	ldw	r4,0(r2)
10105c64:	0105b981 	jmpi	10105b98 <_setlocale_r>

10105c68 <localeconv>:
10105c68:	00840474 	movhi	r2,4113
10105c6c:	10823e04 	addi	r2,r2,2296
10105c70:	f800283a 	ret

10105c74 <__smakebuf_r>:
10105c74:	2880030b 	ldhu	r2,12(r5)
10105c78:	10c0008c 	andi	r3,r2,2
10105c7c:	1800411e 	bne	r3,zero,10105d84 <__smakebuf_r+0x110>
10105c80:	deffec04 	addi	sp,sp,-80
10105c84:	dc000f15 	stw	r16,60(sp)
10105c88:	2821883a 	mov	r16,r5
10105c8c:	2940038f 	ldh	r5,14(r5)
10105c90:	dc401015 	stw	r17,64(sp)
10105c94:	dfc01315 	stw	ra,76(sp)
10105c98:	dcc01215 	stw	r19,72(sp)
10105c9c:	dc801115 	stw	r18,68(sp)
10105ca0:	2023883a 	mov	r17,r4
10105ca4:	28001c16 	blt	r5,zero,10105d18 <__smakebuf_r+0xa4>
10105ca8:	d80d883a 	mov	r6,sp
10105cac:	0109df80 	call	10109df8 <_fstat_r>
10105cb0:	10001816 	blt	r2,zero,10105d14 <__smakebuf_r+0xa0>
10105cb4:	d8800117 	ldw	r2,4(sp)
10105cb8:	00e00014 	movui	r3,32768
10105cbc:	10bc000c 	andi	r2,r2,61440
10105cc0:	14c80020 	cmpeqi	r19,r2,8192
10105cc4:	10c03726 	beq	r2,r3,10105da4 <__smakebuf_r+0x130>
10105cc8:	80c0030b 	ldhu	r3,12(r16)
10105ccc:	18c20014 	ori	r3,r3,2048
10105cd0:	80c0030d 	sth	r3,12(r16)
10105cd4:	00c80004 	movi	r3,8192
10105cd8:	10c0521e 	bne	r2,r3,10105e24 <__smakebuf_r+0x1b0>
10105cdc:	8140038f 	ldh	r5,14(r16)
10105ce0:	8809883a 	mov	r4,r17
10105ce4:	0109e540 	call	10109e54 <_isatty_r>
10105ce8:	10004c26 	beq	r2,zero,10105e1c <__smakebuf_r+0x1a8>
10105cec:	8080030b 	ldhu	r2,12(r16)
10105cf0:	80c010c4 	addi	r3,r16,67
10105cf4:	80c00015 	stw	r3,0(r16)
10105cf8:	10800054 	ori	r2,r2,1
10105cfc:	8080030d 	sth	r2,12(r16)
10105d00:	00800044 	movi	r2,1
10105d04:	80c00415 	stw	r3,16(r16)
10105d08:	80800515 	stw	r2,20(r16)
10105d0c:	04810004 	movi	r18,1024
10105d10:	00000706 	br	10105d30 <__smakebuf_r+0xbc>
10105d14:	8080030b 	ldhu	r2,12(r16)
10105d18:	10c0200c 	andi	r3,r2,128
10105d1c:	18001f1e 	bne	r3,zero,10105d9c <__smakebuf_r+0x128>
10105d20:	04810004 	movi	r18,1024
10105d24:	10820014 	ori	r2,r2,2048
10105d28:	8080030d 	sth	r2,12(r16)
10105d2c:	0027883a 	mov	r19,zero
10105d30:	900b883a 	mov	r5,r18
10105d34:	8809883a 	mov	r4,r17
10105d38:	0105e300 	call	10105e30 <_malloc_r>
10105d3c:	10002c26 	beq	r2,zero,10105df0 <__smakebuf_r+0x17c>
10105d40:	80c0030b 	ldhu	r3,12(r16)
10105d44:	01040434 	movhi	r4,4112
10105d48:	21136204 	addi	r4,r4,19848
10105d4c:	89000f15 	stw	r4,60(r17)
10105d50:	18c02014 	ori	r3,r3,128
10105d54:	80c0030d 	sth	r3,12(r16)
10105d58:	80800015 	stw	r2,0(r16)
10105d5c:	80800415 	stw	r2,16(r16)
10105d60:	84800515 	stw	r18,20(r16)
10105d64:	98001a1e 	bne	r19,zero,10105dd0 <__smakebuf_r+0x15c>
10105d68:	dfc01317 	ldw	ra,76(sp)
10105d6c:	dcc01217 	ldw	r19,72(sp)
10105d70:	dc801117 	ldw	r18,68(sp)
10105d74:	dc401017 	ldw	r17,64(sp)
10105d78:	dc000f17 	ldw	r16,60(sp)
10105d7c:	dec01404 	addi	sp,sp,80
10105d80:	f800283a 	ret
10105d84:	288010c4 	addi	r2,r5,67
10105d88:	28800015 	stw	r2,0(r5)
10105d8c:	28800415 	stw	r2,16(r5)
10105d90:	00800044 	movi	r2,1
10105d94:	28800515 	stw	r2,20(r5)
10105d98:	f800283a 	ret
10105d9c:	04801004 	movi	r18,64
10105da0:	003fe006 	br	10105d24 <__alt_data_end+0xfffe5d24>
10105da4:	81000a17 	ldw	r4,40(r16)
10105da8:	00c40474 	movhi	r3,4113
10105dac:	18e07b04 	addi	r3,r3,-32276
10105db0:	20ffc51e 	bne	r4,r3,10105cc8 <__alt_data_end+0xfffe5cc8>
10105db4:	8080030b 	ldhu	r2,12(r16)
10105db8:	04810004 	movi	r18,1024
10105dbc:	84801315 	stw	r18,76(r16)
10105dc0:	1484b03a 	or	r2,r2,r18
10105dc4:	8080030d 	sth	r2,12(r16)
10105dc8:	0027883a 	mov	r19,zero
10105dcc:	003fd806 	br	10105d30 <__alt_data_end+0xfffe5d30>
10105dd0:	8140038f 	ldh	r5,14(r16)
10105dd4:	8809883a 	mov	r4,r17
10105dd8:	0109e540 	call	10109e54 <_isatty_r>
10105ddc:	103fe226 	beq	r2,zero,10105d68 <__alt_data_end+0xfffe5d68>
10105de0:	8080030b 	ldhu	r2,12(r16)
10105de4:	10800054 	ori	r2,r2,1
10105de8:	8080030d 	sth	r2,12(r16)
10105dec:	003fde06 	br	10105d68 <__alt_data_end+0xfffe5d68>
10105df0:	8080030b 	ldhu	r2,12(r16)
10105df4:	10c0800c 	andi	r3,r2,512
10105df8:	183fdb1e 	bne	r3,zero,10105d68 <__alt_data_end+0xfffe5d68>
10105dfc:	10800094 	ori	r2,r2,2
10105e00:	80c010c4 	addi	r3,r16,67
10105e04:	8080030d 	sth	r2,12(r16)
10105e08:	00800044 	movi	r2,1
10105e0c:	80c00015 	stw	r3,0(r16)
10105e10:	80c00415 	stw	r3,16(r16)
10105e14:	80800515 	stw	r2,20(r16)
10105e18:	003fd306 	br	10105d68 <__alt_data_end+0xfffe5d68>
10105e1c:	04810004 	movi	r18,1024
10105e20:	003fc306 	br	10105d30 <__alt_data_end+0xfffe5d30>
10105e24:	0027883a 	mov	r19,zero
10105e28:	04810004 	movi	r18,1024
10105e2c:	003fc006 	br	10105d30 <__alt_data_end+0xfffe5d30>

10105e30 <_malloc_r>:
10105e30:	defff504 	addi	sp,sp,-44
10105e34:	dc800315 	stw	r18,12(sp)
10105e38:	dfc00a15 	stw	ra,40(sp)
10105e3c:	df000915 	stw	fp,36(sp)
10105e40:	ddc00815 	stw	r23,32(sp)
10105e44:	dd800715 	stw	r22,28(sp)
10105e48:	dd400615 	stw	r21,24(sp)
10105e4c:	dd000515 	stw	r20,20(sp)
10105e50:	dcc00415 	stw	r19,16(sp)
10105e54:	dc400215 	stw	r17,8(sp)
10105e58:	dc000115 	stw	r16,4(sp)
10105e5c:	288002c4 	addi	r2,r5,11
10105e60:	00c00584 	movi	r3,22
10105e64:	2025883a 	mov	r18,r4
10105e68:	18807f2e 	bgeu	r3,r2,10106068 <_malloc_r+0x238>
10105e6c:	047ffe04 	movi	r17,-8
10105e70:	1462703a 	and	r17,r2,r17
10105e74:	8800a316 	blt	r17,zero,10106104 <_malloc_r+0x2d4>
10105e78:	8940a236 	bltu	r17,r5,10106104 <_malloc_r+0x2d4>
10105e7c:	010daf00 	call	1010daf0 <__malloc_lock>
10105e80:	00807dc4 	movi	r2,503
10105e84:	1441e92e 	bgeu	r2,r17,1010662c <_malloc_r+0x7fc>
10105e88:	8804d27a 	srli	r2,r17,9
10105e8c:	1000a126 	beq	r2,zero,10106114 <_malloc_r+0x2e4>
10105e90:	00c00104 	movi	r3,4
10105e94:	18811e36 	bltu	r3,r2,10106310 <_malloc_r+0x4e0>
10105e98:	8804d1ba 	srli	r2,r17,6
10105e9c:	12000e44 	addi	r8,r2,57
10105ea0:	11c00e04 	addi	r7,r2,56
10105ea4:	4209883a 	add	r4,r8,r8
10105ea8:	04c40474 	movhi	r19,4113
10105eac:	2109883a 	add	r4,r4,r4
10105eb0:	9cc24c04 	addi	r19,r19,2352
10105eb4:	2109883a 	add	r4,r4,r4
10105eb8:	9909883a 	add	r4,r19,r4
10105ebc:	24000117 	ldw	r16,4(r4)
10105ec0:	213ffe04 	addi	r4,r4,-8
10105ec4:	24009726 	beq	r4,r16,10106124 <_malloc_r+0x2f4>
10105ec8:	80800117 	ldw	r2,4(r16)
10105ecc:	01bfff04 	movi	r6,-4
10105ed0:	014003c4 	movi	r5,15
10105ed4:	1184703a 	and	r2,r2,r6
10105ed8:	1447c83a 	sub	r3,r2,r17
10105edc:	28c00716 	blt	r5,r3,10105efc <_malloc_r+0xcc>
10105ee0:	1800920e 	bge	r3,zero,1010612c <_malloc_r+0x2fc>
10105ee4:	84000317 	ldw	r16,12(r16)
10105ee8:	24008e26 	beq	r4,r16,10106124 <_malloc_r+0x2f4>
10105eec:	80800117 	ldw	r2,4(r16)
10105ef0:	1184703a 	and	r2,r2,r6
10105ef4:	1447c83a 	sub	r3,r2,r17
10105ef8:	28fff90e 	bge	r5,r3,10105ee0 <__alt_data_end+0xfffe5ee0>
10105efc:	3809883a 	mov	r4,r7
10105f00:	01840474 	movhi	r6,4113
10105f04:	9c000417 	ldw	r16,16(r19)
10105f08:	31824c04 	addi	r6,r6,2352
10105f0c:	32000204 	addi	r8,r6,8
10105f10:	82013426 	beq	r16,r8,101063e4 <_malloc_r+0x5b4>
10105f14:	80c00117 	ldw	r3,4(r16)
10105f18:	00bfff04 	movi	r2,-4
10105f1c:	188e703a 	and	r7,r3,r2
10105f20:	3c45c83a 	sub	r2,r7,r17
10105f24:	00c003c4 	movi	r3,15
10105f28:	18811f16 	blt	r3,r2,101063a8 <_malloc_r+0x578>
10105f2c:	32000515 	stw	r8,20(r6)
10105f30:	32000415 	stw	r8,16(r6)
10105f34:	10007f0e 	bge	r2,zero,10106134 <_malloc_r+0x304>
10105f38:	00807fc4 	movi	r2,511
10105f3c:	11c0fd36 	bltu	r2,r7,10106334 <_malloc_r+0x504>
10105f40:	3806d0fa 	srli	r3,r7,3
10105f44:	01c00044 	movi	r7,1
10105f48:	30800117 	ldw	r2,4(r6)
10105f4c:	19400044 	addi	r5,r3,1
10105f50:	294b883a 	add	r5,r5,r5
10105f54:	1807d0ba 	srai	r3,r3,2
10105f58:	294b883a 	add	r5,r5,r5
10105f5c:	294b883a 	add	r5,r5,r5
10105f60:	298b883a 	add	r5,r5,r6
10105f64:	38c6983a 	sll	r3,r7,r3
10105f68:	29c00017 	ldw	r7,0(r5)
10105f6c:	2a7ffe04 	addi	r9,r5,-8
10105f70:	1886b03a 	or	r3,r3,r2
10105f74:	82400315 	stw	r9,12(r16)
10105f78:	81c00215 	stw	r7,8(r16)
10105f7c:	30c00115 	stw	r3,4(r6)
10105f80:	2c000015 	stw	r16,0(r5)
10105f84:	3c000315 	stw	r16,12(r7)
10105f88:	2005d0ba 	srai	r2,r4,2
10105f8c:	01400044 	movi	r5,1
10105f90:	288a983a 	sll	r5,r5,r2
10105f94:	19406f36 	bltu	r3,r5,10106154 <_malloc_r+0x324>
10105f98:	28c4703a 	and	r2,r5,r3
10105f9c:	10000a1e 	bne	r2,zero,10105fc8 <_malloc_r+0x198>
10105fa0:	00bfff04 	movi	r2,-4
10105fa4:	294b883a 	add	r5,r5,r5
10105fa8:	2088703a 	and	r4,r4,r2
10105fac:	28c4703a 	and	r2,r5,r3
10105fb0:	21000104 	addi	r4,r4,4
10105fb4:	1000041e 	bne	r2,zero,10105fc8 <_malloc_r+0x198>
10105fb8:	294b883a 	add	r5,r5,r5
10105fbc:	28c4703a 	and	r2,r5,r3
10105fc0:	21000104 	addi	r4,r4,4
10105fc4:	103ffc26 	beq	r2,zero,10105fb8 <__alt_data_end+0xfffe5fb8>
10105fc8:	02bfff04 	movi	r10,-4
10105fcc:	024003c4 	movi	r9,15
10105fd0:	21800044 	addi	r6,r4,1
10105fd4:	318d883a 	add	r6,r6,r6
10105fd8:	318d883a 	add	r6,r6,r6
10105fdc:	318d883a 	add	r6,r6,r6
10105fe0:	998d883a 	add	r6,r19,r6
10105fe4:	333ffe04 	addi	r12,r6,-8
10105fe8:	2017883a 	mov	r11,r4
10105fec:	31800104 	addi	r6,r6,4
10105ff0:	34000017 	ldw	r16,0(r6)
10105ff4:	31fffd04 	addi	r7,r6,-12
10105ff8:	81c0041e 	bne	r16,r7,1010600c <_malloc_r+0x1dc>
10105ffc:	0000fb06 	br	101063ec <_malloc_r+0x5bc>
10106000:	1801030e 	bge	r3,zero,10106410 <_malloc_r+0x5e0>
10106004:	84000317 	ldw	r16,12(r16)
10106008:	81c0f826 	beq	r16,r7,101063ec <_malloc_r+0x5bc>
1010600c:	80800117 	ldw	r2,4(r16)
10106010:	1284703a 	and	r2,r2,r10
10106014:	1447c83a 	sub	r3,r2,r17
10106018:	48fff90e 	bge	r9,r3,10106000 <__alt_data_end+0xfffe6000>
1010601c:	80800317 	ldw	r2,12(r16)
10106020:	81000217 	ldw	r4,8(r16)
10106024:	89400054 	ori	r5,r17,1
10106028:	81400115 	stw	r5,4(r16)
1010602c:	20800315 	stw	r2,12(r4)
10106030:	11000215 	stw	r4,8(r2)
10106034:	8463883a 	add	r17,r16,r17
10106038:	9c400515 	stw	r17,20(r19)
1010603c:	9c400415 	stw	r17,16(r19)
10106040:	18800054 	ori	r2,r3,1
10106044:	88800115 	stw	r2,4(r17)
10106048:	8a000315 	stw	r8,12(r17)
1010604c:	8a000215 	stw	r8,8(r17)
10106050:	88e3883a 	add	r17,r17,r3
10106054:	88c00015 	stw	r3,0(r17)
10106058:	9009883a 	mov	r4,r18
1010605c:	010db140 	call	1010db14 <__malloc_unlock>
10106060:	80800204 	addi	r2,r16,8
10106064:	00001b06 	br	101060d4 <_malloc_r+0x2a4>
10106068:	04400404 	movi	r17,16
1010606c:	89402536 	bltu	r17,r5,10106104 <_malloc_r+0x2d4>
10106070:	010daf00 	call	1010daf0 <__malloc_lock>
10106074:	00800184 	movi	r2,6
10106078:	01000084 	movi	r4,2
1010607c:	04c40474 	movhi	r19,4113
10106080:	1085883a 	add	r2,r2,r2
10106084:	9cc24c04 	addi	r19,r19,2352
10106088:	1085883a 	add	r2,r2,r2
1010608c:	9885883a 	add	r2,r19,r2
10106090:	14000117 	ldw	r16,4(r2)
10106094:	10fffe04 	addi	r3,r2,-8
10106098:	80c0d926 	beq	r16,r3,10106400 <_malloc_r+0x5d0>
1010609c:	80c00117 	ldw	r3,4(r16)
101060a0:	81000317 	ldw	r4,12(r16)
101060a4:	00bfff04 	movi	r2,-4
101060a8:	1884703a 	and	r2,r3,r2
101060ac:	81400217 	ldw	r5,8(r16)
101060b0:	8085883a 	add	r2,r16,r2
101060b4:	10c00117 	ldw	r3,4(r2)
101060b8:	29000315 	stw	r4,12(r5)
101060bc:	21400215 	stw	r5,8(r4)
101060c0:	18c00054 	ori	r3,r3,1
101060c4:	10c00115 	stw	r3,4(r2)
101060c8:	9009883a 	mov	r4,r18
101060cc:	010db140 	call	1010db14 <__malloc_unlock>
101060d0:	80800204 	addi	r2,r16,8
101060d4:	dfc00a17 	ldw	ra,40(sp)
101060d8:	df000917 	ldw	fp,36(sp)
101060dc:	ddc00817 	ldw	r23,32(sp)
101060e0:	dd800717 	ldw	r22,28(sp)
101060e4:	dd400617 	ldw	r21,24(sp)
101060e8:	dd000517 	ldw	r20,20(sp)
101060ec:	dcc00417 	ldw	r19,16(sp)
101060f0:	dc800317 	ldw	r18,12(sp)
101060f4:	dc400217 	ldw	r17,8(sp)
101060f8:	dc000117 	ldw	r16,4(sp)
101060fc:	dec00b04 	addi	sp,sp,44
10106100:	f800283a 	ret
10106104:	00800304 	movi	r2,12
10106108:	90800015 	stw	r2,0(r18)
1010610c:	0005883a 	mov	r2,zero
10106110:	003ff006 	br	101060d4 <__alt_data_end+0xfffe60d4>
10106114:	01002004 	movi	r4,128
10106118:	02001004 	movi	r8,64
1010611c:	01c00fc4 	movi	r7,63
10106120:	003f6106 	br	10105ea8 <__alt_data_end+0xfffe5ea8>
10106124:	4009883a 	mov	r4,r8
10106128:	003f7506 	br	10105f00 <__alt_data_end+0xfffe5f00>
1010612c:	81000317 	ldw	r4,12(r16)
10106130:	003fde06 	br	101060ac <__alt_data_end+0xfffe60ac>
10106134:	81c5883a 	add	r2,r16,r7
10106138:	11400117 	ldw	r5,4(r2)
1010613c:	9009883a 	mov	r4,r18
10106140:	29400054 	ori	r5,r5,1
10106144:	11400115 	stw	r5,4(r2)
10106148:	010db140 	call	1010db14 <__malloc_unlock>
1010614c:	80800204 	addi	r2,r16,8
10106150:	003fe006 	br	101060d4 <__alt_data_end+0xfffe60d4>
10106154:	9c000217 	ldw	r16,8(r19)
10106158:	00bfff04 	movi	r2,-4
1010615c:	85800117 	ldw	r22,4(r16)
10106160:	b0ac703a 	and	r22,r22,r2
10106164:	b4400336 	bltu	r22,r17,10106174 <_malloc_r+0x344>
10106168:	b445c83a 	sub	r2,r22,r17
1010616c:	00c003c4 	movi	r3,15
10106170:	18805d16 	blt	r3,r2,101062e8 <_malloc_r+0x4b8>
10106174:	05c40474 	movhi	r23,4113
10106178:	00840474 	movhi	r2,4113
1010617c:	108ed804 	addi	r2,r2,15200
10106180:	bdc7dd04 	addi	r23,r23,8052
10106184:	15400017 	ldw	r21,0(r2)
10106188:	b8c00017 	ldw	r3,0(r23)
1010618c:	00bfffc4 	movi	r2,-1
10106190:	858d883a 	add	r6,r16,r22
10106194:	8d6b883a 	add	r21,r17,r21
10106198:	1880ea26 	beq	r3,r2,10106544 <_malloc_r+0x714>
1010619c:	ad4403c4 	addi	r21,r21,4111
101061a0:	00bc0004 	movi	r2,-4096
101061a4:	a8aa703a 	and	r21,r21,r2
101061a8:	a80b883a 	mov	r5,r21
101061ac:	9009883a 	mov	r4,r18
101061b0:	d9800015 	stw	r6,0(sp)
101061b4:	01080c00 	call	101080c0 <_sbrk_r>
101061b8:	1029883a 	mov	r20,r2
101061bc:	00bfffc4 	movi	r2,-1
101061c0:	d9800017 	ldw	r6,0(sp)
101061c4:	a080e826 	beq	r20,r2,10106568 <_malloc_r+0x738>
101061c8:	a180a636 	bltu	r20,r6,10106464 <_malloc_r+0x634>
101061cc:	07040474 	movhi	fp,4113
101061d0:	e70ee104 	addi	fp,fp,15236
101061d4:	e0800017 	ldw	r2,0(fp)
101061d8:	a887883a 	add	r3,r21,r2
101061dc:	e0c00015 	stw	r3,0(fp)
101061e0:	3500e626 	beq	r6,r20,1010657c <_malloc_r+0x74c>
101061e4:	b9000017 	ldw	r4,0(r23)
101061e8:	00bfffc4 	movi	r2,-1
101061ec:	2080ee26 	beq	r4,r2,101065a8 <_malloc_r+0x778>
101061f0:	a185c83a 	sub	r2,r20,r6
101061f4:	10c5883a 	add	r2,r2,r3
101061f8:	e0800015 	stw	r2,0(fp)
101061fc:	a0c001cc 	andi	r3,r20,7
10106200:	1800bc26 	beq	r3,zero,101064f4 <_malloc_r+0x6c4>
10106204:	a0e9c83a 	sub	r20,r20,r3
10106208:	00840204 	movi	r2,4104
1010620c:	a5000204 	addi	r20,r20,8
10106210:	10c7c83a 	sub	r3,r2,r3
10106214:	a545883a 	add	r2,r20,r21
10106218:	1083ffcc 	andi	r2,r2,4095
1010621c:	18abc83a 	sub	r21,r3,r2
10106220:	a80b883a 	mov	r5,r21
10106224:	9009883a 	mov	r4,r18
10106228:	01080c00 	call	101080c0 <_sbrk_r>
1010622c:	00ffffc4 	movi	r3,-1
10106230:	10c0e126 	beq	r2,r3,101065b8 <_malloc_r+0x788>
10106234:	1505c83a 	sub	r2,r2,r20
10106238:	1545883a 	add	r2,r2,r21
1010623c:	10800054 	ori	r2,r2,1
10106240:	e0c00017 	ldw	r3,0(fp)
10106244:	9d000215 	stw	r20,8(r19)
10106248:	a0800115 	stw	r2,4(r20)
1010624c:	a8c7883a 	add	r3,r21,r3
10106250:	e0c00015 	stw	r3,0(fp)
10106254:	84c00e26 	beq	r16,r19,10106290 <_malloc_r+0x460>
10106258:	018003c4 	movi	r6,15
1010625c:	3580a72e 	bgeu	r6,r22,101064fc <_malloc_r+0x6cc>
10106260:	81400117 	ldw	r5,4(r16)
10106264:	013ffe04 	movi	r4,-8
10106268:	b0bffd04 	addi	r2,r22,-12
1010626c:	1104703a 	and	r2,r2,r4
10106270:	2900004c 	andi	r4,r5,1
10106274:	2088b03a 	or	r4,r4,r2
10106278:	81000115 	stw	r4,4(r16)
1010627c:	01400144 	movi	r5,5
10106280:	8089883a 	add	r4,r16,r2
10106284:	21400115 	stw	r5,4(r4)
10106288:	21400215 	stw	r5,8(r4)
1010628c:	3080cd36 	bltu	r6,r2,101065c4 <_malloc_r+0x794>
10106290:	00840474 	movhi	r2,4113
10106294:	108ed704 	addi	r2,r2,15196
10106298:	11000017 	ldw	r4,0(r2)
1010629c:	20c0012e 	bgeu	r4,r3,101062a4 <_malloc_r+0x474>
101062a0:	10c00015 	stw	r3,0(r2)
101062a4:	00840474 	movhi	r2,4113
101062a8:	108ed604 	addi	r2,r2,15192
101062ac:	11000017 	ldw	r4,0(r2)
101062b0:	9c000217 	ldw	r16,8(r19)
101062b4:	20c0012e 	bgeu	r4,r3,101062bc <_malloc_r+0x48c>
101062b8:	10c00015 	stw	r3,0(r2)
101062bc:	80c00117 	ldw	r3,4(r16)
101062c0:	00bfff04 	movi	r2,-4
101062c4:	1886703a 	and	r3,r3,r2
101062c8:	1c45c83a 	sub	r2,r3,r17
101062cc:	1c400236 	bltu	r3,r17,101062d8 <_malloc_r+0x4a8>
101062d0:	00c003c4 	movi	r3,15
101062d4:	18800416 	blt	r3,r2,101062e8 <_malloc_r+0x4b8>
101062d8:	9009883a 	mov	r4,r18
101062dc:	010db140 	call	1010db14 <__malloc_unlock>
101062e0:	0005883a 	mov	r2,zero
101062e4:	003f7b06 	br	101060d4 <__alt_data_end+0xfffe60d4>
101062e8:	88c00054 	ori	r3,r17,1
101062ec:	80c00115 	stw	r3,4(r16)
101062f0:	8463883a 	add	r17,r16,r17
101062f4:	10800054 	ori	r2,r2,1
101062f8:	9c400215 	stw	r17,8(r19)
101062fc:	88800115 	stw	r2,4(r17)
10106300:	9009883a 	mov	r4,r18
10106304:	010db140 	call	1010db14 <__malloc_unlock>
10106308:	80800204 	addi	r2,r16,8
1010630c:	003f7106 	br	101060d4 <__alt_data_end+0xfffe60d4>
10106310:	00c00504 	movi	r3,20
10106314:	18804a2e 	bgeu	r3,r2,10106440 <_malloc_r+0x610>
10106318:	00c01504 	movi	r3,84
1010631c:	18806e36 	bltu	r3,r2,101064d8 <_malloc_r+0x6a8>
10106320:	8804d33a 	srli	r2,r17,12
10106324:	12001bc4 	addi	r8,r2,111
10106328:	11c01b84 	addi	r7,r2,110
1010632c:	4209883a 	add	r4,r8,r8
10106330:	003edd06 	br	10105ea8 <__alt_data_end+0xfffe5ea8>
10106334:	3804d27a 	srli	r2,r7,9
10106338:	00c00104 	movi	r3,4
1010633c:	1880442e 	bgeu	r3,r2,10106450 <_malloc_r+0x620>
10106340:	00c00504 	movi	r3,20
10106344:	18808136 	bltu	r3,r2,1010654c <_malloc_r+0x71c>
10106348:	11401704 	addi	r5,r2,92
1010634c:	10c016c4 	addi	r3,r2,91
10106350:	294b883a 	add	r5,r5,r5
10106354:	294b883a 	add	r5,r5,r5
10106358:	294b883a 	add	r5,r5,r5
1010635c:	994b883a 	add	r5,r19,r5
10106360:	28800017 	ldw	r2,0(r5)
10106364:	01840474 	movhi	r6,4113
10106368:	297ffe04 	addi	r5,r5,-8
1010636c:	31824c04 	addi	r6,r6,2352
10106370:	28806526 	beq	r5,r2,10106508 <_malloc_r+0x6d8>
10106374:	01bfff04 	movi	r6,-4
10106378:	10c00117 	ldw	r3,4(r2)
1010637c:	1986703a 	and	r3,r3,r6
10106380:	38c0022e 	bgeu	r7,r3,1010638c <_malloc_r+0x55c>
10106384:	10800217 	ldw	r2,8(r2)
10106388:	28bffb1e 	bne	r5,r2,10106378 <__alt_data_end+0xfffe6378>
1010638c:	11400317 	ldw	r5,12(r2)
10106390:	98c00117 	ldw	r3,4(r19)
10106394:	81400315 	stw	r5,12(r16)
10106398:	80800215 	stw	r2,8(r16)
1010639c:	2c000215 	stw	r16,8(r5)
101063a0:	14000315 	stw	r16,12(r2)
101063a4:	003ef806 	br	10105f88 <__alt_data_end+0xfffe5f88>
101063a8:	88c00054 	ori	r3,r17,1
101063ac:	80c00115 	stw	r3,4(r16)
101063b0:	8463883a 	add	r17,r16,r17
101063b4:	34400515 	stw	r17,20(r6)
101063b8:	34400415 	stw	r17,16(r6)
101063bc:	10c00054 	ori	r3,r2,1
101063c0:	8a000315 	stw	r8,12(r17)
101063c4:	8a000215 	stw	r8,8(r17)
101063c8:	88c00115 	stw	r3,4(r17)
101063cc:	88a3883a 	add	r17,r17,r2
101063d0:	88800015 	stw	r2,0(r17)
101063d4:	9009883a 	mov	r4,r18
101063d8:	010db140 	call	1010db14 <__malloc_unlock>
101063dc:	80800204 	addi	r2,r16,8
101063e0:	003f3c06 	br	101060d4 <__alt_data_end+0xfffe60d4>
101063e4:	30c00117 	ldw	r3,4(r6)
101063e8:	003ee706 	br	10105f88 <__alt_data_end+0xfffe5f88>
101063ec:	5ac00044 	addi	r11,r11,1
101063f0:	588000cc 	andi	r2,r11,3
101063f4:	31800204 	addi	r6,r6,8
101063f8:	103efd1e 	bne	r2,zero,10105ff0 <__alt_data_end+0xfffe5ff0>
101063fc:	00002406 	br	10106490 <_malloc_r+0x660>
10106400:	14000317 	ldw	r16,12(r2)
10106404:	143f251e 	bne	r2,r16,1010609c <__alt_data_end+0xfffe609c>
10106408:	21000084 	addi	r4,r4,2
1010640c:	003ebc06 	br	10105f00 <__alt_data_end+0xfffe5f00>
10106410:	8085883a 	add	r2,r16,r2
10106414:	10c00117 	ldw	r3,4(r2)
10106418:	81000317 	ldw	r4,12(r16)
1010641c:	81400217 	ldw	r5,8(r16)
10106420:	18c00054 	ori	r3,r3,1
10106424:	10c00115 	stw	r3,4(r2)
10106428:	29000315 	stw	r4,12(r5)
1010642c:	21400215 	stw	r5,8(r4)
10106430:	9009883a 	mov	r4,r18
10106434:	010db140 	call	1010db14 <__malloc_unlock>
10106438:	80800204 	addi	r2,r16,8
1010643c:	003f2506 	br	101060d4 <__alt_data_end+0xfffe60d4>
10106440:	12001704 	addi	r8,r2,92
10106444:	11c016c4 	addi	r7,r2,91
10106448:	4209883a 	add	r4,r8,r8
1010644c:	003e9606 	br	10105ea8 <__alt_data_end+0xfffe5ea8>
10106450:	3804d1ba 	srli	r2,r7,6
10106454:	11400e44 	addi	r5,r2,57
10106458:	10c00e04 	addi	r3,r2,56
1010645c:	294b883a 	add	r5,r5,r5
10106460:	003fbc06 	br	10106354 <__alt_data_end+0xfffe6354>
10106464:	84ff5926 	beq	r16,r19,101061cc <__alt_data_end+0xfffe61cc>
10106468:	00840474 	movhi	r2,4113
1010646c:	10824c04 	addi	r2,r2,2352
10106470:	14000217 	ldw	r16,8(r2)
10106474:	00bfff04 	movi	r2,-4
10106478:	80c00117 	ldw	r3,4(r16)
1010647c:	1886703a 	and	r3,r3,r2
10106480:	003f9106 	br	101062c8 <__alt_data_end+0xfffe62c8>
10106484:	60800217 	ldw	r2,8(r12)
10106488:	213fffc4 	addi	r4,r4,-1
1010648c:	1300651e 	bne	r2,r12,10106624 <_malloc_r+0x7f4>
10106490:	208000cc 	andi	r2,r4,3
10106494:	633ffe04 	addi	r12,r12,-8
10106498:	103ffa1e 	bne	r2,zero,10106484 <__alt_data_end+0xfffe6484>
1010649c:	98800117 	ldw	r2,4(r19)
101064a0:	0146303a 	nor	r3,zero,r5
101064a4:	1884703a 	and	r2,r3,r2
101064a8:	98800115 	stw	r2,4(r19)
101064ac:	294b883a 	add	r5,r5,r5
101064b0:	117f2836 	bltu	r2,r5,10106154 <__alt_data_end+0xfffe6154>
101064b4:	283f2726 	beq	r5,zero,10106154 <__alt_data_end+0xfffe6154>
101064b8:	2886703a 	and	r3,r5,r2
101064bc:	5809883a 	mov	r4,r11
101064c0:	183ec31e 	bne	r3,zero,10105fd0 <__alt_data_end+0xfffe5fd0>
101064c4:	294b883a 	add	r5,r5,r5
101064c8:	2886703a 	and	r3,r5,r2
101064cc:	21000104 	addi	r4,r4,4
101064d0:	183ffc26 	beq	r3,zero,101064c4 <__alt_data_end+0xfffe64c4>
101064d4:	003ebe06 	br	10105fd0 <__alt_data_end+0xfffe5fd0>
101064d8:	00c05504 	movi	r3,340
101064dc:	18801236 	bltu	r3,r2,10106528 <_malloc_r+0x6f8>
101064e0:	8804d3fa 	srli	r2,r17,15
101064e4:	12001e04 	addi	r8,r2,120
101064e8:	11c01dc4 	addi	r7,r2,119
101064ec:	4209883a 	add	r4,r8,r8
101064f0:	003e6d06 	br	10105ea8 <__alt_data_end+0xfffe5ea8>
101064f4:	00c40004 	movi	r3,4096
101064f8:	003f4606 	br	10106214 <__alt_data_end+0xfffe6214>
101064fc:	00800044 	movi	r2,1
10106500:	a0800115 	stw	r2,4(r20)
10106504:	003f7406 	br	101062d8 <__alt_data_end+0xfffe62d8>
10106508:	1805d0ba 	srai	r2,r3,2
1010650c:	01c00044 	movi	r7,1
10106510:	30c00117 	ldw	r3,4(r6)
10106514:	388e983a 	sll	r7,r7,r2
10106518:	2805883a 	mov	r2,r5
1010651c:	38c6b03a 	or	r3,r7,r3
10106520:	30c00115 	stw	r3,4(r6)
10106524:	003f9b06 	br	10106394 <__alt_data_end+0xfffe6394>
10106528:	00c15504 	movi	r3,1364
1010652c:	18801a36 	bltu	r3,r2,10106598 <_malloc_r+0x768>
10106530:	8804d4ba 	srli	r2,r17,18
10106534:	12001f44 	addi	r8,r2,125
10106538:	11c01f04 	addi	r7,r2,124
1010653c:	4209883a 	add	r4,r8,r8
10106540:	003e5906 	br	10105ea8 <__alt_data_end+0xfffe5ea8>
10106544:	ad400404 	addi	r21,r21,16
10106548:	003f1706 	br	101061a8 <__alt_data_end+0xfffe61a8>
1010654c:	00c01504 	movi	r3,84
10106550:	18802336 	bltu	r3,r2,101065e0 <_malloc_r+0x7b0>
10106554:	3804d33a 	srli	r2,r7,12
10106558:	11401bc4 	addi	r5,r2,111
1010655c:	10c01b84 	addi	r3,r2,110
10106560:	294b883a 	add	r5,r5,r5
10106564:	003f7b06 	br	10106354 <__alt_data_end+0xfffe6354>
10106568:	9c000217 	ldw	r16,8(r19)
1010656c:	00bfff04 	movi	r2,-4
10106570:	80c00117 	ldw	r3,4(r16)
10106574:	1886703a 	and	r3,r3,r2
10106578:	003f5306 	br	101062c8 <__alt_data_end+0xfffe62c8>
1010657c:	3083ffcc 	andi	r2,r6,4095
10106580:	103f181e 	bne	r2,zero,101061e4 <__alt_data_end+0xfffe61e4>
10106584:	99000217 	ldw	r4,8(r19)
10106588:	b545883a 	add	r2,r22,r21
1010658c:	10800054 	ori	r2,r2,1
10106590:	20800115 	stw	r2,4(r4)
10106594:	003f3e06 	br	10106290 <__alt_data_end+0xfffe6290>
10106598:	01003f84 	movi	r4,254
1010659c:	02001fc4 	movi	r8,127
101065a0:	01c01f84 	movi	r7,126
101065a4:	003e4006 	br	10105ea8 <__alt_data_end+0xfffe5ea8>
101065a8:	00840474 	movhi	r2,4113
101065ac:	1087dd04 	addi	r2,r2,8052
101065b0:	15000015 	stw	r20,0(r2)
101065b4:	003f1106 	br	101061fc <__alt_data_end+0xfffe61fc>
101065b8:	00800044 	movi	r2,1
101065bc:	002b883a 	mov	r21,zero
101065c0:	003f1f06 	br	10106240 <__alt_data_end+0xfffe6240>
101065c4:	81400204 	addi	r5,r16,8
101065c8:	9009883a 	mov	r4,r18
101065cc:	01052440 	call	10105244 <_free_r>
101065d0:	00840474 	movhi	r2,4113
101065d4:	108ee104 	addi	r2,r2,15236
101065d8:	10c00017 	ldw	r3,0(r2)
101065dc:	003f2c06 	br	10106290 <__alt_data_end+0xfffe6290>
101065e0:	00c05504 	movi	r3,340
101065e4:	18800536 	bltu	r3,r2,101065fc <_malloc_r+0x7cc>
101065e8:	3804d3fa 	srli	r2,r7,15
101065ec:	11401e04 	addi	r5,r2,120
101065f0:	10c01dc4 	addi	r3,r2,119
101065f4:	294b883a 	add	r5,r5,r5
101065f8:	003f5606 	br	10106354 <__alt_data_end+0xfffe6354>
101065fc:	00c15504 	movi	r3,1364
10106600:	18800536 	bltu	r3,r2,10106618 <_malloc_r+0x7e8>
10106604:	3804d4ba 	srli	r2,r7,18
10106608:	11401f44 	addi	r5,r2,125
1010660c:	10c01f04 	addi	r3,r2,124
10106610:	294b883a 	add	r5,r5,r5
10106614:	003f4f06 	br	10106354 <__alt_data_end+0xfffe6354>
10106618:	01403f84 	movi	r5,254
1010661c:	00c01f84 	movi	r3,126
10106620:	003f4c06 	br	10106354 <__alt_data_end+0xfffe6354>
10106624:	98800117 	ldw	r2,4(r19)
10106628:	003fa006 	br	101064ac <__alt_data_end+0xfffe64ac>
1010662c:	8808d0fa 	srli	r4,r17,3
10106630:	20800044 	addi	r2,r4,1
10106634:	1085883a 	add	r2,r2,r2
10106638:	003e9006 	br	1010607c <__alt_data_end+0xfffe607c>

1010663c <memchr>:
1010663c:	208000cc 	andi	r2,r4,3
10106640:	280f883a 	mov	r7,r5
10106644:	10003426 	beq	r2,zero,10106718 <memchr+0xdc>
10106648:	30bfffc4 	addi	r2,r6,-1
1010664c:	30001a26 	beq	r6,zero,101066b8 <memchr+0x7c>
10106650:	20c00003 	ldbu	r3,0(r4)
10106654:	29803fcc 	andi	r6,r5,255
10106658:	30c0051e 	bne	r6,r3,10106670 <memchr+0x34>
1010665c:	00001806 	br	101066c0 <memchr+0x84>
10106660:	10001526 	beq	r2,zero,101066b8 <memchr+0x7c>
10106664:	20c00003 	ldbu	r3,0(r4)
10106668:	10bfffc4 	addi	r2,r2,-1
1010666c:	30c01426 	beq	r6,r3,101066c0 <memchr+0x84>
10106670:	21000044 	addi	r4,r4,1
10106674:	20c000cc 	andi	r3,r4,3
10106678:	183ff91e 	bne	r3,zero,10106660 <__alt_data_end+0xfffe6660>
1010667c:	020000c4 	movi	r8,3
10106680:	40801136 	bltu	r8,r2,101066c8 <memchr+0x8c>
10106684:	10000c26 	beq	r2,zero,101066b8 <memchr+0x7c>
10106688:	20c00003 	ldbu	r3,0(r4)
1010668c:	29403fcc 	andi	r5,r5,255
10106690:	28c00b26 	beq	r5,r3,101066c0 <memchr+0x84>
10106694:	20c00044 	addi	r3,r4,1
10106698:	39803fcc 	andi	r6,r7,255
1010669c:	2089883a 	add	r4,r4,r2
101066a0:	00000306 	br	101066b0 <memchr+0x74>
101066a4:	18c00044 	addi	r3,r3,1
101066a8:	197fffc3 	ldbu	r5,-1(r3)
101066ac:	31400526 	beq	r6,r5,101066c4 <memchr+0x88>
101066b0:	1805883a 	mov	r2,r3
101066b4:	20fffb1e 	bne	r4,r3,101066a4 <__alt_data_end+0xfffe66a4>
101066b8:	0005883a 	mov	r2,zero
101066bc:	f800283a 	ret
101066c0:	2005883a 	mov	r2,r4
101066c4:	f800283a 	ret
101066c8:	28c03fcc 	andi	r3,r5,255
101066cc:	1812923a 	slli	r9,r3,8
101066d0:	02ffbff4 	movhi	r11,65279
101066d4:	02a02074 	movhi	r10,32897
101066d8:	48d2b03a 	or	r9,r9,r3
101066dc:	4806943a 	slli	r3,r9,16
101066e0:	5affbfc4 	addi	r11,r11,-257
101066e4:	52a02004 	addi	r10,r10,-32640
101066e8:	48d2b03a 	or	r9,r9,r3
101066ec:	20c00017 	ldw	r3,0(r4)
101066f0:	48c6f03a 	xor	r3,r9,r3
101066f4:	1acd883a 	add	r6,r3,r11
101066f8:	00c6303a 	nor	r3,zero,r3
101066fc:	30c6703a 	and	r3,r6,r3
10106700:	1a86703a 	and	r3,r3,r10
10106704:	183fe01e 	bne	r3,zero,10106688 <__alt_data_end+0xfffe6688>
10106708:	10bfff04 	addi	r2,r2,-4
1010670c:	21000104 	addi	r4,r4,4
10106710:	40bff636 	bltu	r8,r2,101066ec <__alt_data_end+0xfffe66ec>
10106714:	003fdb06 	br	10106684 <__alt_data_end+0xfffe6684>
10106718:	3005883a 	mov	r2,r6
1010671c:	003fd706 	br	1010667c <__alt_data_end+0xfffe667c>

10106720 <memcpy>:
10106720:	defffd04 	addi	sp,sp,-12
10106724:	dfc00215 	stw	ra,8(sp)
10106728:	dc400115 	stw	r17,4(sp)
1010672c:	dc000015 	stw	r16,0(sp)
10106730:	00c003c4 	movi	r3,15
10106734:	2005883a 	mov	r2,r4
10106738:	1980452e 	bgeu	r3,r6,10106850 <memcpy+0x130>
1010673c:	2906b03a 	or	r3,r5,r4
10106740:	18c000cc 	andi	r3,r3,3
10106744:	1800441e 	bne	r3,zero,10106858 <memcpy+0x138>
10106748:	347ffc04 	addi	r17,r6,-16
1010674c:	8822d13a 	srli	r17,r17,4
10106750:	28c00104 	addi	r3,r5,4
10106754:	23400104 	addi	r13,r4,4
10106758:	8820913a 	slli	r16,r17,4
1010675c:	2b000204 	addi	r12,r5,8
10106760:	22c00204 	addi	r11,r4,8
10106764:	84000504 	addi	r16,r16,20
10106768:	2a800304 	addi	r10,r5,12
1010676c:	22400304 	addi	r9,r4,12
10106770:	2c21883a 	add	r16,r5,r16
10106774:	2811883a 	mov	r8,r5
10106778:	200f883a 	mov	r7,r4
1010677c:	41000017 	ldw	r4,0(r8)
10106780:	1fc00017 	ldw	ra,0(r3)
10106784:	63c00017 	ldw	r15,0(r12)
10106788:	39000015 	stw	r4,0(r7)
1010678c:	53800017 	ldw	r14,0(r10)
10106790:	6fc00015 	stw	ra,0(r13)
10106794:	5bc00015 	stw	r15,0(r11)
10106798:	4b800015 	stw	r14,0(r9)
1010679c:	18c00404 	addi	r3,r3,16
101067a0:	39c00404 	addi	r7,r7,16
101067a4:	42000404 	addi	r8,r8,16
101067a8:	6b400404 	addi	r13,r13,16
101067ac:	63000404 	addi	r12,r12,16
101067b0:	5ac00404 	addi	r11,r11,16
101067b4:	52800404 	addi	r10,r10,16
101067b8:	4a400404 	addi	r9,r9,16
101067bc:	1c3fef1e 	bne	r3,r16,1010677c <__alt_data_end+0xfffe677c>
101067c0:	89c00044 	addi	r7,r17,1
101067c4:	380e913a 	slli	r7,r7,4
101067c8:	310003cc 	andi	r4,r6,15
101067cc:	02c000c4 	movi	r11,3
101067d0:	11c7883a 	add	r3,r2,r7
101067d4:	29cb883a 	add	r5,r5,r7
101067d8:	5900212e 	bgeu	r11,r4,10106860 <memcpy+0x140>
101067dc:	1813883a 	mov	r9,r3
101067e0:	2811883a 	mov	r8,r5
101067e4:	200f883a 	mov	r7,r4
101067e8:	42800017 	ldw	r10,0(r8)
101067ec:	4a400104 	addi	r9,r9,4
101067f0:	39ffff04 	addi	r7,r7,-4
101067f4:	4abfff15 	stw	r10,-4(r9)
101067f8:	42000104 	addi	r8,r8,4
101067fc:	59fffa36 	bltu	r11,r7,101067e8 <__alt_data_end+0xfffe67e8>
10106800:	213fff04 	addi	r4,r4,-4
10106804:	2008d0ba 	srli	r4,r4,2
10106808:	318000cc 	andi	r6,r6,3
1010680c:	21000044 	addi	r4,r4,1
10106810:	2109883a 	add	r4,r4,r4
10106814:	2109883a 	add	r4,r4,r4
10106818:	1907883a 	add	r3,r3,r4
1010681c:	290b883a 	add	r5,r5,r4
10106820:	30000626 	beq	r6,zero,1010683c <memcpy+0x11c>
10106824:	198d883a 	add	r6,r3,r6
10106828:	29c00003 	ldbu	r7,0(r5)
1010682c:	18c00044 	addi	r3,r3,1
10106830:	29400044 	addi	r5,r5,1
10106834:	19ffffc5 	stb	r7,-1(r3)
10106838:	19bffb1e 	bne	r3,r6,10106828 <__alt_data_end+0xfffe6828>
1010683c:	dfc00217 	ldw	ra,8(sp)
10106840:	dc400117 	ldw	r17,4(sp)
10106844:	dc000017 	ldw	r16,0(sp)
10106848:	dec00304 	addi	sp,sp,12
1010684c:	f800283a 	ret
10106850:	2007883a 	mov	r3,r4
10106854:	003ff206 	br	10106820 <__alt_data_end+0xfffe6820>
10106858:	2007883a 	mov	r3,r4
1010685c:	003ff106 	br	10106824 <__alt_data_end+0xfffe6824>
10106860:	200d883a 	mov	r6,r4
10106864:	003fee06 	br	10106820 <__alt_data_end+0xfffe6820>

10106868 <memmove>:
10106868:	2005883a 	mov	r2,r4
1010686c:	29000b2e 	bgeu	r5,r4,1010689c <memmove+0x34>
10106870:	298f883a 	add	r7,r5,r6
10106874:	21c0092e 	bgeu	r4,r7,1010689c <memmove+0x34>
10106878:	2187883a 	add	r3,r4,r6
1010687c:	198bc83a 	sub	r5,r3,r6
10106880:	30004826 	beq	r6,zero,101069a4 <memmove+0x13c>
10106884:	39ffffc4 	addi	r7,r7,-1
10106888:	39000003 	ldbu	r4,0(r7)
1010688c:	18ffffc4 	addi	r3,r3,-1
10106890:	19000005 	stb	r4,0(r3)
10106894:	28fffb1e 	bne	r5,r3,10106884 <__alt_data_end+0xfffe6884>
10106898:	f800283a 	ret
1010689c:	00c003c4 	movi	r3,15
101068a0:	1980412e 	bgeu	r3,r6,101069a8 <memmove+0x140>
101068a4:	2886b03a 	or	r3,r5,r2
101068a8:	18c000cc 	andi	r3,r3,3
101068ac:	1800401e 	bne	r3,zero,101069b0 <memmove+0x148>
101068b0:	33fffc04 	addi	r15,r6,-16
101068b4:	781ed13a 	srli	r15,r15,4
101068b8:	28c00104 	addi	r3,r5,4
101068bc:	13400104 	addi	r13,r2,4
101068c0:	781c913a 	slli	r14,r15,4
101068c4:	2b000204 	addi	r12,r5,8
101068c8:	12c00204 	addi	r11,r2,8
101068cc:	73800504 	addi	r14,r14,20
101068d0:	2a800304 	addi	r10,r5,12
101068d4:	12400304 	addi	r9,r2,12
101068d8:	2b9d883a 	add	r14,r5,r14
101068dc:	2811883a 	mov	r8,r5
101068e0:	100f883a 	mov	r7,r2
101068e4:	41000017 	ldw	r4,0(r8)
101068e8:	39c00404 	addi	r7,r7,16
101068ec:	18c00404 	addi	r3,r3,16
101068f0:	393ffc15 	stw	r4,-16(r7)
101068f4:	193ffc17 	ldw	r4,-16(r3)
101068f8:	6b400404 	addi	r13,r13,16
101068fc:	5ac00404 	addi	r11,r11,16
10106900:	693ffc15 	stw	r4,-16(r13)
10106904:	61000017 	ldw	r4,0(r12)
10106908:	4a400404 	addi	r9,r9,16
1010690c:	42000404 	addi	r8,r8,16
10106910:	593ffc15 	stw	r4,-16(r11)
10106914:	51000017 	ldw	r4,0(r10)
10106918:	63000404 	addi	r12,r12,16
1010691c:	52800404 	addi	r10,r10,16
10106920:	493ffc15 	stw	r4,-16(r9)
10106924:	1bbfef1e 	bne	r3,r14,101068e4 <__alt_data_end+0xfffe68e4>
10106928:	79000044 	addi	r4,r15,1
1010692c:	2008913a 	slli	r4,r4,4
10106930:	328003cc 	andi	r10,r6,15
10106934:	02c000c4 	movi	r11,3
10106938:	1107883a 	add	r3,r2,r4
1010693c:	290b883a 	add	r5,r5,r4
10106940:	5a801e2e 	bgeu	r11,r10,101069bc <memmove+0x154>
10106944:	1813883a 	mov	r9,r3
10106948:	2811883a 	mov	r8,r5
1010694c:	500f883a 	mov	r7,r10
10106950:	41000017 	ldw	r4,0(r8)
10106954:	4a400104 	addi	r9,r9,4
10106958:	39ffff04 	addi	r7,r7,-4
1010695c:	493fff15 	stw	r4,-4(r9)
10106960:	42000104 	addi	r8,r8,4
10106964:	59fffa36 	bltu	r11,r7,10106950 <__alt_data_end+0xfffe6950>
10106968:	513fff04 	addi	r4,r10,-4
1010696c:	2008d0ba 	srli	r4,r4,2
10106970:	318000cc 	andi	r6,r6,3
10106974:	21000044 	addi	r4,r4,1
10106978:	2109883a 	add	r4,r4,r4
1010697c:	2109883a 	add	r4,r4,r4
10106980:	1907883a 	add	r3,r3,r4
10106984:	290b883a 	add	r5,r5,r4
10106988:	30000b26 	beq	r6,zero,101069b8 <memmove+0x150>
1010698c:	198d883a 	add	r6,r3,r6
10106990:	29c00003 	ldbu	r7,0(r5)
10106994:	18c00044 	addi	r3,r3,1
10106998:	29400044 	addi	r5,r5,1
1010699c:	19ffffc5 	stb	r7,-1(r3)
101069a0:	19bffb1e 	bne	r3,r6,10106990 <__alt_data_end+0xfffe6990>
101069a4:	f800283a 	ret
101069a8:	1007883a 	mov	r3,r2
101069ac:	003ff606 	br	10106988 <__alt_data_end+0xfffe6988>
101069b0:	1007883a 	mov	r3,r2
101069b4:	003ff506 	br	1010698c <__alt_data_end+0xfffe698c>
101069b8:	f800283a 	ret
101069bc:	500d883a 	mov	r6,r10
101069c0:	003ff106 	br	10106988 <__alt_data_end+0xfffe6988>

101069c4 <memset>:
101069c4:	20c000cc 	andi	r3,r4,3
101069c8:	2005883a 	mov	r2,r4
101069cc:	18004426 	beq	r3,zero,10106ae0 <memset+0x11c>
101069d0:	31ffffc4 	addi	r7,r6,-1
101069d4:	30004026 	beq	r6,zero,10106ad8 <memset+0x114>
101069d8:	2813883a 	mov	r9,r5
101069dc:	200d883a 	mov	r6,r4
101069e0:	2007883a 	mov	r3,r4
101069e4:	00000406 	br	101069f8 <memset+0x34>
101069e8:	3a3fffc4 	addi	r8,r7,-1
101069ec:	31800044 	addi	r6,r6,1
101069f0:	38003926 	beq	r7,zero,10106ad8 <memset+0x114>
101069f4:	400f883a 	mov	r7,r8
101069f8:	18c00044 	addi	r3,r3,1
101069fc:	32400005 	stb	r9,0(r6)
10106a00:	1a0000cc 	andi	r8,r3,3
10106a04:	403ff81e 	bne	r8,zero,101069e8 <__alt_data_end+0xfffe69e8>
10106a08:	010000c4 	movi	r4,3
10106a0c:	21c02d2e 	bgeu	r4,r7,10106ac4 <memset+0x100>
10106a10:	29003fcc 	andi	r4,r5,255
10106a14:	200c923a 	slli	r6,r4,8
10106a18:	3108b03a 	or	r4,r6,r4
10106a1c:	200c943a 	slli	r6,r4,16
10106a20:	218cb03a 	or	r6,r4,r6
10106a24:	010003c4 	movi	r4,15
10106a28:	21c0182e 	bgeu	r4,r7,10106a8c <memset+0xc8>
10106a2c:	3b3ffc04 	addi	r12,r7,-16
10106a30:	6018d13a 	srli	r12,r12,4
10106a34:	1a000104 	addi	r8,r3,4
10106a38:	1ac00204 	addi	r11,r3,8
10106a3c:	6008913a 	slli	r4,r12,4
10106a40:	1a800304 	addi	r10,r3,12
10106a44:	1813883a 	mov	r9,r3
10106a48:	21000504 	addi	r4,r4,20
10106a4c:	1909883a 	add	r4,r3,r4
10106a50:	49800015 	stw	r6,0(r9)
10106a54:	41800015 	stw	r6,0(r8)
10106a58:	59800015 	stw	r6,0(r11)
10106a5c:	51800015 	stw	r6,0(r10)
10106a60:	42000404 	addi	r8,r8,16
10106a64:	4a400404 	addi	r9,r9,16
10106a68:	5ac00404 	addi	r11,r11,16
10106a6c:	52800404 	addi	r10,r10,16
10106a70:	413ff71e 	bne	r8,r4,10106a50 <__alt_data_end+0xfffe6a50>
10106a74:	63000044 	addi	r12,r12,1
10106a78:	6018913a 	slli	r12,r12,4
10106a7c:	39c003cc 	andi	r7,r7,15
10106a80:	010000c4 	movi	r4,3
10106a84:	1b07883a 	add	r3,r3,r12
10106a88:	21c00e2e 	bgeu	r4,r7,10106ac4 <memset+0x100>
10106a8c:	1813883a 	mov	r9,r3
10106a90:	3811883a 	mov	r8,r7
10106a94:	010000c4 	movi	r4,3
10106a98:	49800015 	stw	r6,0(r9)
10106a9c:	423fff04 	addi	r8,r8,-4
10106aa0:	4a400104 	addi	r9,r9,4
10106aa4:	223ffc36 	bltu	r4,r8,10106a98 <__alt_data_end+0xfffe6a98>
10106aa8:	393fff04 	addi	r4,r7,-4
10106aac:	2008d0ba 	srli	r4,r4,2
10106ab0:	39c000cc 	andi	r7,r7,3
10106ab4:	21000044 	addi	r4,r4,1
10106ab8:	2109883a 	add	r4,r4,r4
10106abc:	2109883a 	add	r4,r4,r4
10106ac0:	1907883a 	add	r3,r3,r4
10106ac4:	38000526 	beq	r7,zero,10106adc <memset+0x118>
10106ac8:	19cf883a 	add	r7,r3,r7
10106acc:	19400005 	stb	r5,0(r3)
10106ad0:	18c00044 	addi	r3,r3,1
10106ad4:	38fffd1e 	bne	r7,r3,10106acc <__alt_data_end+0xfffe6acc>
10106ad8:	f800283a 	ret
10106adc:	f800283a 	ret
10106ae0:	2007883a 	mov	r3,r4
10106ae4:	300f883a 	mov	r7,r6
10106ae8:	003fc706 	br	10106a08 <__alt_data_end+0xfffe6a08>

10106aec <_Balloc>:
10106aec:	20801317 	ldw	r2,76(r4)
10106af0:	defffc04 	addi	sp,sp,-16
10106af4:	dc400115 	stw	r17,4(sp)
10106af8:	dc000015 	stw	r16,0(sp)
10106afc:	dfc00315 	stw	ra,12(sp)
10106b00:	dc800215 	stw	r18,8(sp)
10106b04:	2023883a 	mov	r17,r4
10106b08:	2821883a 	mov	r16,r5
10106b0c:	10000f26 	beq	r2,zero,10106b4c <_Balloc+0x60>
10106b10:	8407883a 	add	r3,r16,r16
10106b14:	18c7883a 	add	r3,r3,r3
10106b18:	10c7883a 	add	r3,r2,r3
10106b1c:	18800017 	ldw	r2,0(r3)
10106b20:	10001126 	beq	r2,zero,10106b68 <_Balloc+0x7c>
10106b24:	11000017 	ldw	r4,0(r2)
10106b28:	19000015 	stw	r4,0(r3)
10106b2c:	10000415 	stw	zero,16(r2)
10106b30:	10000315 	stw	zero,12(r2)
10106b34:	dfc00317 	ldw	ra,12(sp)
10106b38:	dc800217 	ldw	r18,8(sp)
10106b3c:	dc400117 	ldw	r17,4(sp)
10106b40:	dc000017 	ldw	r16,0(sp)
10106b44:	dec00404 	addi	sp,sp,16
10106b48:	f800283a 	ret
10106b4c:	01800844 	movi	r6,33
10106b50:	01400104 	movi	r5,4
10106b54:	0109a280 	call	10109a28 <_calloc_r>
10106b58:	88801315 	stw	r2,76(r17)
10106b5c:	103fec1e 	bne	r2,zero,10106b10 <__alt_data_end+0xfffe6b10>
10106b60:	0005883a 	mov	r2,zero
10106b64:	003ff306 	br	10106b34 <__alt_data_end+0xfffe6b34>
10106b68:	01400044 	movi	r5,1
10106b6c:	2c24983a 	sll	r18,r5,r16
10106b70:	8809883a 	mov	r4,r17
10106b74:	91800144 	addi	r6,r18,5
10106b78:	318d883a 	add	r6,r6,r6
10106b7c:	318d883a 	add	r6,r6,r6
10106b80:	0109a280 	call	10109a28 <_calloc_r>
10106b84:	103ff626 	beq	r2,zero,10106b60 <__alt_data_end+0xfffe6b60>
10106b88:	14000115 	stw	r16,4(r2)
10106b8c:	14800215 	stw	r18,8(r2)
10106b90:	003fe606 	br	10106b2c <__alt_data_end+0xfffe6b2c>

10106b94 <_Bfree>:
10106b94:	28000826 	beq	r5,zero,10106bb8 <_Bfree+0x24>
10106b98:	28c00117 	ldw	r3,4(r5)
10106b9c:	20801317 	ldw	r2,76(r4)
10106ba0:	18c7883a 	add	r3,r3,r3
10106ba4:	18c7883a 	add	r3,r3,r3
10106ba8:	10c5883a 	add	r2,r2,r3
10106bac:	10c00017 	ldw	r3,0(r2)
10106bb0:	28c00015 	stw	r3,0(r5)
10106bb4:	11400015 	stw	r5,0(r2)
10106bb8:	f800283a 	ret

10106bbc <__multadd>:
10106bbc:	defffa04 	addi	sp,sp,-24
10106bc0:	dc800315 	stw	r18,12(sp)
10106bc4:	dc400215 	stw	r17,8(sp)
10106bc8:	dc000115 	stw	r16,4(sp)
10106bcc:	2823883a 	mov	r17,r5
10106bd0:	2c000417 	ldw	r16,16(r5)
10106bd4:	dfc00515 	stw	ra,20(sp)
10106bd8:	dcc00415 	stw	r19,16(sp)
10106bdc:	2025883a 	mov	r18,r4
10106be0:	29400504 	addi	r5,r5,20
10106be4:	0011883a 	mov	r8,zero
10106be8:	28c00017 	ldw	r3,0(r5)
10106bec:	29400104 	addi	r5,r5,4
10106bf0:	42000044 	addi	r8,r8,1
10106bf4:	18bfffcc 	andi	r2,r3,65535
10106bf8:	1185383a 	mul	r2,r2,r6
10106bfc:	1806d43a 	srli	r3,r3,16
10106c00:	11cf883a 	add	r7,r2,r7
10106c04:	3808d43a 	srli	r4,r7,16
10106c08:	1987383a 	mul	r3,r3,r6
10106c0c:	38bfffcc 	andi	r2,r7,65535
10106c10:	1907883a 	add	r3,r3,r4
10106c14:	1808943a 	slli	r4,r3,16
10106c18:	180ed43a 	srli	r7,r3,16
10106c1c:	2085883a 	add	r2,r4,r2
10106c20:	28bfff15 	stw	r2,-4(r5)
10106c24:	443ff016 	blt	r8,r16,10106be8 <__alt_data_end+0xfffe6be8>
10106c28:	38000926 	beq	r7,zero,10106c50 <__multadd+0x94>
10106c2c:	88800217 	ldw	r2,8(r17)
10106c30:	80800f0e 	bge	r16,r2,10106c70 <__multadd+0xb4>
10106c34:	80800144 	addi	r2,r16,5
10106c38:	1085883a 	add	r2,r2,r2
10106c3c:	1085883a 	add	r2,r2,r2
10106c40:	8885883a 	add	r2,r17,r2
10106c44:	11c00015 	stw	r7,0(r2)
10106c48:	84000044 	addi	r16,r16,1
10106c4c:	8c000415 	stw	r16,16(r17)
10106c50:	8805883a 	mov	r2,r17
10106c54:	dfc00517 	ldw	ra,20(sp)
10106c58:	dcc00417 	ldw	r19,16(sp)
10106c5c:	dc800317 	ldw	r18,12(sp)
10106c60:	dc400217 	ldw	r17,8(sp)
10106c64:	dc000117 	ldw	r16,4(sp)
10106c68:	dec00604 	addi	sp,sp,24
10106c6c:	f800283a 	ret
10106c70:	89400117 	ldw	r5,4(r17)
10106c74:	9009883a 	mov	r4,r18
10106c78:	d9c00015 	stw	r7,0(sp)
10106c7c:	29400044 	addi	r5,r5,1
10106c80:	0106aec0 	call	10106aec <_Balloc>
10106c84:	89800417 	ldw	r6,16(r17)
10106c88:	89400304 	addi	r5,r17,12
10106c8c:	11000304 	addi	r4,r2,12
10106c90:	31800084 	addi	r6,r6,2
10106c94:	318d883a 	add	r6,r6,r6
10106c98:	318d883a 	add	r6,r6,r6
10106c9c:	1027883a 	mov	r19,r2
10106ca0:	01067200 	call	10106720 <memcpy>
10106ca4:	d9c00017 	ldw	r7,0(sp)
10106ca8:	88000a26 	beq	r17,zero,10106cd4 <__multadd+0x118>
10106cac:	88c00117 	ldw	r3,4(r17)
10106cb0:	90801317 	ldw	r2,76(r18)
10106cb4:	18c7883a 	add	r3,r3,r3
10106cb8:	18c7883a 	add	r3,r3,r3
10106cbc:	10c5883a 	add	r2,r2,r3
10106cc0:	10c00017 	ldw	r3,0(r2)
10106cc4:	88c00015 	stw	r3,0(r17)
10106cc8:	14400015 	stw	r17,0(r2)
10106ccc:	9823883a 	mov	r17,r19
10106cd0:	003fd806 	br	10106c34 <__alt_data_end+0xfffe6c34>
10106cd4:	9823883a 	mov	r17,r19
10106cd8:	003fd606 	br	10106c34 <__alt_data_end+0xfffe6c34>

10106cdc <__s2b>:
10106cdc:	defff904 	addi	sp,sp,-28
10106ce0:	dc400115 	stw	r17,4(sp)
10106ce4:	dc000015 	stw	r16,0(sp)
10106ce8:	2023883a 	mov	r17,r4
10106cec:	2821883a 	mov	r16,r5
10106cf0:	39000204 	addi	r4,r7,8
10106cf4:	01400244 	movi	r5,9
10106cf8:	dcc00315 	stw	r19,12(sp)
10106cfc:	dc800215 	stw	r18,8(sp)
10106d00:	dfc00615 	stw	ra,24(sp)
10106d04:	dd400515 	stw	r21,20(sp)
10106d08:	dd000415 	stw	r20,16(sp)
10106d0c:	3825883a 	mov	r18,r7
10106d10:	3027883a 	mov	r19,r6
10106d14:	010ad580 	call	1010ad58 <__divsi3>
10106d18:	00c00044 	movi	r3,1
10106d1c:	000b883a 	mov	r5,zero
10106d20:	1880030e 	bge	r3,r2,10106d30 <__s2b+0x54>
10106d24:	18c7883a 	add	r3,r3,r3
10106d28:	29400044 	addi	r5,r5,1
10106d2c:	18bffd16 	blt	r3,r2,10106d24 <__alt_data_end+0xfffe6d24>
10106d30:	8809883a 	mov	r4,r17
10106d34:	0106aec0 	call	10106aec <_Balloc>
10106d38:	d8c00717 	ldw	r3,28(sp)
10106d3c:	10c00515 	stw	r3,20(r2)
10106d40:	00c00044 	movi	r3,1
10106d44:	10c00415 	stw	r3,16(r2)
10106d48:	00c00244 	movi	r3,9
10106d4c:	1cc0210e 	bge	r3,r19,10106dd4 <__s2b+0xf8>
10106d50:	80eb883a 	add	r21,r16,r3
10106d54:	a829883a 	mov	r20,r21
10106d58:	84e1883a 	add	r16,r16,r19
10106d5c:	a1c00007 	ldb	r7,0(r20)
10106d60:	01800284 	movi	r6,10
10106d64:	a5000044 	addi	r20,r20,1
10106d68:	100b883a 	mov	r5,r2
10106d6c:	39fff404 	addi	r7,r7,-48
10106d70:	8809883a 	mov	r4,r17
10106d74:	0106bbc0 	call	10106bbc <__multadd>
10106d78:	a43ff81e 	bne	r20,r16,10106d5c <__alt_data_end+0xfffe6d5c>
10106d7c:	ace1883a 	add	r16,r21,r19
10106d80:	843ffe04 	addi	r16,r16,-8
10106d84:	9c800a0e 	bge	r19,r18,10106db0 <__s2b+0xd4>
10106d88:	94e5c83a 	sub	r18,r18,r19
10106d8c:	84a5883a 	add	r18,r16,r18
10106d90:	81c00007 	ldb	r7,0(r16)
10106d94:	01800284 	movi	r6,10
10106d98:	84000044 	addi	r16,r16,1
10106d9c:	100b883a 	mov	r5,r2
10106da0:	39fff404 	addi	r7,r7,-48
10106da4:	8809883a 	mov	r4,r17
10106da8:	0106bbc0 	call	10106bbc <__multadd>
10106dac:	84bff81e 	bne	r16,r18,10106d90 <__alt_data_end+0xfffe6d90>
10106db0:	dfc00617 	ldw	ra,24(sp)
10106db4:	dd400517 	ldw	r21,20(sp)
10106db8:	dd000417 	ldw	r20,16(sp)
10106dbc:	dcc00317 	ldw	r19,12(sp)
10106dc0:	dc800217 	ldw	r18,8(sp)
10106dc4:	dc400117 	ldw	r17,4(sp)
10106dc8:	dc000017 	ldw	r16,0(sp)
10106dcc:	dec00704 	addi	sp,sp,28
10106dd0:	f800283a 	ret
10106dd4:	84000284 	addi	r16,r16,10
10106dd8:	1827883a 	mov	r19,r3
10106ddc:	003fe906 	br	10106d84 <__alt_data_end+0xfffe6d84>

10106de0 <__hi0bits>:
10106de0:	20bfffec 	andhi	r2,r4,65535
10106de4:	1000141e 	bne	r2,zero,10106e38 <__hi0bits+0x58>
10106de8:	2008943a 	slli	r4,r4,16
10106dec:	00800404 	movi	r2,16
10106df0:	20ffc02c 	andhi	r3,r4,65280
10106df4:	1800021e 	bne	r3,zero,10106e00 <__hi0bits+0x20>
10106df8:	2008923a 	slli	r4,r4,8
10106dfc:	10800204 	addi	r2,r2,8
10106e00:	20fc002c 	andhi	r3,r4,61440
10106e04:	1800021e 	bne	r3,zero,10106e10 <__hi0bits+0x30>
10106e08:	2008913a 	slli	r4,r4,4
10106e0c:	10800104 	addi	r2,r2,4
10106e10:	20f0002c 	andhi	r3,r4,49152
10106e14:	1800031e 	bne	r3,zero,10106e24 <__hi0bits+0x44>
10106e18:	2109883a 	add	r4,r4,r4
10106e1c:	10800084 	addi	r2,r2,2
10106e20:	2109883a 	add	r4,r4,r4
10106e24:	20000316 	blt	r4,zero,10106e34 <__hi0bits+0x54>
10106e28:	2110002c 	andhi	r4,r4,16384
10106e2c:	2000041e 	bne	r4,zero,10106e40 <__hi0bits+0x60>
10106e30:	00800804 	movi	r2,32
10106e34:	f800283a 	ret
10106e38:	0005883a 	mov	r2,zero
10106e3c:	003fec06 	br	10106df0 <__alt_data_end+0xfffe6df0>
10106e40:	10800044 	addi	r2,r2,1
10106e44:	f800283a 	ret

10106e48 <__lo0bits>:
10106e48:	20c00017 	ldw	r3,0(r4)
10106e4c:	188001cc 	andi	r2,r3,7
10106e50:	10000826 	beq	r2,zero,10106e74 <__lo0bits+0x2c>
10106e54:	1880004c 	andi	r2,r3,1
10106e58:	1000211e 	bne	r2,zero,10106ee0 <__lo0bits+0x98>
10106e5c:	1880008c 	andi	r2,r3,2
10106e60:	1000211e 	bne	r2,zero,10106ee8 <__lo0bits+0xa0>
10106e64:	1806d0ba 	srli	r3,r3,2
10106e68:	00800084 	movi	r2,2
10106e6c:	20c00015 	stw	r3,0(r4)
10106e70:	f800283a 	ret
10106e74:	18bfffcc 	andi	r2,r3,65535
10106e78:	10001326 	beq	r2,zero,10106ec8 <__lo0bits+0x80>
10106e7c:	0005883a 	mov	r2,zero
10106e80:	19403fcc 	andi	r5,r3,255
10106e84:	2800021e 	bne	r5,zero,10106e90 <__lo0bits+0x48>
10106e88:	1806d23a 	srli	r3,r3,8
10106e8c:	10800204 	addi	r2,r2,8
10106e90:	194003cc 	andi	r5,r3,15
10106e94:	2800021e 	bne	r5,zero,10106ea0 <__lo0bits+0x58>
10106e98:	1806d13a 	srli	r3,r3,4
10106e9c:	10800104 	addi	r2,r2,4
10106ea0:	194000cc 	andi	r5,r3,3
10106ea4:	2800021e 	bne	r5,zero,10106eb0 <__lo0bits+0x68>
10106ea8:	1806d0ba 	srli	r3,r3,2
10106eac:	10800084 	addi	r2,r2,2
10106eb0:	1940004c 	andi	r5,r3,1
10106eb4:	2800081e 	bne	r5,zero,10106ed8 <__lo0bits+0x90>
10106eb8:	1806d07a 	srli	r3,r3,1
10106ebc:	1800051e 	bne	r3,zero,10106ed4 <__lo0bits+0x8c>
10106ec0:	00800804 	movi	r2,32
10106ec4:	f800283a 	ret
10106ec8:	1806d43a 	srli	r3,r3,16
10106ecc:	00800404 	movi	r2,16
10106ed0:	003feb06 	br	10106e80 <__alt_data_end+0xfffe6e80>
10106ed4:	10800044 	addi	r2,r2,1
10106ed8:	20c00015 	stw	r3,0(r4)
10106edc:	f800283a 	ret
10106ee0:	0005883a 	mov	r2,zero
10106ee4:	f800283a 	ret
10106ee8:	1806d07a 	srli	r3,r3,1
10106eec:	00800044 	movi	r2,1
10106ef0:	20c00015 	stw	r3,0(r4)
10106ef4:	f800283a 	ret

10106ef8 <__i2b>:
10106ef8:	defffd04 	addi	sp,sp,-12
10106efc:	dc000015 	stw	r16,0(sp)
10106f00:	04000044 	movi	r16,1
10106f04:	dc400115 	stw	r17,4(sp)
10106f08:	2823883a 	mov	r17,r5
10106f0c:	800b883a 	mov	r5,r16
10106f10:	dfc00215 	stw	ra,8(sp)
10106f14:	0106aec0 	call	10106aec <_Balloc>
10106f18:	14400515 	stw	r17,20(r2)
10106f1c:	14000415 	stw	r16,16(r2)
10106f20:	dfc00217 	ldw	ra,8(sp)
10106f24:	dc400117 	ldw	r17,4(sp)
10106f28:	dc000017 	ldw	r16,0(sp)
10106f2c:	dec00304 	addi	sp,sp,12
10106f30:	f800283a 	ret

10106f34 <__multiply>:
10106f34:	defffa04 	addi	sp,sp,-24
10106f38:	dcc00315 	stw	r19,12(sp)
10106f3c:	dc800215 	stw	r18,8(sp)
10106f40:	34c00417 	ldw	r19,16(r6)
10106f44:	2c800417 	ldw	r18,16(r5)
10106f48:	dd000415 	stw	r20,16(sp)
10106f4c:	dc400115 	stw	r17,4(sp)
10106f50:	dfc00515 	stw	ra,20(sp)
10106f54:	dc000015 	stw	r16,0(sp)
10106f58:	2829883a 	mov	r20,r5
10106f5c:	3023883a 	mov	r17,r6
10106f60:	94c0050e 	bge	r18,r19,10106f78 <__multiply+0x44>
10106f64:	9007883a 	mov	r3,r18
10106f68:	3029883a 	mov	r20,r6
10106f6c:	9825883a 	mov	r18,r19
10106f70:	2823883a 	mov	r17,r5
10106f74:	1827883a 	mov	r19,r3
10106f78:	a0800217 	ldw	r2,8(r20)
10106f7c:	94e1883a 	add	r16,r18,r19
10106f80:	a1400117 	ldw	r5,4(r20)
10106f84:	1400010e 	bge	r2,r16,10106f8c <__multiply+0x58>
10106f88:	29400044 	addi	r5,r5,1
10106f8c:	0106aec0 	call	10106aec <_Balloc>
10106f90:	8415883a 	add	r10,r16,r16
10106f94:	12c00504 	addi	r11,r2,20
10106f98:	5295883a 	add	r10,r10,r10
10106f9c:	5a95883a 	add	r10,r11,r10
10106fa0:	5807883a 	mov	r3,r11
10106fa4:	5a80032e 	bgeu	r11,r10,10106fb4 <__multiply+0x80>
10106fa8:	18000015 	stw	zero,0(r3)
10106fac:	18c00104 	addi	r3,r3,4
10106fb0:	1abffd36 	bltu	r3,r10,10106fa8 <__alt_data_end+0xfffe6fa8>
10106fb4:	9ce7883a 	add	r19,r19,r19
10106fb8:	94a5883a 	add	r18,r18,r18
10106fbc:	89800504 	addi	r6,r17,20
10106fc0:	9ce7883a 	add	r19,r19,r19
10106fc4:	a3400504 	addi	r13,r20,20
10106fc8:	94a5883a 	add	r18,r18,r18
10106fcc:	34d9883a 	add	r12,r6,r19
10106fd0:	6c93883a 	add	r9,r13,r18
10106fd4:	3300422e 	bgeu	r6,r12,101070e0 <__multiply+0x1ac>
10106fd8:	37c00017 	ldw	ra,0(r6)
10106fdc:	fbffffcc 	andi	r15,ra,65535
10106fe0:	78001b26 	beq	r15,zero,10107050 <__multiply+0x11c>
10106fe4:	5811883a 	mov	r8,r11
10106fe8:	681d883a 	mov	r14,r13
10106fec:	000f883a 	mov	r7,zero
10106ff0:	71000017 	ldw	r4,0(r14)
10106ff4:	40c00017 	ldw	r3,0(r8)
10106ff8:	73800104 	addi	r14,r14,4
10106ffc:	217fffcc 	andi	r5,r4,65535
10107000:	2bcb383a 	mul	r5,r5,r15
10107004:	2008d43a 	srli	r4,r4,16
10107008:	1c7fffcc 	andi	r17,r3,65535
1010700c:	2c4b883a 	add	r5,r5,r17
10107010:	29cb883a 	add	r5,r5,r7
10107014:	23c9383a 	mul	r4,r4,r15
10107018:	1806d43a 	srli	r3,r3,16
1010701c:	280ed43a 	srli	r7,r5,16
10107020:	297fffcc 	andi	r5,r5,65535
10107024:	20c7883a 	add	r3,r4,r3
10107028:	19c7883a 	add	r3,r3,r7
1010702c:	1808943a 	slli	r4,r3,16
10107030:	4023883a 	mov	r17,r8
10107034:	180ed43a 	srli	r7,r3,16
10107038:	214ab03a 	or	r5,r4,r5
1010703c:	41400015 	stw	r5,0(r8)
10107040:	42000104 	addi	r8,r8,4
10107044:	727fea36 	bltu	r14,r9,10106ff0 <__alt_data_end+0xfffe6ff0>
10107048:	89c00115 	stw	r7,4(r17)
1010704c:	37c00017 	ldw	ra,0(r6)
10107050:	f83ed43a 	srli	ra,ra,16
10107054:	f8001f26 	beq	ra,zero,101070d4 <__multiply+0x1a0>
10107058:	58c00017 	ldw	r3,0(r11)
1010705c:	681d883a 	mov	r14,r13
10107060:	581f883a 	mov	r15,r11
10107064:	1811883a 	mov	r8,r3
10107068:	5825883a 	mov	r18,r11
1010706c:	000f883a 	mov	r7,zero
10107070:	00000106 	br	10107078 <__multiply+0x144>
10107074:	8825883a 	mov	r18,r17
10107078:	7140000b 	ldhu	r5,0(r14)
1010707c:	4010d43a 	srli	r8,r8,16
10107080:	193fffcc 	andi	r4,r3,65535
10107084:	2fcb383a 	mul	r5,r5,ra
10107088:	7bc00104 	addi	r15,r15,4
1010708c:	73800104 	addi	r14,r14,4
10107090:	2a0b883a 	add	r5,r5,r8
10107094:	29cb883a 	add	r5,r5,r7
10107098:	2806943a 	slli	r3,r5,16
1010709c:	94400104 	addi	r17,r18,4
101070a0:	280ad43a 	srli	r5,r5,16
101070a4:	1908b03a 	or	r4,r3,r4
101070a8:	793fff15 	stw	r4,-4(r15)
101070ac:	70ffff17 	ldw	r3,-4(r14)
101070b0:	8a000017 	ldw	r8,0(r17)
101070b4:	1806d43a 	srli	r3,r3,16
101070b8:	413fffcc 	andi	r4,r8,65535
101070bc:	1fc7383a 	mul	r3,r3,ra
101070c0:	1907883a 	add	r3,r3,r4
101070c4:	1947883a 	add	r3,r3,r5
101070c8:	180ed43a 	srli	r7,r3,16
101070cc:	727fe936 	bltu	r14,r9,10107074 <__alt_data_end+0xfffe7074>
101070d0:	90c00115 	stw	r3,4(r18)
101070d4:	31800104 	addi	r6,r6,4
101070d8:	5ac00104 	addi	r11,r11,4
101070dc:	333fbe36 	bltu	r6,r12,10106fd8 <__alt_data_end+0xfffe6fd8>
101070e0:	0400090e 	bge	zero,r16,10107108 <__multiply+0x1d4>
101070e4:	50ffff17 	ldw	r3,-4(r10)
101070e8:	52bfff04 	addi	r10,r10,-4
101070ec:	18000326 	beq	r3,zero,101070fc <__multiply+0x1c8>
101070f0:	00000506 	br	10107108 <__multiply+0x1d4>
101070f4:	50c00017 	ldw	r3,0(r10)
101070f8:	1800031e 	bne	r3,zero,10107108 <__multiply+0x1d4>
101070fc:	843fffc4 	addi	r16,r16,-1
10107100:	52bfff04 	addi	r10,r10,-4
10107104:	803ffb1e 	bne	r16,zero,101070f4 <__alt_data_end+0xfffe70f4>
10107108:	14000415 	stw	r16,16(r2)
1010710c:	dfc00517 	ldw	ra,20(sp)
10107110:	dd000417 	ldw	r20,16(sp)
10107114:	dcc00317 	ldw	r19,12(sp)
10107118:	dc800217 	ldw	r18,8(sp)
1010711c:	dc400117 	ldw	r17,4(sp)
10107120:	dc000017 	ldw	r16,0(sp)
10107124:	dec00604 	addi	sp,sp,24
10107128:	f800283a 	ret

1010712c <__pow5mult>:
1010712c:	defffa04 	addi	sp,sp,-24
10107130:	dcc00315 	stw	r19,12(sp)
10107134:	dc000015 	stw	r16,0(sp)
10107138:	dfc00515 	stw	ra,20(sp)
1010713c:	dd000415 	stw	r20,16(sp)
10107140:	dc800215 	stw	r18,8(sp)
10107144:	dc400115 	stw	r17,4(sp)
10107148:	308000cc 	andi	r2,r6,3
1010714c:	3021883a 	mov	r16,r6
10107150:	2027883a 	mov	r19,r4
10107154:	10002f1e 	bne	r2,zero,10107214 <__pow5mult+0xe8>
10107158:	2825883a 	mov	r18,r5
1010715c:	8021d0ba 	srai	r16,r16,2
10107160:	80001a26 	beq	r16,zero,101071cc <__pow5mult+0xa0>
10107164:	9c401217 	ldw	r17,72(r19)
10107168:	8800061e 	bne	r17,zero,10107184 <__pow5mult+0x58>
1010716c:	00003406 	br	10107240 <__pow5mult+0x114>
10107170:	8021d07a 	srai	r16,r16,1
10107174:	80001526 	beq	r16,zero,101071cc <__pow5mult+0xa0>
10107178:	88800017 	ldw	r2,0(r17)
1010717c:	10001c26 	beq	r2,zero,101071f0 <__pow5mult+0xc4>
10107180:	1023883a 	mov	r17,r2
10107184:	8080004c 	andi	r2,r16,1
10107188:	103ff926 	beq	r2,zero,10107170 <__alt_data_end+0xfffe7170>
1010718c:	880d883a 	mov	r6,r17
10107190:	900b883a 	mov	r5,r18
10107194:	9809883a 	mov	r4,r19
10107198:	0106f340 	call	10106f34 <__multiply>
1010719c:	90001b26 	beq	r18,zero,1010720c <__pow5mult+0xe0>
101071a0:	91000117 	ldw	r4,4(r18)
101071a4:	98c01317 	ldw	r3,76(r19)
101071a8:	8021d07a 	srai	r16,r16,1
101071ac:	2109883a 	add	r4,r4,r4
101071b0:	2109883a 	add	r4,r4,r4
101071b4:	1907883a 	add	r3,r3,r4
101071b8:	19000017 	ldw	r4,0(r3)
101071bc:	91000015 	stw	r4,0(r18)
101071c0:	1c800015 	stw	r18,0(r3)
101071c4:	1025883a 	mov	r18,r2
101071c8:	803feb1e 	bne	r16,zero,10107178 <__alt_data_end+0xfffe7178>
101071cc:	9005883a 	mov	r2,r18
101071d0:	dfc00517 	ldw	ra,20(sp)
101071d4:	dd000417 	ldw	r20,16(sp)
101071d8:	dcc00317 	ldw	r19,12(sp)
101071dc:	dc800217 	ldw	r18,8(sp)
101071e0:	dc400117 	ldw	r17,4(sp)
101071e4:	dc000017 	ldw	r16,0(sp)
101071e8:	dec00604 	addi	sp,sp,24
101071ec:	f800283a 	ret
101071f0:	880d883a 	mov	r6,r17
101071f4:	880b883a 	mov	r5,r17
101071f8:	9809883a 	mov	r4,r19
101071fc:	0106f340 	call	10106f34 <__multiply>
10107200:	88800015 	stw	r2,0(r17)
10107204:	10000015 	stw	zero,0(r2)
10107208:	003fdd06 	br	10107180 <__alt_data_end+0xfffe7180>
1010720c:	1025883a 	mov	r18,r2
10107210:	003fd706 	br	10107170 <__alt_data_end+0xfffe7170>
10107214:	10bfffc4 	addi	r2,r2,-1
10107218:	1085883a 	add	r2,r2,r2
1010721c:	00c40474 	movhi	r3,4113
10107220:	18c08404 	addi	r3,r3,528
10107224:	1085883a 	add	r2,r2,r2
10107228:	1885883a 	add	r2,r3,r2
1010722c:	11800017 	ldw	r6,0(r2)
10107230:	000f883a 	mov	r7,zero
10107234:	0106bbc0 	call	10106bbc <__multadd>
10107238:	1025883a 	mov	r18,r2
1010723c:	003fc706 	br	1010715c <__alt_data_end+0xfffe715c>
10107240:	05000044 	movi	r20,1
10107244:	a00b883a 	mov	r5,r20
10107248:	9809883a 	mov	r4,r19
1010724c:	0106aec0 	call	10106aec <_Balloc>
10107250:	1023883a 	mov	r17,r2
10107254:	00809c44 	movi	r2,625
10107258:	88800515 	stw	r2,20(r17)
1010725c:	8d000415 	stw	r20,16(r17)
10107260:	9c401215 	stw	r17,72(r19)
10107264:	88000015 	stw	zero,0(r17)
10107268:	003fc606 	br	10107184 <__alt_data_end+0xfffe7184>

1010726c <__lshift>:
1010726c:	defff904 	addi	sp,sp,-28
10107270:	dd400515 	stw	r21,20(sp)
10107274:	dcc00315 	stw	r19,12(sp)
10107278:	302bd17a 	srai	r21,r6,5
1010727c:	2cc00417 	ldw	r19,16(r5)
10107280:	28800217 	ldw	r2,8(r5)
10107284:	dd000415 	stw	r20,16(sp)
10107288:	ace7883a 	add	r19,r21,r19
1010728c:	dc800215 	stw	r18,8(sp)
10107290:	dc400115 	stw	r17,4(sp)
10107294:	dc000015 	stw	r16,0(sp)
10107298:	dfc00615 	stw	ra,24(sp)
1010729c:	9c000044 	addi	r16,r19,1
101072a0:	2823883a 	mov	r17,r5
101072a4:	3029883a 	mov	r20,r6
101072a8:	2025883a 	mov	r18,r4
101072ac:	29400117 	ldw	r5,4(r5)
101072b0:	1400030e 	bge	r2,r16,101072c0 <__lshift+0x54>
101072b4:	1085883a 	add	r2,r2,r2
101072b8:	29400044 	addi	r5,r5,1
101072bc:	143ffd16 	blt	r2,r16,101072b4 <__alt_data_end+0xfffe72b4>
101072c0:	9009883a 	mov	r4,r18
101072c4:	0106aec0 	call	10106aec <_Balloc>
101072c8:	10c00504 	addi	r3,r2,20
101072cc:	0540070e 	bge	zero,r21,101072ec <__lshift+0x80>
101072d0:	ad6b883a 	add	r21,r21,r21
101072d4:	ad6b883a 	add	r21,r21,r21
101072d8:	1809883a 	mov	r4,r3
101072dc:	1d47883a 	add	r3,r3,r21
101072e0:	20000015 	stw	zero,0(r4)
101072e4:	21000104 	addi	r4,r4,4
101072e8:	193ffd1e 	bne	r3,r4,101072e0 <__alt_data_end+0xfffe72e0>
101072ec:	8a000417 	ldw	r8,16(r17)
101072f0:	89000504 	addi	r4,r17,20
101072f4:	a18007cc 	andi	r6,r20,31
101072f8:	4211883a 	add	r8,r8,r8
101072fc:	4211883a 	add	r8,r8,r8
10107300:	2211883a 	add	r8,r4,r8
10107304:	30002326 	beq	r6,zero,10107394 <__lshift+0x128>
10107308:	02400804 	movi	r9,32
1010730c:	4993c83a 	sub	r9,r9,r6
10107310:	000b883a 	mov	r5,zero
10107314:	21c00017 	ldw	r7,0(r4)
10107318:	1815883a 	mov	r10,r3
1010731c:	18c00104 	addi	r3,r3,4
10107320:	398e983a 	sll	r7,r7,r6
10107324:	21000104 	addi	r4,r4,4
10107328:	394ab03a 	or	r5,r7,r5
1010732c:	197fff15 	stw	r5,-4(r3)
10107330:	217fff17 	ldw	r5,-4(r4)
10107334:	2a4ad83a 	srl	r5,r5,r9
10107338:	223ff636 	bltu	r4,r8,10107314 <__alt_data_end+0xfffe7314>
1010733c:	51400115 	stw	r5,4(r10)
10107340:	28001a1e 	bne	r5,zero,101073ac <__lshift+0x140>
10107344:	843fffc4 	addi	r16,r16,-1
10107348:	14000415 	stw	r16,16(r2)
1010734c:	88000826 	beq	r17,zero,10107370 <__lshift+0x104>
10107350:	89000117 	ldw	r4,4(r17)
10107354:	90c01317 	ldw	r3,76(r18)
10107358:	2109883a 	add	r4,r4,r4
1010735c:	2109883a 	add	r4,r4,r4
10107360:	1907883a 	add	r3,r3,r4
10107364:	19000017 	ldw	r4,0(r3)
10107368:	89000015 	stw	r4,0(r17)
1010736c:	1c400015 	stw	r17,0(r3)
10107370:	dfc00617 	ldw	ra,24(sp)
10107374:	dd400517 	ldw	r21,20(sp)
10107378:	dd000417 	ldw	r20,16(sp)
1010737c:	dcc00317 	ldw	r19,12(sp)
10107380:	dc800217 	ldw	r18,8(sp)
10107384:	dc400117 	ldw	r17,4(sp)
10107388:	dc000017 	ldw	r16,0(sp)
1010738c:	dec00704 	addi	sp,sp,28
10107390:	f800283a 	ret
10107394:	21400017 	ldw	r5,0(r4)
10107398:	18c00104 	addi	r3,r3,4
1010739c:	21000104 	addi	r4,r4,4
101073a0:	197fff15 	stw	r5,-4(r3)
101073a4:	223ffb36 	bltu	r4,r8,10107394 <__alt_data_end+0xfffe7394>
101073a8:	003fe606 	br	10107344 <__alt_data_end+0xfffe7344>
101073ac:	9c000084 	addi	r16,r19,2
101073b0:	003fe406 	br	10107344 <__alt_data_end+0xfffe7344>

101073b4 <__mcmp>:
101073b4:	20800417 	ldw	r2,16(r4)
101073b8:	28c00417 	ldw	r3,16(r5)
101073bc:	10c5c83a 	sub	r2,r2,r3
101073c0:	1000111e 	bne	r2,zero,10107408 <__mcmp+0x54>
101073c4:	18c7883a 	add	r3,r3,r3
101073c8:	18c7883a 	add	r3,r3,r3
101073cc:	21000504 	addi	r4,r4,20
101073d0:	29400504 	addi	r5,r5,20
101073d4:	20c5883a 	add	r2,r4,r3
101073d8:	28cb883a 	add	r5,r5,r3
101073dc:	00000106 	br	101073e4 <__mcmp+0x30>
101073e0:	20800a2e 	bgeu	r4,r2,1010740c <__mcmp+0x58>
101073e4:	10bfff04 	addi	r2,r2,-4
101073e8:	297fff04 	addi	r5,r5,-4
101073ec:	11800017 	ldw	r6,0(r2)
101073f0:	28c00017 	ldw	r3,0(r5)
101073f4:	30fffa26 	beq	r6,r3,101073e0 <__alt_data_end+0xfffe73e0>
101073f8:	30c00236 	bltu	r6,r3,10107404 <__mcmp+0x50>
101073fc:	00800044 	movi	r2,1
10107400:	f800283a 	ret
10107404:	00bfffc4 	movi	r2,-1
10107408:	f800283a 	ret
1010740c:	0005883a 	mov	r2,zero
10107410:	f800283a 	ret

10107414 <__mdiff>:
10107414:	28c00417 	ldw	r3,16(r5)
10107418:	30800417 	ldw	r2,16(r6)
1010741c:	defffa04 	addi	sp,sp,-24
10107420:	dcc00315 	stw	r19,12(sp)
10107424:	dc800215 	stw	r18,8(sp)
10107428:	dfc00515 	stw	ra,20(sp)
1010742c:	dd000415 	stw	r20,16(sp)
10107430:	dc400115 	stw	r17,4(sp)
10107434:	dc000015 	stw	r16,0(sp)
10107438:	1887c83a 	sub	r3,r3,r2
1010743c:	2825883a 	mov	r18,r5
10107440:	3027883a 	mov	r19,r6
10107444:	1800141e 	bne	r3,zero,10107498 <__mdiff+0x84>
10107448:	1085883a 	add	r2,r2,r2
1010744c:	1085883a 	add	r2,r2,r2
10107450:	2a000504 	addi	r8,r5,20
10107454:	34000504 	addi	r16,r6,20
10107458:	4087883a 	add	r3,r8,r2
1010745c:	8085883a 	add	r2,r16,r2
10107460:	00000106 	br	10107468 <__mdiff+0x54>
10107464:	40c0592e 	bgeu	r8,r3,101075cc <__mdiff+0x1b8>
10107468:	18ffff04 	addi	r3,r3,-4
1010746c:	10bfff04 	addi	r2,r2,-4
10107470:	19c00017 	ldw	r7,0(r3)
10107474:	11400017 	ldw	r5,0(r2)
10107478:	397ffa26 	beq	r7,r5,10107464 <__alt_data_end+0xfffe7464>
1010747c:	3940592e 	bgeu	r7,r5,101075e4 <__mdiff+0x1d0>
10107480:	9005883a 	mov	r2,r18
10107484:	4023883a 	mov	r17,r8
10107488:	9825883a 	mov	r18,r19
1010748c:	05000044 	movi	r20,1
10107490:	1027883a 	mov	r19,r2
10107494:	00000406 	br	101074a8 <__mdiff+0x94>
10107498:	18005616 	blt	r3,zero,101075f4 <__mdiff+0x1e0>
1010749c:	34400504 	addi	r17,r6,20
101074a0:	2c000504 	addi	r16,r5,20
101074a4:	0029883a 	mov	r20,zero
101074a8:	91400117 	ldw	r5,4(r18)
101074ac:	0106aec0 	call	10106aec <_Balloc>
101074b0:	92400417 	ldw	r9,16(r18)
101074b4:	9b000417 	ldw	r12,16(r19)
101074b8:	12c00504 	addi	r11,r2,20
101074bc:	4a51883a 	add	r8,r9,r9
101074c0:	6319883a 	add	r12,r12,r12
101074c4:	4211883a 	add	r8,r8,r8
101074c8:	6319883a 	add	r12,r12,r12
101074cc:	15000315 	stw	r20,12(r2)
101074d0:	8211883a 	add	r8,r16,r8
101074d4:	8b19883a 	add	r12,r17,r12
101074d8:	0007883a 	mov	r3,zero
101074dc:	81400017 	ldw	r5,0(r16)
101074e0:	89c00017 	ldw	r7,0(r17)
101074e4:	59800104 	addi	r6,r11,4
101074e8:	293fffcc 	andi	r4,r5,65535
101074ec:	20c7883a 	add	r3,r4,r3
101074f0:	393fffcc 	andi	r4,r7,65535
101074f4:	1909c83a 	sub	r4,r3,r4
101074f8:	280ad43a 	srli	r5,r5,16
101074fc:	380ed43a 	srli	r7,r7,16
10107500:	2007d43a 	srai	r3,r4,16
10107504:	213fffcc 	andi	r4,r4,65535
10107508:	29cbc83a 	sub	r5,r5,r7
1010750c:	28c7883a 	add	r3,r5,r3
10107510:	180a943a 	slli	r5,r3,16
10107514:	8c400104 	addi	r17,r17,4
10107518:	84000104 	addi	r16,r16,4
1010751c:	2908b03a 	or	r4,r5,r4
10107520:	59000015 	stw	r4,0(r11)
10107524:	1807d43a 	srai	r3,r3,16
10107528:	3015883a 	mov	r10,r6
1010752c:	3017883a 	mov	r11,r6
10107530:	8b3fea36 	bltu	r17,r12,101074dc <__alt_data_end+0xfffe74dc>
10107534:	8200162e 	bgeu	r16,r8,10107590 <__mdiff+0x17c>
10107538:	8017883a 	mov	r11,r16
1010753c:	59400017 	ldw	r5,0(r11)
10107540:	31800104 	addi	r6,r6,4
10107544:	5ac00104 	addi	r11,r11,4
10107548:	293fffcc 	andi	r4,r5,65535
1010754c:	20c7883a 	add	r3,r4,r3
10107550:	280ed43a 	srli	r7,r5,16
10107554:	180bd43a 	srai	r5,r3,16
10107558:	193fffcc 	andi	r4,r3,65535
1010755c:	3947883a 	add	r3,r7,r5
10107560:	180a943a 	slli	r5,r3,16
10107564:	1807d43a 	srai	r3,r3,16
10107568:	2908b03a 	or	r4,r5,r4
1010756c:	313fff15 	stw	r4,-4(r6)
10107570:	5a3ff236 	bltu	r11,r8,1010753c <__alt_data_end+0xfffe753c>
10107574:	0406303a 	nor	r3,zero,r16
10107578:	1a07883a 	add	r3,r3,r8
1010757c:	1806d0ba 	srli	r3,r3,2
10107580:	18c00044 	addi	r3,r3,1
10107584:	18c7883a 	add	r3,r3,r3
10107588:	18c7883a 	add	r3,r3,r3
1010758c:	50d5883a 	add	r10,r10,r3
10107590:	50ffff04 	addi	r3,r10,-4
10107594:	2000041e 	bne	r4,zero,101075a8 <__mdiff+0x194>
10107598:	18ffff04 	addi	r3,r3,-4
1010759c:	19000017 	ldw	r4,0(r3)
101075a0:	4a7fffc4 	addi	r9,r9,-1
101075a4:	203ffc26 	beq	r4,zero,10107598 <__alt_data_end+0xfffe7598>
101075a8:	12400415 	stw	r9,16(r2)
101075ac:	dfc00517 	ldw	ra,20(sp)
101075b0:	dd000417 	ldw	r20,16(sp)
101075b4:	dcc00317 	ldw	r19,12(sp)
101075b8:	dc800217 	ldw	r18,8(sp)
101075bc:	dc400117 	ldw	r17,4(sp)
101075c0:	dc000017 	ldw	r16,0(sp)
101075c4:	dec00604 	addi	sp,sp,24
101075c8:	f800283a 	ret
101075cc:	000b883a 	mov	r5,zero
101075d0:	0106aec0 	call	10106aec <_Balloc>
101075d4:	00c00044 	movi	r3,1
101075d8:	10c00415 	stw	r3,16(r2)
101075dc:	10000515 	stw	zero,20(r2)
101075e0:	003ff206 	br	101075ac <__alt_data_end+0xfffe75ac>
101075e4:	8023883a 	mov	r17,r16
101075e8:	0029883a 	mov	r20,zero
101075ec:	4021883a 	mov	r16,r8
101075f0:	003fad06 	br	101074a8 <__alt_data_end+0xfffe74a8>
101075f4:	9005883a 	mov	r2,r18
101075f8:	94400504 	addi	r17,r18,20
101075fc:	9c000504 	addi	r16,r19,20
10107600:	9825883a 	mov	r18,r19
10107604:	05000044 	movi	r20,1
10107608:	1027883a 	mov	r19,r2
1010760c:	003fa606 	br	101074a8 <__alt_data_end+0xfffe74a8>

10107610 <__ulp>:
10107610:	295ffc2c 	andhi	r5,r5,32752
10107614:	00bf3034 	movhi	r2,64704
10107618:	2887883a 	add	r3,r5,r2
1010761c:	00c0020e 	bge	zero,r3,10107628 <__ulp+0x18>
10107620:	0005883a 	mov	r2,zero
10107624:	f800283a 	ret
10107628:	00c7c83a 	sub	r3,zero,r3
1010762c:	1807d53a 	srai	r3,r3,20
10107630:	008004c4 	movi	r2,19
10107634:	10c00b0e 	bge	r2,r3,10107664 <__ulp+0x54>
10107638:	18bffb04 	addi	r2,r3,-20
1010763c:	01000784 	movi	r4,30
10107640:	0007883a 	mov	r3,zero
10107644:	20800516 	blt	r4,r2,1010765c <__ulp+0x4c>
10107648:	010007c4 	movi	r4,31
1010764c:	2089c83a 	sub	r4,r4,r2
10107650:	00800044 	movi	r2,1
10107654:	1104983a 	sll	r2,r2,r4
10107658:	f800283a 	ret
1010765c:	00800044 	movi	r2,1
10107660:	f800283a 	ret
10107664:	01400234 	movhi	r5,8
10107668:	28c7d83a 	sra	r3,r5,r3
1010766c:	0005883a 	mov	r2,zero
10107670:	f800283a 	ret

10107674 <__b2d>:
10107674:	defffa04 	addi	sp,sp,-24
10107678:	dc000015 	stw	r16,0(sp)
1010767c:	24000417 	ldw	r16,16(r4)
10107680:	dc400115 	stw	r17,4(sp)
10107684:	24400504 	addi	r17,r4,20
10107688:	8421883a 	add	r16,r16,r16
1010768c:	8421883a 	add	r16,r16,r16
10107690:	8c21883a 	add	r16,r17,r16
10107694:	dc800215 	stw	r18,8(sp)
10107698:	84bfff17 	ldw	r18,-4(r16)
1010769c:	dd000415 	stw	r20,16(sp)
101076a0:	dcc00315 	stw	r19,12(sp)
101076a4:	9009883a 	mov	r4,r18
101076a8:	2829883a 	mov	r20,r5
101076ac:	dfc00515 	stw	ra,20(sp)
101076b0:	0106de00 	call	10106de0 <__hi0bits>
101076b4:	00c00804 	movi	r3,32
101076b8:	1889c83a 	sub	r4,r3,r2
101076bc:	a1000015 	stw	r4,0(r20)
101076c0:	01000284 	movi	r4,10
101076c4:	84ffff04 	addi	r19,r16,-4
101076c8:	20801216 	blt	r4,r2,10107714 <__b2d+0xa0>
101076cc:	018002c4 	movi	r6,11
101076d0:	308dc83a 	sub	r6,r6,r2
101076d4:	9186d83a 	srl	r3,r18,r6
101076d8:	18cffc34 	orhi	r3,r3,16368
101076dc:	8cc0212e 	bgeu	r17,r19,10107764 <__b2d+0xf0>
101076e0:	813ffe17 	ldw	r4,-8(r16)
101076e4:	218cd83a 	srl	r6,r4,r6
101076e8:	10800544 	addi	r2,r2,21
101076ec:	9084983a 	sll	r2,r18,r2
101076f0:	1184b03a 	or	r2,r2,r6
101076f4:	dfc00517 	ldw	ra,20(sp)
101076f8:	dd000417 	ldw	r20,16(sp)
101076fc:	dcc00317 	ldw	r19,12(sp)
10107700:	dc800217 	ldw	r18,8(sp)
10107704:	dc400117 	ldw	r17,4(sp)
10107708:	dc000017 	ldw	r16,0(sp)
1010770c:	dec00604 	addi	sp,sp,24
10107710:	f800283a 	ret
10107714:	8cc00f2e 	bgeu	r17,r19,10107754 <__b2d+0xe0>
10107718:	117ffd44 	addi	r5,r2,-11
1010771c:	80bffe17 	ldw	r2,-8(r16)
10107720:	28000e26 	beq	r5,zero,1010775c <__b2d+0xe8>
10107724:	1949c83a 	sub	r4,r3,r5
10107728:	9164983a 	sll	r18,r18,r5
1010772c:	1106d83a 	srl	r3,r2,r4
10107730:	81bffe04 	addi	r6,r16,-8
10107734:	948ffc34 	orhi	r18,r18,16368
10107738:	90c6b03a 	or	r3,r18,r3
1010773c:	89800e2e 	bgeu	r17,r6,10107778 <__b2d+0x104>
10107740:	81bffd17 	ldw	r6,-12(r16)
10107744:	1144983a 	sll	r2,r2,r5
10107748:	310ad83a 	srl	r5,r6,r4
1010774c:	2884b03a 	or	r2,r5,r2
10107750:	003fe806 	br	101076f4 <__alt_data_end+0xfffe76f4>
10107754:	10bffd44 	addi	r2,r2,-11
10107758:	1000041e 	bne	r2,zero,1010776c <__b2d+0xf8>
1010775c:	90cffc34 	orhi	r3,r18,16368
10107760:	003fe406 	br	101076f4 <__alt_data_end+0xfffe76f4>
10107764:	000d883a 	mov	r6,zero
10107768:	003fdf06 	br	101076e8 <__alt_data_end+0xfffe76e8>
1010776c:	90a4983a 	sll	r18,r18,r2
10107770:	0005883a 	mov	r2,zero
10107774:	003ff906 	br	1010775c <__alt_data_end+0xfffe775c>
10107778:	1144983a 	sll	r2,r2,r5
1010777c:	003fdd06 	br	101076f4 <__alt_data_end+0xfffe76f4>

10107780 <__d2b>:
10107780:	defff804 	addi	sp,sp,-32
10107784:	dc000215 	stw	r16,8(sp)
10107788:	3021883a 	mov	r16,r6
1010778c:	dc400315 	stw	r17,12(sp)
10107790:	8022907a 	slli	r17,r16,1
10107794:	dd000615 	stw	r20,24(sp)
10107798:	2829883a 	mov	r20,r5
1010779c:	01400044 	movi	r5,1
101077a0:	dcc00515 	stw	r19,20(sp)
101077a4:	dc800415 	stw	r18,16(sp)
101077a8:	dfc00715 	stw	ra,28(sp)
101077ac:	3825883a 	mov	r18,r7
101077b0:	8822d57a 	srli	r17,r17,21
101077b4:	0106aec0 	call	10106aec <_Balloc>
101077b8:	1027883a 	mov	r19,r2
101077bc:	00800434 	movhi	r2,16
101077c0:	10bfffc4 	addi	r2,r2,-1
101077c4:	808c703a 	and	r6,r16,r2
101077c8:	88000126 	beq	r17,zero,101077d0 <__d2b+0x50>
101077cc:	31800434 	orhi	r6,r6,16
101077d0:	d9800015 	stw	r6,0(sp)
101077d4:	a0002426 	beq	r20,zero,10107868 <__d2b+0xe8>
101077d8:	d9000104 	addi	r4,sp,4
101077dc:	dd000115 	stw	r20,4(sp)
101077e0:	0106e480 	call	10106e48 <__lo0bits>
101077e4:	d8c00017 	ldw	r3,0(sp)
101077e8:	10002f1e 	bne	r2,zero,101078a8 <__d2b+0x128>
101077ec:	d9000117 	ldw	r4,4(sp)
101077f0:	99000515 	stw	r4,20(r19)
101077f4:	1821003a 	cmpeq	r16,r3,zero
101077f8:	01000084 	movi	r4,2
101077fc:	2421c83a 	sub	r16,r4,r16
10107800:	98c00615 	stw	r3,24(r19)
10107804:	9c000415 	stw	r16,16(r19)
10107808:	88001f1e 	bne	r17,zero,10107888 <__d2b+0x108>
1010780c:	10bef384 	addi	r2,r2,-1074
10107810:	90800015 	stw	r2,0(r18)
10107814:	00900034 	movhi	r2,16384
10107818:	10bfffc4 	addi	r2,r2,-1
1010781c:	8085883a 	add	r2,r16,r2
10107820:	1085883a 	add	r2,r2,r2
10107824:	1085883a 	add	r2,r2,r2
10107828:	9885883a 	add	r2,r19,r2
1010782c:	11000517 	ldw	r4,20(r2)
10107830:	8020917a 	slli	r16,r16,5
10107834:	0106de00 	call	10106de0 <__hi0bits>
10107838:	d8c00817 	ldw	r3,32(sp)
1010783c:	8085c83a 	sub	r2,r16,r2
10107840:	18800015 	stw	r2,0(r3)
10107844:	9805883a 	mov	r2,r19
10107848:	dfc00717 	ldw	ra,28(sp)
1010784c:	dd000617 	ldw	r20,24(sp)
10107850:	dcc00517 	ldw	r19,20(sp)
10107854:	dc800417 	ldw	r18,16(sp)
10107858:	dc400317 	ldw	r17,12(sp)
1010785c:	dc000217 	ldw	r16,8(sp)
10107860:	dec00804 	addi	sp,sp,32
10107864:	f800283a 	ret
10107868:	d809883a 	mov	r4,sp
1010786c:	0106e480 	call	10106e48 <__lo0bits>
10107870:	d8c00017 	ldw	r3,0(sp)
10107874:	04000044 	movi	r16,1
10107878:	9c000415 	stw	r16,16(r19)
1010787c:	98c00515 	stw	r3,20(r19)
10107880:	10800804 	addi	r2,r2,32
10107884:	883fe126 	beq	r17,zero,1010780c <__alt_data_end+0xfffe780c>
10107888:	00c00d44 	movi	r3,53
1010788c:	8c7ef344 	addi	r17,r17,-1075
10107890:	88a3883a 	add	r17,r17,r2
10107894:	1885c83a 	sub	r2,r3,r2
10107898:	d8c00817 	ldw	r3,32(sp)
1010789c:	94400015 	stw	r17,0(r18)
101078a0:	18800015 	stw	r2,0(r3)
101078a4:	003fe706 	br	10107844 <__alt_data_end+0xfffe7844>
101078a8:	01000804 	movi	r4,32
101078ac:	2089c83a 	sub	r4,r4,r2
101078b0:	1908983a 	sll	r4,r3,r4
101078b4:	d9400117 	ldw	r5,4(sp)
101078b8:	1886d83a 	srl	r3,r3,r2
101078bc:	2148b03a 	or	r4,r4,r5
101078c0:	99000515 	stw	r4,20(r19)
101078c4:	d8c00015 	stw	r3,0(sp)
101078c8:	003fca06 	br	101077f4 <__alt_data_end+0xfffe77f4>

101078cc <__ratio>:
101078cc:	defff904 	addi	sp,sp,-28
101078d0:	dc400315 	stw	r17,12(sp)
101078d4:	2823883a 	mov	r17,r5
101078d8:	d9400104 	addi	r5,sp,4
101078dc:	dfc00615 	stw	ra,24(sp)
101078e0:	dcc00515 	stw	r19,20(sp)
101078e4:	dc800415 	stw	r18,16(sp)
101078e8:	2027883a 	mov	r19,r4
101078ec:	dc000215 	stw	r16,8(sp)
101078f0:	01076740 	call	10107674 <__b2d>
101078f4:	d80b883a 	mov	r5,sp
101078f8:	8809883a 	mov	r4,r17
101078fc:	1025883a 	mov	r18,r2
10107900:	1821883a 	mov	r16,r3
10107904:	01076740 	call	10107674 <__b2d>
10107908:	8a000417 	ldw	r8,16(r17)
1010790c:	99000417 	ldw	r4,16(r19)
10107910:	d9400117 	ldw	r5,4(sp)
10107914:	2209c83a 	sub	r4,r4,r8
10107918:	2010917a 	slli	r8,r4,5
1010791c:	d9000017 	ldw	r4,0(sp)
10107920:	2909c83a 	sub	r4,r5,r4
10107924:	4109883a 	add	r4,r8,r4
10107928:	01000e0e 	bge	zero,r4,10107964 <__ratio+0x98>
1010792c:	2008953a 	slli	r4,r4,20
10107930:	2421883a 	add	r16,r4,r16
10107934:	100d883a 	mov	r6,r2
10107938:	180f883a 	mov	r7,r3
1010793c:	9009883a 	mov	r4,r18
10107940:	800b883a 	mov	r5,r16
10107944:	010b7b80 	call	1010b7b8 <__divdf3>
10107948:	dfc00617 	ldw	ra,24(sp)
1010794c:	dcc00517 	ldw	r19,20(sp)
10107950:	dc800417 	ldw	r18,16(sp)
10107954:	dc400317 	ldw	r17,12(sp)
10107958:	dc000217 	ldw	r16,8(sp)
1010795c:	dec00704 	addi	sp,sp,28
10107960:	f800283a 	ret
10107964:	2008953a 	slli	r4,r4,20
10107968:	1907c83a 	sub	r3,r3,r4
1010796c:	003ff106 	br	10107934 <__alt_data_end+0xfffe7934>

10107970 <_mprec_log10>:
10107970:	defffe04 	addi	sp,sp,-8
10107974:	dc000015 	stw	r16,0(sp)
10107978:	dfc00115 	stw	ra,4(sp)
1010797c:	008005c4 	movi	r2,23
10107980:	2021883a 	mov	r16,r4
10107984:	11000d0e 	bge	r2,r4,101079bc <_mprec_log10+0x4c>
10107988:	0005883a 	mov	r2,zero
1010798c:	00cffc34 	movhi	r3,16368
10107990:	843fffc4 	addi	r16,r16,-1
10107994:	000d883a 	mov	r6,zero
10107998:	01d00934 	movhi	r7,16420
1010799c:	1009883a 	mov	r4,r2
101079a0:	180b883a 	mov	r5,r3
101079a4:	010c2f80 	call	1010c2f8 <__muldf3>
101079a8:	803ff91e 	bne	r16,zero,10107990 <__alt_data_end+0xfffe7990>
101079ac:	dfc00117 	ldw	ra,4(sp)
101079b0:	dc000017 	ldw	r16,0(sp)
101079b4:	dec00204 	addi	sp,sp,8
101079b8:	f800283a 	ret
101079bc:	202090fa 	slli	r16,r4,3
101079c0:	00840474 	movhi	r2,4113
101079c4:	10809b04 	addi	r2,r2,620
101079c8:	1421883a 	add	r16,r2,r16
101079cc:	80800017 	ldw	r2,0(r16)
101079d0:	80c00117 	ldw	r3,4(r16)
101079d4:	dfc00117 	ldw	ra,4(sp)
101079d8:	dc000017 	ldw	r16,0(sp)
101079dc:	dec00204 	addi	sp,sp,8
101079e0:	f800283a 	ret

101079e4 <__copybits>:
101079e4:	297fffc4 	addi	r5,r5,-1
101079e8:	280fd17a 	srai	r7,r5,5
101079ec:	30c00417 	ldw	r3,16(r6)
101079f0:	30800504 	addi	r2,r6,20
101079f4:	39c00044 	addi	r7,r7,1
101079f8:	18c7883a 	add	r3,r3,r3
101079fc:	39cf883a 	add	r7,r7,r7
10107a00:	18c7883a 	add	r3,r3,r3
10107a04:	39cf883a 	add	r7,r7,r7
10107a08:	10c7883a 	add	r3,r2,r3
10107a0c:	21cf883a 	add	r7,r4,r7
10107a10:	10c00d2e 	bgeu	r2,r3,10107a48 <__copybits+0x64>
10107a14:	200b883a 	mov	r5,r4
10107a18:	12000017 	ldw	r8,0(r2)
10107a1c:	29400104 	addi	r5,r5,4
10107a20:	10800104 	addi	r2,r2,4
10107a24:	2a3fff15 	stw	r8,-4(r5)
10107a28:	10fffb36 	bltu	r2,r3,10107a18 <__alt_data_end+0xfffe7a18>
10107a2c:	1985c83a 	sub	r2,r3,r6
10107a30:	10bffac4 	addi	r2,r2,-21
10107a34:	1004d0ba 	srli	r2,r2,2
10107a38:	10800044 	addi	r2,r2,1
10107a3c:	1085883a 	add	r2,r2,r2
10107a40:	1085883a 	add	r2,r2,r2
10107a44:	2089883a 	add	r4,r4,r2
10107a48:	21c0032e 	bgeu	r4,r7,10107a58 <__copybits+0x74>
10107a4c:	20000015 	stw	zero,0(r4)
10107a50:	21000104 	addi	r4,r4,4
10107a54:	21fffd36 	bltu	r4,r7,10107a4c <__alt_data_end+0xfffe7a4c>
10107a58:	f800283a 	ret

10107a5c <__any_on>:
10107a5c:	20c00417 	ldw	r3,16(r4)
10107a60:	2805d17a 	srai	r2,r5,5
10107a64:	21000504 	addi	r4,r4,20
10107a68:	18800d0e 	bge	r3,r2,10107aa0 <__any_on+0x44>
10107a6c:	18c7883a 	add	r3,r3,r3
10107a70:	18c7883a 	add	r3,r3,r3
10107a74:	20c7883a 	add	r3,r4,r3
10107a78:	20c0192e 	bgeu	r4,r3,10107ae0 <__any_on+0x84>
10107a7c:	18bfff17 	ldw	r2,-4(r3)
10107a80:	18ffff04 	addi	r3,r3,-4
10107a84:	1000041e 	bne	r2,zero,10107a98 <__any_on+0x3c>
10107a88:	20c0142e 	bgeu	r4,r3,10107adc <__any_on+0x80>
10107a8c:	18ffff04 	addi	r3,r3,-4
10107a90:	19400017 	ldw	r5,0(r3)
10107a94:	283ffc26 	beq	r5,zero,10107a88 <__alt_data_end+0xfffe7a88>
10107a98:	00800044 	movi	r2,1
10107a9c:	f800283a 	ret
10107aa0:	10c00a0e 	bge	r2,r3,10107acc <__any_on+0x70>
10107aa4:	1085883a 	add	r2,r2,r2
10107aa8:	1085883a 	add	r2,r2,r2
10107aac:	294007cc 	andi	r5,r5,31
10107ab0:	2087883a 	add	r3,r4,r2
10107ab4:	283ff026 	beq	r5,zero,10107a78 <__alt_data_end+0xfffe7a78>
10107ab8:	19800017 	ldw	r6,0(r3)
10107abc:	3144d83a 	srl	r2,r6,r5
10107ac0:	114a983a 	sll	r5,r2,r5
10107ac4:	317ff41e 	bne	r6,r5,10107a98 <__alt_data_end+0xfffe7a98>
10107ac8:	003feb06 	br	10107a78 <__alt_data_end+0xfffe7a78>
10107acc:	1085883a 	add	r2,r2,r2
10107ad0:	1085883a 	add	r2,r2,r2
10107ad4:	2087883a 	add	r3,r4,r2
10107ad8:	003fe706 	br	10107a78 <__alt_data_end+0xfffe7a78>
10107adc:	f800283a 	ret
10107ae0:	0005883a 	mov	r2,zero
10107ae4:	f800283a 	ret

10107ae8 <_realloc_r>:
10107ae8:	defff604 	addi	sp,sp,-40
10107aec:	dc800215 	stw	r18,8(sp)
10107af0:	dfc00915 	stw	ra,36(sp)
10107af4:	df000815 	stw	fp,32(sp)
10107af8:	ddc00715 	stw	r23,28(sp)
10107afc:	dd800615 	stw	r22,24(sp)
10107b00:	dd400515 	stw	r21,20(sp)
10107b04:	dd000415 	stw	r20,16(sp)
10107b08:	dcc00315 	stw	r19,12(sp)
10107b0c:	dc400115 	stw	r17,4(sp)
10107b10:	dc000015 	stw	r16,0(sp)
10107b14:	3025883a 	mov	r18,r6
10107b18:	2800b726 	beq	r5,zero,10107df8 <_realloc_r+0x310>
10107b1c:	282b883a 	mov	r21,r5
10107b20:	2029883a 	mov	r20,r4
10107b24:	010daf00 	call	1010daf0 <__malloc_lock>
10107b28:	a8bfff17 	ldw	r2,-4(r21)
10107b2c:	043fff04 	movi	r16,-4
10107b30:	90c002c4 	addi	r3,r18,11
10107b34:	01000584 	movi	r4,22
10107b38:	acfffe04 	addi	r19,r21,-8
10107b3c:	1420703a 	and	r16,r2,r16
10107b40:	20c0332e 	bgeu	r4,r3,10107c10 <_realloc_r+0x128>
10107b44:	047ffe04 	movi	r17,-8
10107b48:	1c62703a 	and	r17,r3,r17
10107b4c:	8807883a 	mov	r3,r17
10107b50:	88005816 	blt	r17,zero,10107cb4 <_realloc_r+0x1cc>
10107b54:	8c805736 	bltu	r17,r18,10107cb4 <_realloc_r+0x1cc>
10107b58:	80c0300e 	bge	r16,r3,10107c1c <_realloc_r+0x134>
10107b5c:	07040474 	movhi	fp,4113
10107b60:	e7024c04 	addi	fp,fp,2352
10107b64:	e1c00217 	ldw	r7,8(fp)
10107b68:	9c09883a 	add	r4,r19,r16
10107b6c:	22000117 	ldw	r8,4(r4)
10107b70:	21c06326 	beq	r4,r7,10107d00 <_realloc_r+0x218>
10107b74:	017fff84 	movi	r5,-2
10107b78:	414a703a 	and	r5,r8,r5
10107b7c:	214b883a 	add	r5,r4,r5
10107b80:	29800117 	ldw	r6,4(r5)
10107b84:	3180004c 	andi	r6,r6,1
10107b88:	30003f26 	beq	r6,zero,10107c88 <_realloc_r+0x1a0>
10107b8c:	1080004c 	andi	r2,r2,1
10107b90:	10008326 	beq	r2,zero,10107da0 <_realloc_r+0x2b8>
10107b94:	900b883a 	mov	r5,r18
10107b98:	a009883a 	mov	r4,r20
10107b9c:	0105e300 	call	10105e30 <_malloc_r>
10107ba0:	1025883a 	mov	r18,r2
10107ba4:	10011e26 	beq	r2,zero,10108020 <_realloc_r+0x538>
10107ba8:	a93fff17 	ldw	r4,-4(r21)
10107bac:	10fffe04 	addi	r3,r2,-8
10107bb0:	00bfff84 	movi	r2,-2
10107bb4:	2084703a 	and	r2,r4,r2
10107bb8:	9885883a 	add	r2,r19,r2
10107bbc:	1880ee26 	beq	r3,r2,10107f78 <_realloc_r+0x490>
10107bc0:	81bfff04 	addi	r6,r16,-4
10107bc4:	00800904 	movi	r2,36
10107bc8:	1180b836 	bltu	r2,r6,10107eac <_realloc_r+0x3c4>
10107bcc:	00c004c4 	movi	r3,19
10107bd0:	19809636 	bltu	r3,r6,10107e2c <_realloc_r+0x344>
10107bd4:	9005883a 	mov	r2,r18
10107bd8:	a807883a 	mov	r3,r21
10107bdc:	19000017 	ldw	r4,0(r3)
10107be0:	11000015 	stw	r4,0(r2)
10107be4:	19000117 	ldw	r4,4(r3)
10107be8:	11000115 	stw	r4,4(r2)
10107bec:	18c00217 	ldw	r3,8(r3)
10107bf0:	10c00215 	stw	r3,8(r2)
10107bf4:	a80b883a 	mov	r5,r21
10107bf8:	a009883a 	mov	r4,r20
10107bfc:	01052440 	call	10105244 <_free_r>
10107c00:	a009883a 	mov	r4,r20
10107c04:	010db140 	call	1010db14 <__malloc_unlock>
10107c08:	9005883a 	mov	r2,r18
10107c0c:	00001206 	br	10107c58 <_realloc_r+0x170>
10107c10:	00c00404 	movi	r3,16
10107c14:	1823883a 	mov	r17,r3
10107c18:	003fce06 	br	10107b54 <__alt_data_end+0xfffe7b54>
10107c1c:	a825883a 	mov	r18,r21
10107c20:	8445c83a 	sub	r2,r16,r17
10107c24:	00c003c4 	movi	r3,15
10107c28:	18802636 	bltu	r3,r2,10107cc4 <_realloc_r+0x1dc>
10107c2c:	99800117 	ldw	r6,4(r19)
10107c30:	9c07883a 	add	r3,r19,r16
10107c34:	3180004c 	andi	r6,r6,1
10107c38:	3420b03a 	or	r16,r6,r16
10107c3c:	9c000115 	stw	r16,4(r19)
10107c40:	18800117 	ldw	r2,4(r3)
10107c44:	10800054 	ori	r2,r2,1
10107c48:	18800115 	stw	r2,4(r3)
10107c4c:	a009883a 	mov	r4,r20
10107c50:	010db140 	call	1010db14 <__malloc_unlock>
10107c54:	9005883a 	mov	r2,r18
10107c58:	dfc00917 	ldw	ra,36(sp)
10107c5c:	df000817 	ldw	fp,32(sp)
10107c60:	ddc00717 	ldw	r23,28(sp)
10107c64:	dd800617 	ldw	r22,24(sp)
10107c68:	dd400517 	ldw	r21,20(sp)
10107c6c:	dd000417 	ldw	r20,16(sp)
10107c70:	dcc00317 	ldw	r19,12(sp)
10107c74:	dc800217 	ldw	r18,8(sp)
10107c78:	dc400117 	ldw	r17,4(sp)
10107c7c:	dc000017 	ldw	r16,0(sp)
10107c80:	dec00a04 	addi	sp,sp,40
10107c84:	f800283a 	ret
10107c88:	017fff04 	movi	r5,-4
10107c8c:	414a703a 	and	r5,r8,r5
10107c90:	814d883a 	add	r6,r16,r5
10107c94:	30c01f16 	blt	r6,r3,10107d14 <_realloc_r+0x22c>
10107c98:	20800317 	ldw	r2,12(r4)
10107c9c:	20c00217 	ldw	r3,8(r4)
10107ca0:	a825883a 	mov	r18,r21
10107ca4:	3021883a 	mov	r16,r6
10107ca8:	18800315 	stw	r2,12(r3)
10107cac:	10c00215 	stw	r3,8(r2)
10107cb0:	003fdb06 	br	10107c20 <__alt_data_end+0xfffe7c20>
10107cb4:	00800304 	movi	r2,12
10107cb8:	a0800015 	stw	r2,0(r20)
10107cbc:	0005883a 	mov	r2,zero
10107cc0:	003fe506 	br	10107c58 <__alt_data_end+0xfffe7c58>
10107cc4:	98c00117 	ldw	r3,4(r19)
10107cc8:	9c4b883a 	add	r5,r19,r17
10107ccc:	11000054 	ori	r4,r2,1
10107cd0:	18c0004c 	andi	r3,r3,1
10107cd4:	1c62b03a 	or	r17,r3,r17
10107cd8:	9c400115 	stw	r17,4(r19)
10107cdc:	29000115 	stw	r4,4(r5)
10107ce0:	2885883a 	add	r2,r5,r2
10107ce4:	10c00117 	ldw	r3,4(r2)
10107ce8:	29400204 	addi	r5,r5,8
10107cec:	a009883a 	mov	r4,r20
10107cf0:	18c00054 	ori	r3,r3,1
10107cf4:	10c00115 	stw	r3,4(r2)
10107cf8:	01052440 	call	10105244 <_free_r>
10107cfc:	003fd306 	br	10107c4c <__alt_data_end+0xfffe7c4c>
10107d00:	017fff04 	movi	r5,-4
10107d04:	414a703a 	and	r5,r8,r5
10107d08:	89800404 	addi	r6,r17,16
10107d0c:	8151883a 	add	r8,r16,r5
10107d10:	4180590e 	bge	r8,r6,10107e78 <_realloc_r+0x390>
10107d14:	1080004c 	andi	r2,r2,1
10107d18:	103f9e1e 	bne	r2,zero,10107b94 <__alt_data_end+0xfffe7b94>
10107d1c:	adbffe17 	ldw	r22,-8(r21)
10107d20:	00bfff04 	movi	r2,-4
10107d24:	9dadc83a 	sub	r22,r19,r22
10107d28:	b1800117 	ldw	r6,4(r22)
10107d2c:	3084703a 	and	r2,r6,r2
10107d30:	20002026 	beq	r4,zero,10107db4 <_realloc_r+0x2cc>
10107d34:	80af883a 	add	r23,r16,r2
10107d38:	b96f883a 	add	r23,r23,r5
10107d3c:	21c05f26 	beq	r4,r7,10107ebc <_realloc_r+0x3d4>
10107d40:	b8c01c16 	blt	r23,r3,10107db4 <_realloc_r+0x2cc>
10107d44:	20800317 	ldw	r2,12(r4)
10107d48:	20c00217 	ldw	r3,8(r4)
10107d4c:	81bfff04 	addi	r6,r16,-4
10107d50:	01000904 	movi	r4,36
10107d54:	18800315 	stw	r2,12(r3)
10107d58:	10c00215 	stw	r3,8(r2)
10107d5c:	b0c00217 	ldw	r3,8(r22)
10107d60:	b0800317 	ldw	r2,12(r22)
10107d64:	b4800204 	addi	r18,r22,8
10107d68:	18800315 	stw	r2,12(r3)
10107d6c:	10c00215 	stw	r3,8(r2)
10107d70:	21801b36 	bltu	r4,r6,10107de0 <_realloc_r+0x2f8>
10107d74:	008004c4 	movi	r2,19
10107d78:	1180352e 	bgeu	r2,r6,10107e50 <_realloc_r+0x368>
10107d7c:	a8800017 	ldw	r2,0(r21)
10107d80:	b0800215 	stw	r2,8(r22)
10107d84:	a8800117 	ldw	r2,4(r21)
10107d88:	b0800315 	stw	r2,12(r22)
10107d8c:	008006c4 	movi	r2,27
10107d90:	11807f36 	bltu	r2,r6,10107f90 <_realloc_r+0x4a8>
10107d94:	b0800404 	addi	r2,r22,16
10107d98:	ad400204 	addi	r21,r21,8
10107d9c:	00002d06 	br	10107e54 <_realloc_r+0x36c>
10107da0:	adbffe17 	ldw	r22,-8(r21)
10107da4:	00bfff04 	movi	r2,-4
10107da8:	9dadc83a 	sub	r22,r19,r22
10107dac:	b1000117 	ldw	r4,4(r22)
10107db0:	2084703a 	and	r2,r4,r2
10107db4:	b03f7726 	beq	r22,zero,10107b94 <__alt_data_end+0xfffe7b94>
10107db8:	80af883a 	add	r23,r16,r2
10107dbc:	b8ff7516 	blt	r23,r3,10107b94 <__alt_data_end+0xfffe7b94>
10107dc0:	b0800317 	ldw	r2,12(r22)
10107dc4:	b0c00217 	ldw	r3,8(r22)
10107dc8:	81bfff04 	addi	r6,r16,-4
10107dcc:	01000904 	movi	r4,36
10107dd0:	18800315 	stw	r2,12(r3)
10107dd4:	10c00215 	stw	r3,8(r2)
10107dd8:	b4800204 	addi	r18,r22,8
10107ddc:	21bfe52e 	bgeu	r4,r6,10107d74 <__alt_data_end+0xfffe7d74>
10107de0:	a80b883a 	mov	r5,r21
10107de4:	9009883a 	mov	r4,r18
10107de8:	01068680 	call	10106868 <memmove>
10107dec:	b821883a 	mov	r16,r23
10107df0:	b027883a 	mov	r19,r22
10107df4:	003f8a06 	br	10107c20 <__alt_data_end+0xfffe7c20>
10107df8:	300b883a 	mov	r5,r6
10107dfc:	dfc00917 	ldw	ra,36(sp)
10107e00:	df000817 	ldw	fp,32(sp)
10107e04:	ddc00717 	ldw	r23,28(sp)
10107e08:	dd800617 	ldw	r22,24(sp)
10107e0c:	dd400517 	ldw	r21,20(sp)
10107e10:	dd000417 	ldw	r20,16(sp)
10107e14:	dcc00317 	ldw	r19,12(sp)
10107e18:	dc800217 	ldw	r18,8(sp)
10107e1c:	dc400117 	ldw	r17,4(sp)
10107e20:	dc000017 	ldw	r16,0(sp)
10107e24:	dec00a04 	addi	sp,sp,40
10107e28:	0105e301 	jmpi	10105e30 <_malloc_r>
10107e2c:	a8c00017 	ldw	r3,0(r21)
10107e30:	90c00015 	stw	r3,0(r18)
10107e34:	a8c00117 	ldw	r3,4(r21)
10107e38:	90c00115 	stw	r3,4(r18)
10107e3c:	00c006c4 	movi	r3,27
10107e40:	19804536 	bltu	r3,r6,10107f58 <_realloc_r+0x470>
10107e44:	90800204 	addi	r2,r18,8
10107e48:	a8c00204 	addi	r3,r21,8
10107e4c:	003f6306 	br	10107bdc <__alt_data_end+0xfffe7bdc>
10107e50:	9005883a 	mov	r2,r18
10107e54:	a8c00017 	ldw	r3,0(r21)
10107e58:	b821883a 	mov	r16,r23
10107e5c:	b027883a 	mov	r19,r22
10107e60:	10c00015 	stw	r3,0(r2)
10107e64:	a8c00117 	ldw	r3,4(r21)
10107e68:	10c00115 	stw	r3,4(r2)
10107e6c:	a8c00217 	ldw	r3,8(r21)
10107e70:	10c00215 	stw	r3,8(r2)
10107e74:	003f6a06 	br	10107c20 <__alt_data_end+0xfffe7c20>
10107e78:	9c67883a 	add	r19,r19,r17
10107e7c:	4445c83a 	sub	r2,r8,r17
10107e80:	e4c00215 	stw	r19,8(fp)
10107e84:	10800054 	ori	r2,r2,1
10107e88:	98800115 	stw	r2,4(r19)
10107e8c:	a8bfff17 	ldw	r2,-4(r21)
10107e90:	a009883a 	mov	r4,r20
10107e94:	1080004c 	andi	r2,r2,1
10107e98:	1462b03a 	or	r17,r2,r17
10107e9c:	ac7fff15 	stw	r17,-4(r21)
10107ea0:	010db140 	call	1010db14 <__malloc_unlock>
10107ea4:	a805883a 	mov	r2,r21
10107ea8:	003f6b06 	br	10107c58 <__alt_data_end+0xfffe7c58>
10107eac:	a80b883a 	mov	r5,r21
10107eb0:	9009883a 	mov	r4,r18
10107eb4:	01068680 	call	10106868 <memmove>
10107eb8:	003f4e06 	br	10107bf4 <__alt_data_end+0xfffe7bf4>
10107ebc:	89000404 	addi	r4,r17,16
10107ec0:	b93fbc16 	blt	r23,r4,10107db4 <__alt_data_end+0xfffe7db4>
10107ec4:	b0800317 	ldw	r2,12(r22)
10107ec8:	b0c00217 	ldw	r3,8(r22)
10107ecc:	81bfff04 	addi	r6,r16,-4
10107ed0:	01000904 	movi	r4,36
10107ed4:	18800315 	stw	r2,12(r3)
10107ed8:	10c00215 	stw	r3,8(r2)
10107edc:	b4800204 	addi	r18,r22,8
10107ee0:	21804336 	bltu	r4,r6,10107ff0 <_realloc_r+0x508>
10107ee4:	008004c4 	movi	r2,19
10107ee8:	11803f2e 	bgeu	r2,r6,10107fe8 <_realloc_r+0x500>
10107eec:	a8800017 	ldw	r2,0(r21)
10107ef0:	b0800215 	stw	r2,8(r22)
10107ef4:	a8800117 	ldw	r2,4(r21)
10107ef8:	b0800315 	stw	r2,12(r22)
10107efc:	008006c4 	movi	r2,27
10107f00:	11803f36 	bltu	r2,r6,10108000 <_realloc_r+0x518>
10107f04:	b0800404 	addi	r2,r22,16
10107f08:	ad400204 	addi	r21,r21,8
10107f0c:	a8c00017 	ldw	r3,0(r21)
10107f10:	10c00015 	stw	r3,0(r2)
10107f14:	a8c00117 	ldw	r3,4(r21)
10107f18:	10c00115 	stw	r3,4(r2)
10107f1c:	a8c00217 	ldw	r3,8(r21)
10107f20:	10c00215 	stw	r3,8(r2)
10107f24:	b447883a 	add	r3,r22,r17
10107f28:	bc45c83a 	sub	r2,r23,r17
10107f2c:	e0c00215 	stw	r3,8(fp)
10107f30:	10800054 	ori	r2,r2,1
10107f34:	18800115 	stw	r2,4(r3)
10107f38:	b0800117 	ldw	r2,4(r22)
10107f3c:	a009883a 	mov	r4,r20
10107f40:	1080004c 	andi	r2,r2,1
10107f44:	1462b03a 	or	r17,r2,r17
10107f48:	b4400115 	stw	r17,4(r22)
10107f4c:	010db140 	call	1010db14 <__malloc_unlock>
10107f50:	9005883a 	mov	r2,r18
10107f54:	003f4006 	br	10107c58 <__alt_data_end+0xfffe7c58>
10107f58:	a8c00217 	ldw	r3,8(r21)
10107f5c:	90c00215 	stw	r3,8(r18)
10107f60:	a8c00317 	ldw	r3,12(r21)
10107f64:	90c00315 	stw	r3,12(r18)
10107f68:	30801126 	beq	r6,r2,10107fb0 <_realloc_r+0x4c8>
10107f6c:	90800404 	addi	r2,r18,16
10107f70:	a8c00404 	addi	r3,r21,16
10107f74:	003f1906 	br	10107bdc <__alt_data_end+0xfffe7bdc>
10107f78:	90ffff17 	ldw	r3,-4(r18)
10107f7c:	00bfff04 	movi	r2,-4
10107f80:	a825883a 	mov	r18,r21
10107f84:	1884703a 	and	r2,r3,r2
10107f88:	80a1883a 	add	r16,r16,r2
10107f8c:	003f2406 	br	10107c20 <__alt_data_end+0xfffe7c20>
10107f90:	a8800217 	ldw	r2,8(r21)
10107f94:	b0800415 	stw	r2,16(r22)
10107f98:	a8800317 	ldw	r2,12(r21)
10107f9c:	b0800515 	stw	r2,20(r22)
10107fa0:	31000a26 	beq	r6,r4,10107fcc <_realloc_r+0x4e4>
10107fa4:	b0800604 	addi	r2,r22,24
10107fa8:	ad400404 	addi	r21,r21,16
10107fac:	003fa906 	br	10107e54 <__alt_data_end+0xfffe7e54>
10107fb0:	a9000417 	ldw	r4,16(r21)
10107fb4:	90800604 	addi	r2,r18,24
10107fb8:	a8c00604 	addi	r3,r21,24
10107fbc:	91000415 	stw	r4,16(r18)
10107fc0:	a9000517 	ldw	r4,20(r21)
10107fc4:	91000515 	stw	r4,20(r18)
10107fc8:	003f0406 	br	10107bdc <__alt_data_end+0xfffe7bdc>
10107fcc:	a8c00417 	ldw	r3,16(r21)
10107fd0:	ad400604 	addi	r21,r21,24
10107fd4:	b0800804 	addi	r2,r22,32
10107fd8:	b0c00615 	stw	r3,24(r22)
10107fdc:	a8ffff17 	ldw	r3,-4(r21)
10107fe0:	b0c00715 	stw	r3,28(r22)
10107fe4:	003f9b06 	br	10107e54 <__alt_data_end+0xfffe7e54>
10107fe8:	9005883a 	mov	r2,r18
10107fec:	003fc706 	br	10107f0c <__alt_data_end+0xfffe7f0c>
10107ff0:	a80b883a 	mov	r5,r21
10107ff4:	9009883a 	mov	r4,r18
10107ff8:	01068680 	call	10106868 <memmove>
10107ffc:	003fc906 	br	10107f24 <__alt_data_end+0xfffe7f24>
10108000:	a8800217 	ldw	r2,8(r21)
10108004:	b0800415 	stw	r2,16(r22)
10108008:	a8800317 	ldw	r2,12(r21)
1010800c:	b0800515 	stw	r2,20(r22)
10108010:	31000726 	beq	r6,r4,10108030 <_realloc_r+0x548>
10108014:	b0800604 	addi	r2,r22,24
10108018:	ad400404 	addi	r21,r21,16
1010801c:	003fbb06 	br	10107f0c <__alt_data_end+0xfffe7f0c>
10108020:	a009883a 	mov	r4,r20
10108024:	010db140 	call	1010db14 <__malloc_unlock>
10108028:	0005883a 	mov	r2,zero
1010802c:	003f0a06 	br	10107c58 <__alt_data_end+0xfffe7c58>
10108030:	a8c00417 	ldw	r3,16(r21)
10108034:	ad400604 	addi	r21,r21,24
10108038:	b0800804 	addi	r2,r22,32
1010803c:	b0c00615 	stw	r3,24(r22)
10108040:	a8ffff17 	ldw	r3,-4(r21)
10108044:	b0c00715 	stw	r3,28(r22)
10108048:	003fb006 	br	10107f0c <__alt_data_end+0xfffe7f0c>

1010804c <__fpclassifyd>:
1010804c:	00a00034 	movhi	r2,32768
10108050:	10bfffc4 	addi	r2,r2,-1
10108054:	2884703a 	and	r2,r5,r2
10108058:	10000726 	beq	r2,zero,10108078 <__fpclassifyd+0x2c>
1010805c:	00fffc34 	movhi	r3,65520
10108060:	019ff834 	movhi	r6,32736
10108064:	28c7883a 	add	r3,r5,r3
10108068:	31bfffc4 	addi	r6,r6,-1
1010806c:	30c00536 	bltu	r6,r3,10108084 <__fpclassifyd+0x38>
10108070:	00800104 	movi	r2,4
10108074:	f800283a 	ret
10108078:	2000021e 	bne	r4,zero,10108084 <__fpclassifyd+0x38>
1010807c:	00800084 	movi	r2,2
10108080:	f800283a 	ret
10108084:	00dffc34 	movhi	r3,32752
10108088:	019ff834 	movhi	r6,32736
1010808c:	28cb883a 	add	r5,r5,r3
10108090:	31bfffc4 	addi	r6,r6,-1
10108094:	317ff62e 	bgeu	r6,r5,10108070 <__alt_data_end+0xfffe8070>
10108098:	01400434 	movhi	r5,16
1010809c:	297fffc4 	addi	r5,r5,-1
101080a0:	28800236 	bltu	r5,r2,101080ac <__fpclassifyd+0x60>
101080a4:	008000c4 	movi	r2,3
101080a8:	f800283a 	ret
101080ac:	10c00226 	beq	r2,r3,101080b8 <__fpclassifyd+0x6c>
101080b0:	0005883a 	mov	r2,zero
101080b4:	f800283a 	ret
101080b8:	2005003a 	cmpeq	r2,r4,zero
101080bc:	f800283a 	ret

101080c0 <_sbrk_r>:
101080c0:	defffd04 	addi	sp,sp,-12
101080c4:	dc000015 	stw	r16,0(sp)
101080c8:	04040474 	movhi	r16,4113
101080cc:	dc400115 	stw	r17,4(sp)
101080d0:	840ed904 	addi	r16,r16,15204
101080d4:	2023883a 	mov	r17,r4
101080d8:	2809883a 	mov	r4,r5
101080dc:	dfc00215 	stw	ra,8(sp)
101080e0:	80000015 	stw	zero,0(r16)
101080e4:	010dcd40 	call	1010dcd4 <sbrk>
101080e8:	00ffffc4 	movi	r3,-1
101080ec:	10c00526 	beq	r2,r3,10108104 <_sbrk_r+0x44>
101080f0:	dfc00217 	ldw	ra,8(sp)
101080f4:	dc400117 	ldw	r17,4(sp)
101080f8:	dc000017 	ldw	r16,0(sp)
101080fc:	dec00304 	addi	sp,sp,12
10108100:	f800283a 	ret
10108104:	80c00017 	ldw	r3,0(r16)
10108108:	183ff926 	beq	r3,zero,101080f0 <__alt_data_end+0xfffe80f0>
1010810c:	88c00015 	stw	r3,0(r17)
10108110:	003ff706 	br	101080f0 <__alt_data_end+0xfffe80f0>

10108114 <__sread>:
10108114:	defffe04 	addi	sp,sp,-8
10108118:	dc000015 	stw	r16,0(sp)
1010811c:	2821883a 	mov	r16,r5
10108120:	2940038f 	ldh	r5,14(r5)
10108124:	dfc00115 	stw	ra,4(sp)
10108128:	0109f080 	call	10109f08 <_read_r>
1010812c:	10000716 	blt	r2,zero,1010814c <__sread+0x38>
10108130:	80c01417 	ldw	r3,80(r16)
10108134:	1887883a 	add	r3,r3,r2
10108138:	80c01415 	stw	r3,80(r16)
1010813c:	dfc00117 	ldw	ra,4(sp)
10108140:	dc000017 	ldw	r16,0(sp)
10108144:	dec00204 	addi	sp,sp,8
10108148:	f800283a 	ret
1010814c:	80c0030b 	ldhu	r3,12(r16)
10108150:	18fbffcc 	andi	r3,r3,61439
10108154:	80c0030d 	sth	r3,12(r16)
10108158:	dfc00117 	ldw	ra,4(sp)
1010815c:	dc000017 	ldw	r16,0(sp)
10108160:	dec00204 	addi	sp,sp,8
10108164:	f800283a 	ret

10108168 <__seofread>:
10108168:	0005883a 	mov	r2,zero
1010816c:	f800283a 	ret

10108170 <__swrite>:
10108170:	2880030b 	ldhu	r2,12(r5)
10108174:	defffb04 	addi	sp,sp,-20
10108178:	dcc00315 	stw	r19,12(sp)
1010817c:	dc800215 	stw	r18,8(sp)
10108180:	dc400115 	stw	r17,4(sp)
10108184:	dc000015 	stw	r16,0(sp)
10108188:	dfc00415 	stw	ra,16(sp)
1010818c:	10c0400c 	andi	r3,r2,256
10108190:	2821883a 	mov	r16,r5
10108194:	2023883a 	mov	r17,r4
10108198:	3025883a 	mov	r18,r6
1010819c:	3827883a 	mov	r19,r7
101081a0:	18000526 	beq	r3,zero,101081b8 <__swrite+0x48>
101081a4:	2940038f 	ldh	r5,14(r5)
101081a8:	01c00084 	movi	r7,2
101081ac:	000d883a 	mov	r6,zero
101081b0:	0109ea80 	call	10109ea8 <_lseek_r>
101081b4:	8080030b 	ldhu	r2,12(r16)
101081b8:	8140038f 	ldh	r5,14(r16)
101081bc:	10bbffcc 	andi	r2,r2,61439
101081c0:	980f883a 	mov	r7,r19
101081c4:	900d883a 	mov	r6,r18
101081c8:	8809883a 	mov	r4,r17
101081cc:	8080030d 	sth	r2,12(r16)
101081d0:	dfc00417 	ldw	ra,16(sp)
101081d4:	dcc00317 	ldw	r19,12(sp)
101081d8:	dc800217 	ldw	r18,8(sp)
101081dc:	dc400117 	ldw	r17,4(sp)
101081e0:	dc000017 	ldw	r16,0(sp)
101081e4:	dec00504 	addi	sp,sp,20
101081e8:	01099741 	jmpi	10109974 <_write_r>

101081ec <__sseek>:
101081ec:	defffe04 	addi	sp,sp,-8
101081f0:	dc000015 	stw	r16,0(sp)
101081f4:	2821883a 	mov	r16,r5
101081f8:	2940038f 	ldh	r5,14(r5)
101081fc:	dfc00115 	stw	ra,4(sp)
10108200:	0109ea80 	call	10109ea8 <_lseek_r>
10108204:	00ffffc4 	movi	r3,-1
10108208:	10c00826 	beq	r2,r3,1010822c <__sseek+0x40>
1010820c:	80c0030b 	ldhu	r3,12(r16)
10108210:	80801415 	stw	r2,80(r16)
10108214:	18c40014 	ori	r3,r3,4096
10108218:	80c0030d 	sth	r3,12(r16)
1010821c:	dfc00117 	ldw	ra,4(sp)
10108220:	dc000017 	ldw	r16,0(sp)
10108224:	dec00204 	addi	sp,sp,8
10108228:	f800283a 	ret
1010822c:	80c0030b 	ldhu	r3,12(r16)
10108230:	18fbffcc 	andi	r3,r3,61439
10108234:	80c0030d 	sth	r3,12(r16)
10108238:	dfc00117 	ldw	ra,4(sp)
1010823c:	dc000017 	ldw	r16,0(sp)
10108240:	dec00204 	addi	sp,sp,8
10108244:	f800283a 	ret

10108248 <__sclose>:
10108248:	2940038f 	ldh	r5,14(r5)
1010824c:	01099d41 	jmpi	101099d4 <_close_r>

10108250 <strcmp>:
10108250:	2144b03a 	or	r2,r4,r5
10108254:	108000cc 	andi	r2,r2,3
10108258:	1000171e 	bne	r2,zero,101082b8 <strcmp+0x68>
1010825c:	20800017 	ldw	r2,0(r4)
10108260:	28c00017 	ldw	r3,0(r5)
10108264:	10c0141e 	bne	r2,r3,101082b8 <strcmp+0x68>
10108268:	027fbff4 	movhi	r9,65279
1010826c:	4a7fbfc4 	addi	r9,r9,-257
10108270:	0086303a 	nor	r3,zero,r2
10108274:	02202074 	movhi	r8,32897
10108278:	1245883a 	add	r2,r2,r9
1010827c:	42202004 	addi	r8,r8,-32640
10108280:	10c4703a 	and	r2,r2,r3
10108284:	1204703a 	and	r2,r2,r8
10108288:	10000226 	beq	r2,zero,10108294 <strcmp+0x44>
1010828c:	00002306 	br	1010831c <strcmp+0xcc>
10108290:	1000221e 	bne	r2,zero,1010831c <strcmp+0xcc>
10108294:	21000104 	addi	r4,r4,4
10108298:	20c00017 	ldw	r3,0(r4)
1010829c:	29400104 	addi	r5,r5,4
101082a0:	29800017 	ldw	r6,0(r5)
101082a4:	1a4f883a 	add	r7,r3,r9
101082a8:	00c4303a 	nor	r2,zero,r3
101082ac:	3884703a 	and	r2,r7,r2
101082b0:	1204703a 	and	r2,r2,r8
101082b4:	19bff626 	beq	r3,r6,10108290 <__alt_data_end+0xfffe8290>
101082b8:	20800003 	ldbu	r2,0(r4)
101082bc:	10c03fcc 	andi	r3,r2,255
101082c0:	18c0201c 	xori	r3,r3,128
101082c4:	18ffe004 	addi	r3,r3,-128
101082c8:	18000c26 	beq	r3,zero,101082fc <strcmp+0xac>
101082cc:	29800007 	ldb	r6,0(r5)
101082d0:	19800326 	beq	r3,r6,101082e0 <strcmp+0x90>
101082d4:	00001306 	br	10108324 <strcmp+0xd4>
101082d8:	29800007 	ldb	r6,0(r5)
101082dc:	11800b1e 	bne	r2,r6,1010830c <strcmp+0xbc>
101082e0:	21000044 	addi	r4,r4,1
101082e4:	20c00003 	ldbu	r3,0(r4)
101082e8:	29400044 	addi	r5,r5,1
101082ec:	18803fcc 	andi	r2,r3,255
101082f0:	1080201c 	xori	r2,r2,128
101082f4:	10bfe004 	addi	r2,r2,-128
101082f8:	103ff71e 	bne	r2,zero,101082d8 <__alt_data_end+0xfffe82d8>
101082fc:	0007883a 	mov	r3,zero
10108300:	28800003 	ldbu	r2,0(r5)
10108304:	1885c83a 	sub	r2,r3,r2
10108308:	f800283a 	ret
1010830c:	28800003 	ldbu	r2,0(r5)
10108310:	18c03fcc 	andi	r3,r3,255
10108314:	1885c83a 	sub	r2,r3,r2
10108318:	f800283a 	ret
1010831c:	0005883a 	mov	r2,zero
10108320:	f800283a 	ret
10108324:	10c03fcc 	andi	r3,r2,255
10108328:	003ff506 	br	10108300 <__alt_data_end+0xfffe8300>

1010832c <__sprint_r.part.0>:
1010832c:	28801917 	ldw	r2,100(r5)
10108330:	defff604 	addi	sp,sp,-40
10108334:	dd400515 	stw	r21,20(sp)
10108338:	dfc00915 	stw	ra,36(sp)
1010833c:	df000815 	stw	fp,32(sp)
10108340:	ddc00715 	stw	r23,28(sp)
10108344:	dd800615 	stw	r22,24(sp)
10108348:	dd000415 	stw	r20,16(sp)
1010834c:	dcc00315 	stw	r19,12(sp)
10108350:	dc800215 	stw	r18,8(sp)
10108354:	dc400115 	stw	r17,4(sp)
10108358:	dc000015 	stw	r16,0(sp)
1010835c:	1088000c 	andi	r2,r2,8192
10108360:	302b883a 	mov	r21,r6
10108364:	10002e26 	beq	r2,zero,10108420 <__sprint_r.part.0+0xf4>
10108368:	30800217 	ldw	r2,8(r6)
1010836c:	35800017 	ldw	r22,0(r6)
10108370:	10002926 	beq	r2,zero,10108418 <__sprint_r.part.0+0xec>
10108374:	2827883a 	mov	r19,r5
10108378:	2029883a 	mov	r20,r4
1010837c:	b5c00104 	addi	r23,r22,4
10108380:	04bfffc4 	movi	r18,-1
10108384:	bc400017 	ldw	r17,0(r23)
10108388:	b4000017 	ldw	r16,0(r22)
1010838c:	0039883a 	mov	fp,zero
10108390:	8822d0ba 	srli	r17,r17,2
10108394:	8800031e 	bne	r17,zero,101083a4 <__sprint_r.part.0+0x78>
10108398:	00001806 	br	101083fc <__sprint_r.part.0+0xd0>
1010839c:	84000104 	addi	r16,r16,4
101083a0:	8f001526 	beq	r17,fp,101083f8 <__sprint_r.part.0+0xcc>
101083a4:	81400017 	ldw	r5,0(r16)
101083a8:	980d883a 	mov	r6,r19
101083ac:	a009883a 	mov	r4,r20
101083b0:	0109d540 	call	10109d54 <_fputwc_r>
101083b4:	e7000044 	addi	fp,fp,1
101083b8:	14bff81e 	bne	r2,r18,1010839c <__alt_data_end+0xfffe839c>
101083bc:	9005883a 	mov	r2,r18
101083c0:	a8000215 	stw	zero,8(r21)
101083c4:	a8000115 	stw	zero,4(r21)
101083c8:	dfc00917 	ldw	ra,36(sp)
101083cc:	df000817 	ldw	fp,32(sp)
101083d0:	ddc00717 	ldw	r23,28(sp)
101083d4:	dd800617 	ldw	r22,24(sp)
101083d8:	dd400517 	ldw	r21,20(sp)
101083dc:	dd000417 	ldw	r20,16(sp)
101083e0:	dcc00317 	ldw	r19,12(sp)
101083e4:	dc800217 	ldw	r18,8(sp)
101083e8:	dc400117 	ldw	r17,4(sp)
101083ec:	dc000017 	ldw	r16,0(sp)
101083f0:	dec00a04 	addi	sp,sp,40
101083f4:	f800283a 	ret
101083f8:	a8800217 	ldw	r2,8(r21)
101083fc:	8c63883a 	add	r17,r17,r17
10108400:	8c63883a 	add	r17,r17,r17
10108404:	1445c83a 	sub	r2,r2,r17
10108408:	a8800215 	stw	r2,8(r21)
1010840c:	b5800204 	addi	r22,r22,8
10108410:	bdc00204 	addi	r23,r23,8
10108414:	103fdb1e 	bne	r2,zero,10108384 <__alt_data_end+0xfffe8384>
10108418:	0005883a 	mov	r2,zero
1010841c:	003fe806 	br	101083c0 <__alt_data_end+0xfffe83c0>
10108420:	01055540 	call	10105554 <__sfvwrite_r>
10108424:	003fe606 	br	101083c0 <__alt_data_end+0xfffe83c0>

10108428 <__sprint_r>:
10108428:	30c00217 	ldw	r3,8(r6)
1010842c:	18000126 	beq	r3,zero,10108434 <__sprint_r+0xc>
10108430:	010832c1 	jmpi	1010832c <__sprint_r.part.0>
10108434:	30000115 	stw	zero,4(r6)
10108438:	0005883a 	mov	r2,zero
1010843c:	f800283a 	ret

10108440 <___vfiprintf_internal_r>:
10108440:	deffc904 	addi	sp,sp,-220
10108444:	df003515 	stw	fp,212(sp)
10108448:	dd003115 	stw	r20,196(sp)
1010844c:	dfc03615 	stw	ra,216(sp)
10108450:	ddc03415 	stw	r23,208(sp)
10108454:	dd803315 	stw	r22,204(sp)
10108458:	dd403215 	stw	r21,200(sp)
1010845c:	dcc03015 	stw	r19,192(sp)
10108460:	dc802f15 	stw	r18,188(sp)
10108464:	dc402e15 	stw	r17,184(sp)
10108468:	dc002d15 	stw	r16,180(sp)
1010846c:	d9002015 	stw	r4,128(sp)
10108470:	d9c02215 	stw	r7,136(sp)
10108474:	2829883a 	mov	r20,r5
10108478:	3039883a 	mov	fp,r6
1010847c:	20000226 	beq	r4,zero,10108488 <___vfiprintf_internal_r+0x48>
10108480:	20800e17 	ldw	r2,56(r4)
10108484:	1000cf26 	beq	r2,zero,101087c4 <___vfiprintf_internal_r+0x384>
10108488:	a080030b 	ldhu	r2,12(r20)
1010848c:	10c8000c 	andi	r3,r2,8192
10108490:	1800061e 	bne	r3,zero,101084ac <___vfiprintf_internal_r+0x6c>
10108494:	a1001917 	ldw	r4,100(r20)
10108498:	00f7ffc4 	movi	r3,-8193
1010849c:	10880014 	ori	r2,r2,8192
101084a0:	20c6703a 	and	r3,r4,r3
101084a4:	a080030d 	sth	r2,12(r20)
101084a8:	a0c01915 	stw	r3,100(r20)
101084ac:	10c0020c 	andi	r3,r2,8
101084b0:	1800a926 	beq	r3,zero,10108758 <___vfiprintf_internal_r+0x318>
101084b4:	a0c00417 	ldw	r3,16(r20)
101084b8:	1800a726 	beq	r3,zero,10108758 <___vfiprintf_internal_r+0x318>
101084bc:	1080068c 	andi	r2,r2,26
101084c0:	00c00284 	movi	r3,10
101084c4:	10c0ac26 	beq	r2,r3,10108778 <___vfiprintf_internal_r+0x338>
101084c8:	da801a04 	addi	r10,sp,104
101084cc:	da801e15 	stw	r10,120(sp)
101084d0:	d8801e17 	ldw	r2,120(sp)
101084d4:	da8019c4 	addi	r10,sp,103
101084d8:	05840474 	movhi	r22,4113
101084dc:	05c40474 	movhi	r23,4113
101084e0:	da801f15 	stw	r10,124(sp)
101084e4:	1295c83a 	sub	r10,r2,r10
101084e8:	b580d104 	addi	r22,r22,836
101084ec:	bdc0cd04 	addi	r23,r23,820
101084f0:	dec01a15 	stw	sp,104(sp)
101084f4:	d8001c15 	stw	zero,112(sp)
101084f8:	d8001b15 	stw	zero,108(sp)
101084fc:	d8002615 	stw	zero,152(sp)
10108500:	d8002315 	stw	zero,140(sp)
10108504:	da802715 	stw	r10,156(sp)
10108508:	d811883a 	mov	r8,sp
1010850c:	dd002115 	stw	r20,132(sp)
10108510:	e021883a 	mov	r16,fp
10108514:	80800007 	ldb	r2,0(r16)
10108518:	1003ea26 	beq	r2,zero,101094c4 <___vfiprintf_internal_r+0x1084>
1010851c:	00c00944 	movi	r3,37
10108520:	8025883a 	mov	r18,r16
10108524:	10c0021e 	bne	r2,r3,10108530 <___vfiprintf_internal_r+0xf0>
10108528:	00001606 	br	10108584 <___vfiprintf_internal_r+0x144>
1010852c:	10c00326 	beq	r2,r3,1010853c <___vfiprintf_internal_r+0xfc>
10108530:	94800044 	addi	r18,r18,1
10108534:	90800007 	ldb	r2,0(r18)
10108538:	103ffc1e 	bne	r2,zero,1010852c <__alt_data_end+0xfffe852c>
1010853c:	9423c83a 	sub	r17,r18,r16
10108540:	88001026 	beq	r17,zero,10108584 <___vfiprintf_internal_r+0x144>
10108544:	d8c01c17 	ldw	r3,112(sp)
10108548:	d8801b17 	ldw	r2,108(sp)
1010854c:	44000015 	stw	r16,0(r8)
10108550:	88c7883a 	add	r3,r17,r3
10108554:	10800044 	addi	r2,r2,1
10108558:	44400115 	stw	r17,4(r8)
1010855c:	d8c01c15 	stw	r3,112(sp)
10108560:	d8801b15 	stw	r2,108(sp)
10108564:	010001c4 	movi	r4,7
10108568:	2080760e 	bge	r4,r2,10108744 <___vfiprintf_internal_r+0x304>
1010856c:	1803821e 	bne	r3,zero,10109378 <___vfiprintf_internal_r+0xf38>
10108570:	da802317 	ldw	r10,140(sp)
10108574:	d8001b15 	stw	zero,108(sp)
10108578:	d811883a 	mov	r8,sp
1010857c:	5455883a 	add	r10,r10,r17
10108580:	da802315 	stw	r10,140(sp)
10108584:	90800007 	ldb	r2,0(r18)
10108588:	10044626 	beq	r2,zero,101096a4 <___vfiprintf_internal_r+0x1264>
1010858c:	90c00047 	ldb	r3,1(r18)
10108590:	94000044 	addi	r16,r18,1
10108594:	d8001d85 	stb	zero,118(sp)
10108598:	0009883a 	mov	r4,zero
1010859c:	000f883a 	mov	r7,zero
101085a0:	027fffc4 	movi	r9,-1
101085a4:	0023883a 	mov	r17,zero
101085a8:	0029883a 	mov	r20,zero
101085ac:	01401604 	movi	r5,88
101085b0:	01800244 	movi	r6,9
101085b4:	03400a84 	movi	r13,42
101085b8:	03001b04 	movi	r12,108
101085bc:	84000044 	addi	r16,r16,1
101085c0:	18bff804 	addi	r2,r3,-32
101085c4:	28827336 	bltu	r5,r2,10108f94 <___vfiprintf_internal_r+0xb54>
101085c8:	100490ba 	slli	r2,r2,2
101085cc:	02840474 	movhi	r10,4113
101085d0:	52a17804 	addi	r10,r10,-31264
101085d4:	1285883a 	add	r2,r2,r10
101085d8:	10800017 	ldw	r2,0(r2)
101085dc:	1000683a 	jmp	r2
101085e0:	10108cc8 	cmpgei	zero,r2,16947
101085e4:	10108f94 	ori	zero,r2,16958
101085e8:	10108f94 	ori	zero,r2,16958
101085ec:	10108ce8 	cmpgeui	zero,r2,16947
101085f0:	10108f94 	ori	zero,r2,16958
101085f4:	10108f94 	ori	zero,r2,16958
101085f8:	10108f94 	ori	zero,r2,16958
101085fc:	10108f94 	ori	zero,r2,16958
10108600:	10108f94 	ori	zero,r2,16958
10108604:	10108f94 	ori	zero,r2,16958
10108608:	10108ed0 	cmplti	zero,r2,16955
1010860c:	10108eec 	andhi	zero,r2,16955
10108610:	10108f94 	ori	zero,r2,16958
10108614:	101087d4 	ori	zero,r2,16927
10108618:	10108efc 	xorhi	zero,r2,16955
1010861c:	10108f94 	ori	zero,r2,16958
10108620:	10108cf4 	orhi	zero,r2,16947
10108624:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108628:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
1010862c:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108630:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108634:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108638:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
1010863c:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108640:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108644:	10108d00 	call	110108d0 <__alt_data_end+0xef08d0>
10108648:	10108f94 	ori	zero,r2,16958
1010864c:	10108f94 	ori	zero,r2,16958
10108650:	10108f94 	ori	zero,r2,16958
10108654:	10108f94 	ori	zero,r2,16958
10108658:	10108f94 	ori	zero,r2,16958
1010865c:	10108f94 	ori	zero,r2,16958
10108660:	10108f94 	ori	zero,r2,16958
10108664:	10108f94 	ori	zero,r2,16958
10108668:	10108f94 	ori	zero,r2,16958
1010866c:	10108f94 	ori	zero,r2,16958
10108670:	10108d2c 	andhi	zero,r2,16948
10108674:	10108f94 	ori	zero,r2,16958
10108678:	10108f94 	ori	zero,r2,16958
1010867c:	10108f94 	ori	zero,r2,16958
10108680:	10108f94 	ori	zero,r2,16958
10108684:	10108f94 	ori	zero,r2,16958
10108688:	10108f94 	ori	zero,r2,16958
1010868c:	10108f94 	ori	zero,r2,16958
10108690:	10108f94 	ori	zero,r2,16958
10108694:	10108f94 	ori	zero,r2,16958
10108698:	10108f94 	ori	zero,r2,16958
1010869c:	10108d64 	muli	zero,r2,16949
101086a0:	10108f94 	ori	zero,r2,16958
101086a4:	10108f94 	ori	zero,r2,16958
101086a8:	10108f94 	ori	zero,r2,16958
101086ac:	10108f94 	ori	zero,r2,16958
101086b0:	10108f94 	ori	zero,r2,16958
101086b4:	10108dbc 	xorhi	zero,r2,16950
101086b8:	10108f94 	ori	zero,r2,16958
101086bc:	10108f94 	ori	zero,r2,16958
101086c0:	10108e2c 	andhi	zero,r2,16952
101086c4:	10108f94 	ori	zero,r2,16958
101086c8:	10108f94 	ori	zero,r2,16958
101086cc:	10108f94 	ori	zero,r2,16958
101086d0:	10108f94 	ori	zero,r2,16958
101086d4:	10108f94 	ori	zero,r2,16958
101086d8:	10108f94 	ori	zero,r2,16958
101086dc:	10108f94 	ori	zero,r2,16958
101086e0:	10108f94 	ori	zero,r2,16958
101086e4:	10108f94 	ori	zero,r2,16958
101086e8:	10108f94 	ori	zero,r2,16958
101086ec:	10108bd8 	cmpnei	zero,r2,16943
101086f0:	10108c04 	addi	zero,r2,16944
101086f4:	10108f94 	ori	zero,r2,16958
101086f8:	10108f94 	ori	zero,r2,16958
101086fc:	10108f94 	ori	zero,r2,16958
10108700:	10108f3c 	xorhi	zero,r2,16956
10108704:	10108c04 	addi	zero,r2,16944
10108708:	10108f94 	ori	zero,r2,16958
1010870c:	10108f94 	ori	zero,r2,16958
10108710:	10108a98 	cmpnei	zero,r2,16938
10108714:	10108f94 	ori	zero,r2,16958
10108718:	10108aa8 	cmpgeui	zero,r2,16938
1010871c:	10108ae4 	muli	zero,r2,16939
10108720:	101087e0 	cmpeqi	zero,r2,16927
10108724:	10108a8c 	andi	zero,r2,16938
10108728:	10108f94 	ori	zero,r2,16958
1010872c:	10108e68 	cmpgeui	zero,r2,16953
10108730:	10108f94 	ori	zero,r2,16958
10108734:	10108ec0 	call	110108ec <__alt_data_end+0xef08ec>
10108738:	10108f94 	ori	zero,r2,16958
1010873c:	10108f94 	ori	zero,r2,16958
10108740:	10108b84 	addi	zero,r2,16942
10108744:	42000204 	addi	r8,r8,8
10108748:	da802317 	ldw	r10,140(sp)
1010874c:	5455883a 	add	r10,r10,r17
10108750:	da802315 	stw	r10,140(sp)
10108754:	003f8b06 	br	10108584 <__alt_data_end+0xfffe8584>
10108758:	d9002017 	ldw	r4,128(sp)
1010875c:	a00b883a 	mov	r5,r20
10108760:	01030fc0 	call	101030fc <__swsetup_r>
10108764:	1003b11e 	bne	r2,zero,1010962c <___vfiprintf_internal_r+0x11ec>
10108768:	a080030b 	ldhu	r2,12(r20)
1010876c:	00c00284 	movi	r3,10
10108770:	1080068c 	andi	r2,r2,26
10108774:	10ff541e 	bne	r2,r3,101084c8 <__alt_data_end+0xfffe84c8>
10108778:	a080038f 	ldh	r2,14(r20)
1010877c:	103f5216 	blt	r2,zero,101084c8 <__alt_data_end+0xfffe84c8>
10108780:	d9c02217 	ldw	r7,136(sp)
10108784:	d9002017 	ldw	r4,128(sp)
10108788:	e00d883a 	mov	r6,fp
1010878c:	a00b883a 	mov	r5,r20
10108790:	01098b80 	call	101098b8 <__sbprintf>
10108794:	dfc03617 	ldw	ra,216(sp)
10108798:	df003517 	ldw	fp,212(sp)
1010879c:	ddc03417 	ldw	r23,208(sp)
101087a0:	dd803317 	ldw	r22,204(sp)
101087a4:	dd403217 	ldw	r21,200(sp)
101087a8:	dd003117 	ldw	r20,196(sp)
101087ac:	dcc03017 	ldw	r19,192(sp)
101087b0:	dc802f17 	ldw	r18,188(sp)
101087b4:	dc402e17 	ldw	r17,184(sp)
101087b8:	dc002d17 	ldw	r16,180(sp)
101087bc:	dec03704 	addi	sp,sp,220
101087c0:	f800283a 	ret
101087c4:	01050d00 	call	101050d0 <__sinit>
101087c8:	003f2f06 	br	10108488 <__alt_data_end+0xfffe8488>
101087cc:	0463c83a 	sub	r17,zero,r17
101087d0:	d8802215 	stw	r2,136(sp)
101087d4:	a5000114 	ori	r20,r20,4
101087d8:	80c00007 	ldb	r3,0(r16)
101087dc:	003f7706 	br	101085bc <__alt_data_end+0xfffe85bc>
101087e0:	00800c04 	movi	r2,48
101087e4:	da802217 	ldw	r10,136(sp)
101087e8:	d8801d05 	stb	r2,116(sp)
101087ec:	00801e04 	movi	r2,120
101087f0:	d8801d45 	stb	r2,117(sp)
101087f4:	d8001d85 	stb	zero,118(sp)
101087f8:	50c00104 	addi	r3,r10,4
101087fc:	54800017 	ldw	r18,0(r10)
10108800:	0027883a 	mov	r19,zero
10108804:	a0800094 	ori	r2,r20,2
10108808:	48030b16 	blt	r9,zero,10109438 <___vfiprintf_internal_r+0xff8>
1010880c:	00bfdfc4 	movi	r2,-129
10108810:	a096703a 	and	r11,r20,r2
10108814:	d8c02215 	stw	r3,136(sp)
10108818:	5d000094 	ori	r20,r11,2
1010881c:	90032b1e 	bne	r18,zero,101094cc <___vfiprintf_internal_r+0x108c>
10108820:	00840474 	movhi	r2,4113
10108824:	10806c04 	addi	r2,r2,432
10108828:	d8802615 	stw	r2,152(sp)
1010882c:	0039883a 	mov	fp,zero
10108830:	48017b1e 	bne	r9,zero,10108e20 <___vfiprintf_internal_r+0x9e0>
10108834:	0013883a 	mov	r9,zero
10108838:	0027883a 	mov	r19,zero
1010883c:	dd401a04 	addi	r21,sp,104
10108840:	4825883a 	mov	r18,r9
10108844:	4cc0010e 	bge	r9,r19,1010884c <___vfiprintf_internal_r+0x40c>
10108848:	9825883a 	mov	r18,r19
1010884c:	e7003fcc 	andi	fp,fp,255
10108850:	e700201c 	xori	fp,fp,128
10108854:	e73fe004 	addi	fp,fp,-128
10108858:	e0000126 	beq	fp,zero,10108860 <___vfiprintf_internal_r+0x420>
1010885c:	94800044 	addi	r18,r18,1
10108860:	a380008c 	andi	r14,r20,2
10108864:	70000126 	beq	r14,zero,1010886c <___vfiprintf_internal_r+0x42c>
10108868:	94800084 	addi	r18,r18,2
1010886c:	a700210c 	andi	fp,r20,132
10108870:	e001df1e 	bne	fp,zero,10108ff0 <___vfiprintf_internal_r+0xbb0>
10108874:	8c87c83a 	sub	r3,r17,r18
10108878:	00c1dd0e 	bge	zero,r3,10108ff0 <___vfiprintf_internal_r+0xbb0>
1010887c:	01c00404 	movi	r7,16
10108880:	d8801c17 	ldw	r2,112(sp)
10108884:	38c3ad0e 	bge	r7,r3,1010973c <___vfiprintf_internal_r+0x12fc>
10108888:	02840474 	movhi	r10,4113
1010888c:	5280d104 	addi	r10,r10,836
10108890:	dc002915 	stw	r16,164(sp)
10108894:	d9801b17 	ldw	r6,108(sp)
10108898:	da802415 	stw	r10,144(sp)
1010889c:	03c001c4 	movi	r15,7
101088a0:	da402515 	stw	r9,148(sp)
101088a4:	db802815 	stw	r14,160(sp)
101088a8:	1821883a 	mov	r16,r3
101088ac:	00000506 	br	101088c4 <___vfiprintf_internal_r+0x484>
101088b0:	31400084 	addi	r5,r6,2
101088b4:	42000204 	addi	r8,r8,8
101088b8:	200d883a 	mov	r6,r4
101088bc:	843ffc04 	addi	r16,r16,-16
101088c0:	3c000d0e 	bge	r7,r16,101088f8 <___vfiprintf_internal_r+0x4b8>
101088c4:	10800404 	addi	r2,r2,16
101088c8:	31000044 	addi	r4,r6,1
101088cc:	45800015 	stw	r22,0(r8)
101088d0:	41c00115 	stw	r7,4(r8)
101088d4:	d8801c15 	stw	r2,112(sp)
101088d8:	d9001b15 	stw	r4,108(sp)
101088dc:	793ff40e 	bge	r15,r4,101088b0 <__alt_data_end+0xfffe88b0>
101088e0:	1001b51e 	bne	r2,zero,10108fb8 <___vfiprintf_internal_r+0xb78>
101088e4:	843ffc04 	addi	r16,r16,-16
101088e8:	000d883a 	mov	r6,zero
101088ec:	01400044 	movi	r5,1
101088f0:	d811883a 	mov	r8,sp
101088f4:	3c3ff316 	blt	r7,r16,101088c4 <__alt_data_end+0xfffe88c4>
101088f8:	8007883a 	mov	r3,r16
101088fc:	da402517 	ldw	r9,148(sp)
10108900:	db802817 	ldw	r14,160(sp)
10108904:	dc002917 	ldw	r16,164(sp)
10108908:	da802417 	ldw	r10,144(sp)
1010890c:	1885883a 	add	r2,r3,r2
10108910:	40c00115 	stw	r3,4(r8)
10108914:	42800015 	stw	r10,0(r8)
10108918:	d8801c15 	stw	r2,112(sp)
1010891c:	d9401b15 	stw	r5,108(sp)
10108920:	00c001c4 	movi	r3,7
10108924:	19426016 	blt	r3,r5,101092a8 <___vfiprintf_internal_r+0xe68>
10108928:	d8c01d87 	ldb	r3,118(sp)
1010892c:	42000204 	addi	r8,r8,8
10108930:	29000044 	addi	r4,r5,1
10108934:	1801b31e 	bne	r3,zero,10109004 <___vfiprintf_internal_r+0xbc4>
10108938:	7001c026 	beq	r14,zero,1010903c <___vfiprintf_internal_r+0xbfc>
1010893c:	d8c01d04 	addi	r3,sp,116
10108940:	10800084 	addi	r2,r2,2
10108944:	40c00015 	stw	r3,0(r8)
10108948:	00c00084 	movi	r3,2
1010894c:	40c00115 	stw	r3,4(r8)
10108950:	d8801c15 	stw	r2,112(sp)
10108954:	d9001b15 	stw	r4,108(sp)
10108958:	00c001c4 	movi	r3,7
1010895c:	1902650e 	bge	r3,r4,101092f4 <___vfiprintf_internal_r+0xeb4>
10108960:	10029a1e 	bne	r2,zero,101093cc <___vfiprintf_internal_r+0xf8c>
10108964:	00c02004 	movi	r3,128
10108968:	01000044 	movi	r4,1
1010896c:	000b883a 	mov	r5,zero
10108970:	d811883a 	mov	r8,sp
10108974:	e0c1b31e 	bne	fp,r3,10109044 <___vfiprintf_internal_r+0xc04>
10108978:	8cb9c83a 	sub	fp,r17,r18
1010897c:	0701b10e 	bge	zero,fp,10109044 <___vfiprintf_internal_r+0xc04>
10108980:	01c00404 	movi	r7,16
10108984:	3f03890e 	bge	r7,fp,101097ac <___vfiprintf_internal_r+0x136c>
10108988:	00c40474 	movhi	r3,4113
1010898c:	18c0cd04 	addi	r3,r3,820
10108990:	d8c02415 	stw	r3,144(sp)
10108994:	8007883a 	mov	r3,r16
10108998:	034001c4 	movi	r13,7
1010899c:	e021883a 	mov	r16,fp
101089a0:	da402515 	stw	r9,148(sp)
101089a4:	1839883a 	mov	fp,r3
101089a8:	00000506 	br	101089c0 <___vfiprintf_internal_r+0x580>
101089ac:	29800084 	addi	r6,r5,2
101089b0:	42000204 	addi	r8,r8,8
101089b4:	180b883a 	mov	r5,r3
101089b8:	843ffc04 	addi	r16,r16,-16
101089bc:	3c000d0e 	bge	r7,r16,101089f4 <___vfiprintf_internal_r+0x5b4>
101089c0:	10800404 	addi	r2,r2,16
101089c4:	28c00044 	addi	r3,r5,1
101089c8:	45c00015 	stw	r23,0(r8)
101089cc:	41c00115 	stw	r7,4(r8)
101089d0:	d8801c15 	stw	r2,112(sp)
101089d4:	d8c01b15 	stw	r3,108(sp)
101089d8:	68fff40e 	bge	r13,r3,101089ac <__alt_data_end+0xfffe89ac>
101089dc:	1002241e 	bne	r2,zero,10109270 <___vfiprintf_internal_r+0xe30>
101089e0:	843ffc04 	addi	r16,r16,-16
101089e4:	01800044 	movi	r6,1
101089e8:	000b883a 	mov	r5,zero
101089ec:	d811883a 	mov	r8,sp
101089f0:	3c3ff316 	blt	r7,r16,101089c0 <__alt_data_end+0xfffe89c0>
101089f4:	da402517 	ldw	r9,148(sp)
101089f8:	e007883a 	mov	r3,fp
101089fc:	8039883a 	mov	fp,r16
10108a00:	1821883a 	mov	r16,r3
10108a04:	d8c02417 	ldw	r3,144(sp)
10108a08:	1705883a 	add	r2,r2,fp
10108a0c:	47000115 	stw	fp,4(r8)
10108a10:	40c00015 	stw	r3,0(r8)
10108a14:	d8801c15 	stw	r2,112(sp)
10108a18:	d9801b15 	stw	r6,108(sp)
10108a1c:	00c001c4 	movi	r3,7
10108a20:	19827616 	blt	r3,r6,101093fc <___vfiprintf_internal_r+0xfbc>
10108a24:	4cf9c83a 	sub	fp,r9,r19
10108a28:	42000204 	addi	r8,r8,8
10108a2c:	31000044 	addi	r4,r6,1
10108a30:	300b883a 	mov	r5,r6
10108a34:	07018516 	blt	zero,fp,1010904c <___vfiprintf_internal_r+0xc0c>
10108a38:	9885883a 	add	r2,r19,r2
10108a3c:	45400015 	stw	r21,0(r8)
10108a40:	44c00115 	stw	r19,4(r8)
10108a44:	d8801c15 	stw	r2,112(sp)
10108a48:	d9001b15 	stw	r4,108(sp)
10108a4c:	00c001c4 	movi	r3,7
10108a50:	1901dd0e 	bge	r3,r4,101091c8 <___vfiprintf_internal_r+0xd88>
10108a54:	1002401e 	bne	r2,zero,10109358 <___vfiprintf_internal_r+0xf18>
10108a58:	d8001b15 	stw	zero,108(sp)
10108a5c:	a2c0010c 	andi	r11,r20,4
10108a60:	58000226 	beq	r11,zero,10108a6c <___vfiprintf_internal_r+0x62c>
10108a64:	8ca7c83a 	sub	r19,r17,r18
10108a68:	04c2f216 	blt	zero,r19,10109634 <___vfiprintf_internal_r+0x11f4>
10108a6c:	8c80010e 	bge	r17,r18,10108a74 <___vfiprintf_internal_r+0x634>
10108a70:	9023883a 	mov	r17,r18
10108a74:	da802317 	ldw	r10,140(sp)
10108a78:	5455883a 	add	r10,r10,r17
10108a7c:	da802315 	stw	r10,140(sp)
10108a80:	d8001b15 	stw	zero,108(sp)
10108a84:	d811883a 	mov	r8,sp
10108a88:	003ea206 	br	10108514 <__alt_data_end+0xfffe8514>
10108a8c:	a5000814 	ori	r20,r20,32
10108a90:	80c00007 	ldb	r3,0(r16)
10108a94:	003ec906 	br	101085bc <__alt_data_end+0xfffe85bc>
10108a98:	80c00007 	ldb	r3,0(r16)
10108a9c:	1b030926 	beq	r3,r12,101096c4 <___vfiprintf_internal_r+0x1284>
10108aa0:	a5000414 	ori	r20,r20,16
10108aa4:	003ec506 	br	101085bc <__alt_data_end+0xfffe85bc>
10108aa8:	21003fcc 	andi	r4,r4,255
10108aac:	20035e1e 	bne	r4,zero,10109828 <___vfiprintf_internal_r+0x13e8>
10108ab0:	a080080c 	andi	r2,r20,32
10108ab4:	1002a526 	beq	r2,zero,1010954c <___vfiprintf_internal_r+0x110c>
10108ab8:	da802217 	ldw	r10,136(sp)
10108abc:	50800017 	ldw	r2,0(r10)
10108ac0:	da802317 	ldw	r10,140(sp)
10108ac4:	5007d7fa 	srai	r3,r10,31
10108ac8:	da802217 	ldw	r10,136(sp)
10108acc:	10c00115 	stw	r3,4(r2)
10108ad0:	52800104 	addi	r10,r10,4
10108ad4:	da802215 	stw	r10,136(sp)
10108ad8:	da802317 	ldw	r10,140(sp)
10108adc:	12800015 	stw	r10,0(r2)
10108ae0:	003e8c06 	br	10108514 <__alt_data_end+0xfffe8514>
10108ae4:	21003fcc 	andi	r4,r4,255
10108ae8:	2003511e 	bne	r4,zero,10109830 <___vfiprintf_internal_r+0x13f0>
10108aec:	a080080c 	andi	r2,r20,32
10108af0:	1000a126 	beq	r2,zero,10108d78 <___vfiprintf_internal_r+0x938>
10108af4:	da802217 	ldw	r10,136(sp)
10108af8:	d8001d85 	stb	zero,118(sp)
10108afc:	50800204 	addi	r2,r10,8
10108b00:	54800017 	ldw	r18,0(r10)
10108b04:	54c00117 	ldw	r19,4(r10)
10108b08:	4802b416 	blt	r9,zero,101095dc <___vfiprintf_internal_r+0x119c>
10108b0c:	013fdfc4 	movi	r4,-129
10108b10:	94c6b03a 	or	r3,r18,r19
10108b14:	d8802215 	stw	r2,136(sp)
10108b18:	a128703a 	and	r20,r20,r4
10108b1c:	1800a226 	beq	r3,zero,10108da8 <___vfiprintf_internal_r+0x968>
10108b20:	0039883a 	mov	fp,zero
10108b24:	dd401a04 	addi	r21,sp,104
10108b28:	9006d0fa 	srli	r3,r18,3
10108b2c:	9808977a 	slli	r4,r19,29
10108b30:	9826d0fa 	srli	r19,r19,3
10108b34:	948001cc 	andi	r18,r18,7
10108b38:	90800c04 	addi	r2,r18,48
10108b3c:	ad7fffc4 	addi	r21,r21,-1
10108b40:	20e4b03a 	or	r18,r4,r3
10108b44:	a8800005 	stb	r2,0(r21)
10108b48:	94c6b03a 	or	r3,r18,r19
10108b4c:	183ff61e 	bne	r3,zero,10108b28 <__alt_data_end+0xfffe8b28>
10108b50:	a0c0004c 	andi	r3,r20,1
10108b54:	18005926 	beq	r3,zero,10108cbc <___vfiprintf_internal_r+0x87c>
10108b58:	10803fcc 	andi	r2,r2,255
10108b5c:	1080201c 	xori	r2,r2,128
10108b60:	10bfe004 	addi	r2,r2,-128
10108b64:	00c00c04 	movi	r3,48
10108b68:	10c05426 	beq	r2,r3,10108cbc <___vfiprintf_internal_r+0x87c>
10108b6c:	da801e17 	ldw	r10,120(sp)
10108b70:	a8bfffc4 	addi	r2,r21,-1
10108b74:	a8ffffc5 	stb	r3,-1(r21)
10108b78:	50a7c83a 	sub	r19,r10,r2
10108b7c:	102b883a 	mov	r21,r2
10108b80:	003f2f06 	br	10108840 <__alt_data_end+0xfffe8840>
10108b84:	21003fcc 	andi	r4,r4,255
10108b88:	2003421e 	bne	r4,zero,10109894 <___vfiprintf_internal_r+0x1454>
10108b8c:	00840474 	movhi	r2,4113
10108b90:	10806c04 	addi	r2,r2,432
10108b94:	d8802615 	stw	r2,152(sp)
10108b98:	a080080c 	andi	r2,r20,32
10108b9c:	1000aa26 	beq	r2,zero,10108e48 <___vfiprintf_internal_r+0xa08>
10108ba0:	da802217 	ldw	r10,136(sp)
10108ba4:	54800017 	ldw	r18,0(r10)
10108ba8:	54c00117 	ldw	r19,4(r10)
10108bac:	52800204 	addi	r10,r10,8
10108bb0:	da802215 	stw	r10,136(sp)
10108bb4:	a080004c 	andi	r2,r20,1
10108bb8:	1001d226 	beq	r2,zero,10109304 <___vfiprintf_internal_r+0xec4>
10108bbc:	94c4b03a 	or	r2,r18,r19
10108bc0:	1002351e 	bne	r2,zero,10109498 <___vfiprintf_internal_r+0x1058>
10108bc4:	d8001d85 	stb	zero,118(sp)
10108bc8:	48022216 	blt	r9,zero,10109454 <___vfiprintf_internal_r+0x1014>
10108bcc:	00bfdfc4 	movi	r2,-129
10108bd0:	a0a8703a 	and	r20,r20,r2
10108bd4:	003f1506 	br	1010882c <__alt_data_end+0xfffe882c>
10108bd8:	da802217 	ldw	r10,136(sp)
10108bdc:	04800044 	movi	r18,1
10108be0:	d8001d85 	stb	zero,118(sp)
10108be4:	50800017 	ldw	r2,0(r10)
10108be8:	52800104 	addi	r10,r10,4
10108bec:	da802215 	stw	r10,136(sp)
10108bf0:	d8801005 	stb	r2,64(sp)
10108bf4:	9027883a 	mov	r19,r18
10108bf8:	dd401004 	addi	r21,sp,64
10108bfc:	0013883a 	mov	r9,zero
10108c00:	003f1706 	br	10108860 <__alt_data_end+0xfffe8860>
10108c04:	21003fcc 	andi	r4,r4,255
10108c08:	2003201e 	bne	r4,zero,1010988c <___vfiprintf_internal_r+0x144c>
10108c0c:	a080080c 	andi	r2,r20,32
10108c10:	10004b26 	beq	r2,zero,10108d40 <___vfiprintf_internal_r+0x900>
10108c14:	da802217 	ldw	r10,136(sp)
10108c18:	50800117 	ldw	r2,4(r10)
10108c1c:	54800017 	ldw	r18,0(r10)
10108c20:	52800204 	addi	r10,r10,8
10108c24:	da802215 	stw	r10,136(sp)
10108c28:	1027883a 	mov	r19,r2
10108c2c:	10022c16 	blt	r2,zero,101094e0 <___vfiprintf_internal_r+0x10a0>
10108c30:	df001d83 	ldbu	fp,118(sp)
10108c34:	48007216 	blt	r9,zero,10108e00 <___vfiprintf_internal_r+0x9c0>
10108c38:	00ffdfc4 	movi	r3,-129
10108c3c:	94c4b03a 	or	r2,r18,r19
10108c40:	a0e8703a 	and	r20,r20,r3
10108c44:	1000cc26 	beq	r2,zero,10108f78 <___vfiprintf_internal_r+0xb38>
10108c48:	98021026 	beq	r19,zero,1010948c <___vfiprintf_internal_r+0x104c>
10108c4c:	dc402415 	stw	r17,144(sp)
10108c50:	dc002515 	stw	r16,148(sp)
10108c54:	9823883a 	mov	r17,r19
10108c58:	9021883a 	mov	r16,r18
10108c5c:	dd401a04 	addi	r21,sp,104
10108c60:	4825883a 	mov	r18,r9
10108c64:	4027883a 	mov	r19,r8
10108c68:	8009883a 	mov	r4,r16
10108c6c:	880b883a 	mov	r5,r17
10108c70:	01800284 	movi	r6,10
10108c74:	000f883a 	mov	r7,zero
10108c78:	010a8200 	call	1010a820 <__umoddi3>
10108c7c:	10800c04 	addi	r2,r2,48
10108c80:	ad7fffc4 	addi	r21,r21,-1
10108c84:	8009883a 	mov	r4,r16
10108c88:	880b883a 	mov	r5,r17
10108c8c:	a8800005 	stb	r2,0(r21)
10108c90:	01800284 	movi	r6,10
10108c94:	000f883a 	mov	r7,zero
10108c98:	010a2a80 	call	1010a2a8 <__udivdi3>
10108c9c:	1021883a 	mov	r16,r2
10108ca0:	10c4b03a 	or	r2,r2,r3
10108ca4:	1823883a 	mov	r17,r3
10108ca8:	103fef1e 	bne	r2,zero,10108c68 <__alt_data_end+0xfffe8c68>
10108cac:	dc402417 	ldw	r17,144(sp)
10108cb0:	dc002517 	ldw	r16,148(sp)
10108cb4:	9013883a 	mov	r9,r18
10108cb8:	9811883a 	mov	r8,r19
10108cbc:	da801e17 	ldw	r10,120(sp)
10108cc0:	5567c83a 	sub	r19,r10,r21
10108cc4:	003ede06 	br	10108840 <__alt_data_end+0xfffe8840>
10108cc8:	38803fcc 	andi	r2,r7,255
10108ccc:	1080201c 	xori	r2,r2,128
10108cd0:	10bfe004 	addi	r2,r2,-128
10108cd4:	1002371e 	bne	r2,zero,101095b4 <___vfiprintf_internal_r+0x1174>
10108cd8:	01000044 	movi	r4,1
10108cdc:	01c00804 	movi	r7,32
10108ce0:	80c00007 	ldb	r3,0(r16)
10108ce4:	003e3506 	br	101085bc <__alt_data_end+0xfffe85bc>
10108ce8:	a5000054 	ori	r20,r20,1
10108cec:	80c00007 	ldb	r3,0(r16)
10108cf0:	003e3206 	br	101085bc <__alt_data_end+0xfffe85bc>
10108cf4:	a5002014 	ori	r20,r20,128
10108cf8:	80c00007 	ldb	r3,0(r16)
10108cfc:	003e2f06 	br	101085bc <__alt_data_end+0xfffe85bc>
10108d00:	8015883a 	mov	r10,r16
10108d04:	0023883a 	mov	r17,zero
10108d08:	18bff404 	addi	r2,r3,-48
10108d0c:	50c00007 	ldb	r3,0(r10)
10108d10:	8c4002a4 	muli	r17,r17,10
10108d14:	84000044 	addi	r16,r16,1
10108d18:	8015883a 	mov	r10,r16
10108d1c:	1463883a 	add	r17,r2,r17
10108d20:	18bff404 	addi	r2,r3,-48
10108d24:	30bff92e 	bgeu	r6,r2,10108d0c <__alt_data_end+0xfffe8d0c>
10108d28:	003e2506 	br	101085c0 <__alt_data_end+0xfffe85c0>
10108d2c:	21003fcc 	andi	r4,r4,255
10108d30:	2002d41e 	bne	r4,zero,10109884 <___vfiprintf_internal_r+0x1444>
10108d34:	a5000414 	ori	r20,r20,16
10108d38:	a080080c 	andi	r2,r20,32
10108d3c:	103fb51e 	bne	r2,zero,10108c14 <__alt_data_end+0xfffe8c14>
10108d40:	a080040c 	andi	r2,r20,16
10108d44:	1001f826 	beq	r2,zero,10109528 <___vfiprintf_internal_r+0x10e8>
10108d48:	da802217 	ldw	r10,136(sp)
10108d4c:	54800017 	ldw	r18,0(r10)
10108d50:	52800104 	addi	r10,r10,4
10108d54:	da802215 	stw	r10,136(sp)
10108d58:	9027d7fa 	srai	r19,r18,31
10108d5c:	9805883a 	mov	r2,r19
10108d60:	003fb206 	br	10108c2c <__alt_data_end+0xfffe8c2c>
10108d64:	21003fcc 	andi	r4,r4,255
10108d68:	2002c41e 	bne	r4,zero,1010987c <___vfiprintf_internal_r+0x143c>
10108d6c:	a5000414 	ori	r20,r20,16
10108d70:	a080080c 	andi	r2,r20,32
10108d74:	103f5f1e 	bne	r2,zero,10108af4 <__alt_data_end+0xfffe8af4>
10108d78:	a080040c 	andi	r2,r20,16
10108d7c:	10020f26 	beq	r2,zero,101095bc <___vfiprintf_internal_r+0x117c>
10108d80:	da802217 	ldw	r10,136(sp)
10108d84:	d8001d85 	stb	zero,118(sp)
10108d88:	0027883a 	mov	r19,zero
10108d8c:	50800104 	addi	r2,r10,4
10108d90:	54800017 	ldw	r18,0(r10)
10108d94:	48021116 	blt	r9,zero,101095dc <___vfiprintf_internal_r+0x119c>
10108d98:	00ffdfc4 	movi	r3,-129
10108d9c:	d8802215 	stw	r2,136(sp)
10108da0:	a0e8703a 	and	r20,r20,r3
10108da4:	903f5e1e 	bne	r18,zero,10108b20 <__alt_data_end+0xfffe8b20>
10108da8:	0039883a 	mov	fp,zero
10108dac:	4802a626 	beq	r9,zero,10109848 <___vfiprintf_internal_r+0x1408>
10108db0:	0025883a 	mov	r18,zero
10108db4:	0027883a 	mov	r19,zero
10108db8:	003f5a06 	br	10108b24 <__alt_data_end+0xfffe8b24>
10108dbc:	21003fcc 	andi	r4,r4,255
10108dc0:	20029f1e 	bne	r4,zero,10109840 <___vfiprintf_internal_r+0x1400>
10108dc4:	a5000414 	ori	r20,r20,16
10108dc8:	a080080c 	andi	r2,r20,32
10108dcc:	10005e1e 	bne	r2,zero,10108f48 <___vfiprintf_internal_r+0xb08>
10108dd0:	a080040c 	andi	r2,r20,16
10108dd4:	1001a21e 	bne	r2,zero,10109460 <___vfiprintf_internal_r+0x1020>
10108dd8:	a080100c 	andi	r2,r20,64
10108ddc:	d8001d85 	stb	zero,118(sp)
10108de0:	da802217 	ldw	r10,136(sp)
10108de4:	1002231e 	bne	r2,zero,10109674 <___vfiprintf_internal_r+0x1234>
10108de8:	50800104 	addi	r2,r10,4
10108dec:	54800017 	ldw	r18,0(r10)
10108df0:	0027883a 	mov	r19,zero
10108df4:	4801a00e 	bge	r9,zero,10109478 <___vfiprintf_internal_r+0x1038>
10108df8:	d8802215 	stw	r2,136(sp)
10108dfc:	0039883a 	mov	fp,zero
10108e00:	94c4b03a 	or	r2,r18,r19
10108e04:	103f901e 	bne	r2,zero,10108c48 <__alt_data_end+0xfffe8c48>
10108e08:	00800044 	movi	r2,1
10108e0c:	10803fcc 	andi	r2,r2,255
10108e10:	00c00044 	movi	r3,1
10108e14:	10c05926 	beq	r2,r3,10108f7c <___vfiprintf_internal_r+0xb3c>
10108e18:	00c00084 	movi	r3,2
10108e1c:	10ffe41e 	bne	r2,r3,10108db0 <__alt_data_end+0xfffe8db0>
10108e20:	0025883a 	mov	r18,zero
10108e24:	0027883a 	mov	r19,zero
10108e28:	00013d06 	br	10109320 <___vfiprintf_internal_r+0xee0>
10108e2c:	21003fcc 	andi	r4,r4,255
10108e30:	2002811e 	bne	r4,zero,10109838 <___vfiprintf_internal_r+0x13f8>
10108e34:	00840474 	movhi	r2,4113
10108e38:	10806704 	addi	r2,r2,412
10108e3c:	d8802615 	stw	r2,152(sp)
10108e40:	a080080c 	andi	r2,r20,32
10108e44:	103f561e 	bne	r2,zero,10108ba0 <__alt_data_end+0xfffe8ba0>
10108e48:	a080040c 	andi	r2,r20,16
10108e4c:	1001d126 	beq	r2,zero,10109594 <___vfiprintf_internal_r+0x1154>
10108e50:	da802217 	ldw	r10,136(sp)
10108e54:	0027883a 	mov	r19,zero
10108e58:	54800017 	ldw	r18,0(r10)
10108e5c:	52800104 	addi	r10,r10,4
10108e60:	da802215 	stw	r10,136(sp)
10108e64:	003f5306 	br	10108bb4 <__alt_data_end+0xfffe8bb4>
10108e68:	da802217 	ldw	r10,136(sp)
10108e6c:	d8001d85 	stb	zero,118(sp)
10108e70:	55400017 	ldw	r21,0(r10)
10108e74:	50c00104 	addi	r3,r10,4
10108e78:	a8024226 	beq	r21,zero,10109784 <___vfiprintf_internal_r+0x1344>
10108e7c:	48021816 	blt	r9,zero,101096e0 <___vfiprintf_internal_r+0x12a0>
10108e80:	480d883a 	mov	r6,r9
10108e84:	000b883a 	mov	r5,zero
10108e88:	a809883a 	mov	r4,r21
10108e8c:	d8c02a15 	stw	r3,168(sp)
10108e90:	da002b15 	stw	r8,172(sp)
10108e94:	da402c15 	stw	r9,176(sp)
10108e98:	010663c0 	call	1010663c <memchr>
10108e9c:	d8c02a17 	ldw	r3,168(sp)
10108ea0:	da002b17 	ldw	r8,172(sp)
10108ea4:	da402c17 	ldw	r9,176(sp)
10108ea8:	10024826 	beq	r2,zero,101097cc <___vfiprintf_internal_r+0x138c>
10108eac:	1567c83a 	sub	r19,r2,r21
10108eb0:	df001d83 	ldbu	fp,118(sp)
10108eb4:	d8c02215 	stw	r3,136(sp)
10108eb8:	0013883a 	mov	r9,zero
10108ebc:	003e6006 	br	10108840 <__alt_data_end+0xfffe8840>
10108ec0:	21003fcc 	andi	r4,r4,255
10108ec4:	203fc026 	beq	r4,zero,10108dc8 <__alt_data_end+0xfffe8dc8>
10108ec8:	d9c01d85 	stb	r7,118(sp)
10108ecc:	003fbe06 	br	10108dc8 <__alt_data_end+0xfffe8dc8>
10108ed0:	da802217 	ldw	r10,136(sp)
10108ed4:	54400017 	ldw	r17,0(r10)
10108ed8:	50800104 	addi	r2,r10,4
10108edc:	883e3b16 	blt	r17,zero,101087cc <__alt_data_end+0xfffe87cc>
10108ee0:	d8802215 	stw	r2,136(sp)
10108ee4:	80c00007 	ldb	r3,0(r16)
10108ee8:	003db406 	br	101085bc <__alt_data_end+0xfffe85bc>
10108eec:	01000044 	movi	r4,1
10108ef0:	01c00ac4 	movi	r7,43
10108ef4:	80c00007 	ldb	r3,0(r16)
10108ef8:	003db006 	br	101085bc <__alt_data_end+0xfffe85bc>
10108efc:	80c00007 	ldb	r3,0(r16)
10108f00:	82800044 	addi	r10,r16,1
10108f04:	1b423c26 	beq	r3,r13,101097f8 <___vfiprintf_internal_r+0x13b8>
10108f08:	18bff404 	addi	r2,r3,-48
10108f0c:	0013883a 	mov	r9,zero
10108f10:	30822b36 	bltu	r6,r2,101097c0 <___vfiprintf_internal_r+0x1380>
10108f14:	50c00007 	ldb	r3,0(r10)
10108f18:	4a4002a4 	muli	r9,r9,10
10108f1c:	54000044 	addi	r16,r10,1
10108f20:	8015883a 	mov	r10,r16
10108f24:	4893883a 	add	r9,r9,r2
10108f28:	18bff404 	addi	r2,r3,-48
10108f2c:	30bff92e 	bgeu	r6,r2,10108f14 <__alt_data_end+0xfffe8f14>
10108f30:	483da30e 	bge	r9,zero,101085c0 <__alt_data_end+0xfffe85c0>
10108f34:	027fffc4 	movi	r9,-1
10108f38:	003da106 	br	101085c0 <__alt_data_end+0xfffe85c0>
10108f3c:	a5001014 	ori	r20,r20,64
10108f40:	80c00007 	ldb	r3,0(r16)
10108f44:	003d9d06 	br	101085bc <__alt_data_end+0xfffe85bc>
10108f48:	da802217 	ldw	r10,136(sp)
10108f4c:	d8001d85 	stb	zero,118(sp)
10108f50:	50c00204 	addi	r3,r10,8
10108f54:	54800017 	ldw	r18,0(r10)
10108f58:	54c00117 	ldw	r19,4(r10)
10108f5c:	4801ca16 	blt	r9,zero,10109688 <___vfiprintf_internal_r+0x1248>
10108f60:	013fdfc4 	movi	r4,-129
10108f64:	94c4b03a 	or	r2,r18,r19
10108f68:	d8c02215 	stw	r3,136(sp)
10108f6c:	a128703a 	and	r20,r20,r4
10108f70:	0039883a 	mov	fp,zero
10108f74:	103f341e 	bne	r2,zero,10108c48 <__alt_data_end+0xfffe8c48>
10108f78:	483e2e26 	beq	r9,zero,10108834 <__alt_data_end+0xfffe8834>
10108f7c:	0025883a 	mov	r18,zero
10108f80:	94800c04 	addi	r18,r18,48
10108f84:	dc8019c5 	stb	r18,103(sp)
10108f88:	dcc02717 	ldw	r19,156(sp)
10108f8c:	dd4019c4 	addi	r21,sp,103
10108f90:	003e2b06 	br	10108840 <__alt_data_end+0xfffe8840>
10108f94:	21003fcc 	andi	r4,r4,255
10108f98:	2002361e 	bne	r4,zero,10109874 <___vfiprintf_internal_r+0x1434>
10108f9c:	1801c126 	beq	r3,zero,101096a4 <___vfiprintf_internal_r+0x1264>
10108fa0:	04800044 	movi	r18,1
10108fa4:	d8c01005 	stb	r3,64(sp)
10108fa8:	d8001d85 	stb	zero,118(sp)
10108fac:	9027883a 	mov	r19,r18
10108fb0:	dd401004 	addi	r21,sp,64
10108fb4:	003f1106 	br	10108bfc <__alt_data_end+0xfffe8bfc>
10108fb8:	d9402117 	ldw	r5,132(sp)
10108fbc:	d9002017 	ldw	r4,128(sp)
10108fc0:	d9801a04 	addi	r6,sp,104
10108fc4:	d9c02b15 	stw	r7,172(sp)
10108fc8:	dbc02a15 	stw	r15,168(sp)
10108fcc:	010832c0 	call	1010832c <__sprint_r.part.0>
10108fd0:	d9c02b17 	ldw	r7,172(sp)
10108fd4:	dbc02a17 	ldw	r15,168(sp)
10108fd8:	10006d1e 	bne	r2,zero,10109190 <___vfiprintf_internal_r+0xd50>
10108fdc:	d9801b17 	ldw	r6,108(sp)
10108fe0:	d8801c17 	ldw	r2,112(sp)
10108fe4:	d811883a 	mov	r8,sp
10108fe8:	31400044 	addi	r5,r6,1
10108fec:	003e3306 	br	101088bc <__alt_data_end+0xfffe88bc>
10108ff0:	d9401b17 	ldw	r5,108(sp)
10108ff4:	d8801c17 	ldw	r2,112(sp)
10108ff8:	29000044 	addi	r4,r5,1
10108ffc:	d8c01d87 	ldb	r3,118(sp)
10109000:	183e4d26 	beq	r3,zero,10108938 <__alt_data_end+0xfffe8938>
10109004:	00c00044 	movi	r3,1
10109008:	d9401d84 	addi	r5,sp,118
1010900c:	10c5883a 	add	r2,r2,r3
10109010:	41400015 	stw	r5,0(r8)
10109014:	40c00115 	stw	r3,4(r8)
10109018:	d8801c15 	stw	r2,112(sp)
1010901c:	d9001b15 	stw	r4,108(sp)
10109020:	014001c4 	movi	r5,7
10109024:	2900a90e 	bge	r5,r4,101092cc <___vfiprintf_internal_r+0xe8c>
10109028:	1000da1e 	bne	r2,zero,10109394 <___vfiprintf_internal_r+0xf54>
1010902c:	7000ab1e 	bne	r14,zero,101092dc <___vfiprintf_internal_r+0xe9c>
10109030:	000b883a 	mov	r5,zero
10109034:	1809883a 	mov	r4,r3
10109038:	d811883a 	mov	r8,sp
1010903c:	00c02004 	movi	r3,128
10109040:	e0fe4d26 	beq	fp,r3,10108978 <__alt_data_end+0xfffe8978>
10109044:	4cf9c83a 	sub	fp,r9,r19
10109048:	073e7b0e 	bge	zero,fp,10108a38 <__alt_data_end+0xfffe8a38>
1010904c:	01c00404 	movi	r7,16
10109050:	3f01900e 	bge	r7,fp,10109694 <___vfiprintf_internal_r+0x1254>
10109054:	00c40474 	movhi	r3,4113
10109058:	18c0cd04 	addi	r3,r3,820
1010905c:	d8c02415 	stw	r3,144(sp)
10109060:	034001c4 	movi	r13,7
10109064:	00000506 	br	1010907c <___vfiprintf_internal_r+0xc3c>
10109068:	29000084 	addi	r4,r5,2
1010906c:	42000204 	addi	r8,r8,8
10109070:	180b883a 	mov	r5,r3
10109074:	e73ffc04 	addi	fp,fp,-16
10109078:	3f000d0e 	bge	r7,fp,101090b0 <___vfiprintf_internal_r+0xc70>
1010907c:	10800404 	addi	r2,r2,16
10109080:	28c00044 	addi	r3,r5,1
10109084:	45c00015 	stw	r23,0(r8)
10109088:	41c00115 	stw	r7,4(r8)
1010908c:	d8801c15 	stw	r2,112(sp)
10109090:	d8c01b15 	stw	r3,108(sp)
10109094:	68fff40e 	bge	r13,r3,10109068 <__alt_data_end+0xfffe9068>
10109098:	1000101e 	bne	r2,zero,101090dc <___vfiprintf_internal_r+0xc9c>
1010909c:	e73ffc04 	addi	fp,fp,-16
101090a0:	01000044 	movi	r4,1
101090a4:	000b883a 	mov	r5,zero
101090a8:	d811883a 	mov	r8,sp
101090ac:	3f3ff316 	blt	r7,fp,1010907c <__alt_data_end+0xfffe907c>
101090b0:	da802417 	ldw	r10,144(sp)
101090b4:	1705883a 	add	r2,r2,fp
101090b8:	47000115 	stw	fp,4(r8)
101090bc:	42800015 	stw	r10,0(r8)
101090c0:	d8801c15 	stw	r2,112(sp)
101090c4:	d9001b15 	stw	r4,108(sp)
101090c8:	00c001c4 	movi	r3,7
101090cc:	19003616 	blt	r3,r4,101091a8 <___vfiprintf_internal_r+0xd68>
101090d0:	42000204 	addi	r8,r8,8
101090d4:	21000044 	addi	r4,r4,1
101090d8:	003e5706 	br	10108a38 <__alt_data_end+0xfffe8a38>
101090dc:	d9402117 	ldw	r5,132(sp)
101090e0:	d9002017 	ldw	r4,128(sp)
101090e4:	d9801a04 	addi	r6,sp,104
101090e8:	d9c02b15 	stw	r7,172(sp)
101090ec:	db402a15 	stw	r13,168(sp)
101090f0:	010832c0 	call	1010832c <__sprint_r.part.0>
101090f4:	d9c02b17 	ldw	r7,172(sp)
101090f8:	db402a17 	ldw	r13,168(sp)
101090fc:	1000241e 	bne	r2,zero,10109190 <___vfiprintf_internal_r+0xd50>
10109100:	d9401b17 	ldw	r5,108(sp)
10109104:	d8801c17 	ldw	r2,112(sp)
10109108:	d811883a 	mov	r8,sp
1010910c:	29000044 	addi	r4,r5,1
10109110:	003fd806 	br	10109074 <__alt_data_end+0xfffe9074>
10109114:	d9401b17 	ldw	r5,108(sp)
10109118:	00c40474 	movhi	r3,4113
1010911c:	18c0d104 	addi	r3,r3,836
10109120:	d8c02415 	stw	r3,144(sp)
10109124:	29400044 	addi	r5,r5,1
10109128:	d8c02417 	ldw	r3,144(sp)
1010912c:	14c5883a 	add	r2,r2,r19
10109130:	44c00115 	stw	r19,4(r8)
10109134:	40c00015 	stw	r3,0(r8)
10109138:	d8801c15 	stw	r2,112(sp)
1010913c:	d9401b15 	stw	r5,108(sp)
10109140:	00c001c4 	movi	r3,7
10109144:	1940070e 	bge	r3,r5,10109164 <___vfiprintf_internal_r+0xd24>
10109148:	103e4826 	beq	r2,zero,10108a6c <__alt_data_end+0xfffe8a6c>
1010914c:	d9402117 	ldw	r5,132(sp)
10109150:	d9002017 	ldw	r4,128(sp)
10109154:	d9801a04 	addi	r6,sp,104
10109158:	010832c0 	call	1010832c <__sprint_r.part.0>
1010915c:	10000c1e 	bne	r2,zero,10109190 <___vfiprintf_internal_r+0xd50>
10109160:	d8801c17 	ldw	r2,112(sp)
10109164:	8c80010e 	bge	r17,r18,1010916c <___vfiprintf_internal_r+0xd2c>
10109168:	9023883a 	mov	r17,r18
1010916c:	da802317 	ldw	r10,140(sp)
10109170:	5455883a 	add	r10,r10,r17
10109174:	da802315 	stw	r10,140(sp)
10109178:	103e4126 	beq	r2,zero,10108a80 <__alt_data_end+0xfffe8a80>
1010917c:	d9402117 	ldw	r5,132(sp)
10109180:	d9002017 	ldw	r4,128(sp)
10109184:	d9801a04 	addi	r6,sp,104
10109188:	010832c0 	call	1010832c <__sprint_r.part.0>
1010918c:	103e3c26 	beq	r2,zero,10108a80 <__alt_data_end+0xfffe8a80>
10109190:	dd002117 	ldw	r20,132(sp)
10109194:	a080030b 	ldhu	r2,12(r20)
10109198:	1080100c 	andi	r2,r2,64
1010919c:	1001231e 	bne	r2,zero,1010962c <___vfiprintf_internal_r+0x11ec>
101091a0:	d8802317 	ldw	r2,140(sp)
101091a4:	003d7b06 	br	10108794 <__alt_data_end+0xfffe8794>
101091a8:	1000991e 	bne	r2,zero,10109410 <___vfiprintf_internal_r+0xfd0>
101091ac:	00c00044 	movi	r3,1
101091b0:	9805883a 	mov	r2,r19
101091b4:	dd400015 	stw	r21,0(sp)
101091b8:	dcc00115 	stw	r19,4(sp)
101091bc:	dcc01c15 	stw	r19,112(sp)
101091c0:	d8c01b15 	stw	r3,108(sp)
101091c4:	d811883a 	mov	r8,sp
101091c8:	42000204 	addi	r8,r8,8
101091cc:	a2c0010c 	andi	r11,r20,4
101091d0:	583fe426 	beq	r11,zero,10109164 <__alt_data_end+0xfffe9164>
101091d4:	8ca7c83a 	sub	r19,r17,r18
101091d8:	04ffe20e 	bge	zero,r19,10109164 <__alt_data_end+0xfffe9164>
101091dc:	01c00404 	movi	r7,16
101091e0:	3cffcc0e 	bge	r7,r19,10109114 <__alt_data_end+0xfffe9114>
101091e4:	02840474 	movhi	r10,4113
101091e8:	5280d104 	addi	r10,r10,836
101091ec:	d9001b17 	ldw	r4,108(sp)
101091f0:	da802415 	stw	r10,144(sp)
101091f4:	382b883a 	mov	r21,r7
101091f8:	050001c4 	movi	r20,7
101091fc:	df002017 	ldw	fp,128(sp)
10109200:	00000506 	br	10109218 <___vfiprintf_internal_r+0xdd8>
10109204:	21400084 	addi	r5,r4,2
10109208:	42000204 	addi	r8,r8,8
1010920c:	1809883a 	mov	r4,r3
10109210:	9cfffc04 	addi	r19,r19,-16
10109214:	acffc40e 	bge	r21,r19,10109128 <__alt_data_end+0xfffe9128>
10109218:	10800404 	addi	r2,r2,16
1010921c:	20c00044 	addi	r3,r4,1
10109220:	45800015 	stw	r22,0(r8)
10109224:	45400115 	stw	r21,4(r8)
10109228:	d8801c15 	stw	r2,112(sp)
1010922c:	d8c01b15 	stw	r3,108(sp)
10109230:	a0fff40e 	bge	r20,r3,10109204 <__alt_data_end+0xfffe9204>
10109234:	1000041e 	bne	r2,zero,10109248 <___vfiprintf_internal_r+0xe08>
10109238:	01400044 	movi	r5,1
1010923c:	0009883a 	mov	r4,zero
10109240:	d811883a 	mov	r8,sp
10109244:	003ff206 	br	10109210 <__alt_data_end+0xfffe9210>
10109248:	d9402117 	ldw	r5,132(sp)
1010924c:	d9801a04 	addi	r6,sp,104
10109250:	e009883a 	mov	r4,fp
10109254:	010832c0 	call	1010832c <__sprint_r.part.0>
10109258:	103fcd1e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
1010925c:	d9001b17 	ldw	r4,108(sp)
10109260:	d8801c17 	ldw	r2,112(sp)
10109264:	d811883a 	mov	r8,sp
10109268:	21400044 	addi	r5,r4,1
1010926c:	003fe806 	br	10109210 <__alt_data_end+0xfffe9210>
10109270:	d9402117 	ldw	r5,132(sp)
10109274:	d9002017 	ldw	r4,128(sp)
10109278:	d9801a04 	addi	r6,sp,104
1010927c:	d9c02b15 	stw	r7,172(sp)
10109280:	db402a15 	stw	r13,168(sp)
10109284:	010832c0 	call	1010832c <__sprint_r.part.0>
10109288:	d9c02b17 	ldw	r7,172(sp)
1010928c:	db402a17 	ldw	r13,168(sp)
10109290:	103fbf1e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
10109294:	d9401b17 	ldw	r5,108(sp)
10109298:	d8801c17 	ldw	r2,112(sp)
1010929c:	d811883a 	mov	r8,sp
101092a0:	29800044 	addi	r6,r5,1
101092a4:	003dc406 	br	101089b8 <__alt_data_end+0xfffe89b8>
101092a8:	1000d21e 	bne	r2,zero,101095f4 <___vfiprintf_internal_r+0x11b4>
101092ac:	d8c01d87 	ldb	r3,118(sp)
101092b0:	18009526 	beq	r3,zero,10109508 <___vfiprintf_internal_r+0x10c8>
101092b4:	00800044 	movi	r2,1
101092b8:	d8c01d84 	addi	r3,sp,118
101092bc:	1009883a 	mov	r4,r2
101092c0:	d8c00015 	stw	r3,0(sp)
101092c4:	d8800115 	stw	r2,4(sp)
101092c8:	d811883a 	mov	r8,sp
101092cc:	200b883a 	mov	r5,r4
101092d0:	42000204 	addi	r8,r8,8
101092d4:	21000044 	addi	r4,r4,1
101092d8:	003d9706 	br	10108938 <__alt_data_end+0xfffe8938>
101092dc:	d9001d04 	addi	r4,sp,116
101092e0:	00800084 	movi	r2,2
101092e4:	d9000015 	stw	r4,0(sp)
101092e8:	d8800115 	stw	r2,4(sp)
101092ec:	1809883a 	mov	r4,r3
101092f0:	d811883a 	mov	r8,sp
101092f4:	200b883a 	mov	r5,r4
101092f8:	42000204 	addi	r8,r8,8
101092fc:	21000044 	addi	r4,r4,1
10109300:	003f4e06 	br	1010903c <__alt_data_end+0xfffe903c>
10109304:	d8001d85 	stb	zero,118(sp)
10109308:	48005016 	blt	r9,zero,1010944c <___vfiprintf_internal_r+0x100c>
1010930c:	00ffdfc4 	movi	r3,-129
10109310:	94c4b03a 	or	r2,r18,r19
10109314:	a0e8703a 	and	r20,r20,r3
10109318:	103d4426 	beq	r2,zero,1010882c <__alt_data_end+0xfffe882c>
1010931c:	0039883a 	mov	fp,zero
10109320:	d9002617 	ldw	r4,152(sp)
10109324:	dd401a04 	addi	r21,sp,104
10109328:	908003cc 	andi	r2,r18,15
1010932c:	9806973a 	slli	r3,r19,28
10109330:	2085883a 	add	r2,r4,r2
10109334:	9024d13a 	srli	r18,r18,4
10109338:	10800003 	ldbu	r2,0(r2)
1010933c:	9826d13a 	srli	r19,r19,4
10109340:	ad7fffc4 	addi	r21,r21,-1
10109344:	1ca4b03a 	or	r18,r3,r18
10109348:	a8800005 	stb	r2,0(r21)
1010934c:	94c4b03a 	or	r2,r18,r19
10109350:	103ff51e 	bne	r2,zero,10109328 <__alt_data_end+0xfffe9328>
10109354:	003e5906 	br	10108cbc <__alt_data_end+0xfffe8cbc>
10109358:	d9402117 	ldw	r5,132(sp)
1010935c:	d9002017 	ldw	r4,128(sp)
10109360:	d9801a04 	addi	r6,sp,104
10109364:	010832c0 	call	1010832c <__sprint_r.part.0>
10109368:	103f891e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
1010936c:	d8801c17 	ldw	r2,112(sp)
10109370:	d811883a 	mov	r8,sp
10109374:	003f9506 	br	101091cc <__alt_data_end+0xfffe91cc>
10109378:	d9402117 	ldw	r5,132(sp)
1010937c:	d9002017 	ldw	r4,128(sp)
10109380:	d9801a04 	addi	r6,sp,104
10109384:	010832c0 	call	1010832c <__sprint_r.part.0>
10109388:	103f811e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
1010938c:	d811883a 	mov	r8,sp
10109390:	003ced06 	br	10108748 <__alt_data_end+0xfffe8748>
10109394:	d9402117 	ldw	r5,132(sp)
10109398:	d9002017 	ldw	r4,128(sp)
1010939c:	d9801a04 	addi	r6,sp,104
101093a0:	da402c15 	stw	r9,176(sp)
101093a4:	db802a15 	stw	r14,168(sp)
101093a8:	010832c0 	call	1010832c <__sprint_r.part.0>
101093ac:	da402c17 	ldw	r9,176(sp)
101093b0:	db802a17 	ldw	r14,168(sp)
101093b4:	103f761e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
101093b8:	d9401b17 	ldw	r5,108(sp)
101093bc:	d8801c17 	ldw	r2,112(sp)
101093c0:	d811883a 	mov	r8,sp
101093c4:	29000044 	addi	r4,r5,1
101093c8:	003d5b06 	br	10108938 <__alt_data_end+0xfffe8938>
101093cc:	d9402117 	ldw	r5,132(sp)
101093d0:	d9002017 	ldw	r4,128(sp)
101093d4:	d9801a04 	addi	r6,sp,104
101093d8:	da402c15 	stw	r9,176(sp)
101093dc:	010832c0 	call	1010832c <__sprint_r.part.0>
101093e0:	da402c17 	ldw	r9,176(sp)
101093e4:	103f6a1e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
101093e8:	d9401b17 	ldw	r5,108(sp)
101093ec:	d8801c17 	ldw	r2,112(sp)
101093f0:	d811883a 	mov	r8,sp
101093f4:	29000044 	addi	r4,r5,1
101093f8:	003f1006 	br	1010903c <__alt_data_end+0xfffe903c>
101093fc:	1000c31e 	bne	r2,zero,1010970c <___vfiprintf_internal_r+0x12cc>
10109400:	01000044 	movi	r4,1
10109404:	000b883a 	mov	r5,zero
10109408:	d811883a 	mov	r8,sp
1010940c:	003f0d06 	br	10109044 <__alt_data_end+0xfffe9044>
10109410:	d9402117 	ldw	r5,132(sp)
10109414:	d9002017 	ldw	r4,128(sp)
10109418:	d9801a04 	addi	r6,sp,104
1010941c:	010832c0 	call	1010832c <__sprint_r.part.0>
10109420:	103f5b1e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
10109424:	d9001b17 	ldw	r4,108(sp)
10109428:	d8801c17 	ldw	r2,112(sp)
1010942c:	d811883a 	mov	r8,sp
10109430:	21000044 	addi	r4,r4,1
10109434:	003d8006 	br	10108a38 <__alt_data_end+0xfffe8a38>
10109438:	01040474 	movhi	r4,4113
1010943c:	21006c04 	addi	r4,r4,432
10109440:	d9002615 	stw	r4,152(sp)
10109444:	d8c02215 	stw	r3,136(sp)
10109448:	1029883a 	mov	r20,r2
1010944c:	94c4b03a 	or	r2,r18,r19
10109450:	103fb21e 	bne	r2,zero,1010931c <__alt_data_end+0xfffe931c>
10109454:	0039883a 	mov	fp,zero
10109458:	00800084 	movi	r2,2
1010945c:	003e6b06 	br	10108e0c <__alt_data_end+0xfffe8e0c>
10109460:	da802217 	ldw	r10,136(sp)
10109464:	d8001d85 	stb	zero,118(sp)
10109468:	0027883a 	mov	r19,zero
1010946c:	50800104 	addi	r2,r10,4
10109470:	54800017 	ldw	r18,0(r10)
10109474:	483e6016 	blt	r9,zero,10108df8 <__alt_data_end+0xfffe8df8>
10109478:	00ffdfc4 	movi	r3,-129
1010947c:	d8802215 	stw	r2,136(sp)
10109480:	a0e8703a 	and	r20,r20,r3
10109484:	0039883a 	mov	fp,zero
10109488:	903ebb26 	beq	r18,zero,10108f78 <__alt_data_end+0xfffe8f78>
1010948c:	00800244 	movi	r2,9
10109490:	14bdee36 	bltu	r2,r18,10108c4c <__alt_data_end+0xfffe8c4c>
10109494:	003eba06 	br	10108f80 <__alt_data_end+0xfffe8f80>
10109498:	00800c04 	movi	r2,48
1010949c:	d8c01d45 	stb	r3,117(sp)
101094a0:	d8801d05 	stb	r2,116(sp)
101094a4:	d8001d85 	stb	zero,118(sp)
101094a8:	a0c00094 	ori	r3,r20,2
101094ac:	4800a916 	blt	r9,zero,10109754 <___vfiprintf_internal_r+0x1314>
101094b0:	00bfdfc4 	movi	r2,-129
101094b4:	a096703a 	and	r11,r20,r2
101094b8:	5d000094 	ori	r20,r11,2
101094bc:	0039883a 	mov	fp,zero
101094c0:	003f9706 	br	10109320 <__alt_data_end+0xfffe9320>
101094c4:	8025883a 	mov	r18,r16
101094c8:	003c2e06 	br	10108584 <__alt_data_end+0xfffe8584>
101094cc:	00840474 	movhi	r2,4113
101094d0:	10806c04 	addi	r2,r2,432
101094d4:	0039883a 	mov	fp,zero
101094d8:	d8802615 	stw	r2,152(sp)
101094dc:	003f9006 	br	10109320 <__alt_data_end+0xfffe9320>
101094e0:	04a5c83a 	sub	r18,zero,r18
101094e4:	07000b44 	movi	fp,45
101094e8:	9004c03a 	cmpne	r2,r18,zero
101094ec:	04e7c83a 	sub	r19,zero,r19
101094f0:	df001d85 	stb	fp,118(sp)
101094f4:	98a7c83a 	sub	r19,r19,r2
101094f8:	48009f16 	blt	r9,zero,10109778 <___vfiprintf_internal_r+0x1338>
101094fc:	00bfdfc4 	movi	r2,-129
10109500:	a0a8703a 	and	r20,r20,r2
10109504:	003dd006 	br	10108c48 <__alt_data_end+0xfffe8c48>
10109508:	70004c26 	beq	r14,zero,1010963c <___vfiprintf_internal_r+0x11fc>
1010950c:	00800084 	movi	r2,2
10109510:	d8c01d04 	addi	r3,sp,116
10109514:	d8c00015 	stw	r3,0(sp)
10109518:	d8800115 	stw	r2,4(sp)
1010951c:	01000044 	movi	r4,1
10109520:	d811883a 	mov	r8,sp
10109524:	003f7306 	br	101092f4 <__alt_data_end+0xfffe92f4>
10109528:	a080100c 	andi	r2,r20,64
1010952c:	da802217 	ldw	r10,136(sp)
10109530:	103e0626 	beq	r2,zero,10108d4c <__alt_data_end+0xfffe8d4c>
10109534:	5480000f 	ldh	r18,0(r10)
10109538:	52800104 	addi	r10,r10,4
1010953c:	da802215 	stw	r10,136(sp)
10109540:	9027d7fa 	srai	r19,r18,31
10109544:	9805883a 	mov	r2,r19
10109548:	003db806 	br	10108c2c <__alt_data_end+0xfffe8c2c>
1010954c:	a080040c 	andi	r2,r20,16
10109550:	1000091e 	bne	r2,zero,10109578 <___vfiprintf_internal_r+0x1138>
10109554:	a2c0100c 	andi	r11,r20,64
10109558:	58000726 	beq	r11,zero,10109578 <___vfiprintf_internal_r+0x1138>
1010955c:	da802217 	ldw	r10,136(sp)
10109560:	50800017 	ldw	r2,0(r10)
10109564:	52800104 	addi	r10,r10,4
10109568:	da802215 	stw	r10,136(sp)
1010956c:	da802317 	ldw	r10,140(sp)
10109570:	1280000d 	sth	r10,0(r2)
10109574:	003be706 	br	10108514 <__alt_data_end+0xfffe8514>
10109578:	da802217 	ldw	r10,136(sp)
1010957c:	50800017 	ldw	r2,0(r10)
10109580:	52800104 	addi	r10,r10,4
10109584:	da802215 	stw	r10,136(sp)
10109588:	da802317 	ldw	r10,140(sp)
1010958c:	12800015 	stw	r10,0(r2)
10109590:	003be006 	br	10108514 <__alt_data_end+0xfffe8514>
10109594:	a080100c 	andi	r2,r20,64
10109598:	da802217 	ldw	r10,136(sp)
1010959c:	10003026 	beq	r2,zero,10109660 <___vfiprintf_internal_r+0x1220>
101095a0:	5480000b 	ldhu	r18,0(r10)
101095a4:	52800104 	addi	r10,r10,4
101095a8:	0027883a 	mov	r19,zero
101095ac:	da802215 	stw	r10,136(sp)
101095b0:	003d8006 	br	10108bb4 <__alt_data_end+0xfffe8bb4>
101095b4:	80c00007 	ldb	r3,0(r16)
101095b8:	003c0006 	br	101085bc <__alt_data_end+0xfffe85bc>
101095bc:	a080100c 	andi	r2,r20,64
101095c0:	d8001d85 	stb	zero,118(sp)
101095c4:	da802217 	ldw	r10,136(sp)
101095c8:	1000201e 	bne	r2,zero,1010964c <___vfiprintf_internal_r+0x120c>
101095cc:	50800104 	addi	r2,r10,4
101095d0:	54800017 	ldw	r18,0(r10)
101095d4:	0027883a 	mov	r19,zero
101095d8:	483def0e 	bge	r9,zero,10108d98 <__alt_data_end+0xfffe8d98>
101095dc:	94c6b03a 	or	r3,r18,r19
101095e0:	d8802215 	stw	r2,136(sp)
101095e4:	183d4e1e 	bne	r3,zero,10108b20 <__alt_data_end+0xfffe8b20>
101095e8:	0039883a 	mov	fp,zero
101095ec:	0005883a 	mov	r2,zero
101095f0:	003e0606 	br	10108e0c <__alt_data_end+0xfffe8e0c>
101095f4:	d9402117 	ldw	r5,132(sp)
101095f8:	d9002017 	ldw	r4,128(sp)
101095fc:	d9801a04 	addi	r6,sp,104
10109600:	da402c15 	stw	r9,176(sp)
10109604:	db802a15 	stw	r14,168(sp)
10109608:	010832c0 	call	1010832c <__sprint_r.part.0>
1010960c:	da402c17 	ldw	r9,176(sp)
10109610:	db802a17 	ldw	r14,168(sp)
10109614:	103ede1e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
10109618:	d9401b17 	ldw	r5,108(sp)
1010961c:	d8801c17 	ldw	r2,112(sp)
10109620:	d811883a 	mov	r8,sp
10109624:	29000044 	addi	r4,r5,1
10109628:	003e7406 	br	10108ffc <__alt_data_end+0xfffe8ffc>
1010962c:	00bfffc4 	movi	r2,-1
10109630:	003c5806 	br	10108794 <__alt_data_end+0xfffe8794>
10109634:	d811883a 	mov	r8,sp
10109638:	003ee806 	br	101091dc <__alt_data_end+0xfffe91dc>
1010963c:	000b883a 	mov	r5,zero
10109640:	01000044 	movi	r4,1
10109644:	d811883a 	mov	r8,sp
10109648:	003e7c06 	br	1010903c <__alt_data_end+0xfffe903c>
1010964c:	50800104 	addi	r2,r10,4
10109650:	5480000b 	ldhu	r18,0(r10)
10109654:	0027883a 	mov	r19,zero
10109658:	483dcf0e 	bge	r9,zero,10108d98 <__alt_data_end+0xfffe8d98>
1010965c:	003fdf06 	br	101095dc <__alt_data_end+0xfffe95dc>
10109660:	54800017 	ldw	r18,0(r10)
10109664:	52800104 	addi	r10,r10,4
10109668:	0027883a 	mov	r19,zero
1010966c:	da802215 	stw	r10,136(sp)
10109670:	003d5006 	br	10108bb4 <__alt_data_end+0xfffe8bb4>
10109674:	50800104 	addi	r2,r10,4
10109678:	5480000b 	ldhu	r18,0(r10)
1010967c:	0027883a 	mov	r19,zero
10109680:	483f7d0e 	bge	r9,zero,10109478 <__alt_data_end+0xfffe9478>
10109684:	003ddc06 	br	10108df8 <__alt_data_end+0xfffe8df8>
10109688:	d8c02215 	stw	r3,136(sp)
1010968c:	0039883a 	mov	fp,zero
10109690:	003ddb06 	br	10108e00 <__alt_data_end+0xfffe8e00>
10109694:	02840474 	movhi	r10,4113
10109698:	5280cd04 	addi	r10,r10,820
1010969c:	da802415 	stw	r10,144(sp)
101096a0:	003e8306 	br	101090b0 <__alt_data_end+0xfffe90b0>
101096a4:	d8801c17 	ldw	r2,112(sp)
101096a8:	dd002117 	ldw	r20,132(sp)
101096ac:	103eb926 	beq	r2,zero,10109194 <__alt_data_end+0xfffe9194>
101096b0:	d9002017 	ldw	r4,128(sp)
101096b4:	d9801a04 	addi	r6,sp,104
101096b8:	a00b883a 	mov	r5,r20
101096bc:	010832c0 	call	1010832c <__sprint_r.part.0>
101096c0:	003eb406 	br	10109194 <__alt_data_end+0xfffe9194>
101096c4:	80c00043 	ldbu	r3,1(r16)
101096c8:	a5000814 	ori	r20,r20,32
101096cc:	84000044 	addi	r16,r16,1
101096d0:	18c03fcc 	andi	r3,r3,255
101096d4:	18c0201c 	xori	r3,r3,128
101096d8:	18ffe004 	addi	r3,r3,-128
101096dc:	003bb706 	br	101085bc <__alt_data_end+0xfffe85bc>
101096e0:	a809883a 	mov	r4,r21
101096e4:	d8c02a15 	stw	r3,168(sp)
101096e8:	da002b15 	stw	r8,172(sp)
101096ec:	0100d940 	call	10100d94 <strlen>
101096f0:	d8c02a17 	ldw	r3,168(sp)
101096f4:	1027883a 	mov	r19,r2
101096f8:	df001d83 	ldbu	fp,118(sp)
101096fc:	d8c02215 	stw	r3,136(sp)
10109700:	0013883a 	mov	r9,zero
10109704:	da002b17 	ldw	r8,172(sp)
10109708:	003c4d06 	br	10108840 <__alt_data_end+0xfffe8840>
1010970c:	d9402117 	ldw	r5,132(sp)
10109710:	d9002017 	ldw	r4,128(sp)
10109714:	d9801a04 	addi	r6,sp,104
10109718:	da402c15 	stw	r9,176(sp)
1010971c:	010832c0 	call	1010832c <__sprint_r.part.0>
10109720:	da402c17 	ldw	r9,176(sp)
10109724:	103e9a1e 	bne	r2,zero,10109190 <__alt_data_end+0xfffe9190>
10109728:	d9401b17 	ldw	r5,108(sp)
1010972c:	d8801c17 	ldw	r2,112(sp)
10109730:	d811883a 	mov	r8,sp
10109734:	29000044 	addi	r4,r5,1
10109738:	003e4206 	br	10109044 <__alt_data_end+0xfffe9044>
1010973c:	d9401b17 	ldw	r5,108(sp)
10109740:	01040474 	movhi	r4,4113
10109744:	2100d104 	addi	r4,r4,836
10109748:	d9002415 	stw	r4,144(sp)
1010974c:	29400044 	addi	r5,r5,1
10109750:	003c6d06 	br	10108908 <__alt_data_end+0xfffe8908>
10109754:	0039883a 	mov	fp,zero
10109758:	00800084 	movi	r2,2
1010975c:	10803fcc 	andi	r2,r2,255
10109760:	01000044 	movi	r4,1
10109764:	11001e26 	beq	r2,r4,101097e0 <___vfiprintf_internal_r+0x13a0>
10109768:	01000084 	movi	r4,2
1010976c:	11001e1e 	bne	r2,r4,101097e8 <___vfiprintf_internal_r+0x13a8>
10109770:	1829883a 	mov	r20,r3
10109774:	003eea06 	br	10109320 <__alt_data_end+0xfffe9320>
10109778:	a007883a 	mov	r3,r20
1010977c:	00800044 	movi	r2,1
10109780:	003ff606 	br	1010975c <__alt_data_end+0xfffe975c>
10109784:	00800184 	movi	r2,6
10109788:	1240012e 	bgeu	r2,r9,10109790 <___vfiprintf_internal_r+0x1350>
1010978c:	1013883a 	mov	r9,r2
10109790:	4827883a 	mov	r19,r9
10109794:	4825883a 	mov	r18,r9
10109798:	48001516 	blt	r9,zero,101097f0 <___vfiprintf_internal_r+0x13b0>
1010979c:	05440474 	movhi	r21,4113
101097a0:	d8c02215 	stw	r3,136(sp)
101097a4:	ad407104 	addi	r21,r21,452
101097a8:	003d1406 	br	10108bfc <__alt_data_end+0xfffe8bfc>
101097ac:	02840474 	movhi	r10,4113
101097b0:	5280cd04 	addi	r10,r10,820
101097b4:	da802415 	stw	r10,144(sp)
101097b8:	200d883a 	mov	r6,r4
101097bc:	003c9106 	br	10108a04 <__alt_data_end+0xfffe8a04>
101097c0:	5021883a 	mov	r16,r10
101097c4:	0013883a 	mov	r9,zero
101097c8:	003b7d06 	br	101085c0 <__alt_data_end+0xfffe85c0>
101097cc:	4827883a 	mov	r19,r9
101097d0:	df001d83 	ldbu	fp,118(sp)
101097d4:	d8c02215 	stw	r3,136(sp)
101097d8:	0013883a 	mov	r9,zero
101097dc:	003c1806 	br	10108840 <__alt_data_end+0xfffe8840>
101097e0:	1829883a 	mov	r20,r3
101097e4:	003d1806 	br	10108c48 <__alt_data_end+0xfffe8c48>
101097e8:	1829883a 	mov	r20,r3
101097ec:	003ccd06 	br	10108b24 <__alt_data_end+0xfffe8b24>
101097f0:	0025883a 	mov	r18,zero
101097f4:	003fe906 	br	1010979c <__alt_data_end+0xfffe979c>
101097f8:	d8802217 	ldw	r2,136(sp)
101097fc:	80c00043 	ldbu	r3,1(r16)
10109800:	5021883a 	mov	r16,r10
10109804:	12400017 	ldw	r9,0(r2)
10109808:	10800104 	addi	r2,r2,4
1010980c:	d8802215 	stw	r2,136(sp)
10109810:	483faf0e 	bge	r9,zero,101096d0 <__alt_data_end+0xfffe96d0>
10109814:	18c03fcc 	andi	r3,r3,255
10109818:	18c0201c 	xori	r3,r3,128
1010981c:	027fffc4 	movi	r9,-1
10109820:	18ffe004 	addi	r3,r3,-128
10109824:	003b6506 	br	101085bc <__alt_data_end+0xfffe85bc>
10109828:	d9c01d85 	stb	r7,118(sp)
1010982c:	003ca006 	br	10108ab0 <__alt_data_end+0xfffe8ab0>
10109830:	d9c01d85 	stb	r7,118(sp)
10109834:	003cad06 	br	10108aec <__alt_data_end+0xfffe8aec>
10109838:	d9c01d85 	stb	r7,118(sp)
1010983c:	003d7d06 	br	10108e34 <__alt_data_end+0xfffe8e34>
10109840:	d9c01d85 	stb	r7,118(sp)
10109844:	003d5f06 	br	10108dc4 <__alt_data_end+0xfffe8dc4>
10109848:	a080004c 	andi	r2,r20,1
1010984c:	0039883a 	mov	fp,zero
10109850:	10000526 	beq	r2,zero,10109868 <___vfiprintf_internal_r+0x1428>
10109854:	00800c04 	movi	r2,48
10109858:	d88019c5 	stb	r2,103(sp)
1010985c:	dcc02717 	ldw	r19,156(sp)
10109860:	dd4019c4 	addi	r21,sp,103
10109864:	003bf606 	br	10108840 <__alt_data_end+0xfffe8840>
10109868:	0027883a 	mov	r19,zero
1010986c:	dd401a04 	addi	r21,sp,104
10109870:	003bf306 	br	10108840 <__alt_data_end+0xfffe8840>
10109874:	d9c01d85 	stb	r7,118(sp)
10109878:	003dc806 	br	10108f9c <__alt_data_end+0xfffe8f9c>
1010987c:	d9c01d85 	stb	r7,118(sp)
10109880:	003d3a06 	br	10108d6c <__alt_data_end+0xfffe8d6c>
10109884:	d9c01d85 	stb	r7,118(sp)
10109888:	003d2a06 	br	10108d34 <__alt_data_end+0xfffe8d34>
1010988c:	d9c01d85 	stb	r7,118(sp)
10109890:	003cde06 	br	10108c0c <__alt_data_end+0xfffe8c0c>
10109894:	d9c01d85 	stb	r7,118(sp)
10109898:	003cbc06 	br	10108b8c <__alt_data_end+0xfffe8b8c>

1010989c <__vfiprintf_internal>:
1010989c:	00840474 	movhi	r2,4113
101098a0:	1087db04 	addi	r2,r2,8044
101098a4:	300f883a 	mov	r7,r6
101098a8:	280d883a 	mov	r6,r5
101098ac:	200b883a 	mov	r5,r4
101098b0:	11000017 	ldw	r4,0(r2)
101098b4:	01084401 	jmpi	10108440 <___vfiprintf_internal_r>

101098b8 <__sbprintf>:
101098b8:	2880030b 	ldhu	r2,12(r5)
101098bc:	2ac01917 	ldw	r11,100(r5)
101098c0:	2a80038b 	ldhu	r10,14(r5)
101098c4:	2a400717 	ldw	r9,28(r5)
101098c8:	2a000917 	ldw	r8,36(r5)
101098cc:	defee204 	addi	sp,sp,-1144
101098d0:	00c10004 	movi	r3,1024
101098d4:	dc011a15 	stw	r16,1128(sp)
101098d8:	10bfff4c 	andi	r2,r2,65533
101098dc:	2821883a 	mov	r16,r5
101098e0:	d8cb883a 	add	r5,sp,r3
101098e4:	dc811c15 	stw	r18,1136(sp)
101098e8:	dc411b15 	stw	r17,1132(sp)
101098ec:	dfc11d15 	stw	ra,1140(sp)
101098f0:	2025883a 	mov	r18,r4
101098f4:	d881030d 	sth	r2,1036(sp)
101098f8:	dac11915 	stw	r11,1124(sp)
101098fc:	da81038d 	sth	r10,1038(sp)
10109900:	da410715 	stw	r9,1052(sp)
10109904:	da010915 	stw	r8,1060(sp)
10109908:	dec10015 	stw	sp,1024(sp)
1010990c:	dec10415 	stw	sp,1040(sp)
10109910:	d8c10215 	stw	r3,1032(sp)
10109914:	d8c10515 	stw	r3,1044(sp)
10109918:	d8010615 	stw	zero,1048(sp)
1010991c:	01084400 	call	10108440 <___vfiprintf_internal_r>
10109920:	1023883a 	mov	r17,r2
10109924:	10000416 	blt	r2,zero,10109938 <__sbprintf+0x80>
10109928:	d9410004 	addi	r5,sp,1024
1010992c:	9009883a 	mov	r4,r18
10109930:	0104cf40 	call	10104cf4 <_fflush_r>
10109934:	10000d1e 	bne	r2,zero,1010996c <__sbprintf+0xb4>
10109938:	d881030b 	ldhu	r2,1036(sp)
1010993c:	1080100c 	andi	r2,r2,64
10109940:	10000326 	beq	r2,zero,10109950 <__sbprintf+0x98>
10109944:	8080030b 	ldhu	r2,12(r16)
10109948:	10801014 	ori	r2,r2,64
1010994c:	8080030d 	sth	r2,12(r16)
10109950:	8805883a 	mov	r2,r17
10109954:	dfc11d17 	ldw	ra,1140(sp)
10109958:	dc811c17 	ldw	r18,1136(sp)
1010995c:	dc411b17 	ldw	r17,1132(sp)
10109960:	dc011a17 	ldw	r16,1128(sp)
10109964:	dec11e04 	addi	sp,sp,1144
10109968:	f800283a 	ret
1010996c:	047fffc4 	movi	r17,-1
10109970:	003ff106 	br	10109938 <__alt_data_end+0xfffe9938>

10109974 <_write_r>:
10109974:	defffd04 	addi	sp,sp,-12
10109978:	2805883a 	mov	r2,r5
1010997c:	dc000015 	stw	r16,0(sp)
10109980:	04040474 	movhi	r16,4113
10109984:	dc400115 	stw	r17,4(sp)
10109988:	300b883a 	mov	r5,r6
1010998c:	840ed904 	addi	r16,r16,15204
10109990:	2023883a 	mov	r17,r4
10109994:	380d883a 	mov	r6,r7
10109998:	1009883a 	mov	r4,r2
1010999c:	dfc00215 	stw	ra,8(sp)
101099a0:	80000015 	stw	zero,0(r16)
101099a4:	010ddc00 	call	1010ddc0 <write>
101099a8:	00ffffc4 	movi	r3,-1
101099ac:	10c00526 	beq	r2,r3,101099c4 <_write_r+0x50>
101099b0:	dfc00217 	ldw	ra,8(sp)
101099b4:	dc400117 	ldw	r17,4(sp)
101099b8:	dc000017 	ldw	r16,0(sp)
101099bc:	dec00304 	addi	sp,sp,12
101099c0:	f800283a 	ret
101099c4:	80c00017 	ldw	r3,0(r16)
101099c8:	183ff926 	beq	r3,zero,101099b0 <__alt_data_end+0xfffe99b0>
101099cc:	88c00015 	stw	r3,0(r17)
101099d0:	003ff706 	br	101099b0 <__alt_data_end+0xfffe99b0>

101099d4 <_close_r>:
101099d4:	defffd04 	addi	sp,sp,-12
101099d8:	dc000015 	stw	r16,0(sp)
101099dc:	04040474 	movhi	r16,4113
101099e0:	dc400115 	stw	r17,4(sp)
101099e4:	840ed904 	addi	r16,r16,15204
101099e8:	2023883a 	mov	r17,r4
101099ec:	2809883a 	mov	r4,r5
101099f0:	dfc00215 	stw	ra,8(sp)
101099f4:	80000015 	stw	zero,0(r16)
101099f8:	010d5b00 	call	1010d5b0 <close>
101099fc:	00ffffc4 	movi	r3,-1
10109a00:	10c00526 	beq	r2,r3,10109a18 <_close_r+0x44>
10109a04:	dfc00217 	ldw	ra,8(sp)
10109a08:	dc400117 	ldw	r17,4(sp)
10109a0c:	dc000017 	ldw	r16,0(sp)
10109a10:	dec00304 	addi	sp,sp,12
10109a14:	f800283a 	ret
10109a18:	80c00017 	ldw	r3,0(r16)
10109a1c:	183ff926 	beq	r3,zero,10109a04 <__alt_data_end+0xfffe9a04>
10109a20:	88c00015 	stw	r3,0(r17)
10109a24:	003ff706 	br	10109a04 <__alt_data_end+0xfffe9a04>

10109a28 <_calloc_r>:
10109a28:	298b383a 	mul	r5,r5,r6
10109a2c:	defffe04 	addi	sp,sp,-8
10109a30:	dfc00115 	stw	ra,4(sp)
10109a34:	dc000015 	stw	r16,0(sp)
10109a38:	0105e300 	call	10105e30 <_malloc_r>
10109a3c:	10002926 	beq	r2,zero,10109ae4 <_calloc_r+0xbc>
10109a40:	11bfff17 	ldw	r6,-4(r2)
10109a44:	1021883a 	mov	r16,r2
10109a48:	00bfff04 	movi	r2,-4
10109a4c:	308c703a 	and	r6,r6,r2
10109a50:	00c00904 	movi	r3,36
10109a54:	308d883a 	add	r6,r6,r2
10109a58:	19801636 	bltu	r3,r6,10109ab4 <_calloc_r+0x8c>
10109a5c:	008004c4 	movi	r2,19
10109a60:	11800b2e 	bgeu	r2,r6,10109a90 <_calloc_r+0x68>
10109a64:	80000015 	stw	zero,0(r16)
10109a68:	80000115 	stw	zero,4(r16)
10109a6c:	008006c4 	movi	r2,27
10109a70:	11801a2e 	bgeu	r2,r6,10109adc <_calloc_r+0xb4>
10109a74:	80000215 	stw	zero,8(r16)
10109a78:	80000315 	stw	zero,12(r16)
10109a7c:	30c0151e 	bne	r6,r3,10109ad4 <_calloc_r+0xac>
10109a80:	80000415 	stw	zero,16(r16)
10109a84:	80800604 	addi	r2,r16,24
10109a88:	80000515 	stw	zero,20(r16)
10109a8c:	00000106 	br	10109a94 <_calloc_r+0x6c>
10109a90:	8005883a 	mov	r2,r16
10109a94:	10000015 	stw	zero,0(r2)
10109a98:	10000115 	stw	zero,4(r2)
10109a9c:	10000215 	stw	zero,8(r2)
10109aa0:	8005883a 	mov	r2,r16
10109aa4:	dfc00117 	ldw	ra,4(sp)
10109aa8:	dc000017 	ldw	r16,0(sp)
10109aac:	dec00204 	addi	sp,sp,8
10109ab0:	f800283a 	ret
10109ab4:	000b883a 	mov	r5,zero
10109ab8:	8009883a 	mov	r4,r16
10109abc:	01069c40 	call	101069c4 <memset>
10109ac0:	8005883a 	mov	r2,r16
10109ac4:	dfc00117 	ldw	ra,4(sp)
10109ac8:	dc000017 	ldw	r16,0(sp)
10109acc:	dec00204 	addi	sp,sp,8
10109ad0:	f800283a 	ret
10109ad4:	80800404 	addi	r2,r16,16
10109ad8:	003fee06 	br	10109a94 <__alt_data_end+0xfffe9a94>
10109adc:	80800204 	addi	r2,r16,8
10109ae0:	003fec06 	br	10109a94 <__alt_data_end+0xfffe9a94>
10109ae4:	0005883a 	mov	r2,zero
10109ae8:	003fee06 	br	10109aa4 <__alt_data_end+0xfffe9aa4>

10109aec <_fclose_r>:
10109aec:	28003926 	beq	r5,zero,10109bd4 <_fclose_r+0xe8>
10109af0:	defffc04 	addi	sp,sp,-16
10109af4:	dc400115 	stw	r17,4(sp)
10109af8:	dc000015 	stw	r16,0(sp)
10109afc:	dfc00315 	stw	ra,12(sp)
10109b00:	dc800215 	stw	r18,8(sp)
10109b04:	2023883a 	mov	r17,r4
10109b08:	2821883a 	mov	r16,r5
10109b0c:	20000226 	beq	r4,zero,10109b18 <_fclose_r+0x2c>
10109b10:	20800e17 	ldw	r2,56(r4)
10109b14:	10002726 	beq	r2,zero,10109bb4 <_fclose_r+0xc8>
10109b18:	8080030f 	ldh	r2,12(r16)
10109b1c:	1000071e 	bne	r2,zero,10109b3c <_fclose_r+0x50>
10109b20:	0005883a 	mov	r2,zero
10109b24:	dfc00317 	ldw	ra,12(sp)
10109b28:	dc800217 	ldw	r18,8(sp)
10109b2c:	dc400117 	ldw	r17,4(sp)
10109b30:	dc000017 	ldw	r16,0(sp)
10109b34:	dec00404 	addi	sp,sp,16
10109b38:	f800283a 	ret
10109b3c:	800b883a 	mov	r5,r16
10109b40:	8809883a 	mov	r4,r17
10109b44:	0104ad80 	call	10104ad8 <__sflush_r>
10109b48:	1025883a 	mov	r18,r2
10109b4c:	80800b17 	ldw	r2,44(r16)
10109b50:	10000426 	beq	r2,zero,10109b64 <_fclose_r+0x78>
10109b54:	81400717 	ldw	r5,28(r16)
10109b58:	8809883a 	mov	r4,r17
10109b5c:	103ee83a 	callr	r2
10109b60:	10001616 	blt	r2,zero,10109bbc <_fclose_r+0xd0>
10109b64:	8080030b 	ldhu	r2,12(r16)
10109b68:	1080200c 	andi	r2,r2,128
10109b6c:	1000151e 	bne	r2,zero,10109bc4 <_fclose_r+0xd8>
10109b70:	81400c17 	ldw	r5,48(r16)
10109b74:	28000526 	beq	r5,zero,10109b8c <_fclose_r+0xa0>
10109b78:	80801004 	addi	r2,r16,64
10109b7c:	28800226 	beq	r5,r2,10109b88 <_fclose_r+0x9c>
10109b80:	8809883a 	mov	r4,r17
10109b84:	01052440 	call	10105244 <_free_r>
10109b88:	80000c15 	stw	zero,48(r16)
10109b8c:	81401117 	ldw	r5,68(r16)
10109b90:	28000326 	beq	r5,zero,10109ba0 <_fclose_r+0xb4>
10109b94:	8809883a 	mov	r4,r17
10109b98:	01052440 	call	10105244 <_free_r>
10109b9c:	80001115 	stw	zero,68(r16)
10109ba0:	01050e00 	call	101050e0 <__sfp_lock_acquire>
10109ba4:	8000030d 	sth	zero,12(r16)
10109ba8:	01050e40 	call	101050e4 <__sfp_lock_release>
10109bac:	9005883a 	mov	r2,r18
10109bb0:	003fdc06 	br	10109b24 <__alt_data_end+0xfffe9b24>
10109bb4:	01050d00 	call	101050d0 <__sinit>
10109bb8:	003fd706 	br	10109b18 <__alt_data_end+0xfffe9b18>
10109bbc:	04bfffc4 	movi	r18,-1
10109bc0:	003fe806 	br	10109b64 <__alt_data_end+0xfffe9b64>
10109bc4:	81400417 	ldw	r5,16(r16)
10109bc8:	8809883a 	mov	r4,r17
10109bcc:	01052440 	call	10105244 <_free_r>
10109bd0:	003fe706 	br	10109b70 <__alt_data_end+0xfffe9b70>
10109bd4:	0005883a 	mov	r2,zero
10109bd8:	f800283a 	ret

10109bdc <fclose>:
10109bdc:	00840474 	movhi	r2,4113
10109be0:	1087db04 	addi	r2,r2,8044
10109be4:	200b883a 	mov	r5,r4
10109be8:	11000017 	ldw	r4,0(r2)
10109bec:	0109aec1 	jmpi	10109aec <_fclose_r>

10109bf0 <__fputwc>:
10109bf0:	defff804 	addi	sp,sp,-32
10109bf4:	dcc00415 	stw	r19,16(sp)
10109bf8:	dc800315 	stw	r18,12(sp)
10109bfc:	dc000115 	stw	r16,4(sp)
10109c00:	dfc00715 	stw	ra,28(sp)
10109c04:	dd400615 	stw	r21,24(sp)
10109c08:	dd000515 	stw	r20,20(sp)
10109c0c:	dc400215 	stw	r17,8(sp)
10109c10:	2027883a 	mov	r19,r4
10109c14:	2825883a 	mov	r18,r5
10109c18:	3021883a 	mov	r16,r6
10109c1c:	0105c200 	call	10105c20 <__locale_mb_cur_max>
10109c20:	00c00044 	movi	r3,1
10109c24:	10c03e26 	beq	r2,r3,10109d20 <__fputwc+0x130>
10109c28:	81c01704 	addi	r7,r16,92
10109c2c:	900d883a 	mov	r6,r18
10109c30:	d80b883a 	mov	r5,sp
10109c34:	9809883a 	mov	r4,r19
10109c38:	010a0c00 	call	1010a0c0 <_wcrtomb_r>
10109c3c:	1029883a 	mov	r20,r2
10109c40:	00bfffc4 	movi	r2,-1
10109c44:	a0802026 	beq	r20,r2,10109cc8 <__fputwc+0xd8>
10109c48:	d9400003 	ldbu	r5,0(sp)
10109c4c:	a0001c26 	beq	r20,zero,10109cc0 <__fputwc+0xd0>
10109c50:	0023883a 	mov	r17,zero
10109c54:	05400284 	movi	r21,10
10109c58:	00000906 	br	10109c80 <__fputwc+0x90>
10109c5c:	80800017 	ldw	r2,0(r16)
10109c60:	11400005 	stb	r5,0(r2)
10109c64:	80c00017 	ldw	r3,0(r16)
10109c68:	18c00044 	addi	r3,r3,1
10109c6c:	80c00015 	stw	r3,0(r16)
10109c70:	8c400044 	addi	r17,r17,1
10109c74:	dc45883a 	add	r2,sp,r17
10109c78:	8d00112e 	bgeu	r17,r20,10109cc0 <__fputwc+0xd0>
10109c7c:	11400003 	ldbu	r5,0(r2)
10109c80:	80c00217 	ldw	r3,8(r16)
10109c84:	18ffffc4 	addi	r3,r3,-1
10109c88:	80c00215 	stw	r3,8(r16)
10109c8c:	183ff30e 	bge	r3,zero,10109c5c <__alt_data_end+0xfffe9c5c>
10109c90:	80800617 	ldw	r2,24(r16)
10109c94:	18801916 	blt	r3,r2,10109cfc <__fputwc+0x10c>
10109c98:	80800017 	ldw	r2,0(r16)
10109c9c:	11400005 	stb	r5,0(r2)
10109ca0:	80800017 	ldw	r2,0(r16)
10109ca4:	10c00003 	ldbu	r3,0(r2)
10109ca8:	10800044 	addi	r2,r2,1
10109cac:	1d402326 	beq	r3,r21,10109d3c <__fputwc+0x14c>
10109cb0:	80800015 	stw	r2,0(r16)
10109cb4:	8c400044 	addi	r17,r17,1
10109cb8:	dc45883a 	add	r2,sp,r17
10109cbc:	8d3fef36 	bltu	r17,r20,10109c7c <__alt_data_end+0xfffe9c7c>
10109cc0:	9005883a 	mov	r2,r18
10109cc4:	00000406 	br	10109cd8 <__fputwc+0xe8>
10109cc8:	80c0030b 	ldhu	r3,12(r16)
10109ccc:	a005883a 	mov	r2,r20
10109cd0:	18c01014 	ori	r3,r3,64
10109cd4:	80c0030d 	sth	r3,12(r16)
10109cd8:	dfc00717 	ldw	ra,28(sp)
10109cdc:	dd400617 	ldw	r21,24(sp)
10109ce0:	dd000517 	ldw	r20,20(sp)
10109ce4:	dcc00417 	ldw	r19,16(sp)
10109ce8:	dc800317 	ldw	r18,12(sp)
10109cec:	dc400217 	ldw	r17,8(sp)
10109cf0:	dc000117 	ldw	r16,4(sp)
10109cf4:	dec00804 	addi	sp,sp,32
10109cf8:	f800283a 	ret
10109cfc:	800d883a 	mov	r6,r16
10109d00:	29403fcc 	andi	r5,r5,255
10109d04:	9809883a 	mov	r4,r19
10109d08:	0109f680 	call	10109f68 <__swbuf_r>
10109d0c:	10bfffe0 	cmpeqi	r2,r2,-1
10109d10:	10803fcc 	andi	r2,r2,255
10109d14:	103fd626 	beq	r2,zero,10109c70 <__alt_data_end+0xfffe9c70>
10109d18:	00bfffc4 	movi	r2,-1
10109d1c:	003fee06 	br	10109cd8 <__alt_data_end+0xfffe9cd8>
10109d20:	90ffffc4 	addi	r3,r18,-1
10109d24:	01003f84 	movi	r4,254
10109d28:	20ffbf36 	bltu	r4,r3,10109c28 <__alt_data_end+0xfffe9c28>
10109d2c:	900b883a 	mov	r5,r18
10109d30:	dc800005 	stb	r18,0(sp)
10109d34:	1029883a 	mov	r20,r2
10109d38:	003fc506 	br	10109c50 <__alt_data_end+0xfffe9c50>
10109d3c:	800d883a 	mov	r6,r16
10109d40:	a80b883a 	mov	r5,r21
10109d44:	9809883a 	mov	r4,r19
10109d48:	0109f680 	call	10109f68 <__swbuf_r>
10109d4c:	10bfffe0 	cmpeqi	r2,r2,-1
10109d50:	003fef06 	br	10109d10 <__alt_data_end+0xfffe9d10>

10109d54 <_fputwc_r>:
10109d54:	3080030b 	ldhu	r2,12(r6)
10109d58:	10c8000c 	andi	r3,r2,8192
10109d5c:	1800051e 	bne	r3,zero,10109d74 <_fputwc_r+0x20>
10109d60:	30c01917 	ldw	r3,100(r6)
10109d64:	10880014 	ori	r2,r2,8192
10109d68:	3080030d 	sth	r2,12(r6)
10109d6c:	18880014 	ori	r2,r3,8192
10109d70:	30801915 	stw	r2,100(r6)
10109d74:	0109bf01 	jmpi	10109bf0 <__fputwc>

10109d78 <fputwc>:
10109d78:	00840474 	movhi	r2,4113
10109d7c:	defffc04 	addi	sp,sp,-16
10109d80:	1087db04 	addi	r2,r2,8044
10109d84:	dc000115 	stw	r16,4(sp)
10109d88:	14000017 	ldw	r16,0(r2)
10109d8c:	dc400215 	stw	r17,8(sp)
10109d90:	dfc00315 	stw	ra,12(sp)
10109d94:	2023883a 	mov	r17,r4
10109d98:	80000226 	beq	r16,zero,10109da4 <fputwc+0x2c>
10109d9c:	80800e17 	ldw	r2,56(r16)
10109da0:	10001026 	beq	r2,zero,10109de4 <fputwc+0x6c>
10109da4:	2880030b 	ldhu	r2,12(r5)
10109da8:	10c8000c 	andi	r3,r2,8192
10109dac:	1800051e 	bne	r3,zero,10109dc4 <fputwc+0x4c>
10109db0:	28c01917 	ldw	r3,100(r5)
10109db4:	10880014 	ori	r2,r2,8192
10109db8:	2880030d 	sth	r2,12(r5)
10109dbc:	18880014 	ori	r2,r3,8192
10109dc0:	28801915 	stw	r2,100(r5)
10109dc4:	280d883a 	mov	r6,r5
10109dc8:	8009883a 	mov	r4,r16
10109dcc:	880b883a 	mov	r5,r17
10109dd0:	dfc00317 	ldw	ra,12(sp)
10109dd4:	dc400217 	ldw	r17,8(sp)
10109dd8:	dc000117 	ldw	r16,4(sp)
10109ddc:	dec00404 	addi	sp,sp,16
10109de0:	0109bf01 	jmpi	10109bf0 <__fputwc>
10109de4:	8009883a 	mov	r4,r16
10109de8:	d9400015 	stw	r5,0(sp)
10109dec:	01050d00 	call	101050d0 <__sinit>
10109df0:	d9400017 	ldw	r5,0(sp)
10109df4:	003feb06 	br	10109da4 <__alt_data_end+0xfffe9da4>

10109df8 <_fstat_r>:
10109df8:	defffd04 	addi	sp,sp,-12
10109dfc:	2805883a 	mov	r2,r5
10109e00:	dc000015 	stw	r16,0(sp)
10109e04:	04040474 	movhi	r16,4113
10109e08:	dc400115 	stw	r17,4(sp)
10109e0c:	840ed904 	addi	r16,r16,15204
10109e10:	2023883a 	mov	r17,r4
10109e14:	300b883a 	mov	r5,r6
10109e18:	1009883a 	mov	r4,r2
10109e1c:	dfc00215 	stw	ra,8(sp)
10109e20:	80000015 	stw	zero,0(r16)
10109e24:	010d6e80 	call	1010d6e8 <fstat>
10109e28:	00ffffc4 	movi	r3,-1
10109e2c:	10c00526 	beq	r2,r3,10109e44 <_fstat_r+0x4c>
10109e30:	dfc00217 	ldw	ra,8(sp)
10109e34:	dc400117 	ldw	r17,4(sp)
10109e38:	dc000017 	ldw	r16,0(sp)
10109e3c:	dec00304 	addi	sp,sp,12
10109e40:	f800283a 	ret
10109e44:	80c00017 	ldw	r3,0(r16)
10109e48:	183ff926 	beq	r3,zero,10109e30 <__alt_data_end+0xfffe9e30>
10109e4c:	88c00015 	stw	r3,0(r17)
10109e50:	003ff706 	br	10109e30 <__alt_data_end+0xfffe9e30>

10109e54 <_isatty_r>:
10109e54:	defffd04 	addi	sp,sp,-12
10109e58:	dc000015 	stw	r16,0(sp)
10109e5c:	04040474 	movhi	r16,4113
10109e60:	dc400115 	stw	r17,4(sp)
10109e64:	840ed904 	addi	r16,r16,15204
10109e68:	2023883a 	mov	r17,r4
10109e6c:	2809883a 	mov	r4,r5
10109e70:	dfc00215 	stw	ra,8(sp)
10109e74:	80000015 	stw	zero,0(r16)
10109e78:	010d7d40 	call	1010d7d4 <isatty>
10109e7c:	00ffffc4 	movi	r3,-1
10109e80:	10c00526 	beq	r2,r3,10109e98 <_isatty_r+0x44>
10109e84:	dfc00217 	ldw	ra,8(sp)
10109e88:	dc400117 	ldw	r17,4(sp)
10109e8c:	dc000017 	ldw	r16,0(sp)
10109e90:	dec00304 	addi	sp,sp,12
10109e94:	f800283a 	ret
10109e98:	80c00017 	ldw	r3,0(r16)
10109e9c:	183ff926 	beq	r3,zero,10109e84 <__alt_data_end+0xfffe9e84>
10109ea0:	88c00015 	stw	r3,0(r17)
10109ea4:	003ff706 	br	10109e84 <__alt_data_end+0xfffe9e84>

10109ea8 <_lseek_r>:
10109ea8:	defffd04 	addi	sp,sp,-12
10109eac:	2805883a 	mov	r2,r5
10109eb0:	dc000015 	stw	r16,0(sp)
10109eb4:	04040474 	movhi	r16,4113
10109eb8:	dc400115 	stw	r17,4(sp)
10109ebc:	300b883a 	mov	r5,r6
10109ec0:	840ed904 	addi	r16,r16,15204
10109ec4:	2023883a 	mov	r17,r4
10109ec8:	380d883a 	mov	r6,r7
10109ecc:	1009883a 	mov	r4,r2
10109ed0:	dfc00215 	stw	ra,8(sp)
10109ed4:	80000015 	stw	zero,0(r16)
10109ed8:	010d9a00 	call	1010d9a0 <lseek>
10109edc:	00ffffc4 	movi	r3,-1
10109ee0:	10c00526 	beq	r2,r3,10109ef8 <_lseek_r+0x50>
10109ee4:	dfc00217 	ldw	ra,8(sp)
10109ee8:	dc400117 	ldw	r17,4(sp)
10109eec:	dc000017 	ldw	r16,0(sp)
10109ef0:	dec00304 	addi	sp,sp,12
10109ef4:	f800283a 	ret
10109ef8:	80c00017 	ldw	r3,0(r16)
10109efc:	183ff926 	beq	r3,zero,10109ee4 <__alt_data_end+0xfffe9ee4>
10109f00:	88c00015 	stw	r3,0(r17)
10109f04:	003ff706 	br	10109ee4 <__alt_data_end+0xfffe9ee4>

10109f08 <_read_r>:
10109f08:	defffd04 	addi	sp,sp,-12
10109f0c:	2805883a 	mov	r2,r5
10109f10:	dc000015 	stw	r16,0(sp)
10109f14:	04040474 	movhi	r16,4113
10109f18:	dc400115 	stw	r17,4(sp)
10109f1c:	300b883a 	mov	r5,r6
10109f20:	840ed904 	addi	r16,r16,15204
10109f24:	2023883a 	mov	r17,r4
10109f28:	380d883a 	mov	r6,r7
10109f2c:	1009883a 	mov	r4,r2
10109f30:	dfc00215 	stw	ra,8(sp)
10109f34:	80000015 	stw	zero,0(r16)
10109f38:	010db740 	call	1010db74 <read>
10109f3c:	00ffffc4 	movi	r3,-1
10109f40:	10c00526 	beq	r2,r3,10109f58 <_read_r+0x50>
10109f44:	dfc00217 	ldw	ra,8(sp)
10109f48:	dc400117 	ldw	r17,4(sp)
10109f4c:	dc000017 	ldw	r16,0(sp)
10109f50:	dec00304 	addi	sp,sp,12
10109f54:	f800283a 	ret
10109f58:	80c00017 	ldw	r3,0(r16)
10109f5c:	183ff926 	beq	r3,zero,10109f44 <__alt_data_end+0xfffe9f44>
10109f60:	88c00015 	stw	r3,0(r17)
10109f64:	003ff706 	br	10109f44 <__alt_data_end+0xfffe9f44>

10109f68 <__swbuf_r>:
10109f68:	defffb04 	addi	sp,sp,-20
10109f6c:	dcc00315 	stw	r19,12(sp)
10109f70:	dc800215 	stw	r18,8(sp)
10109f74:	dc000015 	stw	r16,0(sp)
10109f78:	dfc00415 	stw	ra,16(sp)
10109f7c:	dc400115 	stw	r17,4(sp)
10109f80:	2025883a 	mov	r18,r4
10109f84:	2827883a 	mov	r19,r5
10109f88:	3021883a 	mov	r16,r6
10109f8c:	20000226 	beq	r4,zero,10109f98 <__swbuf_r+0x30>
10109f90:	20800e17 	ldw	r2,56(r4)
10109f94:	10004226 	beq	r2,zero,1010a0a0 <__swbuf_r+0x138>
10109f98:	80800617 	ldw	r2,24(r16)
10109f9c:	8100030b 	ldhu	r4,12(r16)
10109fa0:	80800215 	stw	r2,8(r16)
10109fa4:	2080020c 	andi	r2,r4,8
10109fa8:	10003626 	beq	r2,zero,1010a084 <__swbuf_r+0x11c>
10109fac:	80c00417 	ldw	r3,16(r16)
10109fb0:	18003426 	beq	r3,zero,1010a084 <__swbuf_r+0x11c>
10109fb4:	2088000c 	andi	r2,r4,8192
10109fb8:	9c403fcc 	andi	r17,r19,255
10109fbc:	10001a26 	beq	r2,zero,1010a028 <__swbuf_r+0xc0>
10109fc0:	80800017 	ldw	r2,0(r16)
10109fc4:	81000517 	ldw	r4,20(r16)
10109fc8:	10c7c83a 	sub	r3,r2,r3
10109fcc:	1900200e 	bge	r3,r4,1010a050 <__swbuf_r+0xe8>
10109fd0:	18c00044 	addi	r3,r3,1
10109fd4:	81000217 	ldw	r4,8(r16)
10109fd8:	11400044 	addi	r5,r2,1
10109fdc:	81400015 	stw	r5,0(r16)
10109fe0:	213fffc4 	addi	r4,r4,-1
10109fe4:	81000215 	stw	r4,8(r16)
10109fe8:	14c00005 	stb	r19,0(r2)
10109fec:	80800517 	ldw	r2,20(r16)
10109ff0:	10c01e26 	beq	r2,r3,1010a06c <__swbuf_r+0x104>
10109ff4:	8080030b 	ldhu	r2,12(r16)
10109ff8:	1080004c 	andi	r2,r2,1
10109ffc:	10000226 	beq	r2,zero,1010a008 <__swbuf_r+0xa0>
1010a000:	00800284 	movi	r2,10
1010a004:	88801926 	beq	r17,r2,1010a06c <__swbuf_r+0x104>
1010a008:	8805883a 	mov	r2,r17
1010a00c:	dfc00417 	ldw	ra,16(sp)
1010a010:	dcc00317 	ldw	r19,12(sp)
1010a014:	dc800217 	ldw	r18,8(sp)
1010a018:	dc400117 	ldw	r17,4(sp)
1010a01c:	dc000017 	ldw	r16,0(sp)
1010a020:	dec00504 	addi	sp,sp,20
1010a024:	f800283a 	ret
1010a028:	81401917 	ldw	r5,100(r16)
1010a02c:	00b7ffc4 	movi	r2,-8193
1010a030:	21080014 	ori	r4,r4,8192
1010a034:	2884703a 	and	r2,r5,r2
1010a038:	80801915 	stw	r2,100(r16)
1010a03c:	80800017 	ldw	r2,0(r16)
1010a040:	8100030d 	sth	r4,12(r16)
1010a044:	81000517 	ldw	r4,20(r16)
1010a048:	10c7c83a 	sub	r3,r2,r3
1010a04c:	193fe016 	blt	r3,r4,10109fd0 <__alt_data_end+0xfffe9fd0>
1010a050:	800b883a 	mov	r5,r16
1010a054:	9009883a 	mov	r4,r18
1010a058:	0104cf40 	call	10104cf4 <_fflush_r>
1010a05c:	1000071e 	bne	r2,zero,1010a07c <__swbuf_r+0x114>
1010a060:	80800017 	ldw	r2,0(r16)
1010a064:	00c00044 	movi	r3,1
1010a068:	003fda06 	br	10109fd4 <__alt_data_end+0xfffe9fd4>
1010a06c:	800b883a 	mov	r5,r16
1010a070:	9009883a 	mov	r4,r18
1010a074:	0104cf40 	call	10104cf4 <_fflush_r>
1010a078:	103fe326 	beq	r2,zero,1010a008 <__alt_data_end+0xfffea008>
1010a07c:	00bfffc4 	movi	r2,-1
1010a080:	003fe206 	br	1010a00c <__alt_data_end+0xfffea00c>
1010a084:	800b883a 	mov	r5,r16
1010a088:	9009883a 	mov	r4,r18
1010a08c:	01030fc0 	call	101030fc <__swsetup_r>
1010a090:	103ffa1e 	bne	r2,zero,1010a07c <__alt_data_end+0xfffea07c>
1010a094:	8100030b 	ldhu	r4,12(r16)
1010a098:	80c00417 	ldw	r3,16(r16)
1010a09c:	003fc506 	br	10109fb4 <__alt_data_end+0xfffe9fb4>
1010a0a0:	01050d00 	call	101050d0 <__sinit>
1010a0a4:	003fbc06 	br	10109f98 <__alt_data_end+0xfffe9f98>

1010a0a8 <__swbuf>:
1010a0a8:	00840474 	movhi	r2,4113
1010a0ac:	1087db04 	addi	r2,r2,8044
1010a0b0:	280d883a 	mov	r6,r5
1010a0b4:	200b883a 	mov	r5,r4
1010a0b8:	11000017 	ldw	r4,0(r2)
1010a0bc:	0109f681 	jmpi	10109f68 <__swbuf_r>

1010a0c0 <_wcrtomb_r>:
1010a0c0:	defff604 	addi	sp,sp,-40
1010a0c4:	00840474 	movhi	r2,4113
1010a0c8:	dc800815 	stw	r18,32(sp)
1010a0cc:	dc400715 	stw	r17,28(sp)
1010a0d0:	dc000615 	stw	r16,24(sp)
1010a0d4:	1087df04 	addi	r2,r2,8060
1010a0d8:	dfc00915 	stw	ra,36(sp)
1010a0dc:	2021883a 	mov	r16,r4
1010a0e0:	3823883a 	mov	r17,r7
1010a0e4:	14800017 	ldw	r18,0(r2)
1010a0e8:	28001426 	beq	r5,zero,1010a13c <_wcrtomb_r+0x7c>
1010a0ec:	d9400415 	stw	r5,16(sp)
1010a0f0:	d9800515 	stw	r6,20(sp)
1010a0f4:	0105c140 	call	10105c14 <__locale_charset>
1010a0f8:	d9800517 	ldw	r6,20(sp)
1010a0fc:	d9400417 	ldw	r5,16(sp)
1010a100:	100f883a 	mov	r7,r2
1010a104:	dc400015 	stw	r17,0(sp)
1010a108:	8009883a 	mov	r4,r16
1010a10c:	903ee83a 	callr	r18
1010a110:	00ffffc4 	movi	r3,-1
1010a114:	10c0031e 	bne	r2,r3,1010a124 <_wcrtomb_r+0x64>
1010a118:	88000015 	stw	zero,0(r17)
1010a11c:	00c02284 	movi	r3,138
1010a120:	80c00015 	stw	r3,0(r16)
1010a124:	dfc00917 	ldw	ra,36(sp)
1010a128:	dc800817 	ldw	r18,32(sp)
1010a12c:	dc400717 	ldw	r17,28(sp)
1010a130:	dc000617 	ldw	r16,24(sp)
1010a134:	dec00a04 	addi	sp,sp,40
1010a138:	f800283a 	ret
1010a13c:	0105c140 	call	10105c14 <__locale_charset>
1010a140:	100f883a 	mov	r7,r2
1010a144:	dc400015 	stw	r17,0(sp)
1010a148:	000d883a 	mov	r6,zero
1010a14c:	d9400104 	addi	r5,sp,4
1010a150:	8009883a 	mov	r4,r16
1010a154:	903ee83a 	callr	r18
1010a158:	003fed06 	br	1010a110 <__alt_data_end+0xfffea110>

1010a15c <wcrtomb>:
1010a15c:	defff604 	addi	sp,sp,-40
1010a160:	00840474 	movhi	r2,4113
1010a164:	dc800615 	stw	r18,24(sp)
1010a168:	dc400515 	stw	r17,20(sp)
1010a16c:	1087db04 	addi	r2,r2,8044
1010a170:	dfc00915 	stw	ra,36(sp)
1010a174:	dd000815 	stw	r20,32(sp)
1010a178:	dcc00715 	stw	r19,28(sp)
1010a17c:	dc000415 	stw	r16,16(sp)
1010a180:	3025883a 	mov	r18,r6
1010a184:	14400017 	ldw	r17,0(r2)
1010a188:	20001926 	beq	r4,zero,1010a1f0 <wcrtomb+0x94>
1010a18c:	00840474 	movhi	r2,4113
1010a190:	1087df04 	addi	r2,r2,8060
1010a194:	15000017 	ldw	r20,0(r2)
1010a198:	2021883a 	mov	r16,r4
1010a19c:	2827883a 	mov	r19,r5
1010a1a0:	0105c140 	call	10105c14 <__locale_charset>
1010a1a4:	100f883a 	mov	r7,r2
1010a1a8:	dc800015 	stw	r18,0(sp)
1010a1ac:	980d883a 	mov	r6,r19
1010a1b0:	800b883a 	mov	r5,r16
1010a1b4:	8809883a 	mov	r4,r17
1010a1b8:	a03ee83a 	callr	r20
1010a1bc:	00ffffc4 	movi	r3,-1
1010a1c0:	10c0031e 	bne	r2,r3,1010a1d0 <wcrtomb+0x74>
1010a1c4:	90000015 	stw	zero,0(r18)
1010a1c8:	00c02284 	movi	r3,138
1010a1cc:	88c00015 	stw	r3,0(r17)
1010a1d0:	dfc00917 	ldw	ra,36(sp)
1010a1d4:	dd000817 	ldw	r20,32(sp)
1010a1d8:	dcc00717 	ldw	r19,28(sp)
1010a1dc:	dc800617 	ldw	r18,24(sp)
1010a1e0:	dc400517 	ldw	r17,20(sp)
1010a1e4:	dc000417 	ldw	r16,16(sp)
1010a1e8:	dec00a04 	addi	sp,sp,40
1010a1ec:	f800283a 	ret
1010a1f0:	00840474 	movhi	r2,4113
1010a1f4:	1087df04 	addi	r2,r2,8060
1010a1f8:	14000017 	ldw	r16,0(r2)
1010a1fc:	0105c140 	call	10105c14 <__locale_charset>
1010a200:	100f883a 	mov	r7,r2
1010a204:	dc800015 	stw	r18,0(sp)
1010a208:	000d883a 	mov	r6,zero
1010a20c:	d9400104 	addi	r5,sp,4
1010a210:	8809883a 	mov	r4,r17
1010a214:	803ee83a 	callr	r16
1010a218:	003fe806 	br	1010a1bc <__alt_data_end+0xfffea1bc>

1010a21c <__ascii_wctomb>:
1010a21c:	28000526 	beq	r5,zero,1010a234 <__ascii_wctomb+0x18>
1010a220:	00803fc4 	movi	r2,255
1010a224:	11800536 	bltu	r2,r6,1010a23c <__ascii_wctomb+0x20>
1010a228:	29800005 	stb	r6,0(r5)
1010a22c:	00800044 	movi	r2,1
1010a230:	f800283a 	ret
1010a234:	0005883a 	mov	r2,zero
1010a238:	f800283a 	ret
1010a23c:	00802284 	movi	r2,138
1010a240:	20800015 	stw	r2,0(r4)
1010a244:	00bfffc4 	movi	r2,-1
1010a248:	f800283a 	ret

1010a24c <_wctomb_r>:
1010a24c:	00840474 	movhi	r2,4113
1010a250:	defff904 	addi	sp,sp,-28
1010a254:	1087df04 	addi	r2,r2,8060
1010a258:	dfc00615 	stw	ra,24(sp)
1010a25c:	dc400515 	stw	r17,20(sp)
1010a260:	dc000415 	stw	r16,16(sp)
1010a264:	3823883a 	mov	r17,r7
1010a268:	14000017 	ldw	r16,0(r2)
1010a26c:	d9000115 	stw	r4,4(sp)
1010a270:	d9400215 	stw	r5,8(sp)
1010a274:	d9800315 	stw	r6,12(sp)
1010a278:	0105c140 	call	10105c14 <__locale_charset>
1010a27c:	d9800317 	ldw	r6,12(sp)
1010a280:	d9400217 	ldw	r5,8(sp)
1010a284:	d9000117 	ldw	r4,4(sp)
1010a288:	100f883a 	mov	r7,r2
1010a28c:	dc400015 	stw	r17,0(sp)
1010a290:	803ee83a 	callr	r16
1010a294:	dfc00617 	ldw	ra,24(sp)
1010a298:	dc400517 	ldw	r17,20(sp)
1010a29c:	dc000417 	ldw	r16,16(sp)
1010a2a0:	dec00704 	addi	sp,sp,28
1010a2a4:	f800283a 	ret

1010a2a8 <__udivdi3>:
1010a2a8:	defff504 	addi	sp,sp,-44
1010a2ac:	dcc00415 	stw	r19,16(sp)
1010a2b0:	dc000115 	stw	r16,4(sp)
1010a2b4:	dfc00a15 	stw	ra,40(sp)
1010a2b8:	df000915 	stw	fp,36(sp)
1010a2bc:	ddc00815 	stw	r23,32(sp)
1010a2c0:	dd800715 	stw	r22,28(sp)
1010a2c4:	dd400615 	stw	r21,24(sp)
1010a2c8:	dd000515 	stw	r20,20(sp)
1010a2cc:	dc800315 	stw	r18,12(sp)
1010a2d0:	dc400215 	stw	r17,8(sp)
1010a2d4:	2027883a 	mov	r19,r4
1010a2d8:	2821883a 	mov	r16,r5
1010a2dc:	3800411e 	bne	r7,zero,1010a3e4 <__udivdi3+0x13c>
1010a2e0:	3023883a 	mov	r17,r6
1010a2e4:	2025883a 	mov	r18,r4
1010a2e8:	2980522e 	bgeu	r5,r6,1010a434 <__udivdi3+0x18c>
1010a2ec:	00bfffd4 	movui	r2,65535
1010a2f0:	282d883a 	mov	r22,r5
1010a2f4:	1180a836 	bltu	r2,r6,1010a598 <__udivdi3+0x2f0>
1010a2f8:	00803fc4 	movi	r2,255
1010a2fc:	1185803a 	cmpltu	r2,r2,r6
1010a300:	100490fa 	slli	r2,r2,3
1010a304:	3086d83a 	srl	r3,r6,r2
1010a308:	01040474 	movhi	r4,4113
1010a30c:	2100d504 	addi	r4,r4,852
1010a310:	20c7883a 	add	r3,r4,r3
1010a314:	18c00003 	ldbu	r3,0(r3)
1010a318:	1885883a 	add	r2,r3,r2
1010a31c:	00c00804 	movi	r3,32
1010a320:	1887c83a 	sub	r3,r3,r2
1010a324:	18000526 	beq	r3,zero,1010a33c <__udivdi3+0x94>
1010a328:	80e0983a 	sll	r16,r16,r3
1010a32c:	9884d83a 	srl	r2,r19,r2
1010a330:	30e2983a 	sll	r17,r6,r3
1010a334:	98e4983a 	sll	r18,r19,r3
1010a338:	142cb03a 	or	r22,r2,r16
1010a33c:	882ad43a 	srli	r21,r17,16
1010a340:	b009883a 	mov	r4,r22
1010a344:	8d3fffcc 	andi	r20,r17,65535
1010a348:	a80b883a 	mov	r5,r21
1010a34c:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a350:	b009883a 	mov	r4,r22
1010a354:	a80b883a 	mov	r5,r21
1010a358:	1027883a 	mov	r19,r2
1010a35c:	010ae500 	call	1010ae50 <__udivsi3>
1010a360:	102d883a 	mov	r22,r2
1010a364:	9826943a 	slli	r19,r19,16
1010a368:	9004d43a 	srli	r2,r18,16
1010a36c:	a5a1383a 	mul	r16,r20,r22
1010a370:	14c4b03a 	or	r2,r2,r19
1010a374:	1400052e 	bgeu	r2,r16,1010a38c <__udivdi3+0xe4>
1010a378:	1445883a 	add	r2,r2,r17
1010a37c:	b0ffffc4 	addi	r3,r22,-1
1010a380:	14400136 	bltu	r2,r17,1010a388 <__udivdi3+0xe0>
1010a384:	14012336 	bltu	r2,r16,1010a814 <__udivdi3+0x56c>
1010a388:	182d883a 	mov	r22,r3
1010a38c:	1421c83a 	sub	r16,r2,r16
1010a390:	a80b883a 	mov	r5,r21
1010a394:	8009883a 	mov	r4,r16
1010a398:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a39c:	1027883a 	mov	r19,r2
1010a3a0:	a80b883a 	mov	r5,r21
1010a3a4:	8009883a 	mov	r4,r16
1010a3a8:	010ae500 	call	1010ae50 <__udivsi3>
1010a3ac:	9826943a 	slli	r19,r19,16
1010a3b0:	a0a9383a 	mul	r20,r20,r2
1010a3b4:	94bfffcc 	andi	r18,r18,65535
1010a3b8:	94e4b03a 	or	r18,r18,r19
1010a3bc:	9500052e 	bgeu	r18,r20,1010a3d4 <__udivdi3+0x12c>
1010a3c0:	8ca5883a 	add	r18,r17,r18
1010a3c4:	10ffffc4 	addi	r3,r2,-1
1010a3c8:	9440f136 	bltu	r18,r17,1010a790 <__udivdi3+0x4e8>
1010a3cc:	9500f02e 	bgeu	r18,r20,1010a790 <__udivdi3+0x4e8>
1010a3d0:	10bfff84 	addi	r2,r2,-2
1010a3d4:	b00c943a 	slli	r6,r22,16
1010a3d8:	0007883a 	mov	r3,zero
1010a3dc:	3084b03a 	or	r2,r6,r2
1010a3e0:	00005906 	br	1010a548 <__udivdi3+0x2a0>
1010a3e4:	29c05636 	bltu	r5,r7,1010a540 <__udivdi3+0x298>
1010a3e8:	00bfffd4 	movui	r2,65535
1010a3ec:	11c0622e 	bgeu	r2,r7,1010a578 <__udivdi3+0x2d0>
1010a3f0:	00804034 	movhi	r2,256
1010a3f4:	10bfffc4 	addi	r2,r2,-1
1010a3f8:	11c0ee36 	bltu	r2,r7,1010a7b4 <__udivdi3+0x50c>
1010a3fc:	00800404 	movi	r2,16
1010a400:	3886d83a 	srl	r3,r7,r2
1010a404:	01040474 	movhi	r4,4113
1010a408:	2100d504 	addi	r4,r4,852
1010a40c:	20c7883a 	add	r3,r4,r3
1010a410:	18c00003 	ldbu	r3,0(r3)
1010a414:	05400804 	movi	r21,32
1010a418:	1885883a 	add	r2,r3,r2
1010a41c:	a8abc83a 	sub	r21,r21,r2
1010a420:	a800621e 	bne	r21,zero,1010a5ac <__udivdi3+0x304>
1010a424:	3c00e936 	bltu	r7,r16,1010a7cc <__udivdi3+0x524>
1010a428:	9985403a 	cmpgeu	r2,r19,r6
1010a42c:	0007883a 	mov	r3,zero
1010a430:	00004506 	br	1010a548 <__udivdi3+0x2a0>
1010a434:	3000041e 	bne	r6,zero,1010a448 <__udivdi3+0x1a0>
1010a438:	000b883a 	mov	r5,zero
1010a43c:	01000044 	movi	r4,1
1010a440:	010ae500 	call	1010ae50 <__udivsi3>
1010a444:	1023883a 	mov	r17,r2
1010a448:	00bfffd4 	movui	r2,65535
1010a44c:	14404e2e 	bgeu	r2,r17,1010a588 <__udivdi3+0x2e0>
1010a450:	00804034 	movhi	r2,256
1010a454:	10bfffc4 	addi	r2,r2,-1
1010a458:	1440d836 	bltu	r2,r17,1010a7bc <__udivdi3+0x514>
1010a45c:	00800404 	movi	r2,16
1010a460:	8886d83a 	srl	r3,r17,r2
1010a464:	01040474 	movhi	r4,4113
1010a468:	2100d504 	addi	r4,r4,852
1010a46c:	20c7883a 	add	r3,r4,r3
1010a470:	18c00003 	ldbu	r3,0(r3)
1010a474:	1885883a 	add	r2,r3,r2
1010a478:	00c00804 	movi	r3,32
1010a47c:	1887c83a 	sub	r3,r3,r2
1010a480:	18008f1e 	bne	r3,zero,1010a6c0 <__udivdi3+0x418>
1010a484:	882ad43a 	srli	r21,r17,16
1010a488:	8461c83a 	sub	r16,r16,r17
1010a48c:	8d3fffcc 	andi	r20,r17,65535
1010a490:	00c00044 	movi	r3,1
1010a494:	8009883a 	mov	r4,r16
1010a498:	a80b883a 	mov	r5,r21
1010a49c:	d8c00015 	stw	r3,0(sp)
1010a4a0:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a4a4:	8009883a 	mov	r4,r16
1010a4a8:	a80b883a 	mov	r5,r21
1010a4ac:	1027883a 	mov	r19,r2
1010a4b0:	010ae500 	call	1010ae50 <__udivsi3>
1010a4b4:	9826943a 	slli	r19,r19,16
1010a4b8:	9008d43a 	srli	r4,r18,16
1010a4bc:	1521383a 	mul	r16,r2,r20
1010a4c0:	102d883a 	mov	r22,r2
1010a4c4:	24c8b03a 	or	r4,r4,r19
1010a4c8:	d8c00017 	ldw	r3,0(sp)
1010a4cc:	2400052e 	bgeu	r4,r16,1010a4e4 <__udivdi3+0x23c>
1010a4d0:	2449883a 	add	r4,r4,r17
1010a4d4:	b0bfffc4 	addi	r2,r22,-1
1010a4d8:	24400136 	bltu	r4,r17,1010a4e0 <__udivdi3+0x238>
1010a4dc:	2400ca36 	bltu	r4,r16,1010a808 <__udivdi3+0x560>
1010a4e0:	102d883a 	mov	r22,r2
1010a4e4:	2421c83a 	sub	r16,r4,r16
1010a4e8:	a80b883a 	mov	r5,r21
1010a4ec:	8009883a 	mov	r4,r16
1010a4f0:	d8c00015 	stw	r3,0(sp)
1010a4f4:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a4f8:	1027883a 	mov	r19,r2
1010a4fc:	a80b883a 	mov	r5,r21
1010a500:	8009883a 	mov	r4,r16
1010a504:	010ae500 	call	1010ae50 <__udivsi3>
1010a508:	9826943a 	slli	r19,r19,16
1010a50c:	1529383a 	mul	r20,r2,r20
1010a510:	94bfffcc 	andi	r18,r18,65535
1010a514:	94e4b03a 	or	r18,r18,r19
1010a518:	d8c00017 	ldw	r3,0(sp)
1010a51c:	9500052e 	bgeu	r18,r20,1010a534 <__udivdi3+0x28c>
1010a520:	8ca5883a 	add	r18,r17,r18
1010a524:	113fffc4 	addi	r4,r2,-1
1010a528:	94409736 	bltu	r18,r17,1010a788 <__udivdi3+0x4e0>
1010a52c:	9500962e 	bgeu	r18,r20,1010a788 <__udivdi3+0x4e0>
1010a530:	10bfff84 	addi	r2,r2,-2
1010a534:	b00c943a 	slli	r6,r22,16
1010a538:	3084b03a 	or	r2,r6,r2
1010a53c:	00000206 	br	1010a548 <__udivdi3+0x2a0>
1010a540:	0007883a 	mov	r3,zero
1010a544:	0005883a 	mov	r2,zero
1010a548:	dfc00a17 	ldw	ra,40(sp)
1010a54c:	df000917 	ldw	fp,36(sp)
1010a550:	ddc00817 	ldw	r23,32(sp)
1010a554:	dd800717 	ldw	r22,28(sp)
1010a558:	dd400617 	ldw	r21,24(sp)
1010a55c:	dd000517 	ldw	r20,20(sp)
1010a560:	dcc00417 	ldw	r19,16(sp)
1010a564:	dc800317 	ldw	r18,12(sp)
1010a568:	dc400217 	ldw	r17,8(sp)
1010a56c:	dc000117 	ldw	r16,4(sp)
1010a570:	dec00b04 	addi	sp,sp,44
1010a574:	f800283a 	ret
1010a578:	00803fc4 	movi	r2,255
1010a57c:	11c5803a 	cmpltu	r2,r2,r7
1010a580:	100490fa 	slli	r2,r2,3
1010a584:	003f9e06 	br	1010a400 <__alt_data_end+0xfffea400>
1010a588:	00803fc4 	movi	r2,255
1010a58c:	1445803a 	cmpltu	r2,r2,r17
1010a590:	100490fa 	slli	r2,r2,3
1010a594:	003fb206 	br	1010a460 <__alt_data_end+0xfffea460>
1010a598:	00804034 	movhi	r2,256
1010a59c:	10bfffc4 	addi	r2,r2,-1
1010a5a0:	11808836 	bltu	r2,r6,1010a7c4 <__udivdi3+0x51c>
1010a5a4:	00800404 	movi	r2,16
1010a5a8:	003f5606 	br	1010a304 <__alt_data_end+0xfffea304>
1010a5ac:	30aed83a 	srl	r23,r6,r2
1010a5b0:	3d4e983a 	sll	r7,r7,r21
1010a5b4:	80acd83a 	srl	r22,r16,r2
1010a5b8:	9884d83a 	srl	r2,r19,r2
1010a5bc:	3deeb03a 	or	r23,r7,r23
1010a5c0:	b824d43a 	srli	r18,r23,16
1010a5c4:	8560983a 	sll	r16,r16,r21
1010a5c8:	b009883a 	mov	r4,r22
1010a5cc:	900b883a 	mov	r5,r18
1010a5d0:	3568983a 	sll	r20,r6,r21
1010a5d4:	1420b03a 	or	r16,r2,r16
1010a5d8:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a5dc:	b009883a 	mov	r4,r22
1010a5e0:	900b883a 	mov	r5,r18
1010a5e4:	1023883a 	mov	r17,r2
1010a5e8:	010ae500 	call	1010ae50 <__udivsi3>
1010a5ec:	8808943a 	slli	r4,r17,16
1010a5f0:	bf3fffcc 	andi	fp,r23,65535
1010a5f4:	8006d43a 	srli	r3,r16,16
1010a5f8:	e0a3383a 	mul	r17,fp,r2
1010a5fc:	100d883a 	mov	r6,r2
1010a600:	1906b03a 	or	r3,r3,r4
1010a604:	1c40042e 	bgeu	r3,r17,1010a618 <__udivdi3+0x370>
1010a608:	1dc7883a 	add	r3,r3,r23
1010a60c:	10bfffc4 	addi	r2,r2,-1
1010a610:	1dc0752e 	bgeu	r3,r23,1010a7e8 <__udivdi3+0x540>
1010a614:	100d883a 	mov	r6,r2
1010a618:	1c63c83a 	sub	r17,r3,r17
1010a61c:	900b883a 	mov	r5,r18
1010a620:	8809883a 	mov	r4,r17
1010a624:	d9800015 	stw	r6,0(sp)
1010a628:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a62c:	102d883a 	mov	r22,r2
1010a630:	8809883a 	mov	r4,r17
1010a634:	900b883a 	mov	r5,r18
1010a638:	010ae500 	call	1010ae50 <__udivsi3>
1010a63c:	b02c943a 	slli	r22,r22,16
1010a640:	e089383a 	mul	r4,fp,r2
1010a644:	843fffcc 	andi	r16,r16,65535
1010a648:	85a0b03a 	or	r16,r16,r22
1010a64c:	d9800017 	ldw	r6,0(sp)
1010a650:	8100042e 	bgeu	r16,r4,1010a664 <__udivdi3+0x3bc>
1010a654:	85e1883a 	add	r16,r16,r23
1010a658:	10ffffc4 	addi	r3,r2,-1
1010a65c:	85c05e2e 	bgeu	r16,r23,1010a7d8 <__udivdi3+0x530>
1010a660:	1805883a 	mov	r2,r3
1010a664:	300c943a 	slli	r6,r6,16
1010a668:	a17fffcc 	andi	r5,r20,65535
1010a66c:	a028d43a 	srli	r20,r20,16
1010a670:	3084b03a 	or	r2,r6,r2
1010a674:	10ffffcc 	andi	r3,r2,65535
1010a678:	100cd43a 	srli	r6,r2,16
1010a67c:	194f383a 	mul	r7,r3,r5
1010a680:	1d07383a 	mul	r3,r3,r20
1010a684:	314b383a 	mul	r5,r6,r5
1010a688:	3810d43a 	srli	r8,r7,16
1010a68c:	8121c83a 	sub	r16,r16,r4
1010a690:	1947883a 	add	r3,r3,r5
1010a694:	40c7883a 	add	r3,r8,r3
1010a698:	350d383a 	mul	r6,r6,r20
1010a69c:	1940022e 	bgeu	r3,r5,1010a6a8 <__udivdi3+0x400>
1010a6a0:	01000074 	movhi	r4,1
1010a6a4:	310d883a 	add	r6,r6,r4
1010a6a8:	1828d43a 	srli	r20,r3,16
1010a6ac:	a18d883a 	add	r6,r20,r6
1010a6b0:	81803e36 	bltu	r16,r6,1010a7ac <__udivdi3+0x504>
1010a6b4:	81803826 	beq	r16,r6,1010a798 <__udivdi3+0x4f0>
1010a6b8:	0007883a 	mov	r3,zero
1010a6bc:	003fa206 	br	1010a548 <__alt_data_end+0xfffea548>
1010a6c0:	88e2983a 	sll	r17,r17,r3
1010a6c4:	80a8d83a 	srl	r20,r16,r2
1010a6c8:	80e0983a 	sll	r16,r16,r3
1010a6cc:	882ad43a 	srli	r21,r17,16
1010a6d0:	9884d83a 	srl	r2,r19,r2
1010a6d4:	a009883a 	mov	r4,r20
1010a6d8:	a80b883a 	mov	r5,r21
1010a6dc:	142eb03a 	or	r23,r2,r16
1010a6e0:	98e4983a 	sll	r18,r19,r3
1010a6e4:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a6e8:	a009883a 	mov	r4,r20
1010a6ec:	a80b883a 	mov	r5,r21
1010a6f0:	1021883a 	mov	r16,r2
1010a6f4:	010ae500 	call	1010ae50 <__udivsi3>
1010a6f8:	1039883a 	mov	fp,r2
1010a6fc:	8d3fffcc 	andi	r20,r17,65535
1010a700:	8020943a 	slli	r16,r16,16
1010a704:	b804d43a 	srli	r2,r23,16
1010a708:	a72d383a 	mul	r22,r20,fp
1010a70c:	1404b03a 	or	r2,r2,r16
1010a710:	1580062e 	bgeu	r2,r22,1010a72c <__udivdi3+0x484>
1010a714:	1445883a 	add	r2,r2,r17
1010a718:	e0ffffc4 	addi	r3,fp,-1
1010a71c:	14403836 	bltu	r2,r17,1010a800 <__udivdi3+0x558>
1010a720:	1580372e 	bgeu	r2,r22,1010a800 <__udivdi3+0x558>
1010a724:	e73fff84 	addi	fp,fp,-2
1010a728:	1445883a 	add	r2,r2,r17
1010a72c:	15adc83a 	sub	r22,r2,r22
1010a730:	a80b883a 	mov	r5,r21
1010a734:	b009883a 	mov	r4,r22
1010a738:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a73c:	1027883a 	mov	r19,r2
1010a740:	b009883a 	mov	r4,r22
1010a744:	a80b883a 	mov	r5,r21
1010a748:	010ae500 	call	1010ae50 <__udivsi3>
1010a74c:	9826943a 	slli	r19,r19,16
1010a750:	a0a1383a 	mul	r16,r20,r2
1010a754:	b93fffcc 	andi	r4,r23,65535
1010a758:	24c8b03a 	or	r4,r4,r19
1010a75c:	2400062e 	bgeu	r4,r16,1010a778 <__udivdi3+0x4d0>
1010a760:	2449883a 	add	r4,r4,r17
1010a764:	10ffffc4 	addi	r3,r2,-1
1010a768:	24402336 	bltu	r4,r17,1010a7f8 <__udivdi3+0x550>
1010a76c:	2400222e 	bgeu	r4,r16,1010a7f8 <__udivdi3+0x550>
1010a770:	10bfff84 	addi	r2,r2,-2
1010a774:	2449883a 	add	r4,r4,r17
1010a778:	e038943a 	slli	fp,fp,16
1010a77c:	2421c83a 	sub	r16,r4,r16
1010a780:	e086b03a 	or	r3,fp,r2
1010a784:	003f4306 	br	1010a494 <__alt_data_end+0xfffea494>
1010a788:	2005883a 	mov	r2,r4
1010a78c:	003f6906 	br	1010a534 <__alt_data_end+0xfffea534>
1010a790:	1805883a 	mov	r2,r3
1010a794:	003f0f06 	br	1010a3d4 <__alt_data_end+0xfffea3d4>
1010a798:	1806943a 	slli	r3,r3,16
1010a79c:	9d66983a 	sll	r19,r19,r21
1010a7a0:	39ffffcc 	andi	r7,r7,65535
1010a7a4:	19c7883a 	add	r3,r3,r7
1010a7a8:	98ffc32e 	bgeu	r19,r3,1010a6b8 <__alt_data_end+0xfffea6b8>
1010a7ac:	10bfffc4 	addi	r2,r2,-1
1010a7b0:	003fc106 	br	1010a6b8 <__alt_data_end+0xfffea6b8>
1010a7b4:	00800604 	movi	r2,24
1010a7b8:	003f1106 	br	1010a400 <__alt_data_end+0xfffea400>
1010a7bc:	00800604 	movi	r2,24
1010a7c0:	003f2706 	br	1010a460 <__alt_data_end+0xfffea460>
1010a7c4:	00800604 	movi	r2,24
1010a7c8:	003ece06 	br	1010a304 <__alt_data_end+0xfffea304>
1010a7cc:	0007883a 	mov	r3,zero
1010a7d0:	00800044 	movi	r2,1
1010a7d4:	003f5c06 	br	1010a548 <__alt_data_end+0xfffea548>
1010a7d8:	813fa12e 	bgeu	r16,r4,1010a660 <__alt_data_end+0xfffea660>
1010a7dc:	10bfff84 	addi	r2,r2,-2
1010a7e0:	85e1883a 	add	r16,r16,r23
1010a7e4:	003f9f06 	br	1010a664 <__alt_data_end+0xfffea664>
1010a7e8:	1c7f8a2e 	bgeu	r3,r17,1010a614 <__alt_data_end+0xfffea614>
1010a7ec:	31bfff84 	addi	r6,r6,-2
1010a7f0:	1dc7883a 	add	r3,r3,r23
1010a7f4:	003f8806 	br	1010a618 <__alt_data_end+0xfffea618>
1010a7f8:	1805883a 	mov	r2,r3
1010a7fc:	003fde06 	br	1010a778 <__alt_data_end+0xfffea778>
1010a800:	1839883a 	mov	fp,r3
1010a804:	003fc906 	br	1010a72c <__alt_data_end+0xfffea72c>
1010a808:	b5bfff84 	addi	r22,r22,-2
1010a80c:	2449883a 	add	r4,r4,r17
1010a810:	003f3406 	br	1010a4e4 <__alt_data_end+0xfffea4e4>
1010a814:	b5bfff84 	addi	r22,r22,-2
1010a818:	1445883a 	add	r2,r2,r17
1010a81c:	003edb06 	br	1010a38c <__alt_data_end+0xfffea38c>

1010a820 <__umoddi3>:
1010a820:	defff404 	addi	sp,sp,-48
1010a824:	df000a15 	stw	fp,40(sp)
1010a828:	dc400315 	stw	r17,12(sp)
1010a82c:	dc000215 	stw	r16,8(sp)
1010a830:	dfc00b15 	stw	ra,44(sp)
1010a834:	ddc00915 	stw	r23,36(sp)
1010a838:	dd800815 	stw	r22,32(sp)
1010a83c:	dd400715 	stw	r21,28(sp)
1010a840:	dd000615 	stw	r20,24(sp)
1010a844:	dcc00515 	stw	r19,20(sp)
1010a848:	dc800415 	stw	r18,16(sp)
1010a84c:	2021883a 	mov	r16,r4
1010a850:	2823883a 	mov	r17,r5
1010a854:	2839883a 	mov	fp,r5
1010a858:	38003c1e 	bne	r7,zero,1010a94c <__umoddi3+0x12c>
1010a85c:	3027883a 	mov	r19,r6
1010a860:	2029883a 	mov	r20,r4
1010a864:	2980512e 	bgeu	r5,r6,1010a9ac <__umoddi3+0x18c>
1010a868:	00bfffd4 	movui	r2,65535
1010a86c:	11809a36 	bltu	r2,r6,1010aad8 <__umoddi3+0x2b8>
1010a870:	01003fc4 	movi	r4,255
1010a874:	2189803a 	cmpltu	r4,r4,r6
1010a878:	200890fa 	slli	r4,r4,3
1010a87c:	3104d83a 	srl	r2,r6,r4
1010a880:	00c40474 	movhi	r3,4113
1010a884:	18c0d504 	addi	r3,r3,852
1010a888:	1885883a 	add	r2,r3,r2
1010a88c:	10c00003 	ldbu	r3,0(r2)
1010a890:	00800804 	movi	r2,32
1010a894:	1909883a 	add	r4,r3,r4
1010a898:	1125c83a 	sub	r18,r2,r4
1010a89c:	90000526 	beq	r18,zero,1010a8b4 <__umoddi3+0x94>
1010a8a0:	8ca2983a 	sll	r17,r17,r18
1010a8a4:	8108d83a 	srl	r4,r16,r4
1010a8a8:	34a6983a 	sll	r19,r6,r18
1010a8ac:	84a8983a 	sll	r20,r16,r18
1010a8b0:	2478b03a 	or	fp,r4,r17
1010a8b4:	982ed43a 	srli	r23,r19,16
1010a8b8:	e009883a 	mov	r4,fp
1010a8bc:	9dbfffcc 	andi	r22,r19,65535
1010a8c0:	b80b883a 	mov	r5,r23
1010a8c4:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a8c8:	e009883a 	mov	r4,fp
1010a8cc:	b80b883a 	mov	r5,r23
1010a8d0:	102b883a 	mov	r21,r2
1010a8d4:	010ae500 	call	1010ae50 <__udivsi3>
1010a8d8:	a806943a 	slli	r3,r21,16
1010a8dc:	a008d43a 	srli	r4,r20,16
1010a8e0:	b085383a 	mul	r2,r22,r2
1010a8e4:	20c8b03a 	or	r4,r4,r3
1010a8e8:	2080032e 	bgeu	r4,r2,1010a8f8 <__umoddi3+0xd8>
1010a8ec:	24c9883a 	add	r4,r4,r19
1010a8f0:	24c00136 	bltu	r4,r19,1010a8f8 <__umoddi3+0xd8>
1010a8f4:	20811036 	bltu	r4,r2,1010ad38 <__umoddi3+0x518>
1010a8f8:	20abc83a 	sub	r21,r4,r2
1010a8fc:	b80b883a 	mov	r5,r23
1010a900:	a809883a 	mov	r4,r21
1010a904:	010aeb40 	call	1010aeb4 <__umodsi3>
1010a908:	1023883a 	mov	r17,r2
1010a90c:	b80b883a 	mov	r5,r23
1010a910:	a809883a 	mov	r4,r21
1010a914:	010ae500 	call	1010ae50 <__udivsi3>
1010a918:	8822943a 	slli	r17,r17,16
1010a91c:	b085383a 	mul	r2,r22,r2
1010a920:	a0ffffcc 	andi	r3,r20,65535
1010a924:	1c46b03a 	or	r3,r3,r17
1010a928:	1880042e 	bgeu	r3,r2,1010a93c <__umoddi3+0x11c>
1010a92c:	1cc7883a 	add	r3,r3,r19
1010a930:	1cc00236 	bltu	r3,r19,1010a93c <__umoddi3+0x11c>
1010a934:	1880012e 	bgeu	r3,r2,1010a93c <__umoddi3+0x11c>
1010a938:	1cc7883a 	add	r3,r3,r19
1010a93c:	1885c83a 	sub	r2,r3,r2
1010a940:	1484d83a 	srl	r2,r2,r18
1010a944:	0007883a 	mov	r3,zero
1010a948:	00004f06 	br	1010aa88 <__umoddi3+0x268>
1010a94c:	29c04c36 	bltu	r5,r7,1010aa80 <__umoddi3+0x260>
1010a950:	00bfffd4 	movui	r2,65535
1010a954:	11c0582e 	bgeu	r2,r7,1010aab8 <__umoddi3+0x298>
1010a958:	00804034 	movhi	r2,256
1010a95c:	10bfffc4 	addi	r2,r2,-1
1010a960:	11c0e736 	bltu	r2,r7,1010ad00 <__umoddi3+0x4e0>
1010a964:	01000404 	movi	r4,16
1010a968:	3904d83a 	srl	r2,r7,r4
1010a96c:	00c40474 	movhi	r3,4113
1010a970:	18c0d504 	addi	r3,r3,852
1010a974:	1885883a 	add	r2,r3,r2
1010a978:	14c00003 	ldbu	r19,0(r2)
1010a97c:	00c00804 	movi	r3,32
1010a980:	9927883a 	add	r19,r19,r4
1010a984:	1ce9c83a 	sub	r20,r3,r19
1010a988:	a000581e 	bne	r20,zero,1010aaec <__umoddi3+0x2cc>
1010a98c:	3c400136 	bltu	r7,r17,1010a994 <__umoddi3+0x174>
1010a990:	8180eb36 	bltu	r16,r6,1010ad40 <__umoddi3+0x520>
1010a994:	8185c83a 	sub	r2,r16,r6
1010a998:	89e3c83a 	sub	r17,r17,r7
1010a99c:	8089803a 	cmpltu	r4,r16,r2
1010a9a0:	8939c83a 	sub	fp,r17,r4
1010a9a4:	e007883a 	mov	r3,fp
1010a9a8:	00003706 	br	1010aa88 <__umoddi3+0x268>
1010a9ac:	3000041e 	bne	r6,zero,1010a9c0 <__umoddi3+0x1a0>
1010a9b0:	000b883a 	mov	r5,zero
1010a9b4:	01000044 	movi	r4,1
1010a9b8:	010ae500 	call	1010ae50 <__udivsi3>
1010a9bc:	1027883a 	mov	r19,r2
1010a9c0:	00bfffd4 	movui	r2,65535
1010a9c4:	14c0402e 	bgeu	r2,r19,1010aac8 <__umoddi3+0x2a8>
1010a9c8:	00804034 	movhi	r2,256
1010a9cc:	10bfffc4 	addi	r2,r2,-1
1010a9d0:	14c0cd36 	bltu	r2,r19,1010ad08 <__umoddi3+0x4e8>
1010a9d4:	00800404 	movi	r2,16
1010a9d8:	9886d83a 	srl	r3,r19,r2
1010a9dc:	01040474 	movhi	r4,4113
1010a9e0:	2100d504 	addi	r4,r4,852
1010a9e4:	20c7883a 	add	r3,r4,r3
1010a9e8:	18c00003 	ldbu	r3,0(r3)
1010a9ec:	1887883a 	add	r3,r3,r2
1010a9f0:	00800804 	movi	r2,32
1010a9f4:	10e5c83a 	sub	r18,r2,r3
1010a9f8:	9000901e 	bne	r18,zero,1010ac3c <__umoddi3+0x41c>
1010a9fc:	982cd43a 	srli	r22,r19,16
1010aa00:	8ce3c83a 	sub	r17,r17,r19
1010aa04:	9d7fffcc 	andi	r21,r19,65535
1010aa08:	b00b883a 	mov	r5,r22
1010aa0c:	8809883a 	mov	r4,r17
1010aa10:	010aeb40 	call	1010aeb4 <__umodsi3>
1010aa14:	8809883a 	mov	r4,r17
1010aa18:	b00b883a 	mov	r5,r22
1010aa1c:	1021883a 	mov	r16,r2
1010aa20:	010ae500 	call	1010ae50 <__udivsi3>
1010aa24:	8006943a 	slli	r3,r16,16
1010aa28:	a008d43a 	srli	r4,r20,16
1010aa2c:	1545383a 	mul	r2,r2,r21
1010aa30:	20c8b03a 	or	r4,r4,r3
1010aa34:	2080042e 	bgeu	r4,r2,1010aa48 <__umoddi3+0x228>
1010aa38:	24c9883a 	add	r4,r4,r19
1010aa3c:	24c00236 	bltu	r4,r19,1010aa48 <__umoddi3+0x228>
1010aa40:	2080012e 	bgeu	r4,r2,1010aa48 <__umoddi3+0x228>
1010aa44:	24c9883a 	add	r4,r4,r19
1010aa48:	20a1c83a 	sub	r16,r4,r2
1010aa4c:	b00b883a 	mov	r5,r22
1010aa50:	8009883a 	mov	r4,r16
1010aa54:	010aeb40 	call	1010aeb4 <__umodsi3>
1010aa58:	1023883a 	mov	r17,r2
1010aa5c:	b00b883a 	mov	r5,r22
1010aa60:	8009883a 	mov	r4,r16
1010aa64:	010ae500 	call	1010ae50 <__udivsi3>
1010aa68:	8822943a 	slli	r17,r17,16
1010aa6c:	1545383a 	mul	r2,r2,r21
1010aa70:	a53fffcc 	andi	r20,r20,65535
1010aa74:	a446b03a 	or	r3,r20,r17
1010aa78:	18bfb02e 	bgeu	r3,r2,1010a93c <__alt_data_end+0xfffea93c>
1010aa7c:	003fab06 	br	1010a92c <__alt_data_end+0xfffea92c>
1010aa80:	2005883a 	mov	r2,r4
1010aa84:	2807883a 	mov	r3,r5
1010aa88:	dfc00b17 	ldw	ra,44(sp)
1010aa8c:	df000a17 	ldw	fp,40(sp)
1010aa90:	ddc00917 	ldw	r23,36(sp)
1010aa94:	dd800817 	ldw	r22,32(sp)
1010aa98:	dd400717 	ldw	r21,28(sp)
1010aa9c:	dd000617 	ldw	r20,24(sp)
1010aaa0:	dcc00517 	ldw	r19,20(sp)
1010aaa4:	dc800417 	ldw	r18,16(sp)
1010aaa8:	dc400317 	ldw	r17,12(sp)
1010aaac:	dc000217 	ldw	r16,8(sp)
1010aab0:	dec00c04 	addi	sp,sp,48
1010aab4:	f800283a 	ret
1010aab8:	04c03fc4 	movi	r19,255
1010aabc:	99c9803a 	cmpltu	r4,r19,r7
1010aac0:	200890fa 	slli	r4,r4,3
1010aac4:	003fa806 	br	1010a968 <__alt_data_end+0xfffea968>
1010aac8:	00803fc4 	movi	r2,255
1010aacc:	14c5803a 	cmpltu	r2,r2,r19
1010aad0:	100490fa 	slli	r2,r2,3
1010aad4:	003fc006 	br	1010a9d8 <__alt_data_end+0xfffea9d8>
1010aad8:	00804034 	movhi	r2,256
1010aadc:	10bfffc4 	addi	r2,r2,-1
1010aae0:	11808b36 	bltu	r2,r6,1010ad10 <__umoddi3+0x4f0>
1010aae4:	01000404 	movi	r4,16
1010aae8:	003f6406 	br	1010a87c <__alt_data_end+0xfffea87c>
1010aaec:	34c4d83a 	srl	r2,r6,r19
1010aaf0:	3d0e983a 	sll	r7,r7,r20
1010aaf4:	8cf8d83a 	srl	fp,r17,r19
1010aaf8:	8d10983a 	sll	r8,r17,r20
1010aafc:	38aab03a 	or	r21,r7,r2
1010ab00:	a82cd43a 	srli	r22,r21,16
1010ab04:	84e2d83a 	srl	r17,r16,r19
1010ab08:	e009883a 	mov	r4,fp
1010ab0c:	b00b883a 	mov	r5,r22
1010ab10:	8a22b03a 	or	r17,r17,r8
1010ab14:	3524983a 	sll	r18,r6,r20
1010ab18:	010aeb40 	call	1010aeb4 <__umodsi3>
1010ab1c:	e009883a 	mov	r4,fp
1010ab20:	b00b883a 	mov	r5,r22
1010ab24:	102f883a 	mov	r23,r2
1010ab28:	010ae500 	call	1010ae50 <__udivsi3>
1010ab2c:	100d883a 	mov	r6,r2
1010ab30:	b808943a 	slli	r4,r23,16
1010ab34:	aa3fffcc 	andi	r8,r21,65535
1010ab38:	8804d43a 	srli	r2,r17,16
1010ab3c:	41af383a 	mul	r23,r8,r6
1010ab40:	8520983a 	sll	r16,r16,r20
1010ab44:	1104b03a 	or	r2,r2,r4
1010ab48:	15c0042e 	bgeu	r2,r23,1010ab5c <__umoddi3+0x33c>
1010ab4c:	1545883a 	add	r2,r2,r21
1010ab50:	30ffffc4 	addi	r3,r6,-1
1010ab54:	1540742e 	bgeu	r2,r21,1010ad28 <__umoddi3+0x508>
1010ab58:	180d883a 	mov	r6,r3
1010ab5c:	15efc83a 	sub	r23,r2,r23
1010ab60:	b00b883a 	mov	r5,r22
1010ab64:	b809883a 	mov	r4,r23
1010ab68:	d9800115 	stw	r6,4(sp)
1010ab6c:	da000015 	stw	r8,0(sp)
1010ab70:	010aeb40 	call	1010aeb4 <__umodsi3>
1010ab74:	b00b883a 	mov	r5,r22
1010ab78:	b809883a 	mov	r4,r23
1010ab7c:	1039883a 	mov	fp,r2
1010ab80:	010ae500 	call	1010ae50 <__udivsi3>
1010ab84:	da000017 	ldw	r8,0(sp)
1010ab88:	e038943a 	slli	fp,fp,16
1010ab8c:	100b883a 	mov	r5,r2
1010ab90:	4089383a 	mul	r4,r8,r2
1010ab94:	8a3fffcc 	andi	r8,r17,65535
1010ab98:	4710b03a 	or	r8,r8,fp
1010ab9c:	d9800117 	ldw	r6,4(sp)
1010aba0:	4100042e 	bgeu	r8,r4,1010abb4 <__umoddi3+0x394>
1010aba4:	4551883a 	add	r8,r8,r21
1010aba8:	10bfffc4 	addi	r2,r2,-1
1010abac:	45405a2e 	bgeu	r8,r21,1010ad18 <__umoddi3+0x4f8>
1010abb0:	100b883a 	mov	r5,r2
1010abb4:	300c943a 	slli	r6,r6,16
1010abb8:	91ffffcc 	andi	r7,r18,65535
1010abbc:	9004d43a 	srli	r2,r18,16
1010abc0:	314cb03a 	or	r6,r6,r5
1010abc4:	317fffcc 	andi	r5,r6,65535
1010abc8:	300cd43a 	srli	r6,r6,16
1010abcc:	29d3383a 	mul	r9,r5,r7
1010abd0:	288b383a 	mul	r5,r5,r2
1010abd4:	31cf383a 	mul	r7,r6,r7
1010abd8:	4806d43a 	srli	r3,r9,16
1010abdc:	4111c83a 	sub	r8,r8,r4
1010abe0:	29cb883a 	add	r5,r5,r7
1010abe4:	194b883a 	add	r5,r3,r5
1010abe8:	3085383a 	mul	r2,r6,r2
1010abec:	29c0022e 	bgeu	r5,r7,1010abf8 <__umoddi3+0x3d8>
1010abf0:	00c00074 	movhi	r3,1
1010abf4:	10c5883a 	add	r2,r2,r3
1010abf8:	2808d43a 	srli	r4,r5,16
1010abfc:	280a943a 	slli	r5,r5,16
1010ac00:	4a7fffcc 	andi	r9,r9,65535
1010ac04:	2085883a 	add	r2,r4,r2
1010ac08:	2a4b883a 	add	r5,r5,r9
1010ac0c:	40803636 	bltu	r8,r2,1010ace8 <__umoddi3+0x4c8>
1010ac10:	40804d26 	beq	r8,r2,1010ad48 <__umoddi3+0x528>
1010ac14:	4089c83a 	sub	r4,r8,r2
1010ac18:	280f883a 	mov	r7,r5
1010ac1c:	81cfc83a 	sub	r7,r16,r7
1010ac20:	81c7803a 	cmpltu	r3,r16,r7
1010ac24:	20c7c83a 	sub	r3,r4,r3
1010ac28:	1cc4983a 	sll	r2,r3,r19
1010ac2c:	3d0ed83a 	srl	r7,r7,r20
1010ac30:	1d06d83a 	srl	r3,r3,r20
1010ac34:	11c4b03a 	or	r2,r2,r7
1010ac38:	003f9306 	br	1010aa88 <__alt_data_end+0xfffeaa88>
1010ac3c:	9ca6983a 	sll	r19,r19,r18
1010ac40:	88e8d83a 	srl	r20,r17,r3
1010ac44:	80c4d83a 	srl	r2,r16,r3
1010ac48:	982cd43a 	srli	r22,r19,16
1010ac4c:	8ca2983a 	sll	r17,r17,r18
1010ac50:	a009883a 	mov	r4,r20
1010ac54:	b00b883a 	mov	r5,r22
1010ac58:	1478b03a 	or	fp,r2,r17
1010ac5c:	010aeb40 	call	1010aeb4 <__umodsi3>
1010ac60:	a009883a 	mov	r4,r20
1010ac64:	b00b883a 	mov	r5,r22
1010ac68:	1023883a 	mov	r17,r2
1010ac6c:	010ae500 	call	1010ae50 <__udivsi3>
1010ac70:	9d7fffcc 	andi	r21,r19,65535
1010ac74:	880a943a 	slli	r5,r17,16
1010ac78:	e008d43a 	srli	r4,fp,16
1010ac7c:	a885383a 	mul	r2,r21,r2
1010ac80:	84a8983a 	sll	r20,r16,r18
1010ac84:	2148b03a 	or	r4,r4,r5
1010ac88:	2080042e 	bgeu	r4,r2,1010ac9c <__umoddi3+0x47c>
1010ac8c:	24c9883a 	add	r4,r4,r19
1010ac90:	24c00236 	bltu	r4,r19,1010ac9c <__umoddi3+0x47c>
1010ac94:	2080012e 	bgeu	r4,r2,1010ac9c <__umoddi3+0x47c>
1010ac98:	24c9883a 	add	r4,r4,r19
1010ac9c:	20a3c83a 	sub	r17,r4,r2
1010aca0:	b00b883a 	mov	r5,r22
1010aca4:	8809883a 	mov	r4,r17
1010aca8:	010aeb40 	call	1010aeb4 <__umodsi3>
1010acac:	102f883a 	mov	r23,r2
1010acb0:	8809883a 	mov	r4,r17
1010acb4:	b00b883a 	mov	r5,r22
1010acb8:	010ae500 	call	1010ae50 <__udivsi3>
1010acbc:	b82e943a 	slli	r23,r23,16
1010acc0:	a885383a 	mul	r2,r21,r2
1010acc4:	e13fffcc 	andi	r4,fp,65535
1010acc8:	25c8b03a 	or	r4,r4,r23
1010accc:	2080042e 	bgeu	r4,r2,1010ace0 <__umoddi3+0x4c0>
1010acd0:	24c9883a 	add	r4,r4,r19
1010acd4:	24c00236 	bltu	r4,r19,1010ace0 <__umoddi3+0x4c0>
1010acd8:	2080012e 	bgeu	r4,r2,1010ace0 <__umoddi3+0x4c0>
1010acdc:	24c9883a 	add	r4,r4,r19
1010ace0:	20a3c83a 	sub	r17,r4,r2
1010ace4:	003f4806 	br	1010aa08 <__alt_data_end+0xfffeaa08>
1010ace8:	2c8fc83a 	sub	r7,r5,r18
1010acec:	1545c83a 	sub	r2,r2,r21
1010acf0:	29cb803a 	cmpltu	r5,r5,r7
1010acf4:	1145c83a 	sub	r2,r2,r5
1010acf8:	4089c83a 	sub	r4,r8,r2
1010acfc:	003fc706 	br	1010ac1c <__alt_data_end+0xfffeac1c>
1010ad00:	01000604 	movi	r4,24
1010ad04:	003f1806 	br	1010a968 <__alt_data_end+0xfffea968>
1010ad08:	00800604 	movi	r2,24
1010ad0c:	003f3206 	br	1010a9d8 <__alt_data_end+0xfffea9d8>
1010ad10:	01000604 	movi	r4,24
1010ad14:	003ed906 	br	1010a87c <__alt_data_end+0xfffea87c>
1010ad18:	413fa52e 	bgeu	r8,r4,1010abb0 <__alt_data_end+0xfffeabb0>
1010ad1c:	297fff84 	addi	r5,r5,-2
1010ad20:	4551883a 	add	r8,r8,r21
1010ad24:	003fa306 	br	1010abb4 <__alt_data_end+0xfffeabb4>
1010ad28:	15ff8b2e 	bgeu	r2,r23,1010ab58 <__alt_data_end+0xfffeab58>
1010ad2c:	31bfff84 	addi	r6,r6,-2
1010ad30:	1545883a 	add	r2,r2,r21
1010ad34:	003f8906 	br	1010ab5c <__alt_data_end+0xfffeab5c>
1010ad38:	24c9883a 	add	r4,r4,r19
1010ad3c:	003eee06 	br	1010a8f8 <__alt_data_end+0xfffea8f8>
1010ad40:	8005883a 	mov	r2,r16
1010ad44:	003f1706 	br	1010a9a4 <__alt_data_end+0xfffea9a4>
1010ad48:	817fe736 	bltu	r16,r5,1010ace8 <__alt_data_end+0xfffeace8>
1010ad4c:	280f883a 	mov	r7,r5
1010ad50:	0009883a 	mov	r4,zero
1010ad54:	003fb106 	br	1010ac1c <__alt_data_end+0xfffeac1c>

1010ad58 <__divsi3>:
1010ad58:	20001b16 	blt	r4,zero,1010adc8 <__divsi3+0x70>
1010ad5c:	000f883a 	mov	r7,zero
1010ad60:	28001616 	blt	r5,zero,1010adbc <__divsi3+0x64>
1010ad64:	200d883a 	mov	r6,r4
1010ad68:	29001a2e 	bgeu	r5,r4,1010add4 <__divsi3+0x7c>
1010ad6c:	00800804 	movi	r2,32
1010ad70:	00c00044 	movi	r3,1
1010ad74:	00000106 	br	1010ad7c <__divsi3+0x24>
1010ad78:	10000d26 	beq	r2,zero,1010adb0 <__divsi3+0x58>
1010ad7c:	294b883a 	add	r5,r5,r5
1010ad80:	10bfffc4 	addi	r2,r2,-1
1010ad84:	18c7883a 	add	r3,r3,r3
1010ad88:	293ffb36 	bltu	r5,r4,1010ad78 <__alt_data_end+0xfffead78>
1010ad8c:	0005883a 	mov	r2,zero
1010ad90:	18000726 	beq	r3,zero,1010adb0 <__divsi3+0x58>
1010ad94:	0005883a 	mov	r2,zero
1010ad98:	31400236 	bltu	r6,r5,1010ada4 <__divsi3+0x4c>
1010ad9c:	314dc83a 	sub	r6,r6,r5
1010ada0:	10c4b03a 	or	r2,r2,r3
1010ada4:	1806d07a 	srli	r3,r3,1
1010ada8:	280ad07a 	srli	r5,r5,1
1010adac:	183ffa1e 	bne	r3,zero,1010ad98 <__alt_data_end+0xfffead98>
1010adb0:	38000126 	beq	r7,zero,1010adb8 <__divsi3+0x60>
1010adb4:	0085c83a 	sub	r2,zero,r2
1010adb8:	f800283a 	ret
1010adbc:	014bc83a 	sub	r5,zero,r5
1010adc0:	39c0005c 	xori	r7,r7,1
1010adc4:	003fe706 	br	1010ad64 <__alt_data_end+0xfffead64>
1010adc8:	0109c83a 	sub	r4,zero,r4
1010adcc:	01c00044 	movi	r7,1
1010add0:	003fe306 	br	1010ad60 <__alt_data_end+0xfffead60>
1010add4:	00c00044 	movi	r3,1
1010add8:	003fee06 	br	1010ad94 <__alt_data_end+0xfffead94>

1010addc <__modsi3>:
1010addc:	20001716 	blt	r4,zero,1010ae3c <__modsi3+0x60>
1010ade0:	000f883a 	mov	r7,zero
1010ade4:	2005883a 	mov	r2,r4
1010ade8:	28001216 	blt	r5,zero,1010ae34 <__modsi3+0x58>
1010adec:	2900162e 	bgeu	r5,r4,1010ae48 <__modsi3+0x6c>
1010adf0:	01800804 	movi	r6,32
1010adf4:	00c00044 	movi	r3,1
1010adf8:	00000106 	br	1010ae00 <__modsi3+0x24>
1010adfc:	30000a26 	beq	r6,zero,1010ae28 <__modsi3+0x4c>
1010ae00:	294b883a 	add	r5,r5,r5
1010ae04:	31bfffc4 	addi	r6,r6,-1
1010ae08:	18c7883a 	add	r3,r3,r3
1010ae0c:	293ffb36 	bltu	r5,r4,1010adfc <__alt_data_end+0xfffeadfc>
1010ae10:	18000526 	beq	r3,zero,1010ae28 <__modsi3+0x4c>
1010ae14:	1806d07a 	srli	r3,r3,1
1010ae18:	11400136 	bltu	r2,r5,1010ae20 <__modsi3+0x44>
1010ae1c:	1145c83a 	sub	r2,r2,r5
1010ae20:	280ad07a 	srli	r5,r5,1
1010ae24:	183ffb1e 	bne	r3,zero,1010ae14 <__alt_data_end+0xfffeae14>
1010ae28:	38000126 	beq	r7,zero,1010ae30 <__modsi3+0x54>
1010ae2c:	0085c83a 	sub	r2,zero,r2
1010ae30:	f800283a 	ret
1010ae34:	014bc83a 	sub	r5,zero,r5
1010ae38:	003fec06 	br	1010adec <__alt_data_end+0xfffeadec>
1010ae3c:	0109c83a 	sub	r4,zero,r4
1010ae40:	01c00044 	movi	r7,1
1010ae44:	003fe706 	br	1010ade4 <__alt_data_end+0xfffeade4>
1010ae48:	00c00044 	movi	r3,1
1010ae4c:	003ff106 	br	1010ae14 <__alt_data_end+0xfffeae14>

1010ae50 <__udivsi3>:
1010ae50:	200d883a 	mov	r6,r4
1010ae54:	2900152e 	bgeu	r5,r4,1010aeac <__udivsi3+0x5c>
1010ae58:	28001416 	blt	r5,zero,1010aeac <__udivsi3+0x5c>
1010ae5c:	00800804 	movi	r2,32
1010ae60:	00c00044 	movi	r3,1
1010ae64:	00000206 	br	1010ae70 <__udivsi3+0x20>
1010ae68:	10000e26 	beq	r2,zero,1010aea4 <__udivsi3+0x54>
1010ae6c:	28000516 	blt	r5,zero,1010ae84 <__udivsi3+0x34>
1010ae70:	294b883a 	add	r5,r5,r5
1010ae74:	10bfffc4 	addi	r2,r2,-1
1010ae78:	18c7883a 	add	r3,r3,r3
1010ae7c:	293ffa36 	bltu	r5,r4,1010ae68 <__alt_data_end+0xfffeae68>
1010ae80:	18000826 	beq	r3,zero,1010aea4 <__udivsi3+0x54>
1010ae84:	0005883a 	mov	r2,zero
1010ae88:	31400236 	bltu	r6,r5,1010ae94 <__udivsi3+0x44>
1010ae8c:	314dc83a 	sub	r6,r6,r5
1010ae90:	10c4b03a 	or	r2,r2,r3
1010ae94:	1806d07a 	srli	r3,r3,1
1010ae98:	280ad07a 	srli	r5,r5,1
1010ae9c:	183ffa1e 	bne	r3,zero,1010ae88 <__alt_data_end+0xfffeae88>
1010aea0:	f800283a 	ret
1010aea4:	0005883a 	mov	r2,zero
1010aea8:	f800283a 	ret
1010aeac:	00c00044 	movi	r3,1
1010aeb0:	003ff406 	br	1010ae84 <__alt_data_end+0xfffeae84>

1010aeb4 <__umodsi3>:
1010aeb4:	2005883a 	mov	r2,r4
1010aeb8:	2900122e 	bgeu	r5,r4,1010af04 <__umodsi3+0x50>
1010aebc:	28001116 	blt	r5,zero,1010af04 <__umodsi3+0x50>
1010aec0:	01800804 	movi	r6,32
1010aec4:	00c00044 	movi	r3,1
1010aec8:	00000206 	br	1010aed4 <__umodsi3+0x20>
1010aecc:	30000c26 	beq	r6,zero,1010af00 <__umodsi3+0x4c>
1010aed0:	28000516 	blt	r5,zero,1010aee8 <__umodsi3+0x34>
1010aed4:	294b883a 	add	r5,r5,r5
1010aed8:	31bfffc4 	addi	r6,r6,-1
1010aedc:	18c7883a 	add	r3,r3,r3
1010aee0:	293ffa36 	bltu	r5,r4,1010aecc <__alt_data_end+0xfffeaecc>
1010aee4:	18000626 	beq	r3,zero,1010af00 <__umodsi3+0x4c>
1010aee8:	1806d07a 	srli	r3,r3,1
1010aeec:	11400136 	bltu	r2,r5,1010aef4 <__umodsi3+0x40>
1010aef0:	1145c83a 	sub	r2,r2,r5
1010aef4:	280ad07a 	srli	r5,r5,1
1010aef8:	183ffb1e 	bne	r3,zero,1010aee8 <__alt_data_end+0xfffeaee8>
1010aefc:	f800283a 	ret
1010af00:	f800283a 	ret
1010af04:	00c00044 	movi	r3,1
1010af08:	003ff706 	br	1010aee8 <__alt_data_end+0xfffeaee8>

1010af0c <__adddf3>:
1010af0c:	02c00434 	movhi	r11,16
1010af10:	5affffc4 	addi	r11,r11,-1
1010af14:	2806d7fa 	srli	r3,r5,31
1010af18:	2ad4703a 	and	r10,r5,r11
1010af1c:	3ad2703a 	and	r9,r7,r11
1010af20:	3804d53a 	srli	r2,r7,20
1010af24:	3018d77a 	srli	r12,r6,29
1010af28:	280ad53a 	srli	r5,r5,20
1010af2c:	501490fa 	slli	r10,r10,3
1010af30:	2010d77a 	srli	r8,r4,29
1010af34:	481290fa 	slli	r9,r9,3
1010af38:	380ed7fa 	srli	r7,r7,31
1010af3c:	defffb04 	addi	sp,sp,-20
1010af40:	dc800215 	stw	r18,8(sp)
1010af44:	dc400115 	stw	r17,4(sp)
1010af48:	dc000015 	stw	r16,0(sp)
1010af4c:	dfc00415 	stw	ra,16(sp)
1010af50:	dcc00315 	stw	r19,12(sp)
1010af54:	1c803fcc 	andi	r18,r3,255
1010af58:	2c01ffcc 	andi	r16,r5,2047
1010af5c:	5210b03a 	or	r8,r10,r8
1010af60:	202290fa 	slli	r17,r4,3
1010af64:	1081ffcc 	andi	r2,r2,2047
1010af68:	4b12b03a 	or	r9,r9,r12
1010af6c:	300c90fa 	slli	r6,r6,3
1010af70:	91c07526 	beq	r18,r7,1010b148 <__adddf3+0x23c>
1010af74:	8087c83a 	sub	r3,r16,r2
1010af78:	00c0ab0e 	bge	zero,r3,1010b228 <__adddf3+0x31c>
1010af7c:	10002a1e 	bne	r2,zero,1010b028 <__adddf3+0x11c>
1010af80:	4984b03a 	or	r2,r9,r6
1010af84:	1000961e 	bne	r2,zero,1010b1e0 <__adddf3+0x2d4>
1010af88:	888001cc 	andi	r2,r17,7
1010af8c:	10000726 	beq	r2,zero,1010afac <__adddf3+0xa0>
1010af90:	888003cc 	andi	r2,r17,15
1010af94:	00c00104 	movi	r3,4
1010af98:	10c00426 	beq	r2,r3,1010afac <__adddf3+0xa0>
1010af9c:	88c7883a 	add	r3,r17,r3
1010afa0:	1c63803a 	cmpltu	r17,r3,r17
1010afa4:	4451883a 	add	r8,r8,r17
1010afa8:	1823883a 	mov	r17,r3
1010afac:	4080202c 	andhi	r2,r8,128
1010afb0:	10005926 	beq	r2,zero,1010b118 <__adddf3+0x20c>
1010afb4:	84000044 	addi	r16,r16,1
1010afb8:	0081ffc4 	movi	r2,2047
1010afbc:	8080ba26 	beq	r16,r2,1010b2a8 <__adddf3+0x39c>
1010afc0:	00bfe034 	movhi	r2,65408
1010afc4:	10bfffc4 	addi	r2,r2,-1
1010afc8:	4090703a 	and	r8,r8,r2
1010afcc:	4004977a 	slli	r2,r8,29
1010afd0:	4010927a 	slli	r8,r8,9
1010afd4:	8822d0fa 	srli	r17,r17,3
1010afd8:	8401ffcc 	andi	r16,r16,2047
1010afdc:	4010d33a 	srli	r8,r8,12
1010afe0:	9007883a 	mov	r3,r18
1010afe4:	1444b03a 	or	r2,r2,r17
1010afe8:	8401ffcc 	andi	r16,r16,2047
1010afec:	8020953a 	slli	r16,r16,20
1010aff0:	18c03fcc 	andi	r3,r3,255
1010aff4:	01000434 	movhi	r4,16
1010aff8:	213fffc4 	addi	r4,r4,-1
1010affc:	180697fa 	slli	r3,r3,31
1010b000:	4110703a 	and	r8,r8,r4
1010b004:	4410b03a 	or	r8,r8,r16
1010b008:	40c6b03a 	or	r3,r8,r3
1010b00c:	dfc00417 	ldw	ra,16(sp)
1010b010:	dcc00317 	ldw	r19,12(sp)
1010b014:	dc800217 	ldw	r18,8(sp)
1010b018:	dc400117 	ldw	r17,4(sp)
1010b01c:	dc000017 	ldw	r16,0(sp)
1010b020:	dec00504 	addi	sp,sp,20
1010b024:	f800283a 	ret
1010b028:	0081ffc4 	movi	r2,2047
1010b02c:	80bfd626 	beq	r16,r2,1010af88 <__alt_data_end+0xfffeaf88>
1010b030:	4a402034 	orhi	r9,r9,128
1010b034:	00800e04 	movi	r2,56
1010b038:	10c09f16 	blt	r2,r3,1010b2b8 <__adddf3+0x3ac>
1010b03c:	008007c4 	movi	r2,31
1010b040:	10c0c216 	blt	r2,r3,1010b34c <__adddf3+0x440>
1010b044:	00800804 	movi	r2,32
1010b048:	10c5c83a 	sub	r2,r2,r3
1010b04c:	488a983a 	sll	r5,r9,r2
1010b050:	30c8d83a 	srl	r4,r6,r3
1010b054:	3084983a 	sll	r2,r6,r2
1010b058:	48c6d83a 	srl	r3,r9,r3
1010b05c:	290cb03a 	or	r6,r5,r4
1010b060:	1004c03a 	cmpne	r2,r2,zero
1010b064:	308cb03a 	or	r6,r6,r2
1010b068:	898dc83a 	sub	r6,r17,r6
1010b06c:	89a3803a 	cmpltu	r17,r17,r6
1010b070:	40d1c83a 	sub	r8,r8,r3
1010b074:	4451c83a 	sub	r8,r8,r17
1010b078:	3023883a 	mov	r17,r6
1010b07c:	4080202c 	andhi	r2,r8,128
1010b080:	10002326 	beq	r2,zero,1010b110 <__adddf3+0x204>
1010b084:	04c02034 	movhi	r19,128
1010b088:	9cffffc4 	addi	r19,r19,-1
1010b08c:	44e6703a 	and	r19,r8,r19
1010b090:	98007626 	beq	r19,zero,1010b26c <__adddf3+0x360>
1010b094:	9809883a 	mov	r4,r19
1010b098:	010d5100 	call	1010d510 <__clzsi2>
1010b09c:	10fffe04 	addi	r3,r2,-8
1010b0a0:	010007c4 	movi	r4,31
1010b0a4:	20c07716 	blt	r4,r3,1010b284 <__adddf3+0x378>
1010b0a8:	00800804 	movi	r2,32
1010b0ac:	10c5c83a 	sub	r2,r2,r3
1010b0b0:	8884d83a 	srl	r2,r17,r2
1010b0b4:	98d0983a 	sll	r8,r19,r3
1010b0b8:	88e2983a 	sll	r17,r17,r3
1010b0bc:	1204b03a 	or	r2,r2,r8
1010b0c0:	1c007416 	blt	r3,r16,1010b294 <__adddf3+0x388>
1010b0c4:	1c21c83a 	sub	r16,r3,r16
1010b0c8:	82000044 	addi	r8,r16,1
1010b0cc:	00c007c4 	movi	r3,31
1010b0d0:	1a009116 	blt	r3,r8,1010b318 <__adddf3+0x40c>
1010b0d4:	00c00804 	movi	r3,32
1010b0d8:	1a07c83a 	sub	r3,r3,r8
1010b0dc:	8a08d83a 	srl	r4,r17,r8
1010b0e0:	88e2983a 	sll	r17,r17,r3
1010b0e4:	10c6983a 	sll	r3,r2,r3
1010b0e8:	1210d83a 	srl	r8,r2,r8
1010b0ec:	8804c03a 	cmpne	r2,r17,zero
1010b0f0:	1906b03a 	or	r3,r3,r4
1010b0f4:	18a2b03a 	or	r17,r3,r2
1010b0f8:	0021883a 	mov	r16,zero
1010b0fc:	003fa206 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b100:	1890b03a 	or	r8,r3,r2
1010b104:	40017d26 	beq	r8,zero,1010b6fc <__adddf3+0x7f0>
1010b108:	1011883a 	mov	r8,r2
1010b10c:	1823883a 	mov	r17,r3
1010b110:	888001cc 	andi	r2,r17,7
1010b114:	103f9e1e 	bne	r2,zero,1010af90 <__alt_data_end+0xfffeaf90>
1010b118:	4004977a 	slli	r2,r8,29
1010b11c:	8822d0fa 	srli	r17,r17,3
1010b120:	4010d0fa 	srli	r8,r8,3
1010b124:	9007883a 	mov	r3,r18
1010b128:	1444b03a 	or	r2,r2,r17
1010b12c:	0101ffc4 	movi	r4,2047
1010b130:	81002426 	beq	r16,r4,1010b1c4 <__adddf3+0x2b8>
1010b134:	8120703a 	and	r16,r16,r4
1010b138:	01000434 	movhi	r4,16
1010b13c:	213fffc4 	addi	r4,r4,-1
1010b140:	4110703a 	and	r8,r8,r4
1010b144:	003fa806 	br	1010afe8 <__alt_data_end+0xfffeafe8>
1010b148:	8089c83a 	sub	r4,r16,r2
1010b14c:	01005e0e 	bge	zero,r4,1010b2c8 <__adddf3+0x3bc>
1010b150:	10002b26 	beq	r2,zero,1010b200 <__adddf3+0x2f4>
1010b154:	0081ffc4 	movi	r2,2047
1010b158:	80bf8b26 	beq	r16,r2,1010af88 <__alt_data_end+0xfffeaf88>
1010b15c:	4a402034 	orhi	r9,r9,128
1010b160:	00800e04 	movi	r2,56
1010b164:	1100a40e 	bge	r2,r4,1010b3f8 <__adddf3+0x4ec>
1010b168:	498cb03a 	or	r6,r9,r6
1010b16c:	300ac03a 	cmpne	r5,r6,zero
1010b170:	0013883a 	mov	r9,zero
1010b174:	2c4b883a 	add	r5,r5,r17
1010b178:	2c63803a 	cmpltu	r17,r5,r17
1010b17c:	4a11883a 	add	r8,r9,r8
1010b180:	8a11883a 	add	r8,r17,r8
1010b184:	2823883a 	mov	r17,r5
1010b188:	4080202c 	andhi	r2,r8,128
1010b18c:	103fe026 	beq	r2,zero,1010b110 <__alt_data_end+0xfffeb110>
1010b190:	84000044 	addi	r16,r16,1
1010b194:	0081ffc4 	movi	r2,2047
1010b198:	8080d226 	beq	r16,r2,1010b4e4 <__adddf3+0x5d8>
1010b19c:	00bfe034 	movhi	r2,65408
1010b1a0:	10bfffc4 	addi	r2,r2,-1
1010b1a4:	4090703a 	and	r8,r8,r2
1010b1a8:	880ad07a 	srli	r5,r17,1
1010b1ac:	400897fa 	slli	r4,r8,31
1010b1b0:	88c0004c 	andi	r3,r17,1
1010b1b4:	28e2b03a 	or	r17,r5,r3
1010b1b8:	4010d07a 	srli	r8,r8,1
1010b1bc:	2462b03a 	or	r17,r4,r17
1010b1c0:	003f7106 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b1c4:	4088b03a 	or	r4,r8,r2
1010b1c8:	20014526 	beq	r4,zero,1010b6e0 <__adddf3+0x7d4>
1010b1cc:	01000434 	movhi	r4,16
1010b1d0:	42000234 	orhi	r8,r8,8
1010b1d4:	213fffc4 	addi	r4,r4,-1
1010b1d8:	4110703a 	and	r8,r8,r4
1010b1dc:	003f8206 	br	1010afe8 <__alt_data_end+0xfffeafe8>
1010b1e0:	18ffffc4 	addi	r3,r3,-1
1010b1e4:	1800491e 	bne	r3,zero,1010b30c <__adddf3+0x400>
1010b1e8:	898bc83a 	sub	r5,r17,r6
1010b1ec:	8963803a 	cmpltu	r17,r17,r5
1010b1f0:	4251c83a 	sub	r8,r8,r9
1010b1f4:	4451c83a 	sub	r8,r8,r17
1010b1f8:	2823883a 	mov	r17,r5
1010b1fc:	003f9f06 	br	1010b07c <__alt_data_end+0xfffeb07c>
1010b200:	4984b03a 	or	r2,r9,r6
1010b204:	103f6026 	beq	r2,zero,1010af88 <__alt_data_end+0xfffeaf88>
1010b208:	213fffc4 	addi	r4,r4,-1
1010b20c:	2000931e 	bne	r4,zero,1010b45c <__adddf3+0x550>
1010b210:	898d883a 	add	r6,r17,r6
1010b214:	3463803a 	cmpltu	r17,r6,r17
1010b218:	4251883a 	add	r8,r8,r9
1010b21c:	8a11883a 	add	r8,r17,r8
1010b220:	3023883a 	mov	r17,r6
1010b224:	003fd806 	br	1010b188 <__alt_data_end+0xfffeb188>
1010b228:	1800541e 	bne	r3,zero,1010b37c <__adddf3+0x470>
1010b22c:	80800044 	addi	r2,r16,1
1010b230:	1081ffcc 	andi	r2,r2,2047
1010b234:	00c00044 	movi	r3,1
1010b238:	1880a00e 	bge	r3,r2,1010b4bc <__adddf3+0x5b0>
1010b23c:	8989c83a 	sub	r4,r17,r6
1010b240:	8905803a 	cmpltu	r2,r17,r4
1010b244:	4267c83a 	sub	r19,r8,r9
1010b248:	98a7c83a 	sub	r19,r19,r2
1010b24c:	9880202c 	andhi	r2,r19,128
1010b250:	10006326 	beq	r2,zero,1010b3e0 <__adddf3+0x4d4>
1010b254:	3463c83a 	sub	r17,r6,r17
1010b258:	4a07c83a 	sub	r3,r9,r8
1010b25c:	344d803a 	cmpltu	r6,r6,r17
1010b260:	19a7c83a 	sub	r19,r3,r6
1010b264:	3825883a 	mov	r18,r7
1010b268:	983f8a1e 	bne	r19,zero,1010b094 <__alt_data_end+0xfffeb094>
1010b26c:	8809883a 	mov	r4,r17
1010b270:	010d5100 	call	1010d510 <__clzsi2>
1010b274:	10800804 	addi	r2,r2,32
1010b278:	10fffe04 	addi	r3,r2,-8
1010b27c:	010007c4 	movi	r4,31
1010b280:	20ff890e 	bge	r4,r3,1010b0a8 <__alt_data_end+0xfffeb0a8>
1010b284:	10bff604 	addi	r2,r2,-40
1010b288:	8884983a 	sll	r2,r17,r2
1010b28c:	0023883a 	mov	r17,zero
1010b290:	1c3f8c0e 	bge	r3,r16,1010b0c4 <__alt_data_end+0xfffeb0c4>
1010b294:	023fe034 	movhi	r8,65408
1010b298:	423fffc4 	addi	r8,r8,-1
1010b29c:	80e1c83a 	sub	r16,r16,r3
1010b2a0:	1210703a 	and	r8,r2,r8
1010b2a4:	003f3806 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b2a8:	9007883a 	mov	r3,r18
1010b2ac:	0011883a 	mov	r8,zero
1010b2b0:	0005883a 	mov	r2,zero
1010b2b4:	003f4c06 	br	1010afe8 <__alt_data_end+0xfffeafe8>
1010b2b8:	498cb03a 	or	r6,r9,r6
1010b2bc:	300cc03a 	cmpne	r6,r6,zero
1010b2c0:	0007883a 	mov	r3,zero
1010b2c4:	003f6806 	br	1010b068 <__alt_data_end+0xfffeb068>
1010b2c8:	20009c1e 	bne	r4,zero,1010b53c <__adddf3+0x630>
1010b2cc:	80800044 	addi	r2,r16,1
1010b2d0:	1141ffcc 	andi	r5,r2,2047
1010b2d4:	01000044 	movi	r4,1
1010b2d8:	2140670e 	bge	r4,r5,1010b478 <__adddf3+0x56c>
1010b2dc:	0101ffc4 	movi	r4,2047
1010b2e0:	11007f26 	beq	r2,r4,1010b4e0 <__adddf3+0x5d4>
1010b2e4:	898d883a 	add	r6,r17,r6
1010b2e8:	4247883a 	add	r3,r8,r9
1010b2ec:	3451803a 	cmpltu	r8,r6,r17
1010b2f0:	40d1883a 	add	r8,r8,r3
1010b2f4:	402297fa 	slli	r17,r8,31
1010b2f8:	300cd07a 	srli	r6,r6,1
1010b2fc:	4010d07a 	srli	r8,r8,1
1010b300:	1021883a 	mov	r16,r2
1010b304:	89a2b03a 	or	r17,r17,r6
1010b308:	003f1f06 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b30c:	0081ffc4 	movi	r2,2047
1010b310:	80bf481e 	bne	r16,r2,1010b034 <__alt_data_end+0xfffeb034>
1010b314:	003f1c06 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b318:	843ff844 	addi	r16,r16,-31
1010b31c:	01000804 	movi	r4,32
1010b320:	1406d83a 	srl	r3,r2,r16
1010b324:	41005026 	beq	r8,r4,1010b468 <__adddf3+0x55c>
1010b328:	01001004 	movi	r4,64
1010b32c:	2211c83a 	sub	r8,r4,r8
1010b330:	1204983a 	sll	r2,r2,r8
1010b334:	88a2b03a 	or	r17,r17,r2
1010b338:	8822c03a 	cmpne	r17,r17,zero
1010b33c:	1c62b03a 	or	r17,r3,r17
1010b340:	0011883a 	mov	r8,zero
1010b344:	0021883a 	mov	r16,zero
1010b348:	003f7106 	br	1010b110 <__alt_data_end+0xfffeb110>
1010b34c:	193ff804 	addi	r4,r3,-32
1010b350:	00800804 	movi	r2,32
1010b354:	4908d83a 	srl	r4,r9,r4
1010b358:	18804526 	beq	r3,r2,1010b470 <__adddf3+0x564>
1010b35c:	00801004 	movi	r2,64
1010b360:	10c5c83a 	sub	r2,r2,r3
1010b364:	4886983a 	sll	r3,r9,r2
1010b368:	198cb03a 	or	r6,r3,r6
1010b36c:	300cc03a 	cmpne	r6,r6,zero
1010b370:	218cb03a 	or	r6,r4,r6
1010b374:	0007883a 	mov	r3,zero
1010b378:	003f3b06 	br	1010b068 <__alt_data_end+0xfffeb068>
1010b37c:	80002a26 	beq	r16,zero,1010b428 <__adddf3+0x51c>
1010b380:	0101ffc4 	movi	r4,2047
1010b384:	11006826 	beq	r2,r4,1010b528 <__adddf3+0x61c>
1010b388:	00c7c83a 	sub	r3,zero,r3
1010b38c:	42002034 	orhi	r8,r8,128
1010b390:	01000e04 	movi	r4,56
1010b394:	20c07c16 	blt	r4,r3,1010b588 <__adddf3+0x67c>
1010b398:	010007c4 	movi	r4,31
1010b39c:	20c0da16 	blt	r4,r3,1010b708 <__adddf3+0x7fc>
1010b3a0:	01000804 	movi	r4,32
1010b3a4:	20c9c83a 	sub	r4,r4,r3
1010b3a8:	4114983a 	sll	r10,r8,r4
1010b3ac:	88cad83a 	srl	r5,r17,r3
1010b3b0:	8908983a 	sll	r4,r17,r4
1010b3b4:	40c6d83a 	srl	r3,r8,r3
1010b3b8:	5162b03a 	or	r17,r10,r5
1010b3bc:	2008c03a 	cmpne	r4,r4,zero
1010b3c0:	8922b03a 	or	r17,r17,r4
1010b3c4:	3463c83a 	sub	r17,r6,r17
1010b3c8:	48c7c83a 	sub	r3,r9,r3
1010b3cc:	344d803a 	cmpltu	r6,r6,r17
1010b3d0:	1991c83a 	sub	r8,r3,r6
1010b3d4:	1021883a 	mov	r16,r2
1010b3d8:	3825883a 	mov	r18,r7
1010b3dc:	003f2706 	br	1010b07c <__alt_data_end+0xfffeb07c>
1010b3e0:	24d0b03a 	or	r8,r4,r19
1010b3e4:	40001b1e 	bne	r8,zero,1010b454 <__adddf3+0x548>
1010b3e8:	0005883a 	mov	r2,zero
1010b3ec:	0007883a 	mov	r3,zero
1010b3f0:	0021883a 	mov	r16,zero
1010b3f4:	003f4d06 	br	1010b12c <__alt_data_end+0xfffeb12c>
1010b3f8:	008007c4 	movi	r2,31
1010b3fc:	11003c16 	blt	r2,r4,1010b4f0 <__adddf3+0x5e4>
1010b400:	00800804 	movi	r2,32
1010b404:	1105c83a 	sub	r2,r2,r4
1010b408:	488e983a 	sll	r7,r9,r2
1010b40c:	310ad83a 	srl	r5,r6,r4
1010b410:	3084983a 	sll	r2,r6,r2
1010b414:	4912d83a 	srl	r9,r9,r4
1010b418:	394ab03a 	or	r5,r7,r5
1010b41c:	1004c03a 	cmpne	r2,r2,zero
1010b420:	288ab03a 	or	r5,r5,r2
1010b424:	003f5306 	br	1010b174 <__alt_data_end+0xfffeb174>
1010b428:	4448b03a 	or	r4,r8,r17
1010b42c:	20003e26 	beq	r4,zero,1010b528 <__adddf3+0x61c>
1010b430:	00c6303a 	nor	r3,zero,r3
1010b434:	18003a1e 	bne	r3,zero,1010b520 <__adddf3+0x614>
1010b438:	3463c83a 	sub	r17,r6,r17
1010b43c:	4a07c83a 	sub	r3,r9,r8
1010b440:	344d803a 	cmpltu	r6,r6,r17
1010b444:	1991c83a 	sub	r8,r3,r6
1010b448:	1021883a 	mov	r16,r2
1010b44c:	3825883a 	mov	r18,r7
1010b450:	003f0a06 	br	1010b07c <__alt_data_end+0xfffeb07c>
1010b454:	2023883a 	mov	r17,r4
1010b458:	003f0d06 	br	1010b090 <__alt_data_end+0xfffeb090>
1010b45c:	0081ffc4 	movi	r2,2047
1010b460:	80bf3f1e 	bne	r16,r2,1010b160 <__alt_data_end+0xfffeb160>
1010b464:	003ec806 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b468:	0005883a 	mov	r2,zero
1010b46c:	003fb106 	br	1010b334 <__alt_data_end+0xfffeb334>
1010b470:	0007883a 	mov	r3,zero
1010b474:	003fbc06 	br	1010b368 <__alt_data_end+0xfffeb368>
1010b478:	4444b03a 	or	r2,r8,r17
1010b47c:	8000871e 	bne	r16,zero,1010b69c <__adddf3+0x790>
1010b480:	1000ba26 	beq	r2,zero,1010b76c <__adddf3+0x860>
1010b484:	4984b03a 	or	r2,r9,r6
1010b488:	103ebf26 	beq	r2,zero,1010af88 <__alt_data_end+0xfffeaf88>
1010b48c:	8985883a 	add	r2,r17,r6
1010b490:	4247883a 	add	r3,r8,r9
1010b494:	1451803a 	cmpltu	r8,r2,r17
1010b498:	40d1883a 	add	r8,r8,r3
1010b49c:	40c0202c 	andhi	r3,r8,128
1010b4a0:	1023883a 	mov	r17,r2
1010b4a4:	183f1a26 	beq	r3,zero,1010b110 <__alt_data_end+0xfffeb110>
1010b4a8:	00bfe034 	movhi	r2,65408
1010b4ac:	10bfffc4 	addi	r2,r2,-1
1010b4b0:	2021883a 	mov	r16,r4
1010b4b4:	4090703a 	and	r8,r8,r2
1010b4b8:	003eb306 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b4bc:	4444b03a 	or	r2,r8,r17
1010b4c0:	8000291e 	bne	r16,zero,1010b568 <__adddf3+0x65c>
1010b4c4:	10004b1e 	bne	r2,zero,1010b5f4 <__adddf3+0x6e8>
1010b4c8:	4990b03a 	or	r8,r9,r6
1010b4cc:	40008b26 	beq	r8,zero,1010b6fc <__adddf3+0x7f0>
1010b4d0:	4811883a 	mov	r8,r9
1010b4d4:	3023883a 	mov	r17,r6
1010b4d8:	3825883a 	mov	r18,r7
1010b4dc:	003eaa06 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b4e0:	1021883a 	mov	r16,r2
1010b4e4:	0011883a 	mov	r8,zero
1010b4e8:	0005883a 	mov	r2,zero
1010b4ec:	003f0f06 	br	1010b12c <__alt_data_end+0xfffeb12c>
1010b4f0:	217ff804 	addi	r5,r4,-32
1010b4f4:	00800804 	movi	r2,32
1010b4f8:	494ad83a 	srl	r5,r9,r5
1010b4fc:	20807d26 	beq	r4,r2,1010b6f4 <__adddf3+0x7e8>
1010b500:	00801004 	movi	r2,64
1010b504:	1109c83a 	sub	r4,r2,r4
1010b508:	4912983a 	sll	r9,r9,r4
1010b50c:	498cb03a 	or	r6,r9,r6
1010b510:	300cc03a 	cmpne	r6,r6,zero
1010b514:	298ab03a 	or	r5,r5,r6
1010b518:	0013883a 	mov	r9,zero
1010b51c:	003f1506 	br	1010b174 <__alt_data_end+0xfffeb174>
1010b520:	0101ffc4 	movi	r4,2047
1010b524:	113f9a1e 	bne	r2,r4,1010b390 <__alt_data_end+0xfffeb390>
1010b528:	4811883a 	mov	r8,r9
1010b52c:	3023883a 	mov	r17,r6
1010b530:	1021883a 	mov	r16,r2
1010b534:	3825883a 	mov	r18,r7
1010b538:	003e9306 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b53c:	8000161e 	bne	r16,zero,1010b598 <__adddf3+0x68c>
1010b540:	444ab03a 	or	r5,r8,r17
1010b544:	28005126 	beq	r5,zero,1010b68c <__adddf3+0x780>
1010b548:	0108303a 	nor	r4,zero,r4
1010b54c:	20004d1e 	bne	r4,zero,1010b684 <__adddf3+0x778>
1010b550:	89a3883a 	add	r17,r17,r6
1010b554:	4253883a 	add	r9,r8,r9
1010b558:	898d803a 	cmpltu	r6,r17,r6
1010b55c:	3251883a 	add	r8,r6,r9
1010b560:	1021883a 	mov	r16,r2
1010b564:	003f0806 	br	1010b188 <__alt_data_end+0xfffeb188>
1010b568:	1000301e 	bne	r2,zero,1010b62c <__adddf3+0x720>
1010b56c:	4984b03a 	or	r2,r9,r6
1010b570:	10007126 	beq	r2,zero,1010b738 <__adddf3+0x82c>
1010b574:	4811883a 	mov	r8,r9
1010b578:	3023883a 	mov	r17,r6
1010b57c:	3825883a 	mov	r18,r7
1010b580:	0401ffc4 	movi	r16,2047
1010b584:	003e8006 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b588:	4462b03a 	or	r17,r8,r17
1010b58c:	8822c03a 	cmpne	r17,r17,zero
1010b590:	0007883a 	mov	r3,zero
1010b594:	003f8b06 	br	1010b3c4 <__alt_data_end+0xfffeb3c4>
1010b598:	0141ffc4 	movi	r5,2047
1010b59c:	11403b26 	beq	r2,r5,1010b68c <__adddf3+0x780>
1010b5a0:	0109c83a 	sub	r4,zero,r4
1010b5a4:	42002034 	orhi	r8,r8,128
1010b5a8:	01400e04 	movi	r5,56
1010b5ac:	29006716 	blt	r5,r4,1010b74c <__adddf3+0x840>
1010b5b0:	014007c4 	movi	r5,31
1010b5b4:	29007016 	blt	r5,r4,1010b778 <__adddf3+0x86c>
1010b5b8:	01400804 	movi	r5,32
1010b5bc:	290bc83a 	sub	r5,r5,r4
1010b5c0:	4154983a 	sll	r10,r8,r5
1010b5c4:	890ed83a 	srl	r7,r17,r4
1010b5c8:	894a983a 	sll	r5,r17,r5
1010b5cc:	4108d83a 	srl	r4,r8,r4
1010b5d0:	51e2b03a 	or	r17,r10,r7
1010b5d4:	280ac03a 	cmpne	r5,r5,zero
1010b5d8:	8962b03a 	or	r17,r17,r5
1010b5dc:	89a3883a 	add	r17,r17,r6
1010b5e0:	2253883a 	add	r9,r4,r9
1010b5e4:	898d803a 	cmpltu	r6,r17,r6
1010b5e8:	3251883a 	add	r8,r6,r9
1010b5ec:	1021883a 	mov	r16,r2
1010b5f0:	003ee506 	br	1010b188 <__alt_data_end+0xfffeb188>
1010b5f4:	4984b03a 	or	r2,r9,r6
1010b5f8:	103e6326 	beq	r2,zero,1010af88 <__alt_data_end+0xfffeaf88>
1010b5fc:	8987c83a 	sub	r3,r17,r6
1010b600:	88c9803a 	cmpltu	r4,r17,r3
1010b604:	4245c83a 	sub	r2,r8,r9
1010b608:	1105c83a 	sub	r2,r2,r4
1010b60c:	1100202c 	andhi	r4,r2,128
1010b610:	203ebb26 	beq	r4,zero,1010b100 <__alt_data_end+0xfffeb100>
1010b614:	3463c83a 	sub	r17,r6,r17
1010b618:	4a07c83a 	sub	r3,r9,r8
1010b61c:	344d803a 	cmpltu	r6,r6,r17
1010b620:	1991c83a 	sub	r8,r3,r6
1010b624:	3825883a 	mov	r18,r7
1010b628:	003e5706 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b62c:	4984b03a 	or	r2,r9,r6
1010b630:	10002e26 	beq	r2,zero,1010b6ec <__adddf3+0x7e0>
1010b634:	4004d0fa 	srli	r2,r8,3
1010b638:	8822d0fa 	srli	r17,r17,3
1010b63c:	4010977a 	slli	r8,r8,29
1010b640:	10c0022c 	andhi	r3,r2,8
1010b644:	4462b03a 	or	r17,r8,r17
1010b648:	18000826 	beq	r3,zero,1010b66c <__adddf3+0x760>
1010b64c:	4808d0fa 	srli	r4,r9,3
1010b650:	20c0022c 	andhi	r3,r4,8
1010b654:	1800051e 	bne	r3,zero,1010b66c <__adddf3+0x760>
1010b658:	300cd0fa 	srli	r6,r6,3
1010b65c:	4806977a 	slli	r3,r9,29
1010b660:	2005883a 	mov	r2,r4
1010b664:	3825883a 	mov	r18,r7
1010b668:	19a2b03a 	or	r17,r3,r6
1010b66c:	8810d77a 	srli	r8,r17,29
1010b670:	100490fa 	slli	r2,r2,3
1010b674:	882290fa 	slli	r17,r17,3
1010b678:	0401ffc4 	movi	r16,2047
1010b67c:	4090b03a 	or	r8,r8,r2
1010b680:	003e4106 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b684:	0141ffc4 	movi	r5,2047
1010b688:	117fc71e 	bne	r2,r5,1010b5a8 <__alt_data_end+0xfffeb5a8>
1010b68c:	4811883a 	mov	r8,r9
1010b690:	3023883a 	mov	r17,r6
1010b694:	1021883a 	mov	r16,r2
1010b698:	003e3b06 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b69c:	10002f26 	beq	r2,zero,1010b75c <__adddf3+0x850>
1010b6a0:	4984b03a 	or	r2,r9,r6
1010b6a4:	10001126 	beq	r2,zero,1010b6ec <__adddf3+0x7e0>
1010b6a8:	4004d0fa 	srli	r2,r8,3
1010b6ac:	8822d0fa 	srli	r17,r17,3
1010b6b0:	4010977a 	slli	r8,r8,29
1010b6b4:	10c0022c 	andhi	r3,r2,8
1010b6b8:	4462b03a 	or	r17,r8,r17
1010b6bc:	183feb26 	beq	r3,zero,1010b66c <__alt_data_end+0xfffeb66c>
1010b6c0:	4808d0fa 	srli	r4,r9,3
1010b6c4:	20c0022c 	andhi	r3,r4,8
1010b6c8:	183fe81e 	bne	r3,zero,1010b66c <__alt_data_end+0xfffeb66c>
1010b6cc:	300cd0fa 	srli	r6,r6,3
1010b6d0:	4806977a 	slli	r3,r9,29
1010b6d4:	2005883a 	mov	r2,r4
1010b6d8:	19a2b03a 	or	r17,r3,r6
1010b6dc:	003fe306 	br	1010b66c <__alt_data_end+0xfffeb66c>
1010b6e0:	0011883a 	mov	r8,zero
1010b6e4:	0005883a 	mov	r2,zero
1010b6e8:	003e3f06 	br	1010afe8 <__alt_data_end+0xfffeafe8>
1010b6ec:	0401ffc4 	movi	r16,2047
1010b6f0:	003e2506 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b6f4:	0013883a 	mov	r9,zero
1010b6f8:	003f8406 	br	1010b50c <__alt_data_end+0xfffeb50c>
1010b6fc:	0005883a 	mov	r2,zero
1010b700:	0007883a 	mov	r3,zero
1010b704:	003e8906 	br	1010b12c <__alt_data_end+0xfffeb12c>
1010b708:	197ff804 	addi	r5,r3,-32
1010b70c:	01000804 	movi	r4,32
1010b710:	414ad83a 	srl	r5,r8,r5
1010b714:	19002426 	beq	r3,r4,1010b7a8 <__adddf3+0x89c>
1010b718:	01001004 	movi	r4,64
1010b71c:	20c7c83a 	sub	r3,r4,r3
1010b720:	40c6983a 	sll	r3,r8,r3
1010b724:	1c46b03a 	or	r3,r3,r17
1010b728:	1806c03a 	cmpne	r3,r3,zero
1010b72c:	28e2b03a 	or	r17,r5,r3
1010b730:	0007883a 	mov	r3,zero
1010b734:	003f2306 	br	1010b3c4 <__alt_data_end+0xfffeb3c4>
1010b738:	0007883a 	mov	r3,zero
1010b73c:	5811883a 	mov	r8,r11
1010b740:	00bfffc4 	movi	r2,-1
1010b744:	0401ffc4 	movi	r16,2047
1010b748:	003e7806 	br	1010b12c <__alt_data_end+0xfffeb12c>
1010b74c:	4462b03a 	or	r17,r8,r17
1010b750:	8822c03a 	cmpne	r17,r17,zero
1010b754:	0009883a 	mov	r4,zero
1010b758:	003fa006 	br	1010b5dc <__alt_data_end+0xfffeb5dc>
1010b75c:	4811883a 	mov	r8,r9
1010b760:	3023883a 	mov	r17,r6
1010b764:	0401ffc4 	movi	r16,2047
1010b768:	003e0706 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b76c:	4811883a 	mov	r8,r9
1010b770:	3023883a 	mov	r17,r6
1010b774:	003e0406 	br	1010af88 <__alt_data_end+0xfffeaf88>
1010b778:	21fff804 	addi	r7,r4,-32
1010b77c:	01400804 	movi	r5,32
1010b780:	41ced83a 	srl	r7,r8,r7
1010b784:	21400a26 	beq	r4,r5,1010b7b0 <__adddf3+0x8a4>
1010b788:	01401004 	movi	r5,64
1010b78c:	2909c83a 	sub	r4,r5,r4
1010b790:	4108983a 	sll	r4,r8,r4
1010b794:	2448b03a 	or	r4,r4,r17
1010b798:	2008c03a 	cmpne	r4,r4,zero
1010b79c:	3922b03a 	or	r17,r7,r4
1010b7a0:	0009883a 	mov	r4,zero
1010b7a4:	003f8d06 	br	1010b5dc <__alt_data_end+0xfffeb5dc>
1010b7a8:	0007883a 	mov	r3,zero
1010b7ac:	003fdd06 	br	1010b724 <__alt_data_end+0xfffeb724>
1010b7b0:	0009883a 	mov	r4,zero
1010b7b4:	003ff706 	br	1010b794 <__alt_data_end+0xfffeb794>

1010b7b8 <__divdf3>:
1010b7b8:	defff204 	addi	sp,sp,-56
1010b7bc:	dd400915 	stw	r21,36(sp)
1010b7c0:	282ad53a 	srli	r21,r5,20
1010b7c4:	dd000815 	stw	r20,32(sp)
1010b7c8:	2828d7fa 	srli	r20,r5,31
1010b7cc:	dc000415 	stw	r16,16(sp)
1010b7d0:	04000434 	movhi	r16,16
1010b7d4:	df000c15 	stw	fp,48(sp)
1010b7d8:	843fffc4 	addi	r16,r16,-1
1010b7dc:	dfc00d15 	stw	ra,52(sp)
1010b7e0:	ddc00b15 	stw	r23,44(sp)
1010b7e4:	dd800a15 	stw	r22,40(sp)
1010b7e8:	dcc00715 	stw	r19,28(sp)
1010b7ec:	dc800615 	stw	r18,24(sp)
1010b7f0:	dc400515 	stw	r17,20(sp)
1010b7f4:	ad41ffcc 	andi	r21,r21,2047
1010b7f8:	2c20703a 	and	r16,r5,r16
1010b7fc:	a7003fcc 	andi	fp,r20,255
1010b800:	a8006126 	beq	r21,zero,1010b988 <__divdf3+0x1d0>
1010b804:	0081ffc4 	movi	r2,2047
1010b808:	2025883a 	mov	r18,r4
1010b80c:	a8803726 	beq	r21,r2,1010b8ec <__divdf3+0x134>
1010b810:	80800434 	orhi	r2,r16,16
1010b814:	100490fa 	slli	r2,r2,3
1010b818:	2020d77a 	srli	r16,r4,29
1010b81c:	202490fa 	slli	r18,r4,3
1010b820:	ad7f0044 	addi	r21,r21,-1023
1010b824:	80a0b03a 	or	r16,r16,r2
1010b828:	0027883a 	mov	r19,zero
1010b82c:	0013883a 	mov	r9,zero
1010b830:	3804d53a 	srli	r2,r7,20
1010b834:	382cd7fa 	srli	r22,r7,31
1010b838:	04400434 	movhi	r17,16
1010b83c:	8c7fffc4 	addi	r17,r17,-1
1010b840:	1081ffcc 	andi	r2,r2,2047
1010b844:	3011883a 	mov	r8,r6
1010b848:	3c62703a 	and	r17,r7,r17
1010b84c:	b5c03fcc 	andi	r23,r22,255
1010b850:	10006c26 	beq	r2,zero,1010ba04 <__divdf3+0x24c>
1010b854:	00c1ffc4 	movi	r3,2047
1010b858:	10c06426 	beq	r2,r3,1010b9ec <__divdf3+0x234>
1010b85c:	88c00434 	orhi	r3,r17,16
1010b860:	180690fa 	slli	r3,r3,3
1010b864:	3022d77a 	srli	r17,r6,29
1010b868:	301090fa 	slli	r8,r6,3
1010b86c:	10bf0044 	addi	r2,r2,-1023
1010b870:	88e2b03a 	or	r17,r17,r3
1010b874:	000f883a 	mov	r7,zero
1010b878:	a58cf03a 	xor	r6,r20,r22
1010b87c:	3cc8b03a 	or	r4,r7,r19
1010b880:	a8abc83a 	sub	r21,r21,r2
1010b884:	008003c4 	movi	r2,15
1010b888:	3007883a 	mov	r3,r6
1010b88c:	34c03fcc 	andi	r19,r6,255
1010b890:	11009036 	bltu	r2,r4,1010bad4 <__divdf3+0x31c>
1010b894:	200890ba 	slli	r4,r4,2
1010b898:	00840474 	movhi	r2,4113
1010b89c:	10ae2b04 	addi	r2,r2,-18260
1010b8a0:	2089883a 	add	r4,r4,r2
1010b8a4:	20800017 	ldw	r2,0(r4)
1010b8a8:	1000683a 	jmp	r2
1010b8ac:	1010bad4 	ori	zero,r2,17131
1010b8b0:	1010b924 	muli	zero,r2,17124
1010b8b4:	1010bac4 	addi	zero,r2,17131
1010b8b8:	1010b918 	cmpnei	zero,r2,17124
1010b8bc:	1010bac4 	addi	zero,r2,17131
1010b8c0:	1010ba98 	cmpnei	zero,r2,17130
1010b8c4:	1010bac4 	addi	zero,r2,17131
1010b8c8:	1010b918 	cmpnei	zero,r2,17124
1010b8cc:	1010b924 	muli	zero,r2,17124
1010b8d0:	1010b924 	muli	zero,r2,17124
1010b8d4:	1010ba98 	cmpnei	zero,r2,17130
1010b8d8:	1010b918 	cmpnei	zero,r2,17124
1010b8dc:	1010b908 	cmpgei	zero,r2,17124
1010b8e0:	1010b908 	cmpgei	zero,r2,17124
1010b8e4:	1010b908 	cmpgei	zero,r2,17124
1010b8e8:	1010bdb8 	rdprs	zero,r2,17142
1010b8ec:	2404b03a 	or	r2,r4,r16
1010b8f0:	1000661e 	bne	r2,zero,1010ba8c <__divdf3+0x2d4>
1010b8f4:	04c00204 	movi	r19,8
1010b8f8:	0021883a 	mov	r16,zero
1010b8fc:	0025883a 	mov	r18,zero
1010b900:	02400084 	movi	r9,2
1010b904:	003fca06 	br	1010b830 <__alt_data_end+0xfffeb830>
1010b908:	8023883a 	mov	r17,r16
1010b90c:	9011883a 	mov	r8,r18
1010b910:	e02f883a 	mov	r23,fp
1010b914:	480f883a 	mov	r7,r9
1010b918:	00800084 	movi	r2,2
1010b91c:	3881311e 	bne	r7,r2,1010bde4 <__divdf3+0x62c>
1010b920:	b827883a 	mov	r19,r23
1010b924:	98c0004c 	andi	r3,r19,1
1010b928:	0081ffc4 	movi	r2,2047
1010b92c:	000b883a 	mov	r5,zero
1010b930:	0025883a 	mov	r18,zero
1010b934:	1004953a 	slli	r2,r2,20
1010b938:	18c03fcc 	andi	r3,r3,255
1010b93c:	04400434 	movhi	r17,16
1010b940:	8c7fffc4 	addi	r17,r17,-1
1010b944:	180697fa 	slli	r3,r3,31
1010b948:	2c4a703a 	and	r5,r5,r17
1010b94c:	288ab03a 	or	r5,r5,r2
1010b950:	28c6b03a 	or	r3,r5,r3
1010b954:	9005883a 	mov	r2,r18
1010b958:	dfc00d17 	ldw	ra,52(sp)
1010b95c:	df000c17 	ldw	fp,48(sp)
1010b960:	ddc00b17 	ldw	r23,44(sp)
1010b964:	dd800a17 	ldw	r22,40(sp)
1010b968:	dd400917 	ldw	r21,36(sp)
1010b96c:	dd000817 	ldw	r20,32(sp)
1010b970:	dcc00717 	ldw	r19,28(sp)
1010b974:	dc800617 	ldw	r18,24(sp)
1010b978:	dc400517 	ldw	r17,20(sp)
1010b97c:	dc000417 	ldw	r16,16(sp)
1010b980:	dec00e04 	addi	sp,sp,56
1010b984:	f800283a 	ret
1010b988:	2404b03a 	or	r2,r4,r16
1010b98c:	2027883a 	mov	r19,r4
1010b990:	10003926 	beq	r2,zero,1010ba78 <__divdf3+0x2c0>
1010b994:	80012e26 	beq	r16,zero,1010be50 <__divdf3+0x698>
1010b998:	8009883a 	mov	r4,r16
1010b99c:	d9800315 	stw	r6,12(sp)
1010b9a0:	d9c00215 	stw	r7,8(sp)
1010b9a4:	010d5100 	call	1010d510 <__clzsi2>
1010b9a8:	d9800317 	ldw	r6,12(sp)
1010b9ac:	d9c00217 	ldw	r7,8(sp)
1010b9b0:	113ffd44 	addi	r4,r2,-11
1010b9b4:	00c00704 	movi	r3,28
1010b9b8:	19012116 	blt	r3,r4,1010be40 <__divdf3+0x688>
1010b9bc:	00c00744 	movi	r3,29
1010b9c0:	147ffe04 	addi	r17,r2,-8
1010b9c4:	1907c83a 	sub	r3,r3,r4
1010b9c8:	8460983a 	sll	r16,r16,r17
1010b9cc:	98c6d83a 	srl	r3,r19,r3
1010b9d0:	9c64983a 	sll	r18,r19,r17
1010b9d4:	1c20b03a 	or	r16,r3,r16
1010b9d8:	1080fcc4 	addi	r2,r2,1011
1010b9dc:	00abc83a 	sub	r21,zero,r2
1010b9e0:	0027883a 	mov	r19,zero
1010b9e4:	0013883a 	mov	r9,zero
1010b9e8:	003f9106 	br	1010b830 <__alt_data_end+0xfffeb830>
1010b9ec:	3446b03a 	or	r3,r6,r17
1010b9f0:	18001f1e 	bne	r3,zero,1010ba70 <__divdf3+0x2b8>
1010b9f4:	0023883a 	mov	r17,zero
1010b9f8:	0011883a 	mov	r8,zero
1010b9fc:	01c00084 	movi	r7,2
1010ba00:	003f9d06 	br	1010b878 <__alt_data_end+0xfffeb878>
1010ba04:	3446b03a 	or	r3,r6,r17
1010ba08:	18001526 	beq	r3,zero,1010ba60 <__divdf3+0x2a8>
1010ba0c:	88011b26 	beq	r17,zero,1010be7c <__divdf3+0x6c4>
1010ba10:	8809883a 	mov	r4,r17
1010ba14:	d9800315 	stw	r6,12(sp)
1010ba18:	da400115 	stw	r9,4(sp)
1010ba1c:	010d5100 	call	1010d510 <__clzsi2>
1010ba20:	d9800317 	ldw	r6,12(sp)
1010ba24:	da400117 	ldw	r9,4(sp)
1010ba28:	113ffd44 	addi	r4,r2,-11
1010ba2c:	00c00704 	movi	r3,28
1010ba30:	19010e16 	blt	r3,r4,1010be6c <__divdf3+0x6b4>
1010ba34:	00c00744 	movi	r3,29
1010ba38:	123ffe04 	addi	r8,r2,-8
1010ba3c:	1907c83a 	sub	r3,r3,r4
1010ba40:	8a22983a 	sll	r17,r17,r8
1010ba44:	30c6d83a 	srl	r3,r6,r3
1010ba48:	3210983a 	sll	r8,r6,r8
1010ba4c:	1c62b03a 	or	r17,r3,r17
1010ba50:	1080fcc4 	addi	r2,r2,1011
1010ba54:	0085c83a 	sub	r2,zero,r2
1010ba58:	000f883a 	mov	r7,zero
1010ba5c:	003f8606 	br	1010b878 <__alt_data_end+0xfffeb878>
1010ba60:	0023883a 	mov	r17,zero
1010ba64:	0011883a 	mov	r8,zero
1010ba68:	01c00044 	movi	r7,1
1010ba6c:	003f8206 	br	1010b878 <__alt_data_end+0xfffeb878>
1010ba70:	01c000c4 	movi	r7,3
1010ba74:	003f8006 	br	1010b878 <__alt_data_end+0xfffeb878>
1010ba78:	04c00104 	movi	r19,4
1010ba7c:	0021883a 	mov	r16,zero
1010ba80:	0025883a 	mov	r18,zero
1010ba84:	02400044 	movi	r9,1
1010ba88:	003f6906 	br	1010b830 <__alt_data_end+0xfffeb830>
1010ba8c:	04c00304 	movi	r19,12
1010ba90:	024000c4 	movi	r9,3
1010ba94:	003f6606 	br	1010b830 <__alt_data_end+0xfffeb830>
1010ba98:	01400434 	movhi	r5,16
1010ba9c:	0007883a 	mov	r3,zero
1010baa0:	297fffc4 	addi	r5,r5,-1
1010baa4:	04bfffc4 	movi	r18,-1
1010baa8:	0081ffc4 	movi	r2,2047
1010baac:	003fa106 	br	1010b934 <__alt_data_end+0xfffeb934>
1010bab0:	00c00044 	movi	r3,1
1010bab4:	1887c83a 	sub	r3,r3,r2
1010bab8:	01000e04 	movi	r4,56
1010babc:	20c1210e 	bge	r4,r3,1010bf44 <__divdf3+0x78c>
1010bac0:	98c0004c 	andi	r3,r19,1
1010bac4:	0005883a 	mov	r2,zero
1010bac8:	000b883a 	mov	r5,zero
1010bacc:	0025883a 	mov	r18,zero
1010bad0:	003f9806 	br	1010b934 <__alt_data_end+0xfffeb934>
1010bad4:	8c00fd36 	bltu	r17,r16,1010becc <__divdf3+0x714>
1010bad8:	8440fb26 	beq	r16,r17,1010bec8 <__divdf3+0x710>
1010badc:	8007883a 	mov	r3,r16
1010bae0:	ad7fffc4 	addi	r21,r21,-1
1010bae4:	0021883a 	mov	r16,zero
1010bae8:	4004d63a 	srli	r2,r8,24
1010baec:	8822923a 	slli	r17,r17,8
1010baf0:	1809883a 	mov	r4,r3
1010baf4:	402c923a 	slli	r22,r8,8
1010baf8:	88b8b03a 	or	fp,r17,r2
1010bafc:	e028d43a 	srli	r20,fp,16
1010bb00:	d8c00015 	stw	r3,0(sp)
1010bb04:	e5ffffcc 	andi	r23,fp,65535
1010bb08:	a00b883a 	mov	r5,r20
1010bb0c:	010ae500 	call	1010ae50 <__udivsi3>
1010bb10:	d8c00017 	ldw	r3,0(sp)
1010bb14:	a00b883a 	mov	r5,r20
1010bb18:	d8800315 	stw	r2,12(sp)
1010bb1c:	1809883a 	mov	r4,r3
1010bb20:	010aeb40 	call	1010aeb4 <__umodsi3>
1010bb24:	d9800317 	ldw	r6,12(sp)
1010bb28:	1006943a 	slli	r3,r2,16
1010bb2c:	9004d43a 	srli	r2,r18,16
1010bb30:	b9a3383a 	mul	r17,r23,r6
1010bb34:	10c4b03a 	or	r2,r2,r3
1010bb38:	1440062e 	bgeu	r2,r17,1010bb54 <__divdf3+0x39c>
1010bb3c:	1705883a 	add	r2,r2,fp
1010bb40:	30ffffc4 	addi	r3,r6,-1
1010bb44:	1700ee36 	bltu	r2,fp,1010bf00 <__divdf3+0x748>
1010bb48:	1440ed2e 	bgeu	r2,r17,1010bf00 <__divdf3+0x748>
1010bb4c:	31bfff84 	addi	r6,r6,-2
1010bb50:	1705883a 	add	r2,r2,fp
1010bb54:	1463c83a 	sub	r17,r2,r17
1010bb58:	a00b883a 	mov	r5,r20
1010bb5c:	8809883a 	mov	r4,r17
1010bb60:	d9800315 	stw	r6,12(sp)
1010bb64:	010ae500 	call	1010ae50 <__udivsi3>
1010bb68:	a00b883a 	mov	r5,r20
1010bb6c:	8809883a 	mov	r4,r17
1010bb70:	d8800215 	stw	r2,8(sp)
1010bb74:	010aeb40 	call	1010aeb4 <__umodsi3>
1010bb78:	d9c00217 	ldw	r7,8(sp)
1010bb7c:	1004943a 	slli	r2,r2,16
1010bb80:	94bfffcc 	andi	r18,r18,65535
1010bb84:	b9d1383a 	mul	r8,r23,r7
1010bb88:	90a4b03a 	or	r18,r18,r2
1010bb8c:	d9800317 	ldw	r6,12(sp)
1010bb90:	9200062e 	bgeu	r18,r8,1010bbac <__divdf3+0x3f4>
1010bb94:	9725883a 	add	r18,r18,fp
1010bb98:	38bfffc4 	addi	r2,r7,-1
1010bb9c:	9700d636 	bltu	r18,fp,1010bef8 <__divdf3+0x740>
1010bba0:	9200d52e 	bgeu	r18,r8,1010bef8 <__divdf3+0x740>
1010bba4:	39ffff84 	addi	r7,r7,-2
1010bba8:	9725883a 	add	r18,r18,fp
1010bbac:	3004943a 	slli	r2,r6,16
1010bbb0:	b012d43a 	srli	r9,r22,16
1010bbb4:	b1bfffcc 	andi	r6,r22,65535
1010bbb8:	11e2b03a 	or	r17,r2,r7
1010bbbc:	8806d43a 	srli	r3,r17,16
1010bbc0:	893fffcc 	andi	r4,r17,65535
1010bbc4:	218b383a 	mul	r5,r4,r6
1010bbc8:	30c5383a 	mul	r2,r6,r3
1010bbcc:	2249383a 	mul	r4,r4,r9
1010bbd0:	280ed43a 	srli	r7,r5,16
1010bbd4:	9225c83a 	sub	r18,r18,r8
1010bbd8:	2089883a 	add	r4,r4,r2
1010bbdc:	3909883a 	add	r4,r7,r4
1010bbe0:	1a47383a 	mul	r3,r3,r9
1010bbe4:	2080022e 	bgeu	r4,r2,1010bbf0 <__divdf3+0x438>
1010bbe8:	00800074 	movhi	r2,1
1010bbec:	1887883a 	add	r3,r3,r2
1010bbf0:	2004d43a 	srli	r2,r4,16
1010bbf4:	2008943a 	slli	r4,r4,16
1010bbf8:	297fffcc 	andi	r5,r5,65535
1010bbfc:	10c7883a 	add	r3,r2,r3
1010bc00:	2149883a 	add	r4,r4,r5
1010bc04:	90c0a536 	bltu	r18,r3,1010be9c <__divdf3+0x6e4>
1010bc08:	90c0bf26 	beq	r18,r3,1010bf08 <__divdf3+0x750>
1010bc0c:	90c7c83a 	sub	r3,r18,r3
1010bc10:	810fc83a 	sub	r7,r16,r4
1010bc14:	81e5803a 	cmpltu	r18,r16,r7
1010bc18:	1ca5c83a 	sub	r18,r3,r18
1010bc1c:	e480c126 	beq	fp,r18,1010bf24 <__divdf3+0x76c>
1010bc20:	a00b883a 	mov	r5,r20
1010bc24:	9009883a 	mov	r4,r18
1010bc28:	d9800315 	stw	r6,12(sp)
1010bc2c:	d9c00215 	stw	r7,8(sp)
1010bc30:	da400115 	stw	r9,4(sp)
1010bc34:	010ae500 	call	1010ae50 <__udivsi3>
1010bc38:	a00b883a 	mov	r5,r20
1010bc3c:	9009883a 	mov	r4,r18
1010bc40:	d8800015 	stw	r2,0(sp)
1010bc44:	010aeb40 	call	1010aeb4 <__umodsi3>
1010bc48:	d9c00217 	ldw	r7,8(sp)
1010bc4c:	da000017 	ldw	r8,0(sp)
1010bc50:	1006943a 	slli	r3,r2,16
1010bc54:	3804d43a 	srli	r2,r7,16
1010bc58:	ba21383a 	mul	r16,r23,r8
1010bc5c:	d9800317 	ldw	r6,12(sp)
1010bc60:	10c4b03a 	or	r2,r2,r3
1010bc64:	da400117 	ldw	r9,4(sp)
1010bc68:	1400062e 	bgeu	r2,r16,1010bc84 <__divdf3+0x4cc>
1010bc6c:	1705883a 	add	r2,r2,fp
1010bc70:	40ffffc4 	addi	r3,r8,-1
1010bc74:	1700ad36 	bltu	r2,fp,1010bf2c <__divdf3+0x774>
1010bc78:	1400ac2e 	bgeu	r2,r16,1010bf2c <__divdf3+0x774>
1010bc7c:	423fff84 	addi	r8,r8,-2
1010bc80:	1705883a 	add	r2,r2,fp
1010bc84:	1421c83a 	sub	r16,r2,r16
1010bc88:	a00b883a 	mov	r5,r20
1010bc8c:	8009883a 	mov	r4,r16
1010bc90:	d9800315 	stw	r6,12(sp)
1010bc94:	d9c00215 	stw	r7,8(sp)
1010bc98:	da000015 	stw	r8,0(sp)
1010bc9c:	da400115 	stw	r9,4(sp)
1010bca0:	010ae500 	call	1010ae50 <__udivsi3>
1010bca4:	8009883a 	mov	r4,r16
1010bca8:	a00b883a 	mov	r5,r20
1010bcac:	1025883a 	mov	r18,r2
1010bcb0:	010aeb40 	call	1010aeb4 <__umodsi3>
1010bcb4:	d9c00217 	ldw	r7,8(sp)
1010bcb8:	1004943a 	slli	r2,r2,16
1010bcbc:	bcaf383a 	mul	r23,r23,r18
1010bcc0:	393fffcc 	andi	r4,r7,65535
1010bcc4:	2088b03a 	or	r4,r4,r2
1010bcc8:	d9800317 	ldw	r6,12(sp)
1010bccc:	da000017 	ldw	r8,0(sp)
1010bcd0:	da400117 	ldw	r9,4(sp)
1010bcd4:	25c0062e 	bgeu	r4,r23,1010bcf0 <__divdf3+0x538>
1010bcd8:	2709883a 	add	r4,r4,fp
1010bcdc:	90bfffc4 	addi	r2,r18,-1
1010bce0:	27009436 	bltu	r4,fp,1010bf34 <__divdf3+0x77c>
1010bce4:	25c0932e 	bgeu	r4,r23,1010bf34 <__divdf3+0x77c>
1010bce8:	94bfff84 	addi	r18,r18,-2
1010bcec:	2709883a 	add	r4,r4,fp
1010bcf0:	4004943a 	slli	r2,r8,16
1010bcf4:	25efc83a 	sub	r23,r4,r23
1010bcf8:	1490b03a 	or	r8,r2,r18
1010bcfc:	4008d43a 	srli	r4,r8,16
1010bd00:	40ffffcc 	andi	r3,r8,65535
1010bd04:	30c5383a 	mul	r2,r6,r3
1010bd08:	1a47383a 	mul	r3,r3,r9
1010bd0c:	310d383a 	mul	r6,r6,r4
1010bd10:	100ad43a 	srli	r5,r2,16
1010bd14:	4913383a 	mul	r9,r9,r4
1010bd18:	1987883a 	add	r3,r3,r6
1010bd1c:	28c7883a 	add	r3,r5,r3
1010bd20:	1980022e 	bgeu	r3,r6,1010bd2c <__divdf3+0x574>
1010bd24:	01000074 	movhi	r4,1
1010bd28:	4913883a 	add	r9,r9,r4
1010bd2c:	1808d43a 	srli	r4,r3,16
1010bd30:	1806943a 	slli	r3,r3,16
1010bd34:	10bfffcc 	andi	r2,r2,65535
1010bd38:	2253883a 	add	r9,r4,r9
1010bd3c:	1887883a 	add	r3,r3,r2
1010bd40:	ba403836 	bltu	r23,r9,1010be24 <__divdf3+0x66c>
1010bd44:	ba403626 	beq	r23,r9,1010be20 <__divdf3+0x668>
1010bd48:	42000054 	ori	r8,r8,1
1010bd4c:	a880ffc4 	addi	r2,r21,1023
1010bd50:	00bf570e 	bge	zero,r2,1010bab0 <__alt_data_end+0xfffebab0>
1010bd54:	40c001cc 	andi	r3,r8,7
1010bd58:	18000726 	beq	r3,zero,1010bd78 <__divdf3+0x5c0>
1010bd5c:	40c003cc 	andi	r3,r8,15
1010bd60:	01000104 	movi	r4,4
1010bd64:	19000426 	beq	r3,r4,1010bd78 <__divdf3+0x5c0>
1010bd68:	4107883a 	add	r3,r8,r4
1010bd6c:	1a11803a 	cmpltu	r8,r3,r8
1010bd70:	8a23883a 	add	r17,r17,r8
1010bd74:	1811883a 	mov	r8,r3
1010bd78:	88c0402c 	andhi	r3,r17,256
1010bd7c:	18000426 	beq	r3,zero,1010bd90 <__divdf3+0x5d8>
1010bd80:	00ffc034 	movhi	r3,65280
1010bd84:	18ffffc4 	addi	r3,r3,-1
1010bd88:	a8810004 	addi	r2,r21,1024
1010bd8c:	88e2703a 	and	r17,r17,r3
1010bd90:	00c1ff84 	movi	r3,2046
1010bd94:	18bee316 	blt	r3,r2,1010b924 <__alt_data_end+0xfffeb924>
1010bd98:	8824977a 	slli	r18,r17,29
1010bd9c:	4010d0fa 	srli	r8,r8,3
1010bda0:	8822927a 	slli	r17,r17,9
1010bda4:	1081ffcc 	andi	r2,r2,2047
1010bda8:	9224b03a 	or	r18,r18,r8
1010bdac:	880ad33a 	srli	r5,r17,12
1010bdb0:	98c0004c 	andi	r3,r19,1
1010bdb4:	003edf06 	br	1010b934 <__alt_data_end+0xfffeb934>
1010bdb8:	8080022c 	andhi	r2,r16,8
1010bdbc:	10001226 	beq	r2,zero,1010be08 <__divdf3+0x650>
1010bdc0:	8880022c 	andhi	r2,r17,8
1010bdc4:	1000101e 	bne	r2,zero,1010be08 <__divdf3+0x650>
1010bdc8:	00800434 	movhi	r2,16
1010bdcc:	89400234 	orhi	r5,r17,8
1010bdd0:	10bfffc4 	addi	r2,r2,-1
1010bdd4:	b007883a 	mov	r3,r22
1010bdd8:	288a703a 	and	r5,r5,r2
1010bddc:	4025883a 	mov	r18,r8
1010bde0:	003f3106 	br	1010baa8 <__alt_data_end+0xfffebaa8>
1010bde4:	008000c4 	movi	r2,3
1010bde8:	3880a626 	beq	r7,r2,1010c084 <__divdf3+0x8cc>
1010bdec:	00800044 	movi	r2,1
1010bdf0:	3880521e 	bne	r7,r2,1010bf3c <__divdf3+0x784>
1010bdf4:	b807883a 	mov	r3,r23
1010bdf8:	0005883a 	mov	r2,zero
1010bdfc:	000b883a 	mov	r5,zero
1010be00:	0025883a 	mov	r18,zero
1010be04:	003ecb06 	br	1010b934 <__alt_data_end+0xfffeb934>
1010be08:	00800434 	movhi	r2,16
1010be0c:	81400234 	orhi	r5,r16,8
1010be10:	10bfffc4 	addi	r2,r2,-1
1010be14:	a007883a 	mov	r3,r20
1010be18:	288a703a 	and	r5,r5,r2
1010be1c:	003f2206 	br	1010baa8 <__alt_data_end+0xfffebaa8>
1010be20:	183fca26 	beq	r3,zero,1010bd4c <__alt_data_end+0xfffebd4c>
1010be24:	e5ef883a 	add	r23,fp,r23
1010be28:	40bfffc4 	addi	r2,r8,-1
1010be2c:	bf00392e 	bgeu	r23,fp,1010bf14 <__divdf3+0x75c>
1010be30:	1011883a 	mov	r8,r2
1010be34:	ba7fc41e 	bne	r23,r9,1010bd48 <__alt_data_end+0xfffebd48>
1010be38:	b0ffc31e 	bne	r22,r3,1010bd48 <__alt_data_end+0xfffebd48>
1010be3c:	003fc306 	br	1010bd4c <__alt_data_end+0xfffebd4c>
1010be40:	143ff604 	addi	r16,r2,-40
1010be44:	9c20983a 	sll	r16,r19,r16
1010be48:	0025883a 	mov	r18,zero
1010be4c:	003ee206 	br	1010b9d8 <__alt_data_end+0xfffeb9d8>
1010be50:	d9800315 	stw	r6,12(sp)
1010be54:	d9c00215 	stw	r7,8(sp)
1010be58:	010d5100 	call	1010d510 <__clzsi2>
1010be5c:	10800804 	addi	r2,r2,32
1010be60:	d9c00217 	ldw	r7,8(sp)
1010be64:	d9800317 	ldw	r6,12(sp)
1010be68:	003ed106 	br	1010b9b0 <__alt_data_end+0xfffeb9b0>
1010be6c:	147ff604 	addi	r17,r2,-40
1010be70:	3462983a 	sll	r17,r6,r17
1010be74:	0011883a 	mov	r8,zero
1010be78:	003ef506 	br	1010ba50 <__alt_data_end+0xfffeba50>
1010be7c:	3009883a 	mov	r4,r6
1010be80:	d9800315 	stw	r6,12(sp)
1010be84:	da400115 	stw	r9,4(sp)
1010be88:	010d5100 	call	1010d510 <__clzsi2>
1010be8c:	10800804 	addi	r2,r2,32
1010be90:	da400117 	ldw	r9,4(sp)
1010be94:	d9800317 	ldw	r6,12(sp)
1010be98:	003ee306 	br	1010ba28 <__alt_data_end+0xfffeba28>
1010be9c:	85a1883a 	add	r16,r16,r22
1010bea0:	8585803a 	cmpltu	r2,r16,r22
1010bea4:	1705883a 	add	r2,r2,fp
1010bea8:	14a5883a 	add	r18,r2,r18
1010beac:	88bfffc4 	addi	r2,r17,-1
1010beb0:	e4800c2e 	bgeu	fp,r18,1010bee4 <__divdf3+0x72c>
1010beb4:	90c03e36 	bltu	r18,r3,1010bfb0 <__divdf3+0x7f8>
1010beb8:	1c806926 	beq	r3,r18,1010c060 <__divdf3+0x8a8>
1010bebc:	90c7c83a 	sub	r3,r18,r3
1010bec0:	1023883a 	mov	r17,r2
1010bec4:	003f5206 	br	1010bc10 <__alt_data_end+0xfffebc10>
1010bec8:	923f0436 	bltu	r18,r8,1010badc <__alt_data_end+0xfffebadc>
1010becc:	800897fa 	slli	r4,r16,31
1010bed0:	9004d07a 	srli	r2,r18,1
1010bed4:	8006d07a 	srli	r3,r16,1
1010bed8:	902097fa 	slli	r16,r18,31
1010bedc:	20a4b03a 	or	r18,r4,r2
1010bee0:	003f0106 	br	1010bae8 <__alt_data_end+0xfffebae8>
1010bee4:	e4bff51e 	bne	fp,r18,1010bebc <__alt_data_end+0xfffebebc>
1010bee8:	85bff22e 	bgeu	r16,r22,1010beb4 <__alt_data_end+0xfffebeb4>
1010beec:	e0c7c83a 	sub	r3,fp,r3
1010bef0:	1023883a 	mov	r17,r2
1010bef4:	003f4606 	br	1010bc10 <__alt_data_end+0xfffebc10>
1010bef8:	100f883a 	mov	r7,r2
1010befc:	003f2b06 	br	1010bbac <__alt_data_end+0xfffebbac>
1010bf00:	180d883a 	mov	r6,r3
1010bf04:	003f1306 	br	1010bb54 <__alt_data_end+0xfffebb54>
1010bf08:	813fe436 	bltu	r16,r4,1010be9c <__alt_data_end+0xfffebe9c>
1010bf0c:	0007883a 	mov	r3,zero
1010bf10:	003f3f06 	br	1010bc10 <__alt_data_end+0xfffebc10>
1010bf14:	ba402c36 	bltu	r23,r9,1010bfc8 <__divdf3+0x810>
1010bf18:	4dc05426 	beq	r9,r23,1010c06c <__divdf3+0x8b4>
1010bf1c:	1011883a 	mov	r8,r2
1010bf20:	003f8906 	br	1010bd48 <__alt_data_end+0xfffebd48>
1010bf24:	023fffc4 	movi	r8,-1
1010bf28:	003f8806 	br	1010bd4c <__alt_data_end+0xfffebd4c>
1010bf2c:	1811883a 	mov	r8,r3
1010bf30:	003f5406 	br	1010bc84 <__alt_data_end+0xfffebc84>
1010bf34:	1025883a 	mov	r18,r2
1010bf38:	003f6d06 	br	1010bcf0 <__alt_data_end+0xfffebcf0>
1010bf3c:	b827883a 	mov	r19,r23
1010bf40:	003f8206 	br	1010bd4c <__alt_data_end+0xfffebd4c>
1010bf44:	010007c4 	movi	r4,31
1010bf48:	20c02616 	blt	r4,r3,1010bfe4 <__divdf3+0x82c>
1010bf4c:	00800804 	movi	r2,32
1010bf50:	10c5c83a 	sub	r2,r2,r3
1010bf54:	888a983a 	sll	r5,r17,r2
1010bf58:	40c8d83a 	srl	r4,r8,r3
1010bf5c:	4084983a 	sll	r2,r8,r2
1010bf60:	88e2d83a 	srl	r17,r17,r3
1010bf64:	2906b03a 	or	r3,r5,r4
1010bf68:	1004c03a 	cmpne	r2,r2,zero
1010bf6c:	1886b03a 	or	r3,r3,r2
1010bf70:	188001cc 	andi	r2,r3,7
1010bf74:	10000726 	beq	r2,zero,1010bf94 <__divdf3+0x7dc>
1010bf78:	188003cc 	andi	r2,r3,15
1010bf7c:	01000104 	movi	r4,4
1010bf80:	11000426 	beq	r2,r4,1010bf94 <__divdf3+0x7dc>
1010bf84:	1805883a 	mov	r2,r3
1010bf88:	10c00104 	addi	r3,r2,4
1010bf8c:	1885803a 	cmpltu	r2,r3,r2
1010bf90:	88a3883a 	add	r17,r17,r2
1010bf94:	8880202c 	andhi	r2,r17,128
1010bf98:	10002726 	beq	r2,zero,1010c038 <__divdf3+0x880>
1010bf9c:	98c0004c 	andi	r3,r19,1
1010bfa0:	00800044 	movi	r2,1
1010bfa4:	000b883a 	mov	r5,zero
1010bfa8:	0025883a 	mov	r18,zero
1010bfac:	003e6106 	br	1010b934 <__alt_data_end+0xfffeb934>
1010bfb0:	85a1883a 	add	r16,r16,r22
1010bfb4:	8585803a 	cmpltu	r2,r16,r22
1010bfb8:	1705883a 	add	r2,r2,fp
1010bfbc:	14a5883a 	add	r18,r2,r18
1010bfc0:	8c7fff84 	addi	r17,r17,-2
1010bfc4:	003f1106 	br	1010bc0c <__alt_data_end+0xfffebc0c>
1010bfc8:	b589883a 	add	r4,r22,r22
1010bfcc:	25ad803a 	cmpltu	r22,r4,r22
1010bfd0:	b739883a 	add	fp,r22,fp
1010bfd4:	40bfff84 	addi	r2,r8,-2
1010bfd8:	bf2f883a 	add	r23,r23,fp
1010bfdc:	202d883a 	mov	r22,r4
1010bfe0:	003f9306 	br	1010be30 <__alt_data_end+0xfffebe30>
1010bfe4:	013ff844 	movi	r4,-31
1010bfe8:	2085c83a 	sub	r2,r4,r2
1010bfec:	8888d83a 	srl	r4,r17,r2
1010bff0:	00800804 	movi	r2,32
1010bff4:	18802126 	beq	r3,r2,1010c07c <__divdf3+0x8c4>
1010bff8:	00801004 	movi	r2,64
1010bffc:	10c5c83a 	sub	r2,r2,r3
1010c000:	8884983a 	sll	r2,r17,r2
1010c004:	1204b03a 	or	r2,r2,r8
1010c008:	1004c03a 	cmpne	r2,r2,zero
1010c00c:	2084b03a 	or	r2,r4,r2
1010c010:	144001cc 	andi	r17,r2,7
1010c014:	88000d1e 	bne	r17,zero,1010c04c <__divdf3+0x894>
1010c018:	000b883a 	mov	r5,zero
1010c01c:	1024d0fa 	srli	r18,r2,3
1010c020:	98c0004c 	andi	r3,r19,1
1010c024:	0005883a 	mov	r2,zero
1010c028:	9464b03a 	or	r18,r18,r17
1010c02c:	003e4106 	br	1010b934 <__alt_data_end+0xfffeb934>
1010c030:	1007883a 	mov	r3,r2
1010c034:	0023883a 	mov	r17,zero
1010c038:	880a927a 	slli	r5,r17,9
1010c03c:	1805883a 	mov	r2,r3
1010c040:	8822977a 	slli	r17,r17,29
1010c044:	280ad33a 	srli	r5,r5,12
1010c048:	003ff406 	br	1010c01c <__alt_data_end+0xfffec01c>
1010c04c:	10c003cc 	andi	r3,r2,15
1010c050:	01000104 	movi	r4,4
1010c054:	193ff626 	beq	r3,r4,1010c030 <__alt_data_end+0xfffec030>
1010c058:	0023883a 	mov	r17,zero
1010c05c:	003fca06 	br	1010bf88 <__alt_data_end+0xfffebf88>
1010c060:	813fd336 	bltu	r16,r4,1010bfb0 <__alt_data_end+0xfffebfb0>
1010c064:	1023883a 	mov	r17,r2
1010c068:	003fa806 	br	1010bf0c <__alt_data_end+0xfffebf0c>
1010c06c:	b0ffd636 	bltu	r22,r3,1010bfc8 <__alt_data_end+0xfffebfc8>
1010c070:	1011883a 	mov	r8,r2
1010c074:	b0ff341e 	bne	r22,r3,1010bd48 <__alt_data_end+0xfffebd48>
1010c078:	003f3406 	br	1010bd4c <__alt_data_end+0xfffebd4c>
1010c07c:	0005883a 	mov	r2,zero
1010c080:	003fe006 	br	1010c004 <__alt_data_end+0xfffec004>
1010c084:	00800434 	movhi	r2,16
1010c088:	89400234 	orhi	r5,r17,8
1010c08c:	10bfffc4 	addi	r2,r2,-1
1010c090:	b807883a 	mov	r3,r23
1010c094:	288a703a 	and	r5,r5,r2
1010c098:	4025883a 	mov	r18,r8
1010c09c:	003e8206 	br	1010baa8 <__alt_data_end+0xfffebaa8>

1010c0a0 <__eqdf2>:
1010c0a0:	2804d53a 	srli	r2,r5,20
1010c0a4:	3806d53a 	srli	r3,r7,20
1010c0a8:	02000434 	movhi	r8,16
1010c0ac:	423fffc4 	addi	r8,r8,-1
1010c0b0:	1081ffcc 	andi	r2,r2,2047
1010c0b4:	0281ffc4 	movi	r10,2047
1010c0b8:	2a12703a 	and	r9,r5,r8
1010c0bc:	18c1ffcc 	andi	r3,r3,2047
1010c0c0:	3a10703a 	and	r8,r7,r8
1010c0c4:	280ad7fa 	srli	r5,r5,31
1010c0c8:	380ed7fa 	srli	r7,r7,31
1010c0cc:	12801026 	beq	r2,r10,1010c110 <__eqdf2+0x70>
1010c0d0:	0281ffc4 	movi	r10,2047
1010c0d4:	1a800a26 	beq	r3,r10,1010c100 <__eqdf2+0x60>
1010c0d8:	10c00226 	beq	r2,r3,1010c0e4 <__eqdf2+0x44>
1010c0dc:	00800044 	movi	r2,1
1010c0e0:	f800283a 	ret
1010c0e4:	4a3ffd1e 	bne	r9,r8,1010c0dc <__alt_data_end+0xfffec0dc>
1010c0e8:	21bffc1e 	bne	r4,r6,1010c0dc <__alt_data_end+0xfffec0dc>
1010c0ec:	29c00c26 	beq	r5,r7,1010c120 <__eqdf2+0x80>
1010c0f0:	103ffa1e 	bne	r2,zero,1010c0dc <__alt_data_end+0xfffec0dc>
1010c0f4:	2244b03a 	or	r2,r4,r9
1010c0f8:	1004c03a 	cmpne	r2,r2,zero
1010c0fc:	f800283a 	ret
1010c100:	3214b03a 	or	r10,r6,r8
1010c104:	503ff426 	beq	r10,zero,1010c0d8 <__alt_data_end+0xfffec0d8>
1010c108:	00800044 	movi	r2,1
1010c10c:	f800283a 	ret
1010c110:	2254b03a 	or	r10,r4,r9
1010c114:	503fee26 	beq	r10,zero,1010c0d0 <__alt_data_end+0xfffec0d0>
1010c118:	00800044 	movi	r2,1
1010c11c:	f800283a 	ret
1010c120:	0005883a 	mov	r2,zero
1010c124:	f800283a 	ret

1010c128 <__gedf2>:
1010c128:	2804d53a 	srli	r2,r5,20
1010c12c:	3806d53a 	srli	r3,r7,20
1010c130:	02000434 	movhi	r8,16
1010c134:	423fffc4 	addi	r8,r8,-1
1010c138:	1081ffcc 	andi	r2,r2,2047
1010c13c:	0241ffc4 	movi	r9,2047
1010c140:	2a14703a 	and	r10,r5,r8
1010c144:	18c1ffcc 	andi	r3,r3,2047
1010c148:	3a10703a 	and	r8,r7,r8
1010c14c:	280ad7fa 	srli	r5,r5,31
1010c150:	380ed7fa 	srli	r7,r7,31
1010c154:	12401d26 	beq	r2,r9,1010c1cc <__gedf2+0xa4>
1010c158:	0241ffc4 	movi	r9,2047
1010c15c:	1a401226 	beq	r3,r9,1010c1a8 <__gedf2+0x80>
1010c160:	1000081e 	bne	r2,zero,1010c184 <__gedf2+0x5c>
1010c164:	2296b03a 	or	r11,r4,r10
1010c168:	5813003a 	cmpeq	r9,r11,zero
1010c16c:	1800091e 	bne	r3,zero,1010c194 <__gedf2+0x6c>
1010c170:	3218b03a 	or	r12,r6,r8
1010c174:	6000071e 	bne	r12,zero,1010c194 <__gedf2+0x6c>
1010c178:	0005883a 	mov	r2,zero
1010c17c:	5800101e 	bne	r11,zero,1010c1c0 <__gedf2+0x98>
1010c180:	f800283a 	ret
1010c184:	18000c1e 	bne	r3,zero,1010c1b8 <__gedf2+0x90>
1010c188:	3212b03a 	or	r9,r6,r8
1010c18c:	48000c26 	beq	r9,zero,1010c1c0 <__gedf2+0x98>
1010c190:	0013883a 	mov	r9,zero
1010c194:	39c03fcc 	andi	r7,r7,255
1010c198:	48000826 	beq	r9,zero,1010c1bc <__gedf2+0x94>
1010c19c:	38000926 	beq	r7,zero,1010c1c4 <__gedf2+0x9c>
1010c1a0:	00800044 	movi	r2,1
1010c1a4:	f800283a 	ret
1010c1a8:	3212b03a 	or	r9,r6,r8
1010c1ac:	483fec26 	beq	r9,zero,1010c160 <__alt_data_end+0xfffec160>
1010c1b0:	00bfff84 	movi	r2,-2
1010c1b4:	f800283a 	ret
1010c1b8:	39c03fcc 	andi	r7,r7,255
1010c1bc:	29c00626 	beq	r5,r7,1010c1d8 <__gedf2+0xb0>
1010c1c0:	283ff726 	beq	r5,zero,1010c1a0 <__alt_data_end+0xfffec1a0>
1010c1c4:	00bfffc4 	movi	r2,-1
1010c1c8:	f800283a 	ret
1010c1cc:	2292b03a 	or	r9,r4,r10
1010c1d0:	483fe126 	beq	r9,zero,1010c158 <__alt_data_end+0xfffec158>
1010c1d4:	003ff606 	br	1010c1b0 <__alt_data_end+0xfffec1b0>
1010c1d8:	18bff916 	blt	r3,r2,1010c1c0 <__alt_data_end+0xfffec1c0>
1010c1dc:	10c00316 	blt	r2,r3,1010c1ec <__gedf2+0xc4>
1010c1e0:	42bff736 	bltu	r8,r10,1010c1c0 <__alt_data_end+0xfffec1c0>
1010c1e4:	52000326 	beq	r10,r8,1010c1f4 <__gedf2+0xcc>
1010c1e8:	5200042e 	bgeu	r10,r8,1010c1fc <__gedf2+0xd4>
1010c1ec:	283fec1e 	bne	r5,zero,1010c1a0 <__alt_data_end+0xfffec1a0>
1010c1f0:	003ff406 	br	1010c1c4 <__alt_data_end+0xfffec1c4>
1010c1f4:	313ff236 	bltu	r6,r4,1010c1c0 <__alt_data_end+0xfffec1c0>
1010c1f8:	21bffc36 	bltu	r4,r6,1010c1ec <__alt_data_end+0xfffec1ec>
1010c1fc:	0005883a 	mov	r2,zero
1010c200:	f800283a 	ret

1010c204 <__ledf2>:
1010c204:	2804d53a 	srli	r2,r5,20
1010c208:	3810d53a 	srli	r8,r7,20
1010c20c:	00c00434 	movhi	r3,16
1010c210:	18ffffc4 	addi	r3,r3,-1
1010c214:	1081ffcc 	andi	r2,r2,2047
1010c218:	0241ffc4 	movi	r9,2047
1010c21c:	28d4703a 	and	r10,r5,r3
1010c220:	4201ffcc 	andi	r8,r8,2047
1010c224:	38c6703a 	and	r3,r7,r3
1010c228:	280ad7fa 	srli	r5,r5,31
1010c22c:	380ed7fa 	srli	r7,r7,31
1010c230:	12401f26 	beq	r2,r9,1010c2b0 <__ledf2+0xac>
1010c234:	0241ffc4 	movi	r9,2047
1010c238:	42401426 	beq	r8,r9,1010c28c <__ledf2+0x88>
1010c23c:	1000091e 	bne	r2,zero,1010c264 <__ledf2+0x60>
1010c240:	2296b03a 	or	r11,r4,r10
1010c244:	5813003a 	cmpeq	r9,r11,zero
1010c248:	29403fcc 	andi	r5,r5,255
1010c24c:	40000a1e 	bne	r8,zero,1010c278 <__ledf2+0x74>
1010c250:	30d8b03a 	or	r12,r6,r3
1010c254:	6000081e 	bne	r12,zero,1010c278 <__ledf2+0x74>
1010c258:	0005883a 	mov	r2,zero
1010c25c:	5800111e 	bne	r11,zero,1010c2a4 <__ledf2+0xa0>
1010c260:	f800283a 	ret
1010c264:	29403fcc 	andi	r5,r5,255
1010c268:	40000c1e 	bne	r8,zero,1010c29c <__ledf2+0x98>
1010c26c:	30d2b03a 	or	r9,r6,r3
1010c270:	48000c26 	beq	r9,zero,1010c2a4 <__ledf2+0xa0>
1010c274:	0013883a 	mov	r9,zero
1010c278:	39c03fcc 	andi	r7,r7,255
1010c27c:	48000826 	beq	r9,zero,1010c2a0 <__ledf2+0x9c>
1010c280:	38001126 	beq	r7,zero,1010c2c8 <__ledf2+0xc4>
1010c284:	00800044 	movi	r2,1
1010c288:	f800283a 	ret
1010c28c:	30d2b03a 	or	r9,r6,r3
1010c290:	483fea26 	beq	r9,zero,1010c23c <__alt_data_end+0xfffec23c>
1010c294:	00800084 	movi	r2,2
1010c298:	f800283a 	ret
1010c29c:	39c03fcc 	andi	r7,r7,255
1010c2a0:	39400726 	beq	r7,r5,1010c2c0 <__ledf2+0xbc>
1010c2a4:	2800081e 	bne	r5,zero,1010c2c8 <__ledf2+0xc4>
1010c2a8:	00800044 	movi	r2,1
1010c2ac:	f800283a 	ret
1010c2b0:	2292b03a 	or	r9,r4,r10
1010c2b4:	483fdf26 	beq	r9,zero,1010c234 <__alt_data_end+0xfffec234>
1010c2b8:	00800084 	movi	r2,2
1010c2bc:	f800283a 	ret
1010c2c0:	4080030e 	bge	r8,r2,1010c2d0 <__ledf2+0xcc>
1010c2c4:	383fef26 	beq	r7,zero,1010c284 <__alt_data_end+0xfffec284>
1010c2c8:	00bfffc4 	movi	r2,-1
1010c2cc:	f800283a 	ret
1010c2d0:	123feb16 	blt	r2,r8,1010c280 <__alt_data_end+0xfffec280>
1010c2d4:	1abff336 	bltu	r3,r10,1010c2a4 <__alt_data_end+0xfffec2a4>
1010c2d8:	50c00326 	beq	r10,r3,1010c2e8 <__ledf2+0xe4>
1010c2dc:	50c0042e 	bgeu	r10,r3,1010c2f0 <__ledf2+0xec>
1010c2e0:	283fe81e 	bne	r5,zero,1010c284 <__alt_data_end+0xfffec284>
1010c2e4:	003ff806 	br	1010c2c8 <__alt_data_end+0xfffec2c8>
1010c2e8:	313fee36 	bltu	r6,r4,1010c2a4 <__alt_data_end+0xfffec2a4>
1010c2ec:	21bffc36 	bltu	r4,r6,1010c2e0 <__alt_data_end+0xfffec2e0>
1010c2f0:	0005883a 	mov	r2,zero
1010c2f4:	f800283a 	ret

1010c2f8 <__muldf3>:
1010c2f8:	defff304 	addi	sp,sp,-52
1010c2fc:	2804d53a 	srli	r2,r5,20
1010c300:	dd800915 	stw	r22,36(sp)
1010c304:	282cd7fa 	srli	r22,r5,31
1010c308:	dc000315 	stw	r16,12(sp)
1010c30c:	04000434 	movhi	r16,16
1010c310:	dd400815 	stw	r21,32(sp)
1010c314:	dc800515 	stw	r18,20(sp)
1010c318:	843fffc4 	addi	r16,r16,-1
1010c31c:	dfc00c15 	stw	ra,48(sp)
1010c320:	df000b15 	stw	fp,44(sp)
1010c324:	ddc00a15 	stw	r23,40(sp)
1010c328:	dd000715 	stw	r20,28(sp)
1010c32c:	dcc00615 	stw	r19,24(sp)
1010c330:	dc400415 	stw	r17,16(sp)
1010c334:	1481ffcc 	andi	r18,r2,2047
1010c338:	2c20703a 	and	r16,r5,r16
1010c33c:	b02b883a 	mov	r21,r22
1010c340:	b2403fcc 	andi	r9,r22,255
1010c344:	90006026 	beq	r18,zero,1010c4c8 <__muldf3+0x1d0>
1010c348:	0081ffc4 	movi	r2,2047
1010c34c:	2029883a 	mov	r20,r4
1010c350:	90803626 	beq	r18,r2,1010c42c <__muldf3+0x134>
1010c354:	80800434 	orhi	r2,r16,16
1010c358:	100490fa 	slli	r2,r2,3
1010c35c:	2020d77a 	srli	r16,r4,29
1010c360:	202890fa 	slli	r20,r4,3
1010c364:	94bf0044 	addi	r18,r18,-1023
1010c368:	80a0b03a 	or	r16,r16,r2
1010c36c:	0027883a 	mov	r19,zero
1010c370:	0039883a 	mov	fp,zero
1010c374:	3804d53a 	srli	r2,r7,20
1010c378:	382ed7fa 	srli	r23,r7,31
1010c37c:	04400434 	movhi	r17,16
1010c380:	8c7fffc4 	addi	r17,r17,-1
1010c384:	1081ffcc 	andi	r2,r2,2047
1010c388:	3011883a 	mov	r8,r6
1010c38c:	3c62703a 	and	r17,r7,r17
1010c390:	ba803fcc 	andi	r10,r23,255
1010c394:	10006d26 	beq	r2,zero,1010c54c <__muldf3+0x254>
1010c398:	00c1ffc4 	movi	r3,2047
1010c39c:	10c06526 	beq	r2,r3,1010c534 <__muldf3+0x23c>
1010c3a0:	88c00434 	orhi	r3,r17,16
1010c3a4:	180690fa 	slli	r3,r3,3
1010c3a8:	3022d77a 	srli	r17,r6,29
1010c3ac:	301090fa 	slli	r8,r6,3
1010c3b0:	10bf0044 	addi	r2,r2,-1023
1010c3b4:	88e2b03a 	or	r17,r17,r3
1010c3b8:	000b883a 	mov	r5,zero
1010c3bc:	9085883a 	add	r2,r18,r2
1010c3c0:	2cc8b03a 	or	r4,r5,r19
1010c3c4:	00c003c4 	movi	r3,15
1010c3c8:	bdacf03a 	xor	r22,r23,r22
1010c3cc:	12c00044 	addi	r11,r2,1
1010c3d0:	19009936 	bltu	r3,r4,1010c638 <__muldf3+0x340>
1010c3d4:	200890ba 	slli	r4,r4,2
1010c3d8:	00c40474 	movhi	r3,4113
1010c3dc:	18f0fb04 	addi	r3,r3,-15380
1010c3e0:	20c9883a 	add	r4,r4,r3
1010c3e4:	20c00017 	ldw	r3,0(r4)
1010c3e8:	1800683a 	jmp	r3
1010c3ec:	1010c638 	rdprs	zero,r2,17176
1010c3f0:	1010c44c 	andi	zero,r2,17169
1010c3f4:	1010c44c 	andi	zero,r2,17169
1010c3f8:	1010c448 	cmpgei	zero,r2,17169
1010c3fc:	1010c614 	ori	zero,r2,17176
1010c400:	1010c614 	ori	zero,r2,17176
1010c404:	1010c5fc 	xorhi	zero,r2,17175
1010c408:	1010c448 	cmpgei	zero,r2,17169
1010c40c:	1010c614 	ori	zero,r2,17176
1010c410:	1010c5fc 	xorhi	zero,r2,17175
1010c414:	1010c614 	ori	zero,r2,17176
1010c418:	1010c448 	cmpgei	zero,r2,17169
1010c41c:	1010c624 	muli	zero,r2,17176
1010c420:	1010c624 	muli	zero,r2,17176
1010c424:	1010c624 	muli	zero,r2,17176
1010c428:	1010c840 	call	11010c84 <__alt_data_end+0xef0c84>
1010c42c:	2404b03a 	or	r2,r4,r16
1010c430:	10006f1e 	bne	r2,zero,1010c5f0 <__muldf3+0x2f8>
1010c434:	04c00204 	movi	r19,8
1010c438:	0021883a 	mov	r16,zero
1010c43c:	0029883a 	mov	r20,zero
1010c440:	07000084 	movi	fp,2
1010c444:	003fcb06 	br	1010c374 <__alt_data_end+0xfffec374>
1010c448:	502d883a 	mov	r22,r10
1010c44c:	00800084 	movi	r2,2
1010c450:	28805726 	beq	r5,r2,1010c5b0 <__muldf3+0x2b8>
1010c454:	008000c4 	movi	r2,3
1010c458:	28816626 	beq	r5,r2,1010c9f4 <__muldf3+0x6fc>
1010c45c:	00800044 	movi	r2,1
1010c460:	2881411e 	bne	r5,r2,1010c968 <__muldf3+0x670>
1010c464:	b02b883a 	mov	r21,r22
1010c468:	0005883a 	mov	r2,zero
1010c46c:	000b883a 	mov	r5,zero
1010c470:	0029883a 	mov	r20,zero
1010c474:	1004953a 	slli	r2,r2,20
1010c478:	a8c03fcc 	andi	r3,r21,255
1010c47c:	04400434 	movhi	r17,16
1010c480:	8c7fffc4 	addi	r17,r17,-1
1010c484:	180697fa 	slli	r3,r3,31
1010c488:	2c4a703a 	and	r5,r5,r17
1010c48c:	288ab03a 	or	r5,r5,r2
1010c490:	28c6b03a 	or	r3,r5,r3
1010c494:	a005883a 	mov	r2,r20
1010c498:	dfc00c17 	ldw	ra,48(sp)
1010c49c:	df000b17 	ldw	fp,44(sp)
1010c4a0:	ddc00a17 	ldw	r23,40(sp)
1010c4a4:	dd800917 	ldw	r22,36(sp)
1010c4a8:	dd400817 	ldw	r21,32(sp)
1010c4ac:	dd000717 	ldw	r20,28(sp)
1010c4b0:	dcc00617 	ldw	r19,24(sp)
1010c4b4:	dc800517 	ldw	r18,20(sp)
1010c4b8:	dc400417 	ldw	r17,16(sp)
1010c4bc:	dc000317 	ldw	r16,12(sp)
1010c4c0:	dec00d04 	addi	sp,sp,52
1010c4c4:	f800283a 	ret
1010c4c8:	2404b03a 	or	r2,r4,r16
1010c4cc:	2027883a 	mov	r19,r4
1010c4d0:	10004226 	beq	r2,zero,1010c5dc <__muldf3+0x2e4>
1010c4d4:	8000fc26 	beq	r16,zero,1010c8c8 <__muldf3+0x5d0>
1010c4d8:	8009883a 	mov	r4,r16
1010c4dc:	d9800215 	stw	r6,8(sp)
1010c4e0:	d9c00015 	stw	r7,0(sp)
1010c4e4:	da400115 	stw	r9,4(sp)
1010c4e8:	010d5100 	call	1010d510 <__clzsi2>
1010c4ec:	d9800217 	ldw	r6,8(sp)
1010c4f0:	d9c00017 	ldw	r7,0(sp)
1010c4f4:	da400117 	ldw	r9,4(sp)
1010c4f8:	113ffd44 	addi	r4,r2,-11
1010c4fc:	00c00704 	movi	r3,28
1010c500:	1900ed16 	blt	r3,r4,1010c8b8 <__muldf3+0x5c0>
1010c504:	00c00744 	movi	r3,29
1010c508:	147ffe04 	addi	r17,r2,-8
1010c50c:	1907c83a 	sub	r3,r3,r4
1010c510:	8460983a 	sll	r16,r16,r17
1010c514:	98c6d83a 	srl	r3,r19,r3
1010c518:	9c68983a 	sll	r20,r19,r17
1010c51c:	1c20b03a 	or	r16,r3,r16
1010c520:	1080fcc4 	addi	r2,r2,1011
1010c524:	00a5c83a 	sub	r18,zero,r2
1010c528:	0027883a 	mov	r19,zero
1010c52c:	0039883a 	mov	fp,zero
1010c530:	003f9006 	br	1010c374 <__alt_data_end+0xfffec374>
1010c534:	3446b03a 	or	r3,r6,r17
1010c538:	1800261e 	bne	r3,zero,1010c5d4 <__muldf3+0x2dc>
1010c53c:	0023883a 	mov	r17,zero
1010c540:	0011883a 	mov	r8,zero
1010c544:	01400084 	movi	r5,2
1010c548:	003f9c06 	br	1010c3bc <__alt_data_end+0xfffec3bc>
1010c54c:	3446b03a 	or	r3,r6,r17
1010c550:	18001c26 	beq	r3,zero,1010c5c4 <__muldf3+0x2cc>
1010c554:	8800ce26 	beq	r17,zero,1010c890 <__muldf3+0x598>
1010c558:	8809883a 	mov	r4,r17
1010c55c:	d9800215 	stw	r6,8(sp)
1010c560:	da400115 	stw	r9,4(sp)
1010c564:	da800015 	stw	r10,0(sp)
1010c568:	010d5100 	call	1010d510 <__clzsi2>
1010c56c:	d9800217 	ldw	r6,8(sp)
1010c570:	da400117 	ldw	r9,4(sp)
1010c574:	da800017 	ldw	r10,0(sp)
1010c578:	113ffd44 	addi	r4,r2,-11
1010c57c:	00c00704 	movi	r3,28
1010c580:	1900bf16 	blt	r3,r4,1010c880 <__muldf3+0x588>
1010c584:	00c00744 	movi	r3,29
1010c588:	123ffe04 	addi	r8,r2,-8
1010c58c:	1907c83a 	sub	r3,r3,r4
1010c590:	8a22983a 	sll	r17,r17,r8
1010c594:	30c6d83a 	srl	r3,r6,r3
1010c598:	3210983a 	sll	r8,r6,r8
1010c59c:	1c62b03a 	or	r17,r3,r17
1010c5a0:	1080fcc4 	addi	r2,r2,1011
1010c5a4:	0085c83a 	sub	r2,zero,r2
1010c5a8:	000b883a 	mov	r5,zero
1010c5ac:	003f8306 	br	1010c3bc <__alt_data_end+0xfffec3bc>
1010c5b0:	b02b883a 	mov	r21,r22
1010c5b4:	0081ffc4 	movi	r2,2047
1010c5b8:	000b883a 	mov	r5,zero
1010c5bc:	0029883a 	mov	r20,zero
1010c5c0:	003fac06 	br	1010c474 <__alt_data_end+0xfffec474>
1010c5c4:	0023883a 	mov	r17,zero
1010c5c8:	0011883a 	mov	r8,zero
1010c5cc:	01400044 	movi	r5,1
1010c5d0:	003f7a06 	br	1010c3bc <__alt_data_end+0xfffec3bc>
1010c5d4:	014000c4 	movi	r5,3
1010c5d8:	003f7806 	br	1010c3bc <__alt_data_end+0xfffec3bc>
1010c5dc:	04c00104 	movi	r19,4
1010c5e0:	0021883a 	mov	r16,zero
1010c5e4:	0029883a 	mov	r20,zero
1010c5e8:	07000044 	movi	fp,1
1010c5ec:	003f6106 	br	1010c374 <__alt_data_end+0xfffec374>
1010c5f0:	04c00304 	movi	r19,12
1010c5f4:	070000c4 	movi	fp,3
1010c5f8:	003f5e06 	br	1010c374 <__alt_data_end+0xfffec374>
1010c5fc:	01400434 	movhi	r5,16
1010c600:	002b883a 	mov	r21,zero
1010c604:	297fffc4 	addi	r5,r5,-1
1010c608:	053fffc4 	movi	r20,-1
1010c60c:	0081ffc4 	movi	r2,2047
1010c610:	003f9806 	br	1010c474 <__alt_data_end+0xfffec474>
1010c614:	8023883a 	mov	r17,r16
1010c618:	a011883a 	mov	r8,r20
1010c61c:	e00b883a 	mov	r5,fp
1010c620:	003f8a06 	br	1010c44c <__alt_data_end+0xfffec44c>
1010c624:	8023883a 	mov	r17,r16
1010c628:	a011883a 	mov	r8,r20
1010c62c:	482d883a 	mov	r22,r9
1010c630:	e00b883a 	mov	r5,fp
1010c634:	003f8506 	br	1010c44c <__alt_data_end+0xfffec44c>
1010c638:	a00ad43a 	srli	r5,r20,16
1010c63c:	401ad43a 	srli	r13,r8,16
1010c640:	a53fffcc 	andi	r20,r20,65535
1010c644:	423fffcc 	andi	r8,r8,65535
1010c648:	4519383a 	mul	r12,r8,r20
1010c64c:	4147383a 	mul	r3,r8,r5
1010c650:	6d09383a 	mul	r4,r13,r20
1010c654:	600cd43a 	srli	r6,r12,16
1010c658:	2b5d383a 	mul	r14,r5,r13
1010c65c:	20c9883a 	add	r4,r4,r3
1010c660:	310d883a 	add	r6,r6,r4
1010c664:	30c0022e 	bgeu	r6,r3,1010c670 <__muldf3+0x378>
1010c668:	00c00074 	movhi	r3,1
1010c66c:	70dd883a 	add	r14,r14,r3
1010c670:	8826d43a 	srli	r19,r17,16
1010c674:	8bffffcc 	andi	r15,r17,65535
1010c678:	7d23383a 	mul	r17,r15,r20
1010c67c:	7949383a 	mul	r4,r15,r5
1010c680:	9d29383a 	mul	r20,r19,r20
1010c684:	8814d43a 	srli	r10,r17,16
1010c688:	3012943a 	slli	r9,r6,16
1010c68c:	a129883a 	add	r20,r20,r4
1010c690:	633fffcc 	andi	r12,r12,65535
1010c694:	5515883a 	add	r10,r10,r20
1010c698:	3006d43a 	srli	r3,r6,16
1010c69c:	4b13883a 	add	r9,r9,r12
1010c6a0:	2ccb383a 	mul	r5,r5,r19
1010c6a4:	5100022e 	bgeu	r10,r4,1010c6b0 <__muldf3+0x3b8>
1010c6a8:	01000074 	movhi	r4,1
1010c6ac:	290b883a 	add	r5,r5,r4
1010c6b0:	802ad43a 	srli	r21,r16,16
1010c6b4:	843fffcc 	andi	r16,r16,65535
1010c6b8:	440d383a 	mul	r6,r8,r16
1010c6bc:	4565383a 	mul	r18,r8,r21
1010c6c0:	8349383a 	mul	r4,r16,r13
1010c6c4:	500e943a 	slli	r7,r10,16
1010c6c8:	3010d43a 	srli	r8,r6,16
1010c6cc:	5028d43a 	srli	r20,r10,16
1010c6d0:	2489883a 	add	r4,r4,r18
1010c6d4:	8abfffcc 	andi	r10,r17,65535
1010c6d8:	3a95883a 	add	r10,r7,r10
1010c6dc:	4119883a 	add	r12,r8,r4
1010c6e0:	a169883a 	add	r20,r20,r5
1010c6e4:	1a87883a 	add	r3,r3,r10
1010c6e8:	6d5b383a 	mul	r13,r13,r21
1010c6ec:	6480022e 	bgeu	r12,r18,1010c6f8 <__muldf3+0x400>
1010c6f0:	01000074 	movhi	r4,1
1010c6f4:	691b883a 	add	r13,r13,r4
1010c6f8:	7c25383a 	mul	r18,r15,r16
1010c6fc:	7d4b383a 	mul	r5,r15,r21
1010c700:	84cf383a 	mul	r7,r16,r19
1010c704:	901ed43a 	srli	r15,r18,16
1010c708:	6008d43a 	srli	r4,r12,16
1010c70c:	6010943a 	slli	r8,r12,16
1010c710:	394f883a 	add	r7,r7,r5
1010c714:	333fffcc 	andi	r12,r6,65535
1010c718:	79df883a 	add	r15,r15,r7
1010c71c:	235b883a 	add	r13,r4,r13
1010c720:	9d63383a 	mul	r17,r19,r21
1010c724:	4309883a 	add	r4,r8,r12
1010c728:	7940022e 	bgeu	r15,r5,1010c734 <__muldf3+0x43c>
1010c72c:	01400074 	movhi	r5,1
1010c730:	8963883a 	add	r17,r17,r5
1010c734:	780a943a 	slli	r5,r15,16
1010c738:	91bfffcc 	andi	r6,r18,65535
1010c73c:	70c7883a 	add	r3,r14,r3
1010c740:	298d883a 	add	r6,r5,r6
1010c744:	1a8f803a 	cmpltu	r7,r3,r10
1010c748:	350b883a 	add	r5,r6,r20
1010c74c:	20c7883a 	add	r3,r4,r3
1010c750:	3955883a 	add	r10,r7,r5
1010c754:	1909803a 	cmpltu	r4,r3,r4
1010c758:	6a91883a 	add	r8,r13,r10
1010c75c:	780cd43a 	srli	r6,r15,16
1010c760:	2219883a 	add	r12,r4,r8
1010c764:	2d0b803a 	cmpltu	r5,r5,r20
1010c768:	51cf803a 	cmpltu	r7,r10,r7
1010c76c:	29ceb03a 	or	r7,r5,r7
1010c770:	4351803a 	cmpltu	r8,r8,r13
1010c774:	610b803a 	cmpltu	r5,r12,r4
1010c778:	4148b03a 	or	r4,r8,r5
1010c77c:	398f883a 	add	r7,r7,r6
1010c780:	3909883a 	add	r4,r7,r4
1010c784:	1810927a 	slli	r8,r3,9
1010c788:	2449883a 	add	r4,r4,r17
1010c78c:	2008927a 	slli	r4,r4,9
1010c790:	6022d5fa 	srli	r17,r12,23
1010c794:	1806d5fa 	srli	r3,r3,23
1010c798:	4252b03a 	or	r9,r8,r9
1010c79c:	600a927a 	slli	r5,r12,9
1010c7a0:	4810c03a 	cmpne	r8,r9,zero
1010c7a4:	2462b03a 	or	r17,r4,r17
1010c7a8:	40c6b03a 	or	r3,r8,r3
1010c7ac:	8900402c 	andhi	r4,r17,256
1010c7b0:	1950b03a 	or	r8,r3,r5
1010c7b4:	20000726 	beq	r4,zero,1010c7d4 <__muldf3+0x4dc>
1010c7b8:	4006d07a 	srli	r3,r8,1
1010c7bc:	880497fa 	slli	r2,r17,31
1010c7c0:	4200004c 	andi	r8,r8,1
1010c7c4:	8822d07a 	srli	r17,r17,1
1010c7c8:	1a10b03a 	or	r8,r3,r8
1010c7cc:	1210b03a 	or	r8,r2,r8
1010c7d0:	5805883a 	mov	r2,r11
1010c7d4:	1140ffc4 	addi	r5,r2,1023
1010c7d8:	0140440e 	bge	zero,r5,1010c8ec <__muldf3+0x5f4>
1010c7dc:	40c001cc 	andi	r3,r8,7
1010c7e0:	18000726 	beq	r3,zero,1010c800 <__muldf3+0x508>
1010c7e4:	40c003cc 	andi	r3,r8,15
1010c7e8:	01000104 	movi	r4,4
1010c7ec:	19000426 	beq	r3,r4,1010c800 <__muldf3+0x508>
1010c7f0:	4107883a 	add	r3,r8,r4
1010c7f4:	1a11803a 	cmpltu	r8,r3,r8
1010c7f8:	8a23883a 	add	r17,r17,r8
1010c7fc:	1811883a 	mov	r8,r3
1010c800:	88c0402c 	andhi	r3,r17,256
1010c804:	18000426 	beq	r3,zero,1010c818 <__muldf3+0x520>
1010c808:	11410004 	addi	r5,r2,1024
1010c80c:	00bfc034 	movhi	r2,65280
1010c810:	10bfffc4 	addi	r2,r2,-1
1010c814:	88a2703a 	and	r17,r17,r2
1010c818:	0081ff84 	movi	r2,2046
1010c81c:	117f6416 	blt	r2,r5,1010c5b0 <__alt_data_end+0xfffec5b0>
1010c820:	8828977a 	slli	r20,r17,29
1010c824:	4010d0fa 	srli	r8,r8,3
1010c828:	8822927a 	slli	r17,r17,9
1010c82c:	2881ffcc 	andi	r2,r5,2047
1010c830:	a228b03a 	or	r20,r20,r8
1010c834:	880ad33a 	srli	r5,r17,12
1010c838:	b02b883a 	mov	r21,r22
1010c83c:	003f0d06 	br	1010c474 <__alt_data_end+0xfffec474>
1010c840:	8080022c 	andhi	r2,r16,8
1010c844:	10000926 	beq	r2,zero,1010c86c <__muldf3+0x574>
1010c848:	8880022c 	andhi	r2,r17,8
1010c84c:	1000071e 	bne	r2,zero,1010c86c <__muldf3+0x574>
1010c850:	00800434 	movhi	r2,16
1010c854:	89400234 	orhi	r5,r17,8
1010c858:	10bfffc4 	addi	r2,r2,-1
1010c85c:	b82b883a 	mov	r21,r23
1010c860:	288a703a 	and	r5,r5,r2
1010c864:	4029883a 	mov	r20,r8
1010c868:	003f6806 	br	1010c60c <__alt_data_end+0xfffec60c>
1010c86c:	00800434 	movhi	r2,16
1010c870:	81400234 	orhi	r5,r16,8
1010c874:	10bfffc4 	addi	r2,r2,-1
1010c878:	288a703a 	and	r5,r5,r2
1010c87c:	003f6306 	br	1010c60c <__alt_data_end+0xfffec60c>
1010c880:	147ff604 	addi	r17,r2,-40
1010c884:	3462983a 	sll	r17,r6,r17
1010c888:	0011883a 	mov	r8,zero
1010c88c:	003f4406 	br	1010c5a0 <__alt_data_end+0xfffec5a0>
1010c890:	3009883a 	mov	r4,r6
1010c894:	d9800215 	stw	r6,8(sp)
1010c898:	da400115 	stw	r9,4(sp)
1010c89c:	da800015 	stw	r10,0(sp)
1010c8a0:	010d5100 	call	1010d510 <__clzsi2>
1010c8a4:	10800804 	addi	r2,r2,32
1010c8a8:	da800017 	ldw	r10,0(sp)
1010c8ac:	da400117 	ldw	r9,4(sp)
1010c8b0:	d9800217 	ldw	r6,8(sp)
1010c8b4:	003f3006 	br	1010c578 <__alt_data_end+0xfffec578>
1010c8b8:	143ff604 	addi	r16,r2,-40
1010c8bc:	9c20983a 	sll	r16,r19,r16
1010c8c0:	0029883a 	mov	r20,zero
1010c8c4:	003f1606 	br	1010c520 <__alt_data_end+0xfffec520>
1010c8c8:	d9800215 	stw	r6,8(sp)
1010c8cc:	d9c00015 	stw	r7,0(sp)
1010c8d0:	da400115 	stw	r9,4(sp)
1010c8d4:	010d5100 	call	1010d510 <__clzsi2>
1010c8d8:	10800804 	addi	r2,r2,32
1010c8dc:	da400117 	ldw	r9,4(sp)
1010c8e0:	d9c00017 	ldw	r7,0(sp)
1010c8e4:	d9800217 	ldw	r6,8(sp)
1010c8e8:	003f0306 	br	1010c4f8 <__alt_data_end+0xfffec4f8>
1010c8ec:	00c00044 	movi	r3,1
1010c8f0:	1947c83a 	sub	r3,r3,r5
1010c8f4:	00800e04 	movi	r2,56
1010c8f8:	10feda16 	blt	r2,r3,1010c464 <__alt_data_end+0xfffec464>
1010c8fc:	008007c4 	movi	r2,31
1010c900:	10c01b16 	blt	r2,r3,1010c970 <__muldf3+0x678>
1010c904:	00800804 	movi	r2,32
1010c908:	10c5c83a 	sub	r2,r2,r3
1010c90c:	888a983a 	sll	r5,r17,r2
1010c910:	40c8d83a 	srl	r4,r8,r3
1010c914:	4084983a 	sll	r2,r8,r2
1010c918:	88e2d83a 	srl	r17,r17,r3
1010c91c:	2906b03a 	or	r3,r5,r4
1010c920:	1004c03a 	cmpne	r2,r2,zero
1010c924:	1886b03a 	or	r3,r3,r2
1010c928:	188001cc 	andi	r2,r3,7
1010c92c:	10000726 	beq	r2,zero,1010c94c <__muldf3+0x654>
1010c930:	188003cc 	andi	r2,r3,15
1010c934:	01000104 	movi	r4,4
1010c938:	11000426 	beq	r2,r4,1010c94c <__muldf3+0x654>
1010c93c:	1805883a 	mov	r2,r3
1010c940:	10c00104 	addi	r3,r2,4
1010c944:	1885803a 	cmpltu	r2,r3,r2
1010c948:	88a3883a 	add	r17,r17,r2
1010c94c:	8880202c 	andhi	r2,r17,128
1010c950:	10001c26 	beq	r2,zero,1010c9c4 <__muldf3+0x6cc>
1010c954:	b02b883a 	mov	r21,r22
1010c958:	00800044 	movi	r2,1
1010c95c:	000b883a 	mov	r5,zero
1010c960:	0029883a 	mov	r20,zero
1010c964:	003ec306 	br	1010c474 <__alt_data_end+0xfffec474>
1010c968:	5805883a 	mov	r2,r11
1010c96c:	003f9906 	br	1010c7d4 <__alt_data_end+0xfffec7d4>
1010c970:	00bff844 	movi	r2,-31
1010c974:	1145c83a 	sub	r2,r2,r5
1010c978:	8888d83a 	srl	r4,r17,r2
1010c97c:	00800804 	movi	r2,32
1010c980:	18801a26 	beq	r3,r2,1010c9ec <__muldf3+0x6f4>
1010c984:	00801004 	movi	r2,64
1010c988:	10c5c83a 	sub	r2,r2,r3
1010c98c:	8884983a 	sll	r2,r17,r2
1010c990:	1204b03a 	or	r2,r2,r8
1010c994:	1004c03a 	cmpne	r2,r2,zero
1010c998:	2084b03a 	or	r2,r4,r2
1010c99c:	144001cc 	andi	r17,r2,7
1010c9a0:	88000d1e 	bne	r17,zero,1010c9d8 <__muldf3+0x6e0>
1010c9a4:	000b883a 	mov	r5,zero
1010c9a8:	1028d0fa 	srli	r20,r2,3
1010c9ac:	b02b883a 	mov	r21,r22
1010c9b0:	0005883a 	mov	r2,zero
1010c9b4:	a468b03a 	or	r20,r20,r17
1010c9b8:	003eae06 	br	1010c474 <__alt_data_end+0xfffec474>
1010c9bc:	1007883a 	mov	r3,r2
1010c9c0:	0023883a 	mov	r17,zero
1010c9c4:	880a927a 	slli	r5,r17,9
1010c9c8:	1805883a 	mov	r2,r3
1010c9cc:	8822977a 	slli	r17,r17,29
1010c9d0:	280ad33a 	srli	r5,r5,12
1010c9d4:	003ff406 	br	1010c9a8 <__alt_data_end+0xfffec9a8>
1010c9d8:	10c003cc 	andi	r3,r2,15
1010c9dc:	01000104 	movi	r4,4
1010c9e0:	193ff626 	beq	r3,r4,1010c9bc <__alt_data_end+0xfffec9bc>
1010c9e4:	0023883a 	mov	r17,zero
1010c9e8:	003fd506 	br	1010c940 <__alt_data_end+0xfffec940>
1010c9ec:	0005883a 	mov	r2,zero
1010c9f0:	003fe706 	br	1010c990 <__alt_data_end+0xfffec990>
1010c9f4:	00800434 	movhi	r2,16
1010c9f8:	89400234 	orhi	r5,r17,8
1010c9fc:	10bfffc4 	addi	r2,r2,-1
1010ca00:	b02b883a 	mov	r21,r22
1010ca04:	288a703a 	and	r5,r5,r2
1010ca08:	4029883a 	mov	r20,r8
1010ca0c:	003eff06 	br	1010c60c <__alt_data_end+0xfffec60c>

1010ca10 <__subdf3>:
1010ca10:	02000434 	movhi	r8,16
1010ca14:	423fffc4 	addi	r8,r8,-1
1010ca18:	defffb04 	addi	sp,sp,-20
1010ca1c:	2a14703a 	and	r10,r5,r8
1010ca20:	3812d53a 	srli	r9,r7,20
1010ca24:	3a10703a 	and	r8,r7,r8
1010ca28:	2006d77a 	srli	r3,r4,29
1010ca2c:	3004d77a 	srli	r2,r6,29
1010ca30:	dc000015 	stw	r16,0(sp)
1010ca34:	501490fa 	slli	r10,r10,3
1010ca38:	2820d53a 	srli	r16,r5,20
1010ca3c:	401090fa 	slli	r8,r8,3
1010ca40:	dc800215 	stw	r18,8(sp)
1010ca44:	dc400115 	stw	r17,4(sp)
1010ca48:	dfc00415 	stw	ra,16(sp)
1010ca4c:	202290fa 	slli	r17,r4,3
1010ca50:	dcc00315 	stw	r19,12(sp)
1010ca54:	4a41ffcc 	andi	r9,r9,2047
1010ca58:	0101ffc4 	movi	r4,2047
1010ca5c:	2824d7fa 	srli	r18,r5,31
1010ca60:	8401ffcc 	andi	r16,r16,2047
1010ca64:	50c6b03a 	or	r3,r10,r3
1010ca68:	380ed7fa 	srli	r7,r7,31
1010ca6c:	408ab03a 	or	r5,r8,r2
1010ca70:	300c90fa 	slli	r6,r6,3
1010ca74:	49009626 	beq	r9,r4,1010ccd0 <__subdf3+0x2c0>
1010ca78:	39c0005c 	xori	r7,r7,1
1010ca7c:	8245c83a 	sub	r2,r16,r9
1010ca80:	3c807426 	beq	r7,r18,1010cc54 <__subdf3+0x244>
1010ca84:	0080af0e 	bge	zero,r2,1010cd44 <__subdf3+0x334>
1010ca88:	48002a1e 	bne	r9,zero,1010cb34 <__subdf3+0x124>
1010ca8c:	2988b03a 	or	r4,r5,r6
1010ca90:	20009a1e 	bne	r4,zero,1010ccfc <__subdf3+0x2ec>
1010ca94:	888001cc 	andi	r2,r17,7
1010ca98:	10000726 	beq	r2,zero,1010cab8 <__subdf3+0xa8>
1010ca9c:	888003cc 	andi	r2,r17,15
1010caa0:	01000104 	movi	r4,4
1010caa4:	11000426 	beq	r2,r4,1010cab8 <__subdf3+0xa8>
1010caa8:	890b883a 	add	r5,r17,r4
1010caac:	2c63803a 	cmpltu	r17,r5,r17
1010cab0:	1c47883a 	add	r3,r3,r17
1010cab4:	2823883a 	mov	r17,r5
1010cab8:	1880202c 	andhi	r2,r3,128
1010cabc:	10005926 	beq	r2,zero,1010cc24 <__subdf3+0x214>
1010cac0:	84000044 	addi	r16,r16,1
1010cac4:	0081ffc4 	movi	r2,2047
1010cac8:	8080be26 	beq	r16,r2,1010cdc4 <__subdf3+0x3b4>
1010cacc:	017fe034 	movhi	r5,65408
1010cad0:	297fffc4 	addi	r5,r5,-1
1010cad4:	1946703a 	and	r3,r3,r5
1010cad8:	1804977a 	slli	r2,r3,29
1010cadc:	1806927a 	slli	r3,r3,9
1010cae0:	8822d0fa 	srli	r17,r17,3
1010cae4:	8401ffcc 	andi	r16,r16,2047
1010cae8:	180ad33a 	srli	r5,r3,12
1010caec:	9100004c 	andi	r4,r18,1
1010caf0:	1444b03a 	or	r2,r2,r17
1010caf4:	80c1ffcc 	andi	r3,r16,2047
1010caf8:	1820953a 	slli	r16,r3,20
1010cafc:	20c03fcc 	andi	r3,r4,255
1010cb00:	180897fa 	slli	r4,r3,31
1010cb04:	00c00434 	movhi	r3,16
1010cb08:	18ffffc4 	addi	r3,r3,-1
1010cb0c:	28c6703a 	and	r3,r5,r3
1010cb10:	1c06b03a 	or	r3,r3,r16
1010cb14:	1906b03a 	or	r3,r3,r4
1010cb18:	dfc00417 	ldw	ra,16(sp)
1010cb1c:	dcc00317 	ldw	r19,12(sp)
1010cb20:	dc800217 	ldw	r18,8(sp)
1010cb24:	dc400117 	ldw	r17,4(sp)
1010cb28:	dc000017 	ldw	r16,0(sp)
1010cb2c:	dec00504 	addi	sp,sp,20
1010cb30:	f800283a 	ret
1010cb34:	0101ffc4 	movi	r4,2047
1010cb38:	813fd626 	beq	r16,r4,1010ca94 <__alt_data_end+0xfffeca94>
1010cb3c:	29402034 	orhi	r5,r5,128
1010cb40:	01000e04 	movi	r4,56
1010cb44:	2080a316 	blt	r4,r2,1010cdd4 <__subdf3+0x3c4>
1010cb48:	010007c4 	movi	r4,31
1010cb4c:	2080c616 	blt	r4,r2,1010ce68 <__subdf3+0x458>
1010cb50:	01000804 	movi	r4,32
1010cb54:	2089c83a 	sub	r4,r4,r2
1010cb58:	2910983a 	sll	r8,r5,r4
1010cb5c:	308ed83a 	srl	r7,r6,r2
1010cb60:	3108983a 	sll	r4,r6,r4
1010cb64:	2884d83a 	srl	r2,r5,r2
1010cb68:	41ccb03a 	or	r6,r8,r7
1010cb6c:	2008c03a 	cmpne	r4,r4,zero
1010cb70:	310cb03a 	or	r6,r6,r4
1010cb74:	898dc83a 	sub	r6,r17,r6
1010cb78:	89a3803a 	cmpltu	r17,r17,r6
1010cb7c:	1887c83a 	sub	r3,r3,r2
1010cb80:	1c47c83a 	sub	r3,r3,r17
1010cb84:	3023883a 	mov	r17,r6
1010cb88:	1880202c 	andhi	r2,r3,128
1010cb8c:	10002326 	beq	r2,zero,1010cc1c <__subdf3+0x20c>
1010cb90:	04c02034 	movhi	r19,128
1010cb94:	9cffffc4 	addi	r19,r19,-1
1010cb98:	1ce6703a 	and	r19,r3,r19
1010cb9c:	98007a26 	beq	r19,zero,1010cd88 <__subdf3+0x378>
1010cba0:	9809883a 	mov	r4,r19
1010cba4:	010d5100 	call	1010d510 <__clzsi2>
1010cba8:	113ffe04 	addi	r4,r2,-8
1010cbac:	00c007c4 	movi	r3,31
1010cbb0:	19007b16 	blt	r3,r4,1010cda0 <__subdf3+0x390>
1010cbb4:	00800804 	movi	r2,32
1010cbb8:	1105c83a 	sub	r2,r2,r4
1010cbbc:	8884d83a 	srl	r2,r17,r2
1010cbc0:	9906983a 	sll	r3,r19,r4
1010cbc4:	8922983a 	sll	r17,r17,r4
1010cbc8:	10c4b03a 	or	r2,r2,r3
1010cbcc:	24007816 	blt	r4,r16,1010cdb0 <__subdf3+0x3a0>
1010cbd0:	2421c83a 	sub	r16,r4,r16
1010cbd4:	80c00044 	addi	r3,r16,1
1010cbd8:	010007c4 	movi	r4,31
1010cbdc:	20c09516 	blt	r4,r3,1010ce34 <__subdf3+0x424>
1010cbe0:	01400804 	movi	r5,32
1010cbe4:	28cbc83a 	sub	r5,r5,r3
1010cbe8:	88c8d83a 	srl	r4,r17,r3
1010cbec:	8962983a 	sll	r17,r17,r5
1010cbf0:	114a983a 	sll	r5,r2,r5
1010cbf4:	10c6d83a 	srl	r3,r2,r3
1010cbf8:	8804c03a 	cmpne	r2,r17,zero
1010cbfc:	290ab03a 	or	r5,r5,r4
1010cc00:	28a2b03a 	or	r17,r5,r2
1010cc04:	0021883a 	mov	r16,zero
1010cc08:	003fa206 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010cc0c:	2090b03a 	or	r8,r4,r2
1010cc10:	40018e26 	beq	r8,zero,1010d24c <__subdf3+0x83c>
1010cc14:	1007883a 	mov	r3,r2
1010cc18:	2023883a 	mov	r17,r4
1010cc1c:	888001cc 	andi	r2,r17,7
1010cc20:	103f9e1e 	bne	r2,zero,1010ca9c <__alt_data_end+0xfffeca9c>
1010cc24:	1804977a 	slli	r2,r3,29
1010cc28:	8822d0fa 	srli	r17,r17,3
1010cc2c:	1810d0fa 	srli	r8,r3,3
1010cc30:	9100004c 	andi	r4,r18,1
1010cc34:	1444b03a 	or	r2,r2,r17
1010cc38:	00c1ffc4 	movi	r3,2047
1010cc3c:	80c02826 	beq	r16,r3,1010cce0 <__subdf3+0x2d0>
1010cc40:	01400434 	movhi	r5,16
1010cc44:	297fffc4 	addi	r5,r5,-1
1010cc48:	80e0703a 	and	r16,r16,r3
1010cc4c:	414a703a 	and	r5,r8,r5
1010cc50:	003fa806 	br	1010caf4 <__alt_data_end+0xfffecaf4>
1010cc54:	0080630e 	bge	zero,r2,1010cde4 <__subdf3+0x3d4>
1010cc58:	48003026 	beq	r9,zero,1010cd1c <__subdf3+0x30c>
1010cc5c:	0101ffc4 	movi	r4,2047
1010cc60:	813f8c26 	beq	r16,r4,1010ca94 <__alt_data_end+0xfffeca94>
1010cc64:	29402034 	orhi	r5,r5,128
1010cc68:	01000e04 	movi	r4,56
1010cc6c:	2080a90e 	bge	r4,r2,1010cf14 <__subdf3+0x504>
1010cc70:	298cb03a 	or	r6,r5,r6
1010cc74:	3012c03a 	cmpne	r9,r6,zero
1010cc78:	0005883a 	mov	r2,zero
1010cc7c:	4c53883a 	add	r9,r9,r17
1010cc80:	4c63803a 	cmpltu	r17,r9,r17
1010cc84:	10c7883a 	add	r3,r2,r3
1010cc88:	88c7883a 	add	r3,r17,r3
1010cc8c:	4823883a 	mov	r17,r9
1010cc90:	1880202c 	andhi	r2,r3,128
1010cc94:	1000d026 	beq	r2,zero,1010cfd8 <__subdf3+0x5c8>
1010cc98:	84000044 	addi	r16,r16,1
1010cc9c:	0081ffc4 	movi	r2,2047
1010cca0:	8080fe26 	beq	r16,r2,1010d09c <__subdf3+0x68c>
1010cca4:	00bfe034 	movhi	r2,65408
1010cca8:	10bfffc4 	addi	r2,r2,-1
1010ccac:	1886703a 	and	r3,r3,r2
1010ccb0:	880ad07a 	srli	r5,r17,1
1010ccb4:	180497fa 	slli	r2,r3,31
1010ccb8:	8900004c 	andi	r4,r17,1
1010ccbc:	2922b03a 	or	r17,r5,r4
1010ccc0:	1806d07a 	srli	r3,r3,1
1010ccc4:	1462b03a 	or	r17,r2,r17
1010ccc8:	3825883a 	mov	r18,r7
1010cccc:	003f7106 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010ccd0:	2984b03a 	or	r2,r5,r6
1010ccd4:	103f6826 	beq	r2,zero,1010ca78 <__alt_data_end+0xfffeca78>
1010ccd8:	39c03fcc 	andi	r7,r7,255
1010ccdc:	003f6706 	br	1010ca7c <__alt_data_end+0xfffeca7c>
1010cce0:	4086b03a 	or	r3,r8,r2
1010cce4:	18015226 	beq	r3,zero,1010d230 <__subdf3+0x820>
1010cce8:	00c00434 	movhi	r3,16
1010ccec:	41400234 	orhi	r5,r8,8
1010ccf0:	18ffffc4 	addi	r3,r3,-1
1010ccf4:	28ca703a 	and	r5,r5,r3
1010ccf8:	003f7e06 	br	1010caf4 <__alt_data_end+0xfffecaf4>
1010ccfc:	10bfffc4 	addi	r2,r2,-1
1010cd00:	1000491e 	bne	r2,zero,1010ce28 <__subdf3+0x418>
1010cd04:	898fc83a 	sub	r7,r17,r6
1010cd08:	89e3803a 	cmpltu	r17,r17,r7
1010cd0c:	1947c83a 	sub	r3,r3,r5
1010cd10:	1c47c83a 	sub	r3,r3,r17
1010cd14:	3823883a 	mov	r17,r7
1010cd18:	003f9b06 	br	1010cb88 <__alt_data_end+0xfffecb88>
1010cd1c:	2988b03a 	or	r4,r5,r6
1010cd20:	203f5c26 	beq	r4,zero,1010ca94 <__alt_data_end+0xfffeca94>
1010cd24:	10bfffc4 	addi	r2,r2,-1
1010cd28:	1000931e 	bne	r2,zero,1010cf78 <__subdf3+0x568>
1010cd2c:	898d883a 	add	r6,r17,r6
1010cd30:	3463803a 	cmpltu	r17,r6,r17
1010cd34:	1947883a 	add	r3,r3,r5
1010cd38:	88c7883a 	add	r3,r17,r3
1010cd3c:	3023883a 	mov	r17,r6
1010cd40:	003fd306 	br	1010cc90 <__alt_data_end+0xfffecc90>
1010cd44:	1000541e 	bne	r2,zero,1010ce98 <__subdf3+0x488>
1010cd48:	80800044 	addi	r2,r16,1
1010cd4c:	1081ffcc 	andi	r2,r2,2047
1010cd50:	01000044 	movi	r4,1
1010cd54:	2080a20e 	bge	r4,r2,1010cfe0 <__subdf3+0x5d0>
1010cd58:	8989c83a 	sub	r4,r17,r6
1010cd5c:	8905803a 	cmpltu	r2,r17,r4
1010cd60:	1967c83a 	sub	r19,r3,r5
1010cd64:	98a7c83a 	sub	r19,r19,r2
1010cd68:	9880202c 	andhi	r2,r19,128
1010cd6c:	10006326 	beq	r2,zero,1010cefc <__subdf3+0x4ec>
1010cd70:	3463c83a 	sub	r17,r6,r17
1010cd74:	28c7c83a 	sub	r3,r5,r3
1010cd78:	344d803a 	cmpltu	r6,r6,r17
1010cd7c:	19a7c83a 	sub	r19,r3,r6
1010cd80:	3825883a 	mov	r18,r7
1010cd84:	983f861e 	bne	r19,zero,1010cba0 <__alt_data_end+0xfffecba0>
1010cd88:	8809883a 	mov	r4,r17
1010cd8c:	010d5100 	call	1010d510 <__clzsi2>
1010cd90:	10800804 	addi	r2,r2,32
1010cd94:	113ffe04 	addi	r4,r2,-8
1010cd98:	00c007c4 	movi	r3,31
1010cd9c:	193f850e 	bge	r3,r4,1010cbb4 <__alt_data_end+0xfffecbb4>
1010cda0:	10bff604 	addi	r2,r2,-40
1010cda4:	8884983a 	sll	r2,r17,r2
1010cda8:	0023883a 	mov	r17,zero
1010cdac:	243f880e 	bge	r4,r16,1010cbd0 <__alt_data_end+0xfffecbd0>
1010cdb0:	00ffe034 	movhi	r3,65408
1010cdb4:	18ffffc4 	addi	r3,r3,-1
1010cdb8:	8121c83a 	sub	r16,r16,r4
1010cdbc:	10c6703a 	and	r3,r2,r3
1010cdc0:	003f3406 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010cdc4:	9100004c 	andi	r4,r18,1
1010cdc8:	000b883a 	mov	r5,zero
1010cdcc:	0005883a 	mov	r2,zero
1010cdd0:	003f4806 	br	1010caf4 <__alt_data_end+0xfffecaf4>
1010cdd4:	298cb03a 	or	r6,r5,r6
1010cdd8:	300cc03a 	cmpne	r6,r6,zero
1010cddc:	0005883a 	mov	r2,zero
1010cde0:	003f6406 	br	1010cb74 <__alt_data_end+0xfffecb74>
1010cde4:	10009a1e 	bne	r2,zero,1010d050 <__subdf3+0x640>
1010cde8:	82400044 	addi	r9,r16,1
1010cdec:	4881ffcc 	andi	r2,r9,2047
1010cdf0:	02800044 	movi	r10,1
1010cdf4:	5080670e 	bge	r10,r2,1010cf94 <__subdf3+0x584>
1010cdf8:	0081ffc4 	movi	r2,2047
1010cdfc:	4880af26 	beq	r9,r2,1010d0bc <__subdf3+0x6ac>
1010ce00:	898d883a 	add	r6,r17,r6
1010ce04:	1945883a 	add	r2,r3,r5
1010ce08:	3447803a 	cmpltu	r3,r6,r17
1010ce0c:	1887883a 	add	r3,r3,r2
1010ce10:	182297fa 	slli	r17,r3,31
1010ce14:	300cd07a 	srli	r6,r6,1
1010ce18:	1806d07a 	srli	r3,r3,1
1010ce1c:	4821883a 	mov	r16,r9
1010ce20:	89a2b03a 	or	r17,r17,r6
1010ce24:	003f1b06 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010ce28:	0101ffc4 	movi	r4,2047
1010ce2c:	813f441e 	bne	r16,r4,1010cb40 <__alt_data_end+0xfffecb40>
1010ce30:	003f1806 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010ce34:	843ff844 	addi	r16,r16,-31
1010ce38:	01400804 	movi	r5,32
1010ce3c:	1408d83a 	srl	r4,r2,r16
1010ce40:	19405026 	beq	r3,r5,1010cf84 <__subdf3+0x574>
1010ce44:	01401004 	movi	r5,64
1010ce48:	28c7c83a 	sub	r3,r5,r3
1010ce4c:	10c4983a 	sll	r2,r2,r3
1010ce50:	88a2b03a 	or	r17,r17,r2
1010ce54:	8822c03a 	cmpne	r17,r17,zero
1010ce58:	2462b03a 	or	r17,r4,r17
1010ce5c:	0007883a 	mov	r3,zero
1010ce60:	0021883a 	mov	r16,zero
1010ce64:	003f6d06 	br	1010cc1c <__alt_data_end+0xfffecc1c>
1010ce68:	11fff804 	addi	r7,r2,-32
1010ce6c:	01000804 	movi	r4,32
1010ce70:	29ced83a 	srl	r7,r5,r7
1010ce74:	11004526 	beq	r2,r4,1010cf8c <__subdf3+0x57c>
1010ce78:	01001004 	movi	r4,64
1010ce7c:	2089c83a 	sub	r4,r4,r2
1010ce80:	2904983a 	sll	r2,r5,r4
1010ce84:	118cb03a 	or	r6,r2,r6
1010ce88:	300cc03a 	cmpne	r6,r6,zero
1010ce8c:	398cb03a 	or	r6,r7,r6
1010ce90:	0005883a 	mov	r2,zero
1010ce94:	003f3706 	br	1010cb74 <__alt_data_end+0xfffecb74>
1010ce98:	80002a26 	beq	r16,zero,1010cf44 <__subdf3+0x534>
1010ce9c:	0101ffc4 	movi	r4,2047
1010cea0:	49006626 	beq	r9,r4,1010d03c <__subdf3+0x62c>
1010cea4:	0085c83a 	sub	r2,zero,r2
1010cea8:	18c02034 	orhi	r3,r3,128
1010ceac:	01000e04 	movi	r4,56
1010ceb0:	20807e16 	blt	r4,r2,1010d0ac <__subdf3+0x69c>
1010ceb4:	010007c4 	movi	r4,31
1010ceb8:	2080e716 	blt	r4,r2,1010d258 <__subdf3+0x848>
1010cebc:	01000804 	movi	r4,32
1010cec0:	2089c83a 	sub	r4,r4,r2
1010cec4:	1914983a 	sll	r10,r3,r4
1010cec8:	8890d83a 	srl	r8,r17,r2
1010cecc:	8908983a 	sll	r4,r17,r4
1010ced0:	1884d83a 	srl	r2,r3,r2
1010ced4:	5222b03a 	or	r17,r10,r8
1010ced8:	2006c03a 	cmpne	r3,r4,zero
1010cedc:	88e2b03a 	or	r17,r17,r3
1010cee0:	3463c83a 	sub	r17,r6,r17
1010cee4:	2885c83a 	sub	r2,r5,r2
1010cee8:	344d803a 	cmpltu	r6,r6,r17
1010ceec:	1187c83a 	sub	r3,r2,r6
1010cef0:	4821883a 	mov	r16,r9
1010cef4:	3825883a 	mov	r18,r7
1010cef8:	003f2306 	br	1010cb88 <__alt_data_end+0xfffecb88>
1010cefc:	24d0b03a 	or	r8,r4,r19
1010cf00:	40001b1e 	bne	r8,zero,1010cf70 <__subdf3+0x560>
1010cf04:	0005883a 	mov	r2,zero
1010cf08:	0009883a 	mov	r4,zero
1010cf0c:	0021883a 	mov	r16,zero
1010cf10:	003f4906 	br	1010cc38 <__alt_data_end+0xfffecc38>
1010cf14:	010007c4 	movi	r4,31
1010cf18:	20803a16 	blt	r4,r2,1010d004 <__subdf3+0x5f4>
1010cf1c:	01000804 	movi	r4,32
1010cf20:	2089c83a 	sub	r4,r4,r2
1010cf24:	2912983a 	sll	r9,r5,r4
1010cf28:	3090d83a 	srl	r8,r6,r2
1010cf2c:	3108983a 	sll	r4,r6,r4
1010cf30:	2884d83a 	srl	r2,r5,r2
1010cf34:	4a12b03a 	or	r9,r9,r8
1010cf38:	2008c03a 	cmpne	r4,r4,zero
1010cf3c:	4912b03a 	or	r9,r9,r4
1010cf40:	003f4e06 	br	1010cc7c <__alt_data_end+0xfffecc7c>
1010cf44:	1c48b03a 	or	r4,r3,r17
1010cf48:	20003c26 	beq	r4,zero,1010d03c <__subdf3+0x62c>
1010cf4c:	0084303a 	nor	r2,zero,r2
1010cf50:	1000381e 	bne	r2,zero,1010d034 <__subdf3+0x624>
1010cf54:	3463c83a 	sub	r17,r6,r17
1010cf58:	28c5c83a 	sub	r2,r5,r3
1010cf5c:	344d803a 	cmpltu	r6,r6,r17
1010cf60:	1187c83a 	sub	r3,r2,r6
1010cf64:	4821883a 	mov	r16,r9
1010cf68:	3825883a 	mov	r18,r7
1010cf6c:	003f0606 	br	1010cb88 <__alt_data_end+0xfffecb88>
1010cf70:	2023883a 	mov	r17,r4
1010cf74:	003f0906 	br	1010cb9c <__alt_data_end+0xfffecb9c>
1010cf78:	0101ffc4 	movi	r4,2047
1010cf7c:	813f3a1e 	bne	r16,r4,1010cc68 <__alt_data_end+0xfffecc68>
1010cf80:	003ec406 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010cf84:	0005883a 	mov	r2,zero
1010cf88:	003fb106 	br	1010ce50 <__alt_data_end+0xfffece50>
1010cf8c:	0005883a 	mov	r2,zero
1010cf90:	003fbc06 	br	1010ce84 <__alt_data_end+0xfffece84>
1010cf94:	1c44b03a 	or	r2,r3,r17
1010cf98:	80008e1e 	bne	r16,zero,1010d1d4 <__subdf3+0x7c4>
1010cf9c:	1000c826 	beq	r2,zero,1010d2c0 <__subdf3+0x8b0>
1010cfa0:	2984b03a 	or	r2,r5,r6
1010cfa4:	103ebb26 	beq	r2,zero,1010ca94 <__alt_data_end+0xfffeca94>
1010cfa8:	8989883a 	add	r4,r17,r6
1010cfac:	1945883a 	add	r2,r3,r5
1010cfb0:	2447803a 	cmpltu	r3,r4,r17
1010cfb4:	1887883a 	add	r3,r3,r2
1010cfb8:	1880202c 	andhi	r2,r3,128
1010cfbc:	2023883a 	mov	r17,r4
1010cfc0:	103f1626 	beq	r2,zero,1010cc1c <__alt_data_end+0xfffecc1c>
1010cfc4:	00bfe034 	movhi	r2,65408
1010cfc8:	10bfffc4 	addi	r2,r2,-1
1010cfcc:	5021883a 	mov	r16,r10
1010cfd0:	1886703a 	and	r3,r3,r2
1010cfd4:	003eaf06 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010cfd8:	3825883a 	mov	r18,r7
1010cfdc:	003f0f06 	br	1010cc1c <__alt_data_end+0xfffecc1c>
1010cfe0:	1c44b03a 	or	r2,r3,r17
1010cfe4:	8000251e 	bne	r16,zero,1010d07c <__subdf3+0x66c>
1010cfe8:	1000661e 	bne	r2,zero,1010d184 <__subdf3+0x774>
1010cfec:	2990b03a 	or	r8,r5,r6
1010cff0:	40009626 	beq	r8,zero,1010d24c <__subdf3+0x83c>
1010cff4:	2807883a 	mov	r3,r5
1010cff8:	3023883a 	mov	r17,r6
1010cffc:	3825883a 	mov	r18,r7
1010d000:	003ea406 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d004:	127ff804 	addi	r9,r2,-32
1010d008:	01000804 	movi	r4,32
1010d00c:	2a52d83a 	srl	r9,r5,r9
1010d010:	11008c26 	beq	r2,r4,1010d244 <__subdf3+0x834>
1010d014:	01001004 	movi	r4,64
1010d018:	2085c83a 	sub	r2,r4,r2
1010d01c:	2884983a 	sll	r2,r5,r2
1010d020:	118cb03a 	or	r6,r2,r6
1010d024:	300cc03a 	cmpne	r6,r6,zero
1010d028:	4992b03a 	or	r9,r9,r6
1010d02c:	0005883a 	mov	r2,zero
1010d030:	003f1206 	br	1010cc7c <__alt_data_end+0xfffecc7c>
1010d034:	0101ffc4 	movi	r4,2047
1010d038:	493f9c1e 	bne	r9,r4,1010ceac <__alt_data_end+0xfffeceac>
1010d03c:	2807883a 	mov	r3,r5
1010d040:	3023883a 	mov	r17,r6
1010d044:	4821883a 	mov	r16,r9
1010d048:	3825883a 	mov	r18,r7
1010d04c:	003e9106 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d050:	80001f1e 	bne	r16,zero,1010d0d0 <__subdf3+0x6c0>
1010d054:	1c48b03a 	or	r4,r3,r17
1010d058:	20005a26 	beq	r4,zero,1010d1c4 <__subdf3+0x7b4>
1010d05c:	0084303a 	nor	r2,zero,r2
1010d060:	1000561e 	bne	r2,zero,1010d1bc <__subdf3+0x7ac>
1010d064:	89a3883a 	add	r17,r17,r6
1010d068:	1945883a 	add	r2,r3,r5
1010d06c:	898d803a 	cmpltu	r6,r17,r6
1010d070:	3087883a 	add	r3,r6,r2
1010d074:	4821883a 	mov	r16,r9
1010d078:	003f0506 	br	1010cc90 <__alt_data_end+0xfffecc90>
1010d07c:	10002b1e 	bne	r2,zero,1010d12c <__subdf3+0x71c>
1010d080:	2984b03a 	or	r2,r5,r6
1010d084:	10008026 	beq	r2,zero,1010d288 <__subdf3+0x878>
1010d088:	2807883a 	mov	r3,r5
1010d08c:	3023883a 	mov	r17,r6
1010d090:	3825883a 	mov	r18,r7
1010d094:	0401ffc4 	movi	r16,2047
1010d098:	003e7e06 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d09c:	3809883a 	mov	r4,r7
1010d0a0:	0011883a 	mov	r8,zero
1010d0a4:	0005883a 	mov	r2,zero
1010d0a8:	003ee306 	br	1010cc38 <__alt_data_end+0xfffecc38>
1010d0ac:	1c62b03a 	or	r17,r3,r17
1010d0b0:	8822c03a 	cmpne	r17,r17,zero
1010d0b4:	0005883a 	mov	r2,zero
1010d0b8:	003f8906 	br	1010cee0 <__alt_data_end+0xfffecee0>
1010d0bc:	3809883a 	mov	r4,r7
1010d0c0:	4821883a 	mov	r16,r9
1010d0c4:	0011883a 	mov	r8,zero
1010d0c8:	0005883a 	mov	r2,zero
1010d0cc:	003eda06 	br	1010cc38 <__alt_data_end+0xfffecc38>
1010d0d0:	0101ffc4 	movi	r4,2047
1010d0d4:	49003b26 	beq	r9,r4,1010d1c4 <__subdf3+0x7b4>
1010d0d8:	0085c83a 	sub	r2,zero,r2
1010d0dc:	18c02034 	orhi	r3,r3,128
1010d0e0:	01000e04 	movi	r4,56
1010d0e4:	20806e16 	blt	r4,r2,1010d2a0 <__subdf3+0x890>
1010d0e8:	010007c4 	movi	r4,31
1010d0ec:	20807716 	blt	r4,r2,1010d2cc <__subdf3+0x8bc>
1010d0f0:	01000804 	movi	r4,32
1010d0f4:	2089c83a 	sub	r4,r4,r2
1010d0f8:	1914983a 	sll	r10,r3,r4
1010d0fc:	8890d83a 	srl	r8,r17,r2
1010d100:	8908983a 	sll	r4,r17,r4
1010d104:	1884d83a 	srl	r2,r3,r2
1010d108:	5222b03a 	or	r17,r10,r8
1010d10c:	2006c03a 	cmpne	r3,r4,zero
1010d110:	88e2b03a 	or	r17,r17,r3
1010d114:	89a3883a 	add	r17,r17,r6
1010d118:	1145883a 	add	r2,r2,r5
1010d11c:	898d803a 	cmpltu	r6,r17,r6
1010d120:	3087883a 	add	r3,r6,r2
1010d124:	4821883a 	mov	r16,r9
1010d128:	003ed906 	br	1010cc90 <__alt_data_end+0xfffecc90>
1010d12c:	2984b03a 	or	r2,r5,r6
1010d130:	10004226 	beq	r2,zero,1010d23c <__subdf3+0x82c>
1010d134:	1808d0fa 	srli	r4,r3,3
1010d138:	8822d0fa 	srli	r17,r17,3
1010d13c:	1806977a 	slli	r3,r3,29
1010d140:	2080022c 	andhi	r2,r4,8
1010d144:	1c62b03a 	or	r17,r3,r17
1010d148:	10000826 	beq	r2,zero,1010d16c <__subdf3+0x75c>
1010d14c:	2812d0fa 	srli	r9,r5,3
1010d150:	4880022c 	andhi	r2,r9,8
1010d154:	1000051e 	bne	r2,zero,1010d16c <__subdf3+0x75c>
1010d158:	300cd0fa 	srli	r6,r6,3
1010d15c:	2804977a 	slli	r2,r5,29
1010d160:	4809883a 	mov	r4,r9
1010d164:	3825883a 	mov	r18,r7
1010d168:	11a2b03a 	or	r17,r2,r6
1010d16c:	8806d77a 	srli	r3,r17,29
1010d170:	200890fa 	slli	r4,r4,3
1010d174:	882290fa 	slli	r17,r17,3
1010d178:	0401ffc4 	movi	r16,2047
1010d17c:	1906b03a 	or	r3,r3,r4
1010d180:	003e4406 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d184:	2984b03a 	or	r2,r5,r6
1010d188:	103e4226 	beq	r2,zero,1010ca94 <__alt_data_end+0xfffeca94>
1010d18c:	8989c83a 	sub	r4,r17,r6
1010d190:	8911803a 	cmpltu	r8,r17,r4
1010d194:	1945c83a 	sub	r2,r3,r5
1010d198:	1205c83a 	sub	r2,r2,r8
1010d19c:	1200202c 	andhi	r8,r2,128
1010d1a0:	403e9a26 	beq	r8,zero,1010cc0c <__alt_data_end+0xfffecc0c>
1010d1a4:	3463c83a 	sub	r17,r6,r17
1010d1a8:	28c5c83a 	sub	r2,r5,r3
1010d1ac:	344d803a 	cmpltu	r6,r6,r17
1010d1b0:	1187c83a 	sub	r3,r2,r6
1010d1b4:	3825883a 	mov	r18,r7
1010d1b8:	003e3606 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d1bc:	0101ffc4 	movi	r4,2047
1010d1c0:	493fc71e 	bne	r9,r4,1010d0e0 <__alt_data_end+0xfffed0e0>
1010d1c4:	2807883a 	mov	r3,r5
1010d1c8:	3023883a 	mov	r17,r6
1010d1cc:	4821883a 	mov	r16,r9
1010d1d0:	003e3006 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d1d4:	10003626 	beq	r2,zero,1010d2b0 <__subdf3+0x8a0>
1010d1d8:	2984b03a 	or	r2,r5,r6
1010d1dc:	10001726 	beq	r2,zero,1010d23c <__subdf3+0x82c>
1010d1e0:	1808d0fa 	srli	r4,r3,3
1010d1e4:	8822d0fa 	srli	r17,r17,3
1010d1e8:	1806977a 	slli	r3,r3,29
1010d1ec:	2080022c 	andhi	r2,r4,8
1010d1f0:	1c62b03a 	or	r17,r3,r17
1010d1f4:	10000726 	beq	r2,zero,1010d214 <__subdf3+0x804>
1010d1f8:	2812d0fa 	srli	r9,r5,3
1010d1fc:	4880022c 	andhi	r2,r9,8
1010d200:	1000041e 	bne	r2,zero,1010d214 <__subdf3+0x804>
1010d204:	300cd0fa 	srli	r6,r6,3
1010d208:	2804977a 	slli	r2,r5,29
1010d20c:	4809883a 	mov	r4,r9
1010d210:	11a2b03a 	or	r17,r2,r6
1010d214:	8806d77a 	srli	r3,r17,29
1010d218:	200890fa 	slli	r4,r4,3
1010d21c:	882290fa 	slli	r17,r17,3
1010d220:	3825883a 	mov	r18,r7
1010d224:	1906b03a 	or	r3,r3,r4
1010d228:	0401ffc4 	movi	r16,2047
1010d22c:	003e1906 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d230:	000b883a 	mov	r5,zero
1010d234:	0005883a 	mov	r2,zero
1010d238:	003e2e06 	br	1010caf4 <__alt_data_end+0xfffecaf4>
1010d23c:	0401ffc4 	movi	r16,2047
1010d240:	003e1406 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d244:	0005883a 	mov	r2,zero
1010d248:	003f7506 	br	1010d020 <__alt_data_end+0xfffed020>
1010d24c:	0005883a 	mov	r2,zero
1010d250:	0009883a 	mov	r4,zero
1010d254:	003e7806 	br	1010cc38 <__alt_data_end+0xfffecc38>
1010d258:	123ff804 	addi	r8,r2,-32
1010d25c:	01000804 	movi	r4,32
1010d260:	1a10d83a 	srl	r8,r3,r8
1010d264:	11002526 	beq	r2,r4,1010d2fc <__subdf3+0x8ec>
1010d268:	01001004 	movi	r4,64
1010d26c:	2085c83a 	sub	r2,r4,r2
1010d270:	1884983a 	sll	r2,r3,r2
1010d274:	1444b03a 	or	r2,r2,r17
1010d278:	1004c03a 	cmpne	r2,r2,zero
1010d27c:	40a2b03a 	or	r17,r8,r2
1010d280:	0005883a 	mov	r2,zero
1010d284:	003f1606 	br	1010cee0 <__alt_data_end+0xfffecee0>
1010d288:	02000434 	movhi	r8,16
1010d28c:	0009883a 	mov	r4,zero
1010d290:	423fffc4 	addi	r8,r8,-1
1010d294:	00bfffc4 	movi	r2,-1
1010d298:	0401ffc4 	movi	r16,2047
1010d29c:	003e6606 	br	1010cc38 <__alt_data_end+0xfffecc38>
1010d2a0:	1c62b03a 	or	r17,r3,r17
1010d2a4:	8822c03a 	cmpne	r17,r17,zero
1010d2a8:	0005883a 	mov	r2,zero
1010d2ac:	003f9906 	br	1010d114 <__alt_data_end+0xfffed114>
1010d2b0:	2807883a 	mov	r3,r5
1010d2b4:	3023883a 	mov	r17,r6
1010d2b8:	0401ffc4 	movi	r16,2047
1010d2bc:	003df506 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d2c0:	2807883a 	mov	r3,r5
1010d2c4:	3023883a 	mov	r17,r6
1010d2c8:	003df206 	br	1010ca94 <__alt_data_end+0xfffeca94>
1010d2cc:	123ff804 	addi	r8,r2,-32
1010d2d0:	01000804 	movi	r4,32
1010d2d4:	1a10d83a 	srl	r8,r3,r8
1010d2d8:	11000a26 	beq	r2,r4,1010d304 <__subdf3+0x8f4>
1010d2dc:	01001004 	movi	r4,64
1010d2e0:	2085c83a 	sub	r2,r4,r2
1010d2e4:	1884983a 	sll	r2,r3,r2
1010d2e8:	1444b03a 	or	r2,r2,r17
1010d2ec:	1004c03a 	cmpne	r2,r2,zero
1010d2f0:	40a2b03a 	or	r17,r8,r2
1010d2f4:	0005883a 	mov	r2,zero
1010d2f8:	003f8606 	br	1010d114 <__alt_data_end+0xfffed114>
1010d2fc:	0005883a 	mov	r2,zero
1010d300:	003fdc06 	br	1010d274 <__alt_data_end+0xfffed274>
1010d304:	0005883a 	mov	r2,zero
1010d308:	003ff706 	br	1010d2e8 <__alt_data_end+0xfffed2e8>

1010d30c <__fixdfsi>:
1010d30c:	280cd53a 	srli	r6,r5,20
1010d310:	00c00434 	movhi	r3,16
1010d314:	18ffffc4 	addi	r3,r3,-1
1010d318:	3181ffcc 	andi	r6,r6,2047
1010d31c:	01c0ff84 	movi	r7,1022
1010d320:	28c6703a 	and	r3,r5,r3
1010d324:	280ad7fa 	srli	r5,r5,31
1010d328:	3980120e 	bge	r7,r6,1010d374 <__fixdfsi+0x68>
1010d32c:	00810744 	movi	r2,1053
1010d330:	11800c16 	blt	r2,r6,1010d364 <__fixdfsi+0x58>
1010d334:	00810cc4 	movi	r2,1075
1010d338:	1185c83a 	sub	r2,r2,r6
1010d33c:	01c007c4 	movi	r7,31
1010d340:	18c00434 	orhi	r3,r3,16
1010d344:	38800d16 	blt	r7,r2,1010d37c <__fixdfsi+0x70>
1010d348:	31befb44 	addi	r6,r6,-1043
1010d34c:	2084d83a 	srl	r2,r4,r2
1010d350:	1986983a 	sll	r3,r3,r6
1010d354:	1884b03a 	or	r2,r3,r2
1010d358:	28000726 	beq	r5,zero,1010d378 <__fixdfsi+0x6c>
1010d35c:	0085c83a 	sub	r2,zero,r2
1010d360:	f800283a 	ret
1010d364:	00a00034 	movhi	r2,32768
1010d368:	10bfffc4 	addi	r2,r2,-1
1010d36c:	2885883a 	add	r2,r5,r2
1010d370:	f800283a 	ret
1010d374:	0005883a 	mov	r2,zero
1010d378:	f800283a 	ret
1010d37c:	008104c4 	movi	r2,1043
1010d380:	1185c83a 	sub	r2,r2,r6
1010d384:	1884d83a 	srl	r2,r3,r2
1010d388:	003ff306 	br	1010d358 <__alt_data_end+0xfffed358>

1010d38c <__floatsidf>:
1010d38c:	defffd04 	addi	sp,sp,-12
1010d390:	dfc00215 	stw	ra,8(sp)
1010d394:	dc400115 	stw	r17,4(sp)
1010d398:	dc000015 	stw	r16,0(sp)
1010d39c:	20002b26 	beq	r4,zero,1010d44c <__floatsidf+0xc0>
1010d3a0:	2023883a 	mov	r17,r4
1010d3a4:	2020d7fa 	srli	r16,r4,31
1010d3a8:	20002d16 	blt	r4,zero,1010d460 <__floatsidf+0xd4>
1010d3ac:	8809883a 	mov	r4,r17
1010d3b0:	010d5100 	call	1010d510 <__clzsi2>
1010d3b4:	01410784 	movi	r5,1054
1010d3b8:	288bc83a 	sub	r5,r5,r2
1010d3bc:	01010cc4 	movi	r4,1075
1010d3c0:	2149c83a 	sub	r4,r4,r5
1010d3c4:	00c007c4 	movi	r3,31
1010d3c8:	1900160e 	bge	r3,r4,1010d424 <__floatsidf+0x98>
1010d3cc:	00c104c4 	movi	r3,1043
1010d3d0:	1947c83a 	sub	r3,r3,r5
1010d3d4:	88c6983a 	sll	r3,r17,r3
1010d3d8:	00800434 	movhi	r2,16
1010d3dc:	10bfffc4 	addi	r2,r2,-1
1010d3e0:	1886703a 	and	r3,r3,r2
1010d3e4:	2941ffcc 	andi	r5,r5,2047
1010d3e8:	800d883a 	mov	r6,r16
1010d3ec:	0005883a 	mov	r2,zero
1010d3f0:	280a953a 	slli	r5,r5,20
1010d3f4:	31803fcc 	andi	r6,r6,255
1010d3f8:	01000434 	movhi	r4,16
1010d3fc:	300c97fa 	slli	r6,r6,31
1010d400:	213fffc4 	addi	r4,r4,-1
1010d404:	1906703a 	and	r3,r3,r4
1010d408:	1946b03a 	or	r3,r3,r5
1010d40c:	1986b03a 	or	r3,r3,r6
1010d410:	dfc00217 	ldw	ra,8(sp)
1010d414:	dc400117 	ldw	r17,4(sp)
1010d418:	dc000017 	ldw	r16,0(sp)
1010d41c:	dec00304 	addi	sp,sp,12
1010d420:	f800283a 	ret
1010d424:	00c002c4 	movi	r3,11
1010d428:	1887c83a 	sub	r3,r3,r2
1010d42c:	88c6d83a 	srl	r3,r17,r3
1010d430:	8904983a 	sll	r2,r17,r4
1010d434:	01000434 	movhi	r4,16
1010d438:	213fffc4 	addi	r4,r4,-1
1010d43c:	2941ffcc 	andi	r5,r5,2047
1010d440:	1906703a 	and	r3,r3,r4
1010d444:	800d883a 	mov	r6,r16
1010d448:	003fe906 	br	1010d3f0 <__alt_data_end+0xfffed3f0>
1010d44c:	000d883a 	mov	r6,zero
1010d450:	000b883a 	mov	r5,zero
1010d454:	0007883a 	mov	r3,zero
1010d458:	0005883a 	mov	r2,zero
1010d45c:	003fe406 	br	1010d3f0 <__alt_data_end+0xfffed3f0>
1010d460:	0123c83a 	sub	r17,zero,r4
1010d464:	003fd106 	br	1010d3ac <__alt_data_end+0xfffed3ac>

1010d468 <__floatunsidf>:
1010d468:	defffe04 	addi	sp,sp,-8
1010d46c:	dc000015 	stw	r16,0(sp)
1010d470:	dfc00115 	stw	ra,4(sp)
1010d474:	2021883a 	mov	r16,r4
1010d478:	20002226 	beq	r4,zero,1010d504 <__floatunsidf+0x9c>
1010d47c:	010d5100 	call	1010d510 <__clzsi2>
1010d480:	01010784 	movi	r4,1054
1010d484:	2089c83a 	sub	r4,r4,r2
1010d488:	01810cc4 	movi	r6,1075
1010d48c:	310dc83a 	sub	r6,r6,r4
1010d490:	00c007c4 	movi	r3,31
1010d494:	1980120e 	bge	r3,r6,1010d4e0 <__floatunsidf+0x78>
1010d498:	00c104c4 	movi	r3,1043
1010d49c:	1907c83a 	sub	r3,r3,r4
1010d4a0:	80ca983a 	sll	r5,r16,r3
1010d4a4:	00800434 	movhi	r2,16
1010d4a8:	10bfffc4 	addi	r2,r2,-1
1010d4ac:	2101ffcc 	andi	r4,r4,2047
1010d4b0:	0021883a 	mov	r16,zero
1010d4b4:	288a703a 	and	r5,r5,r2
1010d4b8:	2008953a 	slli	r4,r4,20
1010d4bc:	00c00434 	movhi	r3,16
1010d4c0:	18ffffc4 	addi	r3,r3,-1
1010d4c4:	28c6703a 	and	r3,r5,r3
1010d4c8:	8005883a 	mov	r2,r16
1010d4cc:	1906b03a 	or	r3,r3,r4
1010d4d0:	dfc00117 	ldw	ra,4(sp)
1010d4d4:	dc000017 	ldw	r16,0(sp)
1010d4d8:	dec00204 	addi	sp,sp,8
1010d4dc:	f800283a 	ret
1010d4e0:	00c002c4 	movi	r3,11
1010d4e4:	188bc83a 	sub	r5,r3,r2
1010d4e8:	814ad83a 	srl	r5,r16,r5
1010d4ec:	00c00434 	movhi	r3,16
1010d4f0:	18ffffc4 	addi	r3,r3,-1
1010d4f4:	81a0983a 	sll	r16,r16,r6
1010d4f8:	2101ffcc 	andi	r4,r4,2047
1010d4fc:	28ca703a 	and	r5,r5,r3
1010d500:	003fed06 	br	1010d4b8 <__alt_data_end+0xfffed4b8>
1010d504:	0009883a 	mov	r4,zero
1010d508:	000b883a 	mov	r5,zero
1010d50c:	003fea06 	br	1010d4b8 <__alt_data_end+0xfffed4b8>

1010d510 <__clzsi2>:
1010d510:	00bfffd4 	movui	r2,65535
1010d514:	11000536 	bltu	r2,r4,1010d52c <__clzsi2+0x1c>
1010d518:	00803fc4 	movi	r2,255
1010d51c:	11000f36 	bltu	r2,r4,1010d55c <__clzsi2+0x4c>
1010d520:	00800804 	movi	r2,32
1010d524:	0007883a 	mov	r3,zero
1010d528:	00000506 	br	1010d540 <__clzsi2+0x30>
1010d52c:	00804034 	movhi	r2,256
1010d530:	10bfffc4 	addi	r2,r2,-1
1010d534:	11000c2e 	bgeu	r2,r4,1010d568 <__clzsi2+0x58>
1010d538:	00800204 	movi	r2,8
1010d53c:	00c00604 	movi	r3,24
1010d540:	20c8d83a 	srl	r4,r4,r3
1010d544:	00c40474 	movhi	r3,4113
1010d548:	18c0d504 	addi	r3,r3,852
1010d54c:	1909883a 	add	r4,r3,r4
1010d550:	20c00003 	ldbu	r3,0(r4)
1010d554:	10c5c83a 	sub	r2,r2,r3
1010d558:	f800283a 	ret
1010d55c:	00800604 	movi	r2,24
1010d560:	00c00204 	movi	r3,8
1010d564:	003ff606 	br	1010d540 <__alt_data_end+0xfffed540>
1010d568:	00800404 	movi	r2,16
1010d56c:	1007883a 	mov	r3,r2
1010d570:	003ff306 	br	1010d540 <__alt_data_end+0xfffed540>

1010d574 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d574:	defffe04 	addi	sp,sp,-8
1010d578:	dfc00115 	stw	ra,4(sp)
1010d57c:	df000015 	stw	fp,0(sp)
1010d580:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d584:	d0a00b17 	ldw	r2,-32724(gp)
1010d588:	10000326 	beq	r2,zero,1010d598 <alt_get_errno+0x24>
1010d58c:	d0a00b17 	ldw	r2,-32724(gp)
1010d590:	103ee83a 	callr	r2
1010d594:	00000106 	br	1010d59c <alt_get_errno+0x28>
1010d598:	d0a6ff04 	addi	r2,gp,-25604
}
1010d59c:	e037883a 	mov	sp,fp
1010d5a0:	dfc00117 	ldw	ra,4(sp)
1010d5a4:	df000017 	ldw	fp,0(sp)
1010d5a8:	dec00204 	addi	sp,sp,8
1010d5ac:	f800283a 	ret

1010d5b0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1010d5b0:	defffb04 	addi	sp,sp,-20
1010d5b4:	dfc00415 	stw	ra,16(sp)
1010d5b8:	df000315 	stw	fp,12(sp)
1010d5bc:	df000304 	addi	fp,sp,12
1010d5c0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1010d5c4:	e0bfff17 	ldw	r2,-4(fp)
1010d5c8:	10000616 	blt	r2,zero,1010d5e4 <close+0x34>
1010d5cc:	e0bfff17 	ldw	r2,-4(fp)
1010d5d0:	10c00324 	muli	r3,r2,12
1010d5d4:	00840474 	movhi	r2,4113
1010d5d8:	10835804 	addi	r2,r2,3424
1010d5dc:	1885883a 	add	r2,r3,r2
1010d5e0:	00000106 	br	1010d5e8 <close+0x38>
1010d5e4:	0005883a 	mov	r2,zero
1010d5e8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1010d5ec:	e0bffd17 	ldw	r2,-12(fp)
1010d5f0:	10001926 	beq	r2,zero,1010d658 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1010d5f4:	e0bffd17 	ldw	r2,-12(fp)
1010d5f8:	10800017 	ldw	r2,0(r2)
1010d5fc:	10800417 	ldw	r2,16(r2)
1010d600:	10000626 	beq	r2,zero,1010d61c <close+0x6c>
1010d604:	e0bffd17 	ldw	r2,-12(fp)
1010d608:	10800017 	ldw	r2,0(r2)
1010d60c:	10800417 	ldw	r2,16(r2)
1010d610:	e13ffd17 	ldw	r4,-12(fp)
1010d614:	103ee83a 	callr	r2
1010d618:	00000106 	br	1010d620 <close+0x70>
1010d61c:	0005883a 	mov	r2,zero
1010d620:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1010d624:	e13fff17 	ldw	r4,-4(fp)
1010d628:	010dc700 	call	1010dc70 <alt_release_fd>
    if (rval < 0)
1010d62c:	e0bffe17 	ldw	r2,-8(fp)
1010d630:	1000070e 	bge	r2,zero,1010d650 <close+0xa0>
    {
      ALT_ERRNO = -rval;
1010d634:	010d5740 	call	1010d574 <alt_get_errno>
1010d638:	1007883a 	mov	r3,r2
1010d63c:	e0bffe17 	ldw	r2,-8(fp)
1010d640:	0085c83a 	sub	r2,zero,r2
1010d644:	18800015 	stw	r2,0(r3)
      return -1;
1010d648:	00bfffc4 	movi	r2,-1
1010d64c:	00000706 	br	1010d66c <close+0xbc>
    }
    return 0;
1010d650:	0005883a 	mov	r2,zero
1010d654:	00000506 	br	1010d66c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d658:	010d5740 	call	1010d574 <alt_get_errno>
1010d65c:	1007883a 	mov	r3,r2
1010d660:	00801444 	movi	r2,81
1010d664:	18800015 	stw	r2,0(r3)
    return -1;
1010d668:	00bfffc4 	movi	r2,-1
  }
}
1010d66c:	e037883a 	mov	sp,fp
1010d670:	dfc00117 	ldw	ra,4(sp)
1010d674:	df000017 	ldw	fp,0(sp)
1010d678:	dec00204 	addi	sp,sp,8
1010d67c:	f800283a 	ret

1010d680 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1010d680:	defffc04 	addi	sp,sp,-16
1010d684:	df000315 	stw	fp,12(sp)
1010d688:	df000304 	addi	fp,sp,12
1010d68c:	e13ffd15 	stw	r4,-12(fp)
1010d690:	e17ffe15 	stw	r5,-8(fp)
1010d694:	e1bfff15 	stw	r6,-4(fp)
  return len;
1010d698:	e0bfff17 	ldw	r2,-4(fp)
}
1010d69c:	e037883a 	mov	sp,fp
1010d6a0:	df000017 	ldw	fp,0(sp)
1010d6a4:	dec00104 	addi	sp,sp,4
1010d6a8:	f800283a 	ret

1010d6ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d6ac:	defffe04 	addi	sp,sp,-8
1010d6b0:	dfc00115 	stw	ra,4(sp)
1010d6b4:	df000015 	stw	fp,0(sp)
1010d6b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d6bc:	d0a00b17 	ldw	r2,-32724(gp)
1010d6c0:	10000326 	beq	r2,zero,1010d6d0 <alt_get_errno+0x24>
1010d6c4:	d0a00b17 	ldw	r2,-32724(gp)
1010d6c8:	103ee83a 	callr	r2
1010d6cc:	00000106 	br	1010d6d4 <alt_get_errno+0x28>
1010d6d0:	d0a6ff04 	addi	r2,gp,-25604
}
1010d6d4:	e037883a 	mov	sp,fp
1010d6d8:	dfc00117 	ldw	ra,4(sp)
1010d6dc:	df000017 	ldw	fp,0(sp)
1010d6e0:	dec00204 	addi	sp,sp,8
1010d6e4:	f800283a 	ret

1010d6e8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1010d6e8:	defffb04 	addi	sp,sp,-20
1010d6ec:	dfc00415 	stw	ra,16(sp)
1010d6f0:	df000315 	stw	fp,12(sp)
1010d6f4:	df000304 	addi	fp,sp,12
1010d6f8:	e13ffe15 	stw	r4,-8(fp)
1010d6fc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d700:	e0bffe17 	ldw	r2,-8(fp)
1010d704:	10000616 	blt	r2,zero,1010d720 <fstat+0x38>
1010d708:	e0bffe17 	ldw	r2,-8(fp)
1010d70c:	10c00324 	muli	r3,r2,12
1010d710:	00840474 	movhi	r2,4113
1010d714:	10835804 	addi	r2,r2,3424
1010d718:	1885883a 	add	r2,r3,r2
1010d71c:	00000106 	br	1010d724 <fstat+0x3c>
1010d720:	0005883a 	mov	r2,zero
1010d724:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1010d728:	e0bffd17 	ldw	r2,-12(fp)
1010d72c:	10001026 	beq	r2,zero,1010d770 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1010d730:	e0bffd17 	ldw	r2,-12(fp)
1010d734:	10800017 	ldw	r2,0(r2)
1010d738:	10800817 	ldw	r2,32(r2)
1010d73c:	10000726 	beq	r2,zero,1010d75c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
1010d740:	e0bffd17 	ldw	r2,-12(fp)
1010d744:	10800017 	ldw	r2,0(r2)
1010d748:	10800817 	ldw	r2,32(r2)
1010d74c:	e17fff17 	ldw	r5,-4(fp)
1010d750:	e13ffd17 	ldw	r4,-12(fp)
1010d754:	103ee83a 	callr	r2
1010d758:	00000a06 	br	1010d784 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1010d75c:	e0bfff17 	ldw	r2,-4(fp)
1010d760:	00c80004 	movi	r3,8192
1010d764:	10c00115 	stw	r3,4(r2)
      return 0;
1010d768:	0005883a 	mov	r2,zero
1010d76c:	00000506 	br	1010d784 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d770:	010d6ac0 	call	1010d6ac <alt_get_errno>
1010d774:	1007883a 	mov	r3,r2
1010d778:	00801444 	movi	r2,81
1010d77c:	18800015 	stw	r2,0(r3)
    return -1;
1010d780:	00bfffc4 	movi	r2,-1
  }
}
1010d784:	e037883a 	mov	sp,fp
1010d788:	dfc00117 	ldw	ra,4(sp)
1010d78c:	df000017 	ldw	fp,0(sp)
1010d790:	dec00204 	addi	sp,sp,8
1010d794:	f800283a 	ret

1010d798 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d798:	defffe04 	addi	sp,sp,-8
1010d79c:	dfc00115 	stw	ra,4(sp)
1010d7a0:	df000015 	stw	fp,0(sp)
1010d7a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d7a8:	d0a00b17 	ldw	r2,-32724(gp)
1010d7ac:	10000326 	beq	r2,zero,1010d7bc <alt_get_errno+0x24>
1010d7b0:	d0a00b17 	ldw	r2,-32724(gp)
1010d7b4:	103ee83a 	callr	r2
1010d7b8:	00000106 	br	1010d7c0 <alt_get_errno+0x28>
1010d7bc:	d0a6ff04 	addi	r2,gp,-25604
}
1010d7c0:	e037883a 	mov	sp,fp
1010d7c4:	dfc00117 	ldw	ra,4(sp)
1010d7c8:	df000017 	ldw	fp,0(sp)
1010d7cc:	dec00204 	addi	sp,sp,8
1010d7d0:	f800283a 	ret

1010d7d4 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1010d7d4:	deffed04 	addi	sp,sp,-76
1010d7d8:	dfc01215 	stw	ra,72(sp)
1010d7dc:	df001115 	stw	fp,68(sp)
1010d7e0:	df001104 	addi	fp,sp,68
1010d7e4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d7e8:	e0bfff17 	ldw	r2,-4(fp)
1010d7ec:	10000616 	blt	r2,zero,1010d808 <isatty+0x34>
1010d7f0:	e0bfff17 	ldw	r2,-4(fp)
1010d7f4:	10c00324 	muli	r3,r2,12
1010d7f8:	00840474 	movhi	r2,4113
1010d7fc:	10835804 	addi	r2,r2,3424
1010d800:	1885883a 	add	r2,r3,r2
1010d804:	00000106 	br	1010d80c <isatty+0x38>
1010d808:	0005883a 	mov	r2,zero
1010d80c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1010d810:	e0bfef17 	ldw	r2,-68(fp)
1010d814:	10000e26 	beq	r2,zero,1010d850 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
1010d818:	e0bfef17 	ldw	r2,-68(fp)
1010d81c:	10800017 	ldw	r2,0(r2)
1010d820:	10800817 	ldw	r2,32(r2)
1010d824:	1000021e 	bne	r2,zero,1010d830 <isatty+0x5c>
    {
      return 1;
1010d828:	00800044 	movi	r2,1
1010d82c:	00000d06 	br	1010d864 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1010d830:	e0bff004 	addi	r2,fp,-64
1010d834:	100b883a 	mov	r5,r2
1010d838:	e13fff17 	ldw	r4,-4(fp)
1010d83c:	010d6e80 	call	1010d6e8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1010d840:	e0bff117 	ldw	r2,-60(fp)
1010d844:	10880020 	cmpeqi	r2,r2,8192
1010d848:	10803fcc 	andi	r2,r2,255
1010d84c:	00000506 	br	1010d864 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1010d850:	010d7980 	call	1010d798 <alt_get_errno>
1010d854:	1007883a 	mov	r3,r2
1010d858:	00801444 	movi	r2,81
1010d85c:	18800015 	stw	r2,0(r3)
    return 0;
1010d860:	0005883a 	mov	r2,zero
  }
}
1010d864:	e037883a 	mov	sp,fp
1010d868:	dfc00117 	ldw	ra,4(sp)
1010d86c:	df000017 	ldw	fp,0(sp)
1010d870:	dec00204 	addi	sp,sp,8
1010d874:	f800283a 	ret

1010d878 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
1010d878:	defffc04 	addi	sp,sp,-16
1010d87c:	df000315 	stw	fp,12(sp)
1010d880:	df000304 	addi	fp,sp,12
1010d884:	e13ffd15 	stw	r4,-12(fp)
1010d888:	e17ffe15 	stw	r5,-8(fp)
1010d88c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
1010d890:	e0fffe17 	ldw	r3,-8(fp)
1010d894:	e0bffd17 	ldw	r2,-12(fp)
1010d898:	18800c26 	beq	r3,r2,1010d8cc <alt_load_section+0x54>
  {
    while( to != end )
1010d89c:	00000806 	br	1010d8c0 <alt_load_section+0x48>
    {
      *to++ = *from++;
1010d8a0:	e0bffe17 	ldw	r2,-8(fp)
1010d8a4:	10c00104 	addi	r3,r2,4
1010d8a8:	e0fffe15 	stw	r3,-8(fp)
1010d8ac:	e0fffd17 	ldw	r3,-12(fp)
1010d8b0:	19000104 	addi	r4,r3,4
1010d8b4:	e13ffd15 	stw	r4,-12(fp)
1010d8b8:	18c00017 	ldw	r3,0(r3)
1010d8bc:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
1010d8c0:	e0fffe17 	ldw	r3,-8(fp)
1010d8c4:	e0bfff17 	ldw	r2,-4(fp)
1010d8c8:	18bff51e 	bne	r3,r2,1010d8a0 <__alt_data_end+0xfffed8a0>
    {
      *to++ = *from++;
    }
  }
}
1010d8cc:	0001883a 	nop
1010d8d0:	e037883a 	mov	sp,fp
1010d8d4:	df000017 	ldw	fp,0(sp)
1010d8d8:	dec00104 	addi	sp,sp,4
1010d8dc:	f800283a 	ret

1010d8e0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1010d8e0:	defffe04 	addi	sp,sp,-8
1010d8e4:	dfc00115 	stw	ra,4(sp)
1010d8e8:	df000015 	stw	fp,0(sp)
1010d8ec:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1010d8f0:	01840474 	movhi	r6,4113
1010d8f4:	3187fc04 	addi	r6,r6,8176
1010d8f8:	01440474 	movhi	r5,4113
1010d8fc:	29412504 	addi	r5,r5,1172
1010d900:	01040474 	movhi	r4,4113
1010d904:	2107fc04 	addi	r4,r4,8176
1010d908:	010d8780 	call	1010d878 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
1010d90c:	01840434 	movhi	r6,4112
1010d910:	31809104 	addi	r6,r6,580
1010d914:	01440434 	movhi	r5,4112
1010d918:	29400804 	addi	r5,r5,32
1010d91c:	01040434 	movhi	r4,4112
1010d920:	21000804 	addi	r4,r4,32
1010d924:	010d8780 	call	1010d878 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
1010d928:	01840474 	movhi	r6,4113
1010d92c:	31812504 	addi	r6,r6,1172
1010d930:	01440474 	movhi	r5,4113
1010d934:	29404904 	addi	r5,r5,292
1010d938:	01040474 	movhi	r4,4113
1010d93c:	21004904 	addi	r4,r4,292
1010d940:	010d8780 	call	1010d878 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
1010d944:	010ef900 	call	1010ef90 <alt_dcache_flush_all>
  alt_icache_flush_all();
1010d948:	010f1f80 	call	1010f1f8 <alt_icache_flush_all>
}
1010d94c:	0001883a 	nop
1010d950:	e037883a 	mov	sp,fp
1010d954:	dfc00117 	ldw	ra,4(sp)
1010d958:	df000017 	ldw	fp,0(sp)
1010d95c:	dec00204 	addi	sp,sp,8
1010d960:	f800283a 	ret

1010d964 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010d964:	defffe04 	addi	sp,sp,-8
1010d968:	dfc00115 	stw	ra,4(sp)
1010d96c:	df000015 	stw	fp,0(sp)
1010d970:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010d974:	d0a00b17 	ldw	r2,-32724(gp)
1010d978:	10000326 	beq	r2,zero,1010d988 <alt_get_errno+0x24>
1010d97c:	d0a00b17 	ldw	r2,-32724(gp)
1010d980:	103ee83a 	callr	r2
1010d984:	00000106 	br	1010d98c <alt_get_errno+0x28>
1010d988:	d0a6ff04 	addi	r2,gp,-25604
}
1010d98c:	e037883a 	mov	sp,fp
1010d990:	dfc00117 	ldw	ra,4(sp)
1010d994:	df000017 	ldw	fp,0(sp)
1010d998:	dec00204 	addi	sp,sp,8
1010d99c:	f800283a 	ret

1010d9a0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
1010d9a0:	defff904 	addi	sp,sp,-28
1010d9a4:	dfc00615 	stw	ra,24(sp)
1010d9a8:	df000515 	stw	fp,20(sp)
1010d9ac:	df000504 	addi	fp,sp,20
1010d9b0:	e13ffd15 	stw	r4,-12(fp)
1010d9b4:	e17ffe15 	stw	r5,-8(fp)
1010d9b8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
1010d9bc:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010d9c0:	e0bffd17 	ldw	r2,-12(fp)
1010d9c4:	10000616 	blt	r2,zero,1010d9e0 <lseek+0x40>
1010d9c8:	e0bffd17 	ldw	r2,-12(fp)
1010d9cc:	10c00324 	muli	r3,r2,12
1010d9d0:	00840474 	movhi	r2,4113
1010d9d4:	10835804 	addi	r2,r2,3424
1010d9d8:	1885883a 	add	r2,r3,r2
1010d9dc:	00000106 	br	1010d9e4 <lseek+0x44>
1010d9e0:	0005883a 	mov	r2,zero
1010d9e4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
1010d9e8:	e0bffc17 	ldw	r2,-16(fp)
1010d9ec:	10001026 	beq	r2,zero,1010da30 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
1010d9f0:	e0bffc17 	ldw	r2,-16(fp)
1010d9f4:	10800017 	ldw	r2,0(r2)
1010d9f8:	10800717 	ldw	r2,28(r2)
1010d9fc:	10000926 	beq	r2,zero,1010da24 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
1010da00:	e0bffc17 	ldw	r2,-16(fp)
1010da04:	10800017 	ldw	r2,0(r2)
1010da08:	10800717 	ldw	r2,28(r2)
1010da0c:	e1bfff17 	ldw	r6,-4(fp)
1010da10:	e17ffe17 	ldw	r5,-8(fp)
1010da14:	e13ffc17 	ldw	r4,-16(fp)
1010da18:	103ee83a 	callr	r2
1010da1c:	e0bffb15 	stw	r2,-20(fp)
1010da20:	00000506 	br	1010da38 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
1010da24:	00bfde84 	movi	r2,-134
1010da28:	e0bffb15 	stw	r2,-20(fp)
1010da2c:	00000206 	br	1010da38 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
1010da30:	00bfebc4 	movi	r2,-81
1010da34:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
1010da38:	e0bffb17 	ldw	r2,-20(fp)
1010da3c:	1000070e 	bge	r2,zero,1010da5c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
1010da40:	010d9640 	call	1010d964 <alt_get_errno>
1010da44:	1007883a 	mov	r3,r2
1010da48:	e0bffb17 	ldw	r2,-20(fp)
1010da4c:	0085c83a 	sub	r2,zero,r2
1010da50:	18800015 	stw	r2,0(r3)
    rc = -1;
1010da54:	00bfffc4 	movi	r2,-1
1010da58:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
1010da5c:	e0bffb17 	ldw	r2,-20(fp)
}
1010da60:	e037883a 	mov	sp,fp
1010da64:	dfc00117 	ldw	ra,4(sp)
1010da68:	df000017 	ldw	fp,0(sp)
1010da6c:	dec00204 	addi	sp,sp,8
1010da70:	f800283a 	ret

1010da74 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
1010da74:	defffd04 	addi	sp,sp,-12
1010da78:	dfc00215 	stw	ra,8(sp)
1010da7c:	df000115 	stw	fp,4(sp)
1010da80:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
1010da84:	0009883a 	mov	r4,zero
1010da88:	010deec0 	call	1010deec <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
1010da8c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
1010da90:	010df240 	call	1010df24 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
1010da94:	01840474 	movhi	r6,4113
1010da98:	31811804 	addi	r6,r6,1120
1010da9c:	01440474 	movhi	r5,4113
1010daa0:	29411804 	addi	r5,r5,1120
1010daa4:	01040474 	movhi	r4,4113
1010daa8:	21011804 	addi	r4,r4,1120
1010daac:	010f5900 	call	1010f590 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1010dab0:	010f0b80 	call	1010f0b8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
1010dab4:	01040474 	movhi	r4,4113
1010dab8:	213c4604 	addi	r4,r4,-3816
1010dabc:	010fd900 	call	1010fd90 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1010dac0:	d0a70017 	ldw	r2,-25600(gp)
1010dac4:	d0e70117 	ldw	r3,-25596(gp)
1010dac8:	d1270217 	ldw	r4,-25592(gp)
1010dacc:	200d883a 	mov	r6,r4
1010dad0:	180b883a 	mov	r5,r3
1010dad4:	1009883a 	mov	r4,r2
1010dad8:	0100be40 	call	10100be4 <main>
1010dadc:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
1010dae0:	01000044 	movi	r4,1
1010dae4:	010d5b00 	call	1010d5b0 <close>
  exit (result);
1010dae8:	e13fff17 	ldw	r4,-4(fp)
1010daec:	010fda40 	call	1010fda4 <exit>

1010daf0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
1010daf0:	defffe04 	addi	sp,sp,-8
1010daf4:	df000115 	stw	fp,4(sp)
1010daf8:	df000104 	addi	fp,sp,4
1010dafc:	e13fff15 	stw	r4,-4(fp)
}
1010db00:	0001883a 	nop
1010db04:	e037883a 	mov	sp,fp
1010db08:	df000017 	ldw	fp,0(sp)
1010db0c:	dec00104 	addi	sp,sp,4
1010db10:	f800283a 	ret

1010db14 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
1010db14:	defffe04 	addi	sp,sp,-8
1010db18:	df000115 	stw	fp,4(sp)
1010db1c:	df000104 	addi	fp,sp,4
1010db20:	e13fff15 	stw	r4,-4(fp)
}
1010db24:	0001883a 	nop
1010db28:	e037883a 	mov	sp,fp
1010db2c:	df000017 	ldw	fp,0(sp)
1010db30:	dec00104 	addi	sp,sp,4
1010db34:	f800283a 	ret

1010db38 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010db38:	defffe04 	addi	sp,sp,-8
1010db3c:	dfc00115 	stw	ra,4(sp)
1010db40:	df000015 	stw	fp,0(sp)
1010db44:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010db48:	d0a00b17 	ldw	r2,-32724(gp)
1010db4c:	10000326 	beq	r2,zero,1010db5c <alt_get_errno+0x24>
1010db50:	d0a00b17 	ldw	r2,-32724(gp)
1010db54:	103ee83a 	callr	r2
1010db58:	00000106 	br	1010db60 <alt_get_errno+0x28>
1010db5c:	d0a6ff04 	addi	r2,gp,-25604
}
1010db60:	e037883a 	mov	sp,fp
1010db64:	dfc00117 	ldw	ra,4(sp)
1010db68:	df000017 	ldw	fp,0(sp)
1010db6c:	dec00204 	addi	sp,sp,8
1010db70:	f800283a 	ret

1010db74 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
1010db74:	defff904 	addi	sp,sp,-28
1010db78:	dfc00615 	stw	ra,24(sp)
1010db7c:	df000515 	stw	fp,20(sp)
1010db80:	df000504 	addi	fp,sp,20
1010db84:	e13ffd15 	stw	r4,-12(fp)
1010db88:	e17ffe15 	stw	r5,-8(fp)
1010db8c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010db90:	e0bffd17 	ldw	r2,-12(fp)
1010db94:	10000616 	blt	r2,zero,1010dbb0 <read+0x3c>
1010db98:	e0bffd17 	ldw	r2,-12(fp)
1010db9c:	10c00324 	muli	r3,r2,12
1010dba0:	00840474 	movhi	r2,4113
1010dba4:	10835804 	addi	r2,r2,3424
1010dba8:	1885883a 	add	r2,r3,r2
1010dbac:	00000106 	br	1010dbb4 <read+0x40>
1010dbb0:	0005883a 	mov	r2,zero
1010dbb4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010dbb8:	e0bffb17 	ldw	r2,-20(fp)
1010dbbc:	10002226 	beq	r2,zero,1010dc48 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010dbc0:	e0bffb17 	ldw	r2,-20(fp)
1010dbc4:	10800217 	ldw	r2,8(r2)
1010dbc8:	108000cc 	andi	r2,r2,3
1010dbcc:	10800060 	cmpeqi	r2,r2,1
1010dbd0:	1000181e 	bne	r2,zero,1010dc34 <read+0xc0>
        (fd->dev->read))
1010dbd4:	e0bffb17 	ldw	r2,-20(fp)
1010dbd8:	10800017 	ldw	r2,0(r2)
1010dbdc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
1010dbe0:	10001426 	beq	r2,zero,1010dc34 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1010dbe4:	e0bffb17 	ldw	r2,-20(fp)
1010dbe8:	10800017 	ldw	r2,0(r2)
1010dbec:	10800517 	ldw	r2,20(r2)
1010dbf0:	e0ffff17 	ldw	r3,-4(fp)
1010dbf4:	180d883a 	mov	r6,r3
1010dbf8:	e17ffe17 	ldw	r5,-8(fp)
1010dbfc:	e13ffb17 	ldw	r4,-20(fp)
1010dc00:	103ee83a 	callr	r2
1010dc04:	e0bffc15 	stw	r2,-16(fp)
1010dc08:	e0bffc17 	ldw	r2,-16(fp)
1010dc0c:	1000070e 	bge	r2,zero,1010dc2c <read+0xb8>
        {
          ALT_ERRNO = -rval;
1010dc10:	010db380 	call	1010db38 <alt_get_errno>
1010dc14:	1007883a 	mov	r3,r2
1010dc18:	e0bffc17 	ldw	r2,-16(fp)
1010dc1c:	0085c83a 	sub	r2,zero,r2
1010dc20:	18800015 	stw	r2,0(r3)
          return -1;
1010dc24:	00bfffc4 	movi	r2,-1
1010dc28:	00000c06 	br	1010dc5c <read+0xe8>
        }
        return rval;
1010dc2c:	e0bffc17 	ldw	r2,-16(fp)
1010dc30:	00000a06 	br	1010dc5c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
1010dc34:	010db380 	call	1010db38 <alt_get_errno>
1010dc38:	1007883a 	mov	r3,r2
1010dc3c:	00800344 	movi	r2,13
1010dc40:	18800015 	stw	r2,0(r3)
1010dc44:	00000406 	br	1010dc58 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
1010dc48:	010db380 	call	1010db38 <alt_get_errno>
1010dc4c:	1007883a 	mov	r3,r2
1010dc50:	00801444 	movi	r2,81
1010dc54:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010dc58:	00bfffc4 	movi	r2,-1
}
1010dc5c:	e037883a 	mov	sp,fp
1010dc60:	dfc00117 	ldw	ra,4(sp)
1010dc64:	df000017 	ldw	fp,0(sp)
1010dc68:	dec00204 	addi	sp,sp,8
1010dc6c:	f800283a 	ret

1010dc70 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
1010dc70:	defffe04 	addi	sp,sp,-8
1010dc74:	df000115 	stw	fp,4(sp)
1010dc78:	df000104 	addi	fp,sp,4
1010dc7c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
1010dc80:	e0bfff17 	ldw	r2,-4(fp)
1010dc84:	108000d0 	cmplti	r2,r2,3
1010dc88:	10000d1e 	bne	r2,zero,1010dcc0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
1010dc8c:	00840474 	movhi	r2,4113
1010dc90:	10835804 	addi	r2,r2,3424
1010dc94:	e0ffff17 	ldw	r3,-4(fp)
1010dc98:	18c00324 	muli	r3,r3,12
1010dc9c:	10c5883a 	add	r2,r2,r3
1010dca0:	10800204 	addi	r2,r2,8
1010dca4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
1010dca8:	00840474 	movhi	r2,4113
1010dcac:	10835804 	addi	r2,r2,3424
1010dcb0:	e0ffff17 	ldw	r3,-4(fp)
1010dcb4:	18c00324 	muli	r3,r3,12
1010dcb8:	10c5883a 	add	r2,r2,r3
1010dcbc:	10000015 	stw	zero,0(r2)
  }
}
1010dcc0:	0001883a 	nop
1010dcc4:	e037883a 	mov	sp,fp
1010dcc8:	df000017 	ldw	fp,0(sp)
1010dccc:	dec00104 	addi	sp,sp,4
1010dcd0:	f800283a 	ret

1010dcd4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1010dcd4:	defff904 	addi	sp,sp,-28
1010dcd8:	df000615 	stw	fp,24(sp)
1010dcdc:	df000604 	addi	fp,sp,24
1010dce0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010dce4:	0005303a 	rdctl	r2,status
1010dce8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010dcec:	e0fffe17 	ldw	r3,-8(fp)
1010dcf0:	00bfff84 	movi	r2,-2
1010dcf4:	1884703a 	and	r2,r3,r2
1010dcf8:	1001703a 	wrctl	status,r2
  
  return context;
1010dcfc:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
1010dd00:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1010dd04:	d0a00c17 	ldw	r2,-32720(gp)
1010dd08:	10c000c4 	addi	r3,r2,3
1010dd0c:	00bfff04 	movi	r2,-4
1010dd10:	1884703a 	and	r2,r3,r2
1010dd14:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
1010dd18:	d0e00c17 	ldw	r3,-32720(gp)
1010dd1c:	e0bfff17 	ldw	r2,-4(fp)
1010dd20:	1887883a 	add	r3,r3,r2
1010dd24:	008404b4 	movhi	r2,4114
1010dd28:	10800004 	addi	r2,r2,0
1010dd2c:	10c0062e 	bgeu	r2,r3,1010dd48 <sbrk+0x74>
1010dd30:	e0bffb17 	ldw	r2,-20(fp)
1010dd34:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010dd38:	e0bffa17 	ldw	r2,-24(fp)
1010dd3c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
1010dd40:	00bfffc4 	movi	r2,-1
1010dd44:	00000b06 	br	1010dd74 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
1010dd48:	d0a00c17 	ldw	r2,-32720(gp)
1010dd4c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
1010dd50:	d0e00c17 	ldw	r3,-32720(gp)
1010dd54:	e0bfff17 	ldw	r2,-4(fp)
1010dd58:	1885883a 	add	r2,r3,r2
1010dd5c:	d0a00c15 	stw	r2,-32720(gp)
1010dd60:	e0bffb17 	ldw	r2,-20(fp)
1010dd64:	e0bffc15 	stw	r2,-16(fp)
1010dd68:	e0bffc17 	ldw	r2,-16(fp)
1010dd6c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
1010dd70:	e0bffd17 	ldw	r2,-12(fp)
} 
1010dd74:	e037883a 	mov	sp,fp
1010dd78:	df000017 	ldw	fp,0(sp)
1010dd7c:	dec00104 	addi	sp,sp,4
1010dd80:	f800283a 	ret

1010dd84 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010dd84:	defffe04 	addi	sp,sp,-8
1010dd88:	dfc00115 	stw	ra,4(sp)
1010dd8c:	df000015 	stw	fp,0(sp)
1010dd90:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010dd94:	d0a00b17 	ldw	r2,-32724(gp)
1010dd98:	10000326 	beq	r2,zero,1010dda8 <alt_get_errno+0x24>
1010dd9c:	d0a00b17 	ldw	r2,-32724(gp)
1010dda0:	103ee83a 	callr	r2
1010dda4:	00000106 	br	1010ddac <alt_get_errno+0x28>
1010dda8:	d0a6ff04 	addi	r2,gp,-25604
}
1010ddac:	e037883a 	mov	sp,fp
1010ddb0:	dfc00117 	ldw	ra,4(sp)
1010ddb4:	df000017 	ldw	fp,0(sp)
1010ddb8:	dec00204 	addi	sp,sp,8
1010ddbc:	f800283a 	ret

1010ddc0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1010ddc0:	defff904 	addi	sp,sp,-28
1010ddc4:	dfc00615 	stw	ra,24(sp)
1010ddc8:	df000515 	stw	fp,20(sp)
1010ddcc:	df000504 	addi	fp,sp,20
1010ddd0:	e13ffd15 	stw	r4,-12(fp)
1010ddd4:	e17ffe15 	stw	r5,-8(fp)
1010ddd8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1010dddc:	e0bffd17 	ldw	r2,-12(fp)
1010dde0:	10000616 	blt	r2,zero,1010ddfc <write+0x3c>
1010dde4:	e0bffd17 	ldw	r2,-12(fp)
1010dde8:	10c00324 	muli	r3,r2,12
1010ddec:	00840474 	movhi	r2,4113
1010ddf0:	10835804 	addi	r2,r2,3424
1010ddf4:	1885883a 	add	r2,r3,r2
1010ddf8:	00000106 	br	1010de00 <write+0x40>
1010ddfc:	0005883a 	mov	r2,zero
1010de00:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
1010de04:	e0bffb17 	ldw	r2,-20(fp)
1010de08:	10002126 	beq	r2,zero,1010de90 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1010de0c:	e0bffb17 	ldw	r2,-20(fp)
1010de10:	10800217 	ldw	r2,8(r2)
1010de14:	108000cc 	andi	r2,r2,3
1010de18:	10001826 	beq	r2,zero,1010de7c <write+0xbc>
1010de1c:	e0bffb17 	ldw	r2,-20(fp)
1010de20:	10800017 	ldw	r2,0(r2)
1010de24:	10800617 	ldw	r2,24(r2)
1010de28:	10001426 	beq	r2,zero,1010de7c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
1010de2c:	e0bffb17 	ldw	r2,-20(fp)
1010de30:	10800017 	ldw	r2,0(r2)
1010de34:	10800617 	ldw	r2,24(r2)
1010de38:	e0ffff17 	ldw	r3,-4(fp)
1010de3c:	180d883a 	mov	r6,r3
1010de40:	e17ffe17 	ldw	r5,-8(fp)
1010de44:	e13ffb17 	ldw	r4,-20(fp)
1010de48:	103ee83a 	callr	r2
1010de4c:	e0bffc15 	stw	r2,-16(fp)
1010de50:	e0bffc17 	ldw	r2,-16(fp)
1010de54:	1000070e 	bge	r2,zero,1010de74 <write+0xb4>
      {
        ALT_ERRNO = -rval;
1010de58:	010dd840 	call	1010dd84 <alt_get_errno>
1010de5c:	1007883a 	mov	r3,r2
1010de60:	e0bffc17 	ldw	r2,-16(fp)
1010de64:	0085c83a 	sub	r2,zero,r2
1010de68:	18800015 	stw	r2,0(r3)
        return -1;
1010de6c:	00bfffc4 	movi	r2,-1
1010de70:	00000c06 	br	1010dea4 <write+0xe4>
      }
      return rval;
1010de74:	e0bffc17 	ldw	r2,-16(fp)
1010de78:	00000a06 	br	1010dea4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
1010de7c:	010dd840 	call	1010dd84 <alt_get_errno>
1010de80:	1007883a 	mov	r3,r2
1010de84:	00800344 	movi	r2,13
1010de88:	18800015 	stw	r2,0(r3)
1010de8c:	00000406 	br	1010dea0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
1010de90:	010dd840 	call	1010dd84 <alt_get_errno>
1010de94:	1007883a 	mov	r3,r2
1010de98:	00801444 	movi	r2,81
1010de9c:	18800015 	stw	r2,0(r3)
  }
  return -1;
1010dea0:	00bfffc4 	movi	r2,-1
}
1010dea4:	e037883a 	mov	sp,fp
1010dea8:	dfc00117 	ldw	ra,4(sp)
1010deac:	df000017 	ldw	fp,0(sp)
1010deb0:	dec00204 	addi	sp,sp,8
1010deb4:	f800283a 	ret

1010deb8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1010deb8:	defffd04 	addi	sp,sp,-12
1010debc:	dfc00215 	stw	ra,8(sp)
1010dec0:	df000115 	stw	fp,4(sp)
1010dec4:	df000104 	addi	fp,sp,4
1010dec8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
1010decc:	d1600804 	addi	r5,gp,-32736
1010ded0:	e13fff17 	ldw	r4,-4(fp)
1010ded4:	010f0140 	call	1010f014 <alt_dev_llist_insert>
}
1010ded8:	e037883a 	mov	sp,fp
1010dedc:	dfc00117 	ldw	ra,4(sp)
1010dee0:	df000017 	ldw	fp,0(sp)
1010dee4:	dec00204 	addi	sp,sp,8
1010dee8:	f800283a 	ret

1010deec <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
1010deec:	defffd04 	addi	sp,sp,-12
1010def0:	dfc00215 	stw	ra,8(sp)
1010def4:	df000115 	stw	fp,4(sp)
1010def8:	df000104 	addi	fp,sp,4
1010defc:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
1010df00:	010fa040 	call	1010fa04 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1010df04:	00800044 	movi	r2,1
1010df08:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
1010df0c:	0001883a 	nop
1010df10:	e037883a 	mov	sp,fp
1010df14:	dfc00117 	ldw	ra,4(sp)
1010df18:	df000017 	ldw	fp,0(sp)
1010df1c:	dec00204 	addi	sp,sp,8
1010df20:	f800283a 	ret

1010df24 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
1010df24:	defffe04 	addi	sp,sp,-8
1010df28:	dfc00115 	stw	ra,4(sp)
1010df2c:	df000015 	stw	fp,0(sp)
1010df30:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
1010df34:	000d883a 	mov	r6,zero
1010df38:	000b883a 	mov	r5,zero
1010df3c:	01040474 	movhi	r4,4113
1010df40:	2103c204 	addi	r4,r4,3848
1010df44:	010e0dc0 	call	1010e0dc <altera_avalon_jtag_uart_init>
1010df48:	01040474 	movhi	r4,4113
1010df4c:	2103b804 	addi	r4,r4,3808
1010df50:	010deb80 	call	1010deb8 <alt_dev_reg>
    ALTERA_HOSTFS_INIT ( ALTERA_HOSTFS, altera_hostfs);
1010df54:	01040474 	movhi	r4,4113
1010df58:	2107d004 	addi	r4,r4,8000
1010df5c:	010f1780 	call	1010f178 <alt_fs_reg>
}
1010df60:	0001883a 	nop
1010df64:	e037883a 	mov	sp,fp
1010df68:	dfc00117 	ldw	ra,4(sp)
1010df6c:	df000017 	ldw	fp,0(sp)
1010df70:	dec00204 	addi	sp,sp,8
1010df74:	f800283a 	ret

1010df78 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
1010df78:	defffa04 	addi	sp,sp,-24
1010df7c:	dfc00515 	stw	ra,20(sp)
1010df80:	df000415 	stw	fp,16(sp)
1010df84:	df000404 	addi	fp,sp,16
1010df88:	e13ffd15 	stw	r4,-12(fp)
1010df8c:	e17ffe15 	stw	r5,-8(fp)
1010df90:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010df94:	e0bffd17 	ldw	r2,-12(fp)
1010df98:	10800017 	ldw	r2,0(r2)
1010df9c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
1010dfa0:	e0bffc17 	ldw	r2,-16(fp)
1010dfa4:	10c00a04 	addi	r3,r2,40
1010dfa8:	e0bffd17 	ldw	r2,-12(fp)
1010dfac:	10800217 	ldw	r2,8(r2)
1010dfb0:	100f883a 	mov	r7,r2
1010dfb4:	e1bfff17 	ldw	r6,-4(fp)
1010dfb8:	e17ffe17 	ldw	r5,-8(fp)
1010dfbc:	1809883a 	mov	r4,r3
1010dfc0:	010e5a00 	call	1010e5a0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1010dfc4:	e037883a 	mov	sp,fp
1010dfc8:	dfc00117 	ldw	ra,4(sp)
1010dfcc:	df000017 	ldw	fp,0(sp)
1010dfd0:	dec00204 	addi	sp,sp,8
1010dfd4:	f800283a 	ret

1010dfd8 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
1010dfd8:	defffa04 	addi	sp,sp,-24
1010dfdc:	dfc00515 	stw	ra,20(sp)
1010dfe0:	df000415 	stw	fp,16(sp)
1010dfe4:	df000404 	addi	fp,sp,16
1010dfe8:	e13ffd15 	stw	r4,-12(fp)
1010dfec:	e17ffe15 	stw	r5,-8(fp)
1010dff0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010dff4:	e0bffd17 	ldw	r2,-12(fp)
1010dff8:	10800017 	ldw	r2,0(r2)
1010dffc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
1010e000:	e0bffc17 	ldw	r2,-16(fp)
1010e004:	10c00a04 	addi	r3,r2,40
1010e008:	e0bffd17 	ldw	r2,-12(fp)
1010e00c:	10800217 	ldw	r2,8(r2)
1010e010:	100f883a 	mov	r7,r2
1010e014:	e1bfff17 	ldw	r6,-4(fp)
1010e018:	e17ffe17 	ldw	r5,-8(fp)
1010e01c:	1809883a 	mov	r4,r3
1010e020:	010e7bc0 	call	1010e7bc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1010e024:	e037883a 	mov	sp,fp
1010e028:	dfc00117 	ldw	ra,4(sp)
1010e02c:	df000017 	ldw	fp,0(sp)
1010e030:	dec00204 	addi	sp,sp,8
1010e034:	f800283a 	ret

1010e038 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
1010e038:	defffc04 	addi	sp,sp,-16
1010e03c:	dfc00315 	stw	ra,12(sp)
1010e040:	df000215 	stw	fp,8(sp)
1010e044:	df000204 	addi	fp,sp,8
1010e048:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1010e04c:	e0bfff17 	ldw	r2,-4(fp)
1010e050:	10800017 	ldw	r2,0(r2)
1010e054:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
1010e058:	e0bffe17 	ldw	r2,-8(fp)
1010e05c:	10c00a04 	addi	r3,r2,40
1010e060:	e0bfff17 	ldw	r2,-4(fp)
1010e064:	10800217 	ldw	r2,8(r2)
1010e068:	100b883a 	mov	r5,r2
1010e06c:	1809883a 	mov	r4,r3
1010e070:	010e4480 	call	1010e448 <altera_avalon_jtag_uart_close>
}
1010e074:	e037883a 	mov	sp,fp
1010e078:	dfc00117 	ldw	ra,4(sp)
1010e07c:	df000017 	ldw	fp,0(sp)
1010e080:	dec00204 	addi	sp,sp,8
1010e084:	f800283a 	ret

1010e088 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
1010e088:	defffa04 	addi	sp,sp,-24
1010e08c:	dfc00515 	stw	ra,20(sp)
1010e090:	df000415 	stw	fp,16(sp)
1010e094:	df000404 	addi	fp,sp,16
1010e098:	e13ffd15 	stw	r4,-12(fp)
1010e09c:	e17ffe15 	stw	r5,-8(fp)
1010e0a0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1010e0a4:	e0bffd17 	ldw	r2,-12(fp)
1010e0a8:	10800017 	ldw	r2,0(r2)
1010e0ac:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
1010e0b0:	e0bffc17 	ldw	r2,-16(fp)
1010e0b4:	10800a04 	addi	r2,r2,40
1010e0b8:	e1bfff17 	ldw	r6,-4(fp)
1010e0bc:	e17ffe17 	ldw	r5,-8(fp)
1010e0c0:	1009883a 	mov	r4,r2
1010e0c4:	010e4b00 	call	1010e4b0 <altera_avalon_jtag_uart_ioctl>
}
1010e0c8:	e037883a 	mov	sp,fp
1010e0cc:	dfc00117 	ldw	ra,4(sp)
1010e0d0:	df000017 	ldw	fp,0(sp)
1010e0d4:	dec00204 	addi	sp,sp,8
1010e0d8:	f800283a 	ret

1010e0dc <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
1010e0dc:	defffa04 	addi	sp,sp,-24
1010e0e0:	dfc00515 	stw	ra,20(sp)
1010e0e4:	df000415 	stw	fp,16(sp)
1010e0e8:	df000404 	addi	fp,sp,16
1010e0ec:	e13ffd15 	stw	r4,-12(fp)
1010e0f0:	e17ffe15 	stw	r5,-8(fp)
1010e0f4:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e0f8:	e0bffd17 	ldw	r2,-12(fp)
1010e0fc:	00c00044 	movi	r3,1
1010e100:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1010e104:	e0bffd17 	ldw	r2,-12(fp)
1010e108:	10800017 	ldw	r2,0(r2)
1010e10c:	10800104 	addi	r2,r2,4
1010e110:	1007883a 	mov	r3,r2
1010e114:	e0bffd17 	ldw	r2,-12(fp)
1010e118:	10800817 	ldw	r2,32(r2)
1010e11c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
1010e120:	e0bffe17 	ldw	r2,-8(fp)
1010e124:	e0ffff17 	ldw	r3,-4(fp)
1010e128:	d8000015 	stw	zero,0(sp)
1010e12c:	e1fffd17 	ldw	r7,-12(fp)
1010e130:	01840474 	movhi	r6,4113
1010e134:	31b86704 	addi	r6,r6,-7780
1010e138:	180b883a 	mov	r5,r3
1010e13c:	1009883a 	mov	r4,r2
1010e140:	010f22c0 	call	1010f22c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
1010e144:	e0bffd17 	ldw	r2,-12(fp)
1010e148:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
1010e14c:	e0bffd17 	ldw	r2,-12(fp)
1010e150:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
1010e154:	d0e70417 	ldw	r3,-25584(gp)
1010e158:	e1fffd17 	ldw	r7,-12(fp)
1010e15c:	01840474 	movhi	r6,4113
1010e160:	31b8ea04 	addi	r6,r6,-7256
1010e164:	180b883a 	mov	r5,r3
1010e168:	1009883a 	mov	r4,r2
1010e16c:	010ee640 	call	1010ee64 <alt_alarm_start>
1010e170:	1000040e 	bge	r2,zero,1010e184 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
1010e174:	e0fffd17 	ldw	r3,-12(fp)
1010e178:	00a00034 	movhi	r2,32768
1010e17c:	10bfffc4 	addi	r2,r2,-1
1010e180:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
1010e184:	0001883a 	nop
1010e188:	e037883a 	mov	sp,fp
1010e18c:	dfc00117 	ldw	ra,4(sp)
1010e190:	df000017 	ldw	fp,0(sp)
1010e194:	dec00204 	addi	sp,sp,8
1010e198:	f800283a 	ret

1010e19c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
1010e19c:	defff804 	addi	sp,sp,-32
1010e1a0:	df000715 	stw	fp,28(sp)
1010e1a4:	df000704 	addi	fp,sp,28
1010e1a8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
1010e1ac:	e0bfff17 	ldw	r2,-4(fp)
1010e1b0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
1010e1b4:	e0bffb17 	ldw	r2,-20(fp)
1010e1b8:	10800017 	ldw	r2,0(r2)
1010e1bc:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e1c0:	e0bffc17 	ldw	r2,-16(fp)
1010e1c4:	10800104 	addi	r2,r2,4
1010e1c8:	10800037 	ldwio	r2,0(r2)
1010e1cc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
1010e1d0:	e0bffd17 	ldw	r2,-12(fp)
1010e1d4:	1080c00c 	andi	r2,r2,768
1010e1d8:	10006d26 	beq	r2,zero,1010e390 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
1010e1dc:	e0bffd17 	ldw	r2,-12(fp)
1010e1e0:	1080400c 	andi	r2,r2,256
1010e1e4:	10003526 	beq	r2,zero,1010e2bc <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
1010e1e8:	00800074 	movhi	r2,1
1010e1ec:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e1f0:	e0bffb17 	ldw	r2,-20(fp)
1010e1f4:	10800a17 	ldw	r2,40(r2)
1010e1f8:	10800044 	addi	r2,r2,1
1010e1fc:	1081ffcc 	andi	r2,r2,2047
1010e200:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
1010e204:	e0bffb17 	ldw	r2,-20(fp)
1010e208:	10c00b17 	ldw	r3,44(r2)
1010e20c:	e0bffe17 	ldw	r2,-8(fp)
1010e210:	18801526 	beq	r3,r2,1010e268 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
1010e214:	e0bffc17 	ldw	r2,-16(fp)
1010e218:	10800037 	ldwio	r2,0(r2)
1010e21c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
1010e220:	e0bff917 	ldw	r2,-28(fp)
1010e224:	10a0000c 	andi	r2,r2,32768
1010e228:	10001126 	beq	r2,zero,1010e270 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
1010e22c:	e0bffb17 	ldw	r2,-20(fp)
1010e230:	10800a17 	ldw	r2,40(r2)
1010e234:	e0fff917 	ldw	r3,-28(fp)
1010e238:	1809883a 	mov	r4,r3
1010e23c:	e0fffb17 	ldw	r3,-20(fp)
1010e240:	1885883a 	add	r2,r3,r2
1010e244:	10800e04 	addi	r2,r2,56
1010e248:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e24c:	e0bffb17 	ldw	r2,-20(fp)
1010e250:	10800a17 	ldw	r2,40(r2)
1010e254:	10800044 	addi	r2,r2,1
1010e258:	10c1ffcc 	andi	r3,r2,2047
1010e25c:	e0bffb17 	ldw	r2,-20(fp)
1010e260:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
1010e264:	003fe206 	br	1010e1f0 <__alt_data_end+0xfffee1f0>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
1010e268:	0001883a 	nop
1010e26c:	00000106 	br	1010e274 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
1010e270:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
1010e274:	e0bff917 	ldw	r2,-28(fp)
1010e278:	10bfffec 	andhi	r2,r2,65535
1010e27c:	10000f26 	beq	r2,zero,1010e2bc <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e280:	e0bffb17 	ldw	r2,-20(fp)
1010e284:	10c00817 	ldw	r3,32(r2)
1010e288:	00bfff84 	movi	r2,-2
1010e28c:	1886703a 	and	r3,r3,r2
1010e290:	e0bffb17 	ldw	r2,-20(fp)
1010e294:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
1010e298:	e0bffc17 	ldw	r2,-16(fp)
1010e29c:	10800104 	addi	r2,r2,4
1010e2a0:	1007883a 	mov	r3,r2
1010e2a4:	e0bffb17 	ldw	r2,-20(fp)
1010e2a8:	10800817 	ldw	r2,32(r2)
1010e2ac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e2b0:	e0bffc17 	ldw	r2,-16(fp)
1010e2b4:	10800104 	addi	r2,r2,4
1010e2b8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
1010e2bc:	e0bffd17 	ldw	r2,-12(fp)
1010e2c0:	1080800c 	andi	r2,r2,512
1010e2c4:	103fbe26 	beq	r2,zero,1010e1c0 <__alt_data_end+0xfffee1c0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
1010e2c8:	e0bffd17 	ldw	r2,-12(fp)
1010e2cc:	1004d43a 	srli	r2,r2,16
1010e2d0:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e2d4:	00001406 	br	1010e328 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
1010e2d8:	e0bffc17 	ldw	r2,-16(fp)
1010e2dc:	e0fffb17 	ldw	r3,-20(fp)
1010e2e0:	18c00d17 	ldw	r3,52(r3)
1010e2e4:	e13ffb17 	ldw	r4,-20(fp)
1010e2e8:	20c7883a 	add	r3,r4,r3
1010e2ec:	18c20e04 	addi	r3,r3,2104
1010e2f0:	18c00003 	ldbu	r3,0(r3)
1010e2f4:	18c03fcc 	andi	r3,r3,255
1010e2f8:	18c0201c 	xori	r3,r3,128
1010e2fc:	18ffe004 	addi	r3,r3,-128
1010e300:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e304:	e0bffb17 	ldw	r2,-20(fp)
1010e308:	10800d17 	ldw	r2,52(r2)
1010e30c:	10800044 	addi	r2,r2,1
1010e310:	10c1ffcc 	andi	r3,r2,2047
1010e314:	e0bffb17 	ldw	r2,-20(fp)
1010e318:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
1010e31c:	e0bffa17 	ldw	r2,-24(fp)
1010e320:	10bfffc4 	addi	r2,r2,-1
1010e324:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
1010e328:	e0bffa17 	ldw	r2,-24(fp)
1010e32c:	10000526 	beq	r2,zero,1010e344 <altera_avalon_jtag_uart_irq+0x1a8>
1010e330:	e0bffb17 	ldw	r2,-20(fp)
1010e334:	10c00d17 	ldw	r3,52(r2)
1010e338:	e0bffb17 	ldw	r2,-20(fp)
1010e33c:	10800c17 	ldw	r2,48(r2)
1010e340:	18bfe51e 	bne	r3,r2,1010e2d8 <__alt_data_end+0xfffee2d8>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
1010e344:	e0bffa17 	ldw	r2,-24(fp)
1010e348:	103f9d26 	beq	r2,zero,1010e1c0 <__alt_data_end+0xfffee1c0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e34c:	e0bffb17 	ldw	r2,-20(fp)
1010e350:	10c00817 	ldw	r3,32(r2)
1010e354:	00bfff44 	movi	r2,-3
1010e358:	1886703a 	and	r3,r3,r2
1010e35c:	e0bffb17 	ldw	r2,-20(fp)
1010e360:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e364:	e0bffb17 	ldw	r2,-20(fp)
1010e368:	10800017 	ldw	r2,0(r2)
1010e36c:	10800104 	addi	r2,r2,4
1010e370:	1007883a 	mov	r3,r2
1010e374:	e0bffb17 	ldw	r2,-20(fp)
1010e378:	10800817 	ldw	r2,32(r2)
1010e37c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
1010e380:	e0bffc17 	ldw	r2,-16(fp)
1010e384:	10800104 	addi	r2,r2,4
1010e388:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
1010e38c:	003f8c06 	br	1010e1c0 <__alt_data_end+0xfffee1c0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
1010e390:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
1010e394:	0001883a 	nop
1010e398:	e037883a 	mov	sp,fp
1010e39c:	df000017 	ldw	fp,0(sp)
1010e3a0:	dec00104 	addi	sp,sp,4
1010e3a4:	f800283a 	ret

1010e3a8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
1010e3a8:	defff804 	addi	sp,sp,-32
1010e3ac:	df000715 	stw	fp,28(sp)
1010e3b0:	df000704 	addi	fp,sp,28
1010e3b4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
1010e3b8:	e0bffb17 	ldw	r2,-20(fp)
1010e3bc:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
1010e3c0:	e0bff917 	ldw	r2,-28(fp)
1010e3c4:	10800017 	ldw	r2,0(r2)
1010e3c8:	10800104 	addi	r2,r2,4
1010e3cc:	10800037 	ldwio	r2,0(r2)
1010e3d0:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
1010e3d4:	e0bffa17 	ldw	r2,-24(fp)
1010e3d8:	1081000c 	andi	r2,r2,1024
1010e3dc:	10000b26 	beq	r2,zero,1010e40c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
1010e3e0:	e0bff917 	ldw	r2,-28(fp)
1010e3e4:	10800017 	ldw	r2,0(r2)
1010e3e8:	10800104 	addi	r2,r2,4
1010e3ec:	1007883a 	mov	r3,r2
1010e3f0:	e0bff917 	ldw	r2,-28(fp)
1010e3f4:	10800817 	ldw	r2,32(r2)
1010e3f8:	10810014 	ori	r2,r2,1024
1010e3fc:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
1010e400:	e0bff917 	ldw	r2,-28(fp)
1010e404:	10000915 	stw	zero,36(r2)
1010e408:	00000a06 	br	1010e434 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
1010e40c:	e0bff917 	ldw	r2,-28(fp)
1010e410:	10c00917 	ldw	r3,36(r2)
1010e414:	00a00034 	movhi	r2,32768
1010e418:	10bfff04 	addi	r2,r2,-4
1010e41c:	10c00536 	bltu	r2,r3,1010e434 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
1010e420:	e0bff917 	ldw	r2,-28(fp)
1010e424:	10800917 	ldw	r2,36(r2)
1010e428:	10c00044 	addi	r3,r2,1
1010e42c:	e0bff917 	ldw	r2,-28(fp)
1010e430:	10c00915 	stw	r3,36(r2)
1010e434:	d0a70417 	ldw	r2,-25584(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
1010e438:	e037883a 	mov	sp,fp
1010e43c:	df000017 	ldw	fp,0(sp)
1010e440:	dec00104 	addi	sp,sp,4
1010e444:	f800283a 	ret

1010e448 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
1010e448:	defffd04 	addi	sp,sp,-12
1010e44c:	df000215 	stw	fp,8(sp)
1010e450:	df000204 	addi	fp,sp,8
1010e454:	e13ffe15 	stw	r4,-8(fp)
1010e458:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e45c:	00000506 	br	1010e474 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
1010e460:	e0bfff17 	ldw	r2,-4(fp)
1010e464:	1090000c 	andi	r2,r2,16384
1010e468:	10000226 	beq	r2,zero,1010e474 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
1010e46c:	00bffd44 	movi	r2,-11
1010e470:	00000b06 	br	1010e4a0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
1010e474:	e0bffe17 	ldw	r2,-8(fp)
1010e478:	10c00d17 	ldw	r3,52(r2)
1010e47c:	e0bffe17 	ldw	r2,-8(fp)
1010e480:	10800c17 	ldw	r2,48(r2)
1010e484:	18800526 	beq	r3,r2,1010e49c <altera_avalon_jtag_uart_close+0x54>
1010e488:	e0bffe17 	ldw	r2,-8(fp)
1010e48c:	10c00917 	ldw	r3,36(r2)
1010e490:	e0bffe17 	ldw	r2,-8(fp)
1010e494:	10800117 	ldw	r2,4(r2)
1010e498:	18bff136 	bltu	r3,r2,1010e460 <__alt_data_end+0xfffee460>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
1010e49c:	0005883a 	mov	r2,zero
}
1010e4a0:	e037883a 	mov	sp,fp
1010e4a4:	df000017 	ldw	fp,0(sp)
1010e4a8:	dec00104 	addi	sp,sp,4
1010e4ac:	f800283a 	ret

1010e4b0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
1010e4b0:	defffa04 	addi	sp,sp,-24
1010e4b4:	df000515 	stw	fp,20(sp)
1010e4b8:	df000504 	addi	fp,sp,20
1010e4bc:	e13ffd15 	stw	r4,-12(fp)
1010e4c0:	e17ffe15 	stw	r5,-8(fp)
1010e4c4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
1010e4c8:	00bff9c4 	movi	r2,-25
1010e4cc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
1010e4d0:	e0bffe17 	ldw	r2,-8(fp)
1010e4d4:	10da8060 	cmpeqi	r3,r2,27137
1010e4d8:	1800031e 	bne	r3,zero,1010e4e8 <altera_avalon_jtag_uart_ioctl+0x38>
1010e4dc:	109a80a0 	cmpeqi	r2,r2,27138
1010e4e0:	1000181e 	bne	r2,zero,1010e544 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
1010e4e4:	00002906 	br	1010e58c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
1010e4e8:	e0bffd17 	ldw	r2,-12(fp)
1010e4ec:	10c00117 	ldw	r3,4(r2)
1010e4f0:	00a00034 	movhi	r2,32768
1010e4f4:	10bfffc4 	addi	r2,r2,-1
1010e4f8:	18802126 	beq	r3,r2,1010e580 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
1010e4fc:	e0bfff17 	ldw	r2,-4(fp)
1010e500:	10800017 	ldw	r2,0(r2)
1010e504:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
1010e508:	e0bffc17 	ldw	r2,-16(fp)
1010e50c:	10800090 	cmplti	r2,r2,2
1010e510:	1000061e 	bne	r2,zero,1010e52c <altera_avalon_jtag_uart_ioctl+0x7c>
1010e514:	e0fffc17 	ldw	r3,-16(fp)
1010e518:	00a00034 	movhi	r2,32768
1010e51c:	10bfffc4 	addi	r2,r2,-1
1010e520:	18800226 	beq	r3,r2,1010e52c <altera_avalon_jtag_uart_ioctl+0x7c>
1010e524:	e0bffc17 	ldw	r2,-16(fp)
1010e528:	00000206 	br	1010e534 <altera_avalon_jtag_uart_ioctl+0x84>
1010e52c:	00a00034 	movhi	r2,32768
1010e530:	10bfff84 	addi	r2,r2,-2
1010e534:	e0fffd17 	ldw	r3,-12(fp)
1010e538:	18800115 	stw	r2,4(r3)
      rc = 0;
1010e53c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e540:	00000f06 	br	1010e580 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
1010e544:	e0bffd17 	ldw	r2,-12(fp)
1010e548:	10c00117 	ldw	r3,4(r2)
1010e54c:	00a00034 	movhi	r2,32768
1010e550:	10bfffc4 	addi	r2,r2,-1
1010e554:	18800c26 	beq	r3,r2,1010e588 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
1010e558:	e0bffd17 	ldw	r2,-12(fp)
1010e55c:	10c00917 	ldw	r3,36(r2)
1010e560:	e0bffd17 	ldw	r2,-12(fp)
1010e564:	10800117 	ldw	r2,4(r2)
1010e568:	1885803a 	cmpltu	r2,r3,r2
1010e56c:	10c03fcc 	andi	r3,r2,255
1010e570:	e0bfff17 	ldw	r2,-4(fp)
1010e574:	10c00015 	stw	r3,0(r2)
      rc = 0;
1010e578:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
1010e57c:	00000206 	br	1010e588 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
1010e580:	0001883a 	nop
1010e584:	00000106 	br	1010e58c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
1010e588:	0001883a 	nop

  default:
    break;
  }

  return rc;
1010e58c:	e0bffb17 	ldw	r2,-20(fp)
}
1010e590:	e037883a 	mov	sp,fp
1010e594:	df000017 	ldw	fp,0(sp)
1010e598:	dec00104 	addi	sp,sp,4
1010e59c:	f800283a 	ret

1010e5a0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
1010e5a0:	defff304 	addi	sp,sp,-52
1010e5a4:	dfc00c15 	stw	ra,48(sp)
1010e5a8:	df000b15 	stw	fp,44(sp)
1010e5ac:	df000b04 	addi	fp,sp,44
1010e5b0:	e13ffc15 	stw	r4,-16(fp)
1010e5b4:	e17ffd15 	stw	r5,-12(fp)
1010e5b8:	e1bffe15 	stw	r6,-8(fp)
1010e5bc:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
1010e5c0:	e0bffd17 	ldw	r2,-12(fp)
1010e5c4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e5c8:	00004706 	br	1010e6e8 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
1010e5cc:	e0bffc17 	ldw	r2,-16(fp)
1010e5d0:	10800a17 	ldw	r2,40(r2)
1010e5d4:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
1010e5d8:	e0bffc17 	ldw	r2,-16(fp)
1010e5dc:	10800b17 	ldw	r2,44(r2)
1010e5e0:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
1010e5e4:	e0fff717 	ldw	r3,-36(fp)
1010e5e8:	e0bff817 	ldw	r2,-32(fp)
1010e5ec:	18800536 	bltu	r3,r2,1010e604 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
1010e5f0:	e0fff717 	ldw	r3,-36(fp)
1010e5f4:	e0bff817 	ldw	r2,-32(fp)
1010e5f8:	1885c83a 	sub	r2,r3,r2
1010e5fc:	e0bff615 	stw	r2,-40(fp)
1010e600:	00000406 	br	1010e614 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
1010e604:	00c20004 	movi	r3,2048
1010e608:	e0bff817 	ldw	r2,-32(fp)
1010e60c:	1885c83a 	sub	r2,r3,r2
1010e610:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e614:	e0bff617 	ldw	r2,-40(fp)
1010e618:	10001e26 	beq	r2,zero,1010e694 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
1010e61c:	e0fffe17 	ldw	r3,-8(fp)
1010e620:	e0bff617 	ldw	r2,-40(fp)
1010e624:	1880022e 	bgeu	r3,r2,1010e630 <altera_avalon_jtag_uart_read+0x90>
        n = space;
1010e628:	e0bffe17 	ldw	r2,-8(fp)
1010e62c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
1010e630:	e0bffc17 	ldw	r2,-16(fp)
1010e634:	10c00e04 	addi	r3,r2,56
1010e638:	e0bff817 	ldw	r2,-32(fp)
1010e63c:	1885883a 	add	r2,r3,r2
1010e640:	e1bff617 	ldw	r6,-40(fp)
1010e644:	100b883a 	mov	r5,r2
1010e648:	e13ff517 	ldw	r4,-44(fp)
1010e64c:	01067200 	call	10106720 <memcpy>
      ptr   += n;
1010e650:	e0fff517 	ldw	r3,-44(fp)
1010e654:	e0bff617 	ldw	r2,-40(fp)
1010e658:	1885883a 	add	r2,r3,r2
1010e65c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
1010e660:	e0fffe17 	ldw	r3,-8(fp)
1010e664:	e0bff617 	ldw	r2,-40(fp)
1010e668:	1885c83a 	sub	r2,r3,r2
1010e66c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e670:	e0fff817 	ldw	r3,-32(fp)
1010e674:	e0bff617 	ldw	r2,-40(fp)
1010e678:	1885883a 	add	r2,r3,r2
1010e67c:	10c1ffcc 	andi	r3,r2,2047
1010e680:	e0bffc17 	ldw	r2,-16(fp)
1010e684:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
1010e688:	e0bffe17 	ldw	r2,-8(fp)
1010e68c:	00bfcf16 	blt	zero,r2,1010e5cc <__alt_data_end+0xfffee5cc>
1010e690:	00000106 	br	1010e698 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
1010e694:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
1010e698:	e0fff517 	ldw	r3,-44(fp)
1010e69c:	e0bffd17 	ldw	r2,-12(fp)
1010e6a0:	1880141e 	bne	r3,r2,1010e6f4 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
1010e6a4:	e0bfff17 	ldw	r2,-4(fp)
1010e6a8:	1090000c 	andi	r2,r2,16384
1010e6ac:	1000131e 	bne	r2,zero,1010e6fc <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
1010e6b0:	0001883a 	nop
1010e6b4:	e0bffc17 	ldw	r2,-16(fp)
1010e6b8:	10c00a17 	ldw	r3,40(r2)
1010e6bc:	e0bff717 	ldw	r2,-36(fp)
1010e6c0:	1880051e 	bne	r3,r2,1010e6d8 <altera_avalon_jtag_uart_read+0x138>
1010e6c4:	e0bffc17 	ldw	r2,-16(fp)
1010e6c8:	10c00917 	ldw	r3,36(r2)
1010e6cc:	e0bffc17 	ldw	r2,-16(fp)
1010e6d0:	10800117 	ldw	r2,4(r2)
1010e6d4:	18bff736 	bltu	r3,r2,1010e6b4 <__alt_data_end+0xfffee6b4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
1010e6d8:	e0bffc17 	ldw	r2,-16(fp)
1010e6dc:	10c00a17 	ldw	r3,40(r2)
1010e6e0:	e0bff717 	ldw	r2,-36(fp)
1010e6e4:	18800726 	beq	r3,r2,1010e704 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
1010e6e8:	e0bffe17 	ldw	r2,-8(fp)
1010e6ec:	00bfb716 	blt	zero,r2,1010e5cc <__alt_data_end+0xfffee5cc>
1010e6f0:	00000506 	br	1010e708 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
1010e6f4:	0001883a 	nop
1010e6f8:	00000306 	br	1010e708 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
1010e6fc:	0001883a 	nop
1010e700:	00000106 	br	1010e708 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
1010e704:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
1010e708:	e0fff517 	ldw	r3,-44(fp)
1010e70c:	e0bffd17 	ldw	r2,-12(fp)
1010e710:	18801826 	beq	r3,r2,1010e774 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e714:	0005303a 	rdctl	r2,status
1010e718:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e71c:	e0fffb17 	ldw	r3,-20(fp)
1010e720:	00bfff84 	movi	r2,-2
1010e724:	1884703a 	and	r2,r3,r2
1010e728:	1001703a 	wrctl	status,r2
  
  return context;
1010e72c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
1010e730:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
1010e734:	e0bffc17 	ldw	r2,-16(fp)
1010e738:	10800817 	ldw	r2,32(r2)
1010e73c:	10c00054 	ori	r3,r2,1
1010e740:	e0bffc17 	ldw	r2,-16(fp)
1010e744:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e748:	e0bffc17 	ldw	r2,-16(fp)
1010e74c:	10800017 	ldw	r2,0(r2)
1010e750:	10800104 	addi	r2,r2,4
1010e754:	1007883a 	mov	r3,r2
1010e758:	e0bffc17 	ldw	r2,-16(fp)
1010e75c:	10800817 	ldw	r2,32(r2)
1010e760:	18800035 	stwio	r2,0(r3)
1010e764:	e0bffa17 	ldw	r2,-24(fp)
1010e768:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e76c:	e0bff917 	ldw	r2,-28(fp)
1010e770:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
1010e774:	e0fff517 	ldw	r3,-44(fp)
1010e778:	e0bffd17 	ldw	r2,-12(fp)
1010e77c:	18800426 	beq	r3,r2,1010e790 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
1010e780:	e0fff517 	ldw	r3,-44(fp)
1010e784:	e0bffd17 	ldw	r2,-12(fp)
1010e788:	1885c83a 	sub	r2,r3,r2
1010e78c:	00000606 	br	1010e7a8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
1010e790:	e0bfff17 	ldw	r2,-4(fp)
1010e794:	1090000c 	andi	r2,r2,16384
1010e798:	10000226 	beq	r2,zero,1010e7a4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
1010e79c:	00bffd44 	movi	r2,-11
1010e7a0:	00000106 	br	1010e7a8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
1010e7a4:	00bffec4 	movi	r2,-5
}
1010e7a8:	e037883a 	mov	sp,fp
1010e7ac:	dfc00117 	ldw	ra,4(sp)
1010e7b0:	df000017 	ldw	fp,0(sp)
1010e7b4:	dec00204 	addi	sp,sp,8
1010e7b8:	f800283a 	ret

1010e7bc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
1010e7bc:	defff304 	addi	sp,sp,-52
1010e7c0:	dfc00c15 	stw	ra,48(sp)
1010e7c4:	df000b15 	stw	fp,44(sp)
1010e7c8:	df000b04 	addi	fp,sp,44
1010e7cc:	e13ffc15 	stw	r4,-16(fp)
1010e7d0:	e17ffd15 	stw	r5,-12(fp)
1010e7d4:	e1bffe15 	stw	r6,-8(fp)
1010e7d8:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
1010e7dc:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
1010e7e0:	e0bffd17 	ldw	r2,-12(fp)
1010e7e4:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e7e8:	00003706 	br	1010e8c8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
1010e7ec:	e0bffc17 	ldw	r2,-16(fp)
1010e7f0:	10800c17 	ldw	r2,48(r2)
1010e7f4:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
1010e7f8:	e0bffc17 	ldw	r2,-16(fp)
1010e7fc:	10800d17 	ldw	r2,52(r2)
1010e800:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
1010e804:	e0fff917 	ldw	r3,-28(fp)
1010e808:	e0bff517 	ldw	r2,-44(fp)
1010e80c:	1880062e 	bgeu	r3,r2,1010e828 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
1010e810:	e0fff517 	ldw	r3,-44(fp)
1010e814:	e0bff917 	ldw	r2,-28(fp)
1010e818:	1885c83a 	sub	r2,r3,r2
1010e81c:	10bfffc4 	addi	r2,r2,-1
1010e820:	e0bff615 	stw	r2,-40(fp)
1010e824:	00000b06 	br	1010e854 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1010e828:	e0bff517 	ldw	r2,-44(fp)
1010e82c:	10000526 	beq	r2,zero,1010e844 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
1010e830:	00c20004 	movi	r3,2048
1010e834:	e0bff917 	ldw	r2,-28(fp)
1010e838:	1885c83a 	sub	r2,r3,r2
1010e83c:	e0bff615 	stw	r2,-40(fp)
1010e840:	00000406 	br	1010e854 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
1010e844:	00c1ffc4 	movi	r3,2047
1010e848:	e0bff917 	ldw	r2,-28(fp)
1010e84c:	1885c83a 	sub	r2,r3,r2
1010e850:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
1010e854:	e0bff617 	ldw	r2,-40(fp)
1010e858:	10001e26 	beq	r2,zero,1010e8d4 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
1010e85c:	e0fffe17 	ldw	r3,-8(fp)
1010e860:	e0bff617 	ldw	r2,-40(fp)
1010e864:	1880022e 	bgeu	r3,r2,1010e870 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
1010e868:	e0bffe17 	ldw	r2,-8(fp)
1010e86c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
1010e870:	e0bffc17 	ldw	r2,-16(fp)
1010e874:	10c20e04 	addi	r3,r2,2104
1010e878:	e0bff917 	ldw	r2,-28(fp)
1010e87c:	1885883a 	add	r2,r3,r2
1010e880:	e1bff617 	ldw	r6,-40(fp)
1010e884:	e17ffd17 	ldw	r5,-12(fp)
1010e888:	1009883a 	mov	r4,r2
1010e88c:	01067200 	call	10106720 <memcpy>
      ptr   += n;
1010e890:	e0fffd17 	ldw	r3,-12(fp)
1010e894:	e0bff617 	ldw	r2,-40(fp)
1010e898:	1885883a 	add	r2,r3,r2
1010e89c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
1010e8a0:	e0fffe17 	ldw	r3,-8(fp)
1010e8a4:	e0bff617 	ldw	r2,-40(fp)
1010e8a8:	1885c83a 	sub	r2,r3,r2
1010e8ac:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
1010e8b0:	e0fff917 	ldw	r3,-28(fp)
1010e8b4:	e0bff617 	ldw	r2,-40(fp)
1010e8b8:	1885883a 	add	r2,r3,r2
1010e8bc:	10c1ffcc 	andi	r3,r2,2047
1010e8c0:	e0bffc17 	ldw	r2,-16(fp)
1010e8c4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1010e8c8:	e0bffe17 	ldw	r2,-8(fp)
1010e8cc:	00bfc716 	blt	zero,r2,1010e7ec <__alt_data_end+0xfffee7ec>
1010e8d0:	00000106 	br	1010e8d8 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
1010e8d4:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010e8d8:	0005303a 	rdctl	r2,status
1010e8dc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010e8e0:	e0fffb17 	ldw	r3,-20(fp)
1010e8e4:	00bfff84 	movi	r2,-2
1010e8e8:	1884703a 	and	r2,r3,r2
1010e8ec:	1001703a 	wrctl	status,r2
  
  return context;
1010e8f0:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
1010e8f4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1010e8f8:	e0bffc17 	ldw	r2,-16(fp)
1010e8fc:	10800817 	ldw	r2,32(r2)
1010e900:	10c00094 	ori	r3,r2,2
1010e904:	e0bffc17 	ldw	r2,-16(fp)
1010e908:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
1010e90c:	e0bffc17 	ldw	r2,-16(fp)
1010e910:	10800017 	ldw	r2,0(r2)
1010e914:	10800104 	addi	r2,r2,4
1010e918:	1007883a 	mov	r3,r2
1010e91c:	e0bffc17 	ldw	r2,-16(fp)
1010e920:	10800817 	ldw	r2,32(r2)
1010e924:	18800035 	stwio	r2,0(r3)
1010e928:	e0bffa17 	ldw	r2,-24(fp)
1010e92c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010e930:	e0bff817 	ldw	r2,-32(fp)
1010e934:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
1010e938:	e0bffe17 	ldw	r2,-8(fp)
1010e93c:	0080100e 	bge	zero,r2,1010e980 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
1010e940:	e0bfff17 	ldw	r2,-4(fp)
1010e944:	1090000c 	andi	r2,r2,16384
1010e948:	1000101e 	bne	r2,zero,1010e98c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
1010e94c:	0001883a 	nop
1010e950:	e0bffc17 	ldw	r2,-16(fp)
1010e954:	10c00d17 	ldw	r3,52(r2)
1010e958:	e0bff517 	ldw	r2,-44(fp)
1010e95c:	1880051e 	bne	r3,r2,1010e974 <altera_avalon_jtag_uart_write+0x1b8>
1010e960:	e0bffc17 	ldw	r2,-16(fp)
1010e964:	10c00917 	ldw	r3,36(r2)
1010e968:	e0bffc17 	ldw	r2,-16(fp)
1010e96c:	10800117 	ldw	r2,4(r2)
1010e970:	18bff736 	bltu	r3,r2,1010e950 <__alt_data_end+0xfffee950>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
1010e974:	e0bffc17 	ldw	r2,-16(fp)
1010e978:	10800917 	ldw	r2,36(r2)
1010e97c:	1000051e 	bne	r2,zero,1010e994 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
1010e980:	e0bffe17 	ldw	r2,-8(fp)
1010e984:	00bfd016 	blt	zero,r2,1010e8c8 <__alt_data_end+0xfffee8c8>
1010e988:	00000306 	br	1010e998 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
1010e98c:	0001883a 	nop
1010e990:	00000106 	br	1010e998 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
1010e994:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
1010e998:	e0fffd17 	ldw	r3,-12(fp)
1010e99c:	e0bff717 	ldw	r2,-36(fp)
1010e9a0:	18800426 	beq	r3,r2,1010e9b4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
1010e9a4:	e0fffd17 	ldw	r3,-12(fp)
1010e9a8:	e0bff717 	ldw	r2,-36(fp)
1010e9ac:	1885c83a 	sub	r2,r3,r2
1010e9b0:	00000606 	br	1010e9cc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
1010e9b4:	e0bfff17 	ldw	r2,-4(fp)
1010e9b8:	1090000c 	andi	r2,r2,16384
1010e9bc:	10000226 	beq	r2,zero,1010e9c8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
1010e9c0:	00bffd44 	movi	r2,-11
1010e9c4:	00000106 	br	1010e9cc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
1010e9c8:	00bffec4 	movi	r2,-5
}
1010e9cc:	e037883a 	mov	sp,fp
1010e9d0:	dfc00117 	ldw	ra,4(sp)
1010e9d4:	df000017 	ldw	fp,0(sp)
1010e9d8:	dec00204 	addi	sp,sp,8
1010e9dc:	f800283a 	ret

1010e9e0 <alt_hostfs_open>:
* alt_hostfs_open
*
* If we can't find anything return -1
*/
int alt_hostfs_open(alt_fd* fd, const char * name, int flags, int mode)
{
1010e9e0:	defff404 	addi	sp,sp,-48
1010e9e4:	df000b15 	stw	fp,44(sp)
1010e9e8:	df000b04 	addi	fp,sp,44
1010e9ec:	e13ffc15 	stw	r4,-16(fp)
1010e9f0:	e17ffd15 	stw	r5,-12(fp)
1010e9f4:	e1bffe15 	stw	r6,-8(fp)
1010e9f8:	e1ffff15 	stw	r7,-4(fp)
  static const struct HOSTCALL_INFO hcinfo = { 0x0103, "open" };

  alt_hostfs_dev* dev= (alt_hostfs_dev*)fd->dev;
1010e9fc:	e0bffc17 	ldw	r2,-16(fp)
1010ea00:	10800017 	ldw	r2,0(r2)
1010ea04:	e0bff515 	stw	r2,-44(fp)
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
1010ea08:	e0bff517 	ldw	r2,-44(fp)
1010ea0c:	10800217 	ldw	r2,8(r2)
1010ea10:	e0bff615 	stw	r2,-40(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
1010ea14:	e0bff617 	ldw	r2,-40(fp)
1010ea18:	10bfffc4 	addi	r2,r2,-1
1010ea1c:	e0bffb15 	stw	r2,-20(fp)

  while (*++ptr != 0)
1010ea20:	e0bffb17 	ldw	r2,-20(fp)
1010ea24:	10800044 	addi	r2,r2,1
1010ea28:	e0bffb15 	stw	r2,-20(fp)
1010ea2c:	e0bffb17 	ldw	r2,-20(fp)
1010ea30:	10800003 	ldbu	r2,0(r2)
1010ea34:	10803fcc 	andi	r2,r2,255
1010ea38:	1080201c 	xori	r2,r2,128
1010ea3c:	10bfe004 	addi	r2,r2,-128
1010ea40:	103ff71e 	bne	r2,zero,1010ea20 <__alt_data_end+0xfffeea20>
    ;

  return ptr - string;
1010ea44:	e0fffb17 	ldw	r3,-20(fp)
1010ea48:	e0bff617 	ldw	r2,-40(fp)
1010ea4c:	1885c83a 	sub	r2,r3,r2
#endif

  /* Mount point names don't end with a slash, so we must skip over the
   * slash following the mount point name.
  */
  name += inline_strlen(dev->fs_dev.name) + 1;
1010ea50:	10800044 	addi	r2,r2,1
1010ea54:	1007883a 	mov	r3,r2
1010ea58:	e0bffd17 	ldw	r2,-12(fp)
1010ea5c:	10c5883a 	add	r2,r2,r3
1010ea60:	e0bffd15 	stw	r2,-12(fp)

  r3 = (int)&hcinfo;
1010ea64:	d0a00d04 	addi	r2,gp,-32716
1010ea68:	1007883a 	mov	r3,r2
  r4 = (int)name;
1010ea6c:	e0bffd17 	ldw	r2,-12(fp)
1010ea70:	1009883a 	mov	r4,r2
  r5 = flags;
1010ea74:	e17ffe17 	ldw	r5,-8(fp)
  r6 = mode;
1010ea78:	e1bfff17 	ldw	r6,-4(fp)
1010ea7c:	e0bffd17 	ldw	r2,-12(fp)
1010ea80:	e0bff915 	stw	r2,-28(fp)
};

static inline int inline_strlen(const char * string) ALT_ALWAYS_INLINE;
static inline int inline_strlen(const char * string)
{
  const char * ptr = string - 1;
1010ea84:	e0bff917 	ldw	r2,-28(fp)
1010ea88:	10bfffc4 	addi	r2,r2,-1
1010ea8c:	e0bffa15 	stw	r2,-24(fp)

  while (*++ptr != 0)
1010ea90:	e0bffa17 	ldw	r2,-24(fp)
1010ea94:	10800044 	addi	r2,r2,1
1010ea98:	e0bffa15 	stw	r2,-24(fp)
1010ea9c:	e0bffa17 	ldw	r2,-24(fp)
1010eaa0:	10800003 	ldbu	r2,0(r2)
1010eaa4:	10803fcc 	andi	r2,r2,255
1010eaa8:	1080201c 	xori	r2,r2,128
1010eaac:	10bfe004 	addi	r2,r2,-128
1010eab0:	103ff71e 	bne	r2,zero,1010ea90 <__alt_data_end+0xfffeea90>
    ;

  return ptr - string;
1010eab4:	e1fffa17 	ldw	r7,-24(fp)
1010eab8:	e0bff917 	ldw	r2,-28(fp)
1010eabc:	3885c83a 	sub	r2,r7,r2

  r3 = (int)&hcinfo;
  r4 = (int)name;
  r5 = flags;
  r6 = mode;
  r7 = inline_strlen(name);
1010eac0:	100f883a 	mov	r7,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6), "r" (r7) : "memory" );
1010eac4:	003da07a 	break	1

  handle = (void *)r2;
1010eac8:	e0bff715 	stw	r2,-36(fp)
  error = r3;
1010eacc:	e0fff815 	stw	r3,-32(fp)

  if (error == 0)
1010ead0:	e0bff817 	ldw	r2,-32(fp)
1010ead4:	1000031e 	bne	r2,zero,1010eae4 <alt_hostfs_open+0x104>
    fd->priv = handle;
1010ead8:	e0bffc17 	ldw	r2,-16(fp)
1010eadc:	e0fff717 	ldw	r3,-36(fp)
1010eae0:	10c00115 	stw	r3,4(r2)

  return -error;
1010eae4:	e0bff817 	ldw	r2,-32(fp)
1010eae8:	0085c83a 	sub	r2,zero,r2
}
1010eaec:	e037883a 	mov	sp,fp
1010eaf0:	df000017 	ldw	fp,0(sp)
1010eaf4:	dec00104 	addi	sp,sp,4
1010eaf8:	f800283a 	ret

1010eafc <alt_hostfs_close>:
* alt_hostfs_close
*
* Read the file
*/
int alt_hostfs_close(alt_fd* fd)
{
1010eafc:	defffd04 	addi	sp,sp,-12
1010eb00:	df000215 	stw	fp,8(sp)
1010eb04:	df000204 	addi	fp,sp,8
1010eb08:	e13fff15 	stw	r4,-4(fp)

  /* Input and output parameters for the hostcall */
  register int r3 asm ("r3");
  register int r4 asm ("r4");

  r3 = (int)&hcinfo;
1010eb0c:	d0a01004 	addi	r2,gp,-32704
1010eb10:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010eb14:	e0bfff17 	ldw	r2,-4(fp)
1010eb18:	10800117 	ldw	r2,4(r2)
1010eb1c:	1009883a 	mov	r4,r2

  __asm__ volatile("break 1" : "+r" (r3) : "r" (r4) );
1010eb20:	003da07a 	break	1

  error = r3;
1010eb24:	e0fffe15 	stw	r3,-8(fp)

  return -error;
1010eb28:	e0bffe17 	ldw	r2,-8(fp)
1010eb2c:	0085c83a 	sub	r2,zero,r2
}
1010eb30:	e037883a 	mov	sp,fp
1010eb34:	df000017 	ldw	fp,0(sp)
1010eb38:	dec00104 	addi	sp,sp,4
1010eb3c:	f800283a 	ret

1010eb40 <alt_hostfs_read>:
* alt_hostfs_read
*
* Read the file
*/
int alt_hostfs_read(alt_fd* fd, char * ptr, int len)
{
1010eb40:	defffa04 	addi	sp,sp,-24
1010eb44:	df000515 	stw	fp,20(sp)
1010eb48:	df000504 	addi	fp,sp,20
1010eb4c:	e13ffd15 	stw	r4,-12(fp)
1010eb50:	e17ffe15 	stw	r5,-8(fp)
1010eb54:	e1bfff15 	stw	r6,-4(fp)
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");


  r3 = (int)&hcinfo;
1010eb58:	d0a01304 	addi	r2,gp,-32692
1010eb5c:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010eb60:	e0bffd17 	ldw	r2,-12(fp)
1010eb64:	10800117 	ldw	r2,4(r2)
1010eb68:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
1010eb6c:	e0bffe17 	ldw	r2,-8(fp)
1010eb70:	100b883a 	mov	r5,r2
  r6 = len;
1010eb74:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010eb78:	003da07a 	break	1

  rc = r2;
1010eb7c:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010eb80:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010eb84:	e0bffc17 	ldw	r2,-16(fp)
1010eb88:	10000326 	beq	r2,zero,1010eb98 <alt_hostfs_read+0x58>
1010eb8c:	e0bffc17 	ldw	r2,-16(fp)
1010eb90:	0085c83a 	sub	r2,zero,r2
1010eb94:	00000106 	br	1010eb9c <alt_hostfs_read+0x5c>
1010eb98:	e0bffb17 	ldw	r2,-20(fp)
}
1010eb9c:	e037883a 	mov	sp,fp
1010eba0:	df000017 	ldw	fp,0(sp)
1010eba4:	dec00104 	addi	sp,sp,4
1010eba8:	f800283a 	ret

1010ebac <alt_hostfs_write>:
* alt_hostfs_write
*
* Read the file
*/
int alt_hostfs_write(alt_fd* fd, const char * ptr, int len)
{
1010ebac:	defffa04 	addi	sp,sp,-24
1010ebb0:	df000515 	stw	fp,20(sp)
1010ebb4:	df000504 	addi	fp,sp,20
1010ebb8:	e13ffd15 	stw	r4,-12(fp)
1010ebbc:	e17ffe15 	stw	r5,-8(fp)
1010ebc0:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
1010ebc4:	d0a01604 	addi	r2,gp,-32680
1010ebc8:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010ebcc:	e0bffd17 	ldw	r2,-12(fp)
1010ebd0:	10800117 	ldw	r2,4(r2)
1010ebd4:	1009883a 	mov	r4,r2
  r5 = (int)ptr;
1010ebd8:	e0bffe17 	ldw	r2,-8(fp)
1010ebdc:	100b883a 	mov	r5,r2
  r6 = len;
1010ebe0:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010ebe4:	003da07a 	break	1

  rc = r2;
1010ebe8:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010ebec:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010ebf0:	e0bffc17 	ldw	r2,-16(fp)
1010ebf4:	10000326 	beq	r2,zero,1010ec04 <alt_hostfs_write+0x58>
1010ebf8:	e0bffc17 	ldw	r2,-16(fp)
1010ebfc:	0085c83a 	sub	r2,zero,r2
1010ec00:	00000106 	br	1010ec08 <alt_hostfs_write+0x5c>
1010ec04:	e0bffb17 	ldw	r2,-20(fp)
}
1010ec08:	e037883a 	mov	sp,fp
1010ec0c:	df000017 	ldw	fp,0(sp)
1010ec10:	dec00104 	addi	sp,sp,4
1010ec14:	f800283a 	ret

1010ec18 <alt_hostfs_seek>:
* Move around within a file
*
* returns -errno for an error or the offset within the file
*/
int alt_hostfs_seek(alt_fd* fd, int ptr, int dir)
{
1010ec18:	defffa04 	addi	sp,sp,-24
1010ec1c:	df000515 	stw	fp,20(sp)
1010ec20:	df000504 	addi	fp,sp,20
1010ec24:	e13ffd15 	stw	r4,-12(fp)
1010ec28:	e17ffe15 	stw	r5,-8(fp)
1010ec2c:	e1bfff15 	stw	r6,-4(fp)
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");
  register int r6 asm ("r6");

  r3 = (int)&hcinfo;
1010ec30:	d0a01904 	addi	r2,gp,-32668
1010ec34:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010ec38:	e0bffd17 	ldw	r2,-12(fp)
1010ec3c:	10800117 	ldw	r2,4(r2)
1010ec40:	1009883a 	mov	r4,r2
  r5 = ptr;
1010ec44:	e17ffe17 	ldw	r5,-8(fp)
  r6 = dir;
1010ec48:	e1bfff17 	ldw	r6,-4(fp)

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5), "r" (r6) : "memory" );
1010ec4c:	003da07a 	break	1

  rc = r2;
1010ec50:	e0bffb15 	stw	r2,-20(fp)
  error = r3;
1010ec54:	e0fffc15 	stw	r3,-16(fp)

  return (error == 0) ? rc : -error;
1010ec58:	e0bffc17 	ldw	r2,-16(fp)
1010ec5c:	10000326 	beq	r2,zero,1010ec6c <alt_hostfs_seek+0x54>
1010ec60:	e0bffc17 	ldw	r2,-16(fp)
1010ec64:	0085c83a 	sub	r2,zero,r2
1010ec68:	00000106 	br	1010ec70 <alt_hostfs_seek+0x58>
1010ec6c:	e0bffb17 	ldw	r2,-20(fp)
}
1010ec70:	e037883a 	mov	sp,fp
1010ec74:	df000017 	ldw	fp,0(sp)
1010ec78:	dec00104 	addi	sp,sp,4
1010ec7c:	f800283a 	ret

1010ec80 <alt_hostfs_fstat>:
* at the lower address.
* We need to copy the structure and byte swap it to make it match our local
* layout of struct stat.
*/
int alt_hostfs_fstat(alt_fd* fd, struct stat* st)
{
1010ec80:	deffe904 	addi	sp,sp,-92
1010ec84:	df001615 	stw	fp,88(sp)
1010ec88:	df001604 	addi	fp,sp,88
1010ec8c:	e13ffe15 	stw	r4,-8(fp)
1010ec90:	e17fff15 	stw	r5,-4(fp)
  register int r2 asm ("r2");
  register int r3 asm ("r3");
  register int r4 asm ("r4");
  register int r5 asm ("r5");

  r3 = (int)&hcinfo;
1010ec94:	d0a01c04 	addi	r2,gp,-32656
1010ec98:	1007883a 	mov	r3,r2
  r4 = (int)fd->priv;
1010ec9c:	e0bffe17 	ldw	r2,-8(fp)
1010eca0:	10800117 	ldw	r2,4(r2)
1010eca4:	1009883a 	mov	r4,r2
  r5 = (int)&hoststat;
1010eca8:	e0bfee04 	addi	r2,fp,-72
1010ecac:	100b883a 	mov	r5,r2

  __asm__ volatile("break 1" : "=r" (r2), "+r" (r3) : "r" (r4), "r" (r5) : "memory" );
1010ecb0:	003da07a 	break	1

  rc = r2;
1010ecb4:	e0bfeb15 	stw	r2,-84(fp)
  error = r3;
1010ecb8:	e0ffec15 	stw	r3,-80(fp)

  if (error == 0)
1010ecbc:	e0bfec17 	ldw	r2,-80(fp)
1010ecc0:	1000621e 	bne	r2,zero,1010ee4c <alt_hostfs_fstat+0x1cc>
     * no change is required.  On a little-endian processor we need to swap
     * the bytes in each word.
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
1010ecc4:	e0bfee04 	addi	r2,fp,-72
1010ecc8:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
1010eccc:	e0bfea17 	ldw	r2,-88(fp)
1010ecd0:	10801004 	addi	r2,r2,64
1010ecd4:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
1010ecd8:	00001606 	br	1010ed34 <alt_hostfs_fstat+0xb4>
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010ecdc:	e0bfea17 	ldw	r2,-88(fp)
1010ece0:	10800017 	ldw	r2,0(r2)
1010ece4:	1006d63a 	srli	r3,r2,24
             ((*ptr & 0x00FF0000) >> 8)  |
1010ece8:	e0bfea17 	ldw	r2,-88(fp)
1010ecec:	10800017 	ldw	r2,0(r2)
1010ecf0:	10803fec 	andhi	r2,r2,255
1010ecf4:	1004d23a 	srli	r2,r2,8

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010ecf8:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
1010ecfc:	e0bfea17 	ldw	r2,-88(fp)
1010ed00:	10800017 	ldw	r2,0(r2)
1010ed04:	10bfc00c 	andi	r2,r2,65280
1010ed08:	1004923a 	slli	r2,r2,8
#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
1010ed0c:	1886b03a 	or	r3,r3,r2
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
1010ed10:	e0bfea17 	ldw	r2,-88(fp)
1010ed14:	10800017 	ldw	r2,0(r2)
1010ed18:	1004963a 	slli	r2,r2,24
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
             ((*ptr & 0x00FF0000) >> 8)  |
             ((*ptr & 0x0000FF00) << 8)  |
1010ed1c:	1886b03a 	or	r3,r3,r2

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
      *ptr = ((*ptr & 0xFF000000) >> 24) |
1010ed20:	e0bfea17 	ldw	r2,-88(fp)
1010ed24:	10c00015 	stw	r3,0(r2)
     */

#ifndef ALT_BIGENDIAN
    ptr = (alt_u32 *)&hoststat;
    end = (alt_u32 *)((char *)ptr + sizeof(struct fio_stat));
    for ( ; ptr < end ; ptr++)
1010ed28:	e0bfea17 	ldw	r2,-88(fp)
1010ed2c:	10800104 	addi	r2,r2,4
1010ed30:	e0bfea15 	stw	r2,-88(fp)
1010ed34:	e0ffea17 	ldw	r3,-88(fp)
1010ed38:	e0bfed17 	ldw	r2,-76(fp)
1010ed3c:	18bfe736 	bltu	r3,r2,1010ecdc <__alt_data_end+0xfffeecdc>
             ((*ptr & 0x0000FF00) << 8)  |
             ((*ptr & 0x000000FF) << 24);
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
1010ed40:	e0bfff17 	ldw	r2,-4(fp)
1010ed44:	e0bfea15 	stw	r2,-88(fp)
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
1010ed48:	e0bfea17 	ldw	r2,-88(fp)
1010ed4c:	10800f04 	addi	r2,r2,60
1010ed50:	e0bfed15 	stw	r2,-76(fp)
    for ( ; ptr < end ; ptr++)
1010ed54:	00000506 	br	1010ed6c <alt_hostfs_fstat+0xec>
      *ptr = 0;
1010ed58:	e0bfea17 	ldw	r2,-88(fp)
1010ed5c:	10000015 	stw	zero,0(r2)
#endif

    /* Zero the unused parts of struct stat */
    ptr = (alt_u32 *)st;
    end = (alt_u32 *)((char *)ptr + sizeof(struct stat));
    for ( ; ptr < end ; ptr++)
1010ed60:	e0bfea17 	ldw	r2,-88(fp)
1010ed64:	10800104 	addi	r2,r2,4
1010ed68:	e0bfea15 	stw	r2,-88(fp)
1010ed6c:	e0ffea17 	ldw	r3,-88(fp)
1010ed70:	e0bfed17 	ldw	r2,-76(fp)
1010ed74:	18bff836 	bltu	r3,r2,1010ed58 <__alt_data_end+0xfffeed58>

    /* Copy the data provided by the host into our local copy, for data which
     * is provided as 64bit values by the host we just use the least
     * significant word.
     */
    st->st_dev     = hoststat.fst_dev;
1010ed78:	e0bfee17 	ldw	r2,-72(fp)
1010ed7c:	1007883a 	mov	r3,r2
1010ed80:	e0bfff17 	ldw	r2,-4(fp)
1010ed84:	10c0000d 	sth	r3,0(r2)
    st->st_ino     = hoststat.fst_ino;
1010ed88:	e0bfef17 	ldw	r2,-68(fp)
1010ed8c:	1007883a 	mov	r3,r2
1010ed90:	e0bfff17 	ldw	r2,-4(fp)
1010ed94:	10c0008d 	sth	r3,2(r2)
    st->st_mode    = hoststat.fst_mode;
1010ed98:	e0fff017 	ldw	r3,-64(fp)
1010ed9c:	e0bfff17 	ldw	r2,-4(fp)
1010eda0:	10c00115 	stw	r3,4(r2)
    st->st_nlink   = hoststat.fst_nlink;
1010eda4:	e0bff117 	ldw	r2,-60(fp)
1010eda8:	1007883a 	mov	r3,r2
1010edac:	e0bfff17 	ldw	r2,-4(fp)
1010edb0:	10c0020d 	sth	r3,8(r2)
    st->st_uid     = hoststat.fst_uid;
1010edb4:	e0bff217 	ldw	r2,-56(fp)
1010edb8:	1007883a 	mov	r3,r2
1010edbc:	e0bfff17 	ldw	r2,-4(fp)
1010edc0:	10c0028d 	sth	r3,10(r2)
    st->st_gid     = hoststat.fst_gid;
1010edc4:	e0bff317 	ldw	r2,-52(fp)
1010edc8:	1007883a 	mov	r3,r2
1010edcc:	e0bfff17 	ldw	r2,-4(fp)
1010edd0:	10c0030d 	sth	r3,12(r2)
    st->st_rdev    = hoststat.fst_rdev;
1010edd4:	e0bff417 	ldw	r2,-48(fp)
1010edd8:	1007883a 	mov	r3,r2
1010eddc:	e0bfff17 	ldw	r2,-4(fp)
1010ede0:	10c0038d 	sth	r3,14(r2)
    st->st_size    = hoststat.fst_size[1];
1010ede4:	e0bff617 	ldw	r2,-40(fp)
1010ede8:	1007883a 	mov	r3,r2
1010edec:	e0bfff17 	ldw	r2,-4(fp)
1010edf0:	10c00415 	stw	r3,16(r2)

    st->st_atime   = hoststat.fst_atime;
1010edf4:	e0bffb17 	ldw	r2,-20(fp)
1010edf8:	1007883a 	mov	r3,r2
1010edfc:	e0bfff17 	ldw	r2,-4(fp)
1010ee00:	10c00515 	stw	r3,20(r2)
    st->st_mtime   = hoststat.fst_mtime;
1010ee04:	e0bffc17 	ldw	r2,-16(fp)
1010ee08:	1007883a 	mov	r3,r2
1010ee0c:	e0bfff17 	ldw	r2,-4(fp)
1010ee10:	10c00715 	stw	r3,28(r2)
    st->st_ctime   = hoststat.fst_ctime;
1010ee14:	e0bffd17 	ldw	r2,-12(fp)
1010ee18:	1007883a 	mov	r3,r2
1010ee1c:	e0bfff17 	ldw	r2,-4(fp)
1010ee20:	10c00915 	stw	r3,36(r2)

    st->st_blksize = hoststat.fst_blksize[1];
1010ee24:	e0bff817 	ldw	r2,-32(fp)
1010ee28:	1007883a 	mov	r3,r2
1010ee2c:	e0bfff17 	ldw	r2,-4(fp)
1010ee30:	10c00b15 	stw	r3,44(r2)
    st->st_blocks  = hoststat.fst_blocks[1];
1010ee34:	e0bffa17 	ldw	r2,-24(fp)
1010ee38:	1007883a 	mov	r3,r2
1010ee3c:	e0bfff17 	ldw	r2,-4(fp)
1010ee40:	10c00c15 	stw	r3,48(r2)

    return rc;
1010ee44:	e0bfeb17 	ldw	r2,-84(fp)
1010ee48:	00000206 	br	1010ee54 <alt_hostfs_fstat+0x1d4>
  }
  else
    return -error;
1010ee4c:	e0bfec17 	ldw	r2,-80(fp)
1010ee50:	0085c83a 	sub	r2,zero,r2
}
1010ee54:	e037883a 	mov	sp,fp
1010ee58:	df000017 	ldw	fp,0(sp)
1010ee5c:	dec00104 	addi	sp,sp,4
1010ee60:	f800283a 	ret

1010ee64 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
1010ee64:	defff504 	addi	sp,sp,-44
1010ee68:	df000a15 	stw	fp,40(sp)
1010ee6c:	df000a04 	addi	fp,sp,40
1010ee70:	e13ffc15 	stw	r4,-16(fp)
1010ee74:	e17ffd15 	stw	r5,-12(fp)
1010ee78:	e1bffe15 	stw	r6,-8(fp)
1010ee7c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1010ee80:	e03ff615 	stw	zero,-40(fp)
1010ee84:	d0a70417 	ldw	r2,-25584(gp)
  
  if (alt_ticks_per_second ())
1010ee88:	10003c26 	beq	r2,zero,1010ef7c <alt_alarm_start+0x118>
  {
    if (alarm)
1010ee8c:	e0bffc17 	ldw	r2,-16(fp)
1010ee90:	10003826 	beq	r2,zero,1010ef74 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
1010ee94:	e0bffc17 	ldw	r2,-16(fp)
1010ee98:	e0fffe17 	ldw	r3,-8(fp)
1010ee9c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
1010eea0:	e0bffc17 	ldw	r2,-16(fp)
1010eea4:	e0ffff17 	ldw	r3,-4(fp)
1010eea8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010eeac:	0005303a 	rdctl	r2,status
1010eeb0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010eeb4:	e0fff917 	ldw	r3,-28(fp)
1010eeb8:	00bfff84 	movi	r2,-2
1010eebc:	1884703a 	and	r2,r3,r2
1010eec0:	1001703a 	wrctl	status,r2
  
  return context;
1010eec4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
1010eec8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
1010eecc:	d0a70517 	ldw	r2,-25580(gp)
      
      current_nticks = alt_nticks();
1010eed0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
1010eed4:	e0fffd17 	ldw	r3,-12(fp)
1010eed8:	e0bff617 	ldw	r2,-40(fp)
1010eedc:	1885883a 	add	r2,r3,r2
1010eee0:	10c00044 	addi	r3,r2,1
1010eee4:	e0bffc17 	ldw	r2,-16(fp)
1010eee8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
1010eeec:	e0bffc17 	ldw	r2,-16(fp)
1010eef0:	10c00217 	ldw	r3,8(r2)
1010eef4:	e0bff617 	ldw	r2,-40(fp)
1010eef8:	1880042e 	bgeu	r3,r2,1010ef0c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
1010eefc:	e0bffc17 	ldw	r2,-16(fp)
1010ef00:	00c00044 	movi	r3,1
1010ef04:	10c00405 	stb	r3,16(r2)
1010ef08:	00000206 	br	1010ef14 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
1010ef0c:	e0bffc17 	ldw	r2,-16(fp)
1010ef10:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
1010ef14:	e0bffc17 	ldw	r2,-16(fp)
1010ef18:	d0e02004 	addi	r3,gp,-32640
1010ef1c:	e0fffa15 	stw	r3,-24(fp)
1010ef20:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010ef24:	e0bffb17 	ldw	r2,-20(fp)
1010ef28:	e0fffa17 	ldw	r3,-24(fp)
1010ef2c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010ef30:	e0bffa17 	ldw	r2,-24(fp)
1010ef34:	10c00017 	ldw	r3,0(r2)
1010ef38:	e0bffb17 	ldw	r2,-20(fp)
1010ef3c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010ef40:	e0bffa17 	ldw	r2,-24(fp)
1010ef44:	10800017 	ldw	r2,0(r2)
1010ef48:	e0fffb17 	ldw	r3,-20(fp)
1010ef4c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010ef50:	e0bffa17 	ldw	r2,-24(fp)
1010ef54:	e0fffb17 	ldw	r3,-20(fp)
1010ef58:	10c00015 	stw	r3,0(r2)
1010ef5c:	e0bff817 	ldw	r2,-32(fp)
1010ef60:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010ef64:	e0bff717 	ldw	r2,-36(fp)
1010ef68:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1010ef6c:	0005883a 	mov	r2,zero
1010ef70:	00000306 	br	1010ef80 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
1010ef74:	00bffa84 	movi	r2,-22
1010ef78:	00000106 	br	1010ef80 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
1010ef7c:	00bfde84 	movi	r2,-134
  }
}
1010ef80:	e037883a 	mov	sp,fp
1010ef84:	df000017 	ldw	fp,0(sp)
1010ef88:	dec00104 	addi	sp,sp,4
1010ef8c:	f800283a 	ret

1010ef90 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
1010ef90:	defffe04 	addi	sp,sp,-8
1010ef94:	df000115 	stw	fp,4(sp)
1010ef98:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010ef9c:	e03fff15 	stw	zero,-4(fp)
1010efa0:	00000506 	br	1010efb8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
1010efa4:	e0bfff17 	ldw	r2,-4(fp)
1010efa8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
1010efac:	e0bfff17 	ldw	r2,-4(fp)
1010efb0:	10800804 	addi	r2,r2,32
1010efb4:	e0bfff15 	stw	r2,-4(fp)
1010efb8:	e0bfff17 	ldw	r2,-4(fp)
1010efbc:	10820030 	cmpltui	r2,r2,2048
1010efc0:	103ff81e 	bne	r2,zero,1010efa4 <__alt_data_end+0xfffeefa4>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1010efc4:	0001883a 	nop
1010efc8:	e037883a 	mov	sp,fp
1010efcc:	df000017 	ldw	fp,0(sp)
1010efd0:	dec00104 	addi	sp,sp,4
1010efd4:	f800283a 	ret

1010efd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010efd8:	defffe04 	addi	sp,sp,-8
1010efdc:	dfc00115 	stw	ra,4(sp)
1010efe0:	df000015 	stw	fp,0(sp)
1010efe4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010efe8:	d0a00b17 	ldw	r2,-32724(gp)
1010efec:	10000326 	beq	r2,zero,1010effc <alt_get_errno+0x24>
1010eff0:	d0a00b17 	ldw	r2,-32724(gp)
1010eff4:	103ee83a 	callr	r2
1010eff8:	00000106 	br	1010f000 <alt_get_errno+0x28>
1010effc:	d0a6ff04 	addi	r2,gp,-25604
}
1010f000:	e037883a 	mov	sp,fp
1010f004:	dfc00117 	ldw	ra,4(sp)
1010f008:	df000017 	ldw	fp,0(sp)
1010f00c:	dec00204 	addi	sp,sp,8
1010f010:	f800283a 	ret

1010f014 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
1010f014:	defffa04 	addi	sp,sp,-24
1010f018:	dfc00515 	stw	ra,20(sp)
1010f01c:	df000415 	stw	fp,16(sp)
1010f020:	df000404 	addi	fp,sp,16
1010f024:	e13ffe15 	stw	r4,-8(fp)
1010f028:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
1010f02c:	e0bffe17 	ldw	r2,-8(fp)
1010f030:	10000326 	beq	r2,zero,1010f040 <alt_dev_llist_insert+0x2c>
1010f034:	e0bffe17 	ldw	r2,-8(fp)
1010f038:	10800217 	ldw	r2,8(r2)
1010f03c:	1000061e 	bne	r2,zero,1010f058 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
1010f040:	010efd80 	call	1010efd8 <alt_get_errno>
1010f044:	1007883a 	mov	r3,r2
1010f048:	00800584 	movi	r2,22
1010f04c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
1010f050:	00bffa84 	movi	r2,-22
1010f054:	00001306 	br	1010f0a4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1010f058:	e0bffe17 	ldw	r2,-8(fp)
1010f05c:	e0ffff17 	ldw	r3,-4(fp)
1010f060:	e0fffc15 	stw	r3,-16(fp)
1010f064:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f068:	e0bffd17 	ldw	r2,-12(fp)
1010f06c:	e0fffc17 	ldw	r3,-16(fp)
1010f070:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f074:	e0bffc17 	ldw	r2,-16(fp)
1010f078:	10c00017 	ldw	r3,0(r2)
1010f07c:	e0bffd17 	ldw	r2,-12(fp)
1010f080:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f084:	e0bffc17 	ldw	r2,-16(fp)
1010f088:	10800017 	ldw	r2,0(r2)
1010f08c:	e0fffd17 	ldw	r3,-12(fp)
1010f090:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f094:	e0bffc17 	ldw	r2,-16(fp)
1010f098:	e0fffd17 	ldw	r3,-12(fp)
1010f09c:	10c00015 	stw	r3,0(r2)

  return 0;  
1010f0a0:	0005883a 	mov	r2,zero
}
1010f0a4:	e037883a 	mov	sp,fp
1010f0a8:	dfc00117 	ldw	ra,4(sp)
1010f0ac:	df000017 	ldw	fp,0(sp)
1010f0b0:	dec00204 	addi	sp,sp,8
1010f0b4:	f800283a 	ret

1010f0b8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1010f0b8:	defffd04 	addi	sp,sp,-12
1010f0bc:	dfc00215 	stw	ra,8(sp)
1010f0c0:	df000115 	stw	fp,4(sp)
1010f0c4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f0c8:	00840474 	movhi	r2,4113
1010f0cc:	10804804 	addi	r2,r2,288
1010f0d0:	e0bfff15 	stw	r2,-4(fp)
1010f0d4:	00000606 	br	1010f0f0 <_do_ctors+0x38>
        (*ctor) (); 
1010f0d8:	e0bfff17 	ldw	r2,-4(fp)
1010f0dc:	10800017 	ldw	r2,0(r2)
1010f0e0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
1010f0e4:	e0bfff17 	ldw	r2,-4(fp)
1010f0e8:	10bfff04 	addi	r2,r2,-4
1010f0ec:	e0bfff15 	stw	r2,-4(fp)
1010f0f0:	e0ffff17 	ldw	r3,-4(fp)
1010f0f4:	00840474 	movhi	r2,4113
1010f0f8:	10804904 	addi	r2,r2,292
1010f0fc:	18bff62e 	bgeu	r3,r2,1010f0d8 <__alt_data_end+0xfffef0d8>
        (*ctor) (); 
}
1010f100:	0001883a 	nop
1010f104:	e037883a 	mov	sp,fp
1010f108:	dfc00117 	ldw	ra,4(sp)
1010f10c:	df000017 	ldw	fp,0(sp)
1010f110:	dec00204 	addi	sp,sp,8
1010f114:	f800283a 	ret

1010f118 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
1010f118:	defffd04 	addi	sp,sp,-12
1010f11c:	dfc00215 	stw	ra,8(sp)
1010f120:	df000115 	stw	fp,4(sp)
1010f124:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f128:	00840474 	movhi	r2,4113
1010f12c:	10804804 	addi	r2,r2,288
1010f130:	e0bfff15 	stw	r2,-4(fp)
1010f134:	00000606 	br	1010f150 <_do_dtors+0x38>
        (*dtor) (); 
1010f138:	e0bfff17 	ldw	r2,-4(fp)
1010f13c:	10800017 	ldw	r2,0(r2)
1010f140:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
1010f144:	e0bfff17 	ldw	r2,-4(fp)
1010f148:	10bfff04 	addi	r2,r2,-4
1010f14c:	e0bfff15 	stw	r2,-4(fp)
1010f150:	e0ffff17 	ldw	r3,-4(fp)
1010f154:	00840474 	movhi	r2,4113
1010f158:	10804904 	addi	r2,r2,292
1010f15c:	18bff62e 	bgeu	r3,r2,1010f138 <__alt_data_end+0xfffef138>
        (*dtor) (); 
}
1010f160:	0001883a 	nop
1010f164:	e037883a 	mov	sp,fp
1010f168:	dfc00117 	ldw	ra,4(sp)
1010f16c:	df000017 	ldw	fp,0(sp)
1010f170:	dec00204 	addi	sp,sp,8
1010f174:	f800283a 	ret

1010f178 <alt_fs_reg>:
 * A return value of zero indicates success. A negative return value indicates
 * failure. 
 */
 
int alt_fs_reg (alt_dev* dev)
{
1010f178:	defffc04 	addi	sp,sp,-16
1010f17c:	df000315 	stw	fp,12(sp)
1010f180:	df000304 	addi	fp,sp,12
1010f184:	e13fff15 	stw	r4,-4(fp)
  /*
   * check that the device has a name.
   */

  if (!dev->name)
1010f188:	e0bfff17 	ldw	r2,-4(fp)
1010f18c:	10800217 	ldw	r2,8(r2)
1010f190:	1000021e 	bne	r2,zero,1010f19c <alt_fs_reg+0x24>
  {
    return -ENODEV;
1010f194:	00bffb44 	movi	r2,-19
1010f198:	00001306 	br	1010f1e8 <alt_fs_reg+0x70>
  
  /*
   * register the file system.
   */

  alt_llist_insert(&alt_fs_list, &dev->llist);
1010f19c:	e0bfff17 	ldw	r2,-4(fp)
1010f1a0:	d0e00604 	addi	r3,gp,-32744
1010f1a4:	e0fffd15 	stw	r3,-12(fp)
1010f1a8:	e0bffe15 	stw	r2,-8(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1010f1ac:	e0bffe17 	ldw	r2,-8(fp)
1010f1b0:	e0fffd17 	ldw	r3,-12(fp)
1010f1b4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
1010f1b8:	e0bffd17 	ldw	r2,-12(fp)
1010f1bc:	10c00017 	ldw	r3,0(r2)
1010f1c0:	e0bffe17 	ldw	r2,-8(fp)
1010f1c4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
1010f1c8:	e0bffd17 	ldw	r2,-12(fp)
1010f1cc:	10800017 	ldw	r2,0(r2)
1010f1d0:	e0fffe17 	ldw	r3,-8(fp)
1010f1d4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
1010f1d8:	e0bffd17 	ldw	r2,-12(fp)
1010f1dc:	e0fffe17 	ldw	r3,-8(fp)
1010f1e0:	10c00015 	stw	r3,0(r2)

  return 0;
1010f1e4:	0005883a 	mov	r2,zero
} 
1010f1e8:	e037883a 	mov	sp,fp
1010f1ec:	df000017 	ldw	fp,0(sp)
1010f1f0:	dec00104 	addi	sp,sp,4
1010f1f4:	f800283a 	ret

1010f1f8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
1010f1f8:	defffe04 	addi	sp,sp,-8
1010f1fc:	dfc00115 	stw	ra,4(sp)
1010f200:	df000015 	stw	fp,0(sp)
1010f204:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
1010f208:	01440004 	movi	r5,4096
1010f20c:	0009883a 	mov	r4,zero
1010f210:	010fc640 	call	1010fc64 <alt_icache_flush>
#endif
}
1010f214:	0001883a 	nop
1010f218:	e037883a 	mov	sp,fp
1010f21c:	dfc00117 	ldw	ra,4(sp)
1010f220:	df000017 	ldw	fp,0(sp)
1010f224:	dec00204 	addi	sp,sp,8
1010f228:	f800283a 	ret

1010f22c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f22c:	defff904 	addi	sp,sp,-28
1010f230:	dfc00615 	stw	ra,24(sp)
1010f234:	df000515 	stw	fp,20(sp)
1010f238:	df000504 	addi	fp,sp,20
1010f23c:	e13ffc15 	stw	r4,-16(fp)
1010f240:	e17ffd15 	stw	r5,-12(fp)
1010f244:	e1bffe15 	stw	r6,-8(fp)
1010f248:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
1010f24c:	e0800217 	ldw	r2,8(fp)
1010f250:	d8800015 	stw	r2,0(sp)
1010f254:	e1ffff17 	ldw	r7,-4(fp)
1010f258:	e1bffe17 	ldw	r6,-8(fp)
1010f25c:	e17ffd17 	ldw	r5,-12(fp)
1010f260:	e13ffc17 	ldw	r4,-16(fp)
1010f264:	010f3dc0 	call	1010f3dc <alt_iic_isr_register>
}  
1010f268:	e037883a 	mov	sp,fp
1010f26c:	dfc00117 	ldw	ra,4(sp)
1010f270:	df000017 	ldw	fp,0(sp)
1010f274:	dec00204 	addi	sp,sp,8
1010f278:	f800283a 	ret

1010f27c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
1010f27c:	defff904 	addi	sp,sp,-28
1010f280:	df000615 	stw	fp,24(sp)
1010f284:	df000604 	addi	fp,sp,24
1010f288:	e13ffe15 	stw	r4,-8(fp)
1010f28c:	e17fff15 	stw	r5,-4(fp)
1010f290:	e0bfff17 	ldw	r2,-4(fp)
1010f294:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f298:	0005303a 	rdctl	r2,status
1010f29c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f2a0:	e0fffb17 	ldw	r3,-20(fp)
1010f2a4:	00bfff84 	movi	r2,-2
1010f2a8:	1884703a 	and	r2,r3,r2
1010f2ac:	1001703a 	wrctl	status,r2
  
  return context;
1010f2b0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f2b4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
1010f2b8:	00c00044 	movi	r3,1
1010f2bc:	e0bffa17 	ldw	r2,-24(fp)
1010f2c0:	1884983a 	sll	r2,r3,r2
1010f2c4:	1007883a 	mov	r3,r2
1010f2c8:	d0a70317 	ldw	r2,-25588(gp)
1010f2cc:	1884b03a 	or	r2,r3,r2
1010f2d0:	d0a70315 	stw	r2,-25588(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f2d4:	d0a70317 	ldw	r2,-25588(gp)
1010f2d8:	100170fa 	wrctl	ienable,r2
1010f2dc:	e0bffc17 	ldw	r2,-16(fp)
1010f2e0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f2e4:	e0bffd17 	ldw	r2,-12(fp)
1010f2e8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f2ec:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
1010f2f0:	0001883a 	nop
}
1010f2f4:	e037883a 	mov	sp,fp
1010f2f8:	df000017 	ldw	fp,0(sp)
1010f2fc:	dec00104 	addi	sp,sp,4
1010f300:	f800283a 	ret

1010f304 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1010f304:	defff904 	addi	sp,sp,-28
1010f308:	df000615 	stw	fp,24(sp)
1010f30c:	df000604 	addi	fp,sp,24
1010f310:	e13ffe15 	stw	r4,-8(fp)
1010f314:	e17fff15 	stw	r5,-4(fp)
1010f318:	e0bfff17 	ldw	r2,-4(fp)
1010f31c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f320:	0005303a 	rdctl	r2,status
1010f324:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f328:	e0fffb17 	ldw	r3,-20(fp)
1010f32c:	00bfff84 	movi	r2,-2
1010f330:	1884703a 	and	r2,r3,r2
1010f334:	1001703a 	wrctl	status,r2
  
  return context;
1010f338:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
1010f33c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
1010f340:	00c00044 	movi	r3,1
1010f344:	e0bffa17 	ldw	r2,-24(fp)
1010f348:	1884983a 	sll	r2,r3,r2
1010f34c:	0084303a 	nor	r2,zero,r2
1010f350:	1007883a 	mov	r3,r2
1010f354:	d0a70317 	ldw	r2,-25588(gp)
1010f358:	1884703a 	and	r2,r3,r2
1010f35c:	d0a70315 	stw	r2,-25588(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
1010f360:	d0a70317 	ldw	r2,-25588(gp)
1010f364:	100170fa 	wrctl	ienable,r2
1010f368:	e0bffc17 	ldw	r2,-16(fp)
1010f36c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f370:	e0bffd17 	ldw	r2,-12(fp)
1010f374:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
1010f378:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
1010f37c:	0001883a 	nop
}
1010f380:	e037883a 	mov	sp,fp
1010f384:	df000017 	ldw	fp,0(sp)
1010f388:	dec00104 	addi	sp,sp,4
1010f38c:	f800283a 	ret

1010f390 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
1010f390:	defffc04 	addi	sp,sp,-16
1010f394:	df000315 	stw	fp,12(sp)
1010f398:	df000304 	addi	fp,sp,12
1010f39c:	e13ffe15 	stw	r4,-8(fp)
1010f3a0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
1010f3a4:	000530fa 	rdctl	r2,ienable
1010f3a8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
1010f3ac:	00c00044 	movi	r3,1
1010f3b0:	e0bfff17 	ldw	r2,-4(fp)
1010f3b4:	1884983a 	sll	r2,r3,r2
1010f3b8:	1007883a 	mov	r3,r2
1010f3bc:	e0bffd17 	ldw	r2,-12(fp)
1010f3c0:	1884703a 	and	r2,r3,r2
1010f3c4:	1004c03a 	cmpne	r2,r2,zero
1010f3c8:	10803fcc 	andi	r2,r2,255
}
1010f3cc:	e037883a 	mov	sp,fp
1010f3d0:	df000017 	ldw	fp,0(sp)
1010f3d4:	dec00104 	addi	sp,sp,4
1010f3d8:	f800283a 	ret

1010f3dc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
1010f3dc:	defff504 	addi	sp,sp,-44
1010f3e0:	dfc00a15 	stw	ra,40(sp)
1010f3e4:	df000915 	stw	fp,36(sp)
1010f3e8:	df000904 	addi	fp,sp,36
1010f3ec:	e13ffc15 	stw	r4,-16(fp)
1010f3f0:	e17ffd15 	stw	r5,-12(fp)
1010f3f4:	e1bffe15 	stw	r6,-8(fp)
1010f3f8:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
1010f3fc:	00bffa84 	movi	r2,-22
1010f400:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
1010f404:	e0bffd17 	ldw	r2,-12(fp)
1010f408:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
1010f40c:	e0bff817 	ldw	r2,-32(fp)
1010f410:	10800808 	cmpgei	r2,r2,32
1010f414:	1000271e 	bne	r2,zero,1010f4b4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f418:	0005303a 	rdctl	r2,status
1010f41c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f420:	e0fffb17 	ldw	r3,-20(fp)
1010f424:	00bfff84 	movi	r2,-2
1010f428:	1884703a 	and	r2,r3,r2
1010f42c:	1001703a 	wrctl	status,r2
  
  return context;
1010f430:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
1010f434:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
1010f438:	00840474 	movhi	r2,4113
1010f43c:	108eeb04 	addi	r2,r2,15276
1010f440:	e0fff817 	ldw	r3,-32(fp)
1010f444:	180690fa 	slli	r3,r3,3
1010f448:	10c5883a 	add	r2,r2,r3
1010f44c:	e0fffe17 	ldw	r3,-8(fp)
1010f450:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
1010f454:	00840474 	movhi	r2,4113
1010f458:	108eeb04 	addi	r2,r2,15276
1010f45c:	e0fff817 	ldw	r3,-32(fp)
1010f460:	180690fa 	slli	r3,r3,3
1010f464:	10c5883a 	add	r2,r2,r3
1010f468:	10800104 	addi	r2,r2,4
1010f46c:	e0ffff17 	ldw	r3,-4(fp)
1010f470:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
1010f474:	e0bffe17 	ldw	r2,-8(fp)
1010f478:	10000526 	beq	r2,zero,1010f490 <alt_iic_isr_register+0xb4>
1010f47c:	e0bff817 	ldw	r2,-32(fp)
1010f480:	100b883a 	mov	r5,r2
1010f484:	e13ffc17 	ldw	r4,-16(fp)
1010f488:	010f27c0 	call	1010f27c <alt_ic_irq_enable>
1010f48c:	00000406 	br	1010f4a0 <alt_iic_isr_register+0xc4>
1010f490:	e0bff817 	ldw	r2,-32(fp)
1010f494:	100b883a 	mov	r5,r2
1010f498:	e13ffc17 	ldw	r4,-16(fp)
1010f49c:	010f3040 	call	1010f304 <alt_ic_irq_disable>
1010f4a0:	e0bff715 	stw	r2,-36(fp)
1010f4a4:	e0bffa17 	ldw	r2,-24(fp)
1010f4a8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f4ac:	e0bff917 	ldw	r2,-28(fp)
1010f4b0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
1010f4b4:	e0bff717 	ldw	r2,-36(fp)
}
1010f4b8:	e037883a 	mov	sp,fp
1010f4bc:	dfc00117 	ldw	ra,4(sp)
1010f4c0:	df000017 	ldw	fp,0(sp)
1010f4c4:	dec00204 	addi	sp,sp,8
1010f4c8:	f800283a 	ret

1010f4cc <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
1010f4cc:	defff904 	addi	sp,sp,-28
1010f4d0:	dfc00615 	stw	ra,24(sp)
1010f4d4:	df000515 	stw	fp,20(sp)
1010f4d8:	df000504 	addi	fp,sp,20
1010f4dc:	e13ffc15 	stw	r4,-16(fp)
1010f4e0:	e17ffd15 	stw	r5,-12(fp)
1010f4e4:	e1bffe15 	stw	r6,-8(fp)
1010f4e8:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
1010f4ec:	e1bfff17 	ldw	r6,-4(fp)
1010f4f0:	e17ffe17 	ldw	r5,-8(fp)
1010f4f4:	e13ffd17 	ldw	r4,-12(fp)
1010f4f8:	010f70c0 	call	1010f70c <open>
1010f4fc:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
1010f500:	e0bffb17 	ldw	r2,-20(fp)
1010f504:	10001c16 	blt	r2,zero,1010f578 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
1010f508:	00840474 	movhi	r2,4113
1010f50c:	10835804 	addi	r2,r2,3424
1010f510:	e0fffb17 	ldw	r3,-20(fp)
1010f514:	18c00324 	muli	r3,r3,12
1010f518:	10c5883a 	add	r2,r2,r3
1010f51c:	10c00017 	ldw	r3,0(r2)
1010f520:	e0bffc17 	ldw	r2,-16(fp)
1010f524:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
1010f528:	00840474 	movhi	r2,4113
1010f52c:	10835804 	addi	r2,r2,3424
1010f530:	e0fffb17 	ldw	r3,-20(fp)
1010f534:	18c00324 	muli	r3,r3,12
1010f538:	10c5883a 	add	r2,r2,r3
1010f53c:	10800104 	addi	r2,r2,4
1010f540:	10c00017 	ldw	r3,0(r2)
1010f544:	e0bffc17 	ldw	r2,-16(fp)
1010f548:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
1010f54c:	00840474 	movhi	r2,4113
1010f550:	10835804 	addi	r2,r2,3424
1010f554:	e0fffb17 	ldw	r3,-20(fp)
1010f558:	18c00324 	muli	r3,r3,12
1010f55c:	10c5883a 	add	r2,r2,r3
1010f560:	10800204 	addi	r2,r2,8
1010f564:	10c00017 	ldw	r3,0(r2)
1010f568:	e0bffc17 	ldw	r2,-16(fp)
1010f56c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
1010f570:	e13ffb17 	ldw	r4,-20(fp)
1010f574:	010dc700 	call	1010dc70 <alt_release_fd>
  }
} 
1010f578:	0001883a 	nop
1010f57c:	e037883a 	mov	sp,fp
1010f580:	dfc00117 	ldw	ra,4(sp)
1010f584:	df000017 	ldw	fp,0(sp)
1010f588:	dec00204 	addi	sp,sp,8
1010f58c:	f800283a 	ret

1010f590 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
1010f590:	defffb04 	addi	sp,sp,-20
1010f594:	dfc00415 	stw	ra,16(sp)
1010f598:	df000315 	stw	fp,12(sp)
1010f59c:	df000304 	addi	fp,sp,12
1010f5a0:	e13ffd15 	stw	r4,-12(fp)
1010f5a4:	e17ffe15 	stw	r5,-8(fp)
1010f5a8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
1010f5ac:	01c07fc4 	movi	r7,511
1010f5b0:	01800044 	movi	r6,1
1010f5b4:	e17ffd17 	ldw	r5,-12(fp)
1010f5b8:	01040474 	movhi	r4,4113
1010f5bc:	21035b04 	addi	r4,r4,3436
1010f5c0:	010f4cc0 	call	1010f4cc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1010f5c4:	01c07fc4 	movi	r7,511
1010f5c8:	000d883a 	mov	r6,zero
1010f5cc:	e17ffe17 	ldw	r5,-8(fp)
1010f5d0:	01040474 	movhi	r4,4113
1010f5d4:	21035804 	addi	r4,r4,3424
1010f5d8:	010f4cc0 	call	1010f4cc <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
1010f5dc:	01c07fc4 	movi	r7,511
1010f5e0:	01800044 	movi	r6,1
1010f5e4:	e17fff17 	ldw	r5,-4(fp)
1010f5e8:	01040474 	movhi	r4,4113
1010f5ec:	21035e04 	addi	r4,r4,3448
1010f5f0:	010f4cc0 	call	1010f4cc <alt_open_fd>
}  
1010f5f4:	0001883a 	nop
1010f5f8:	e037883a 	mov	sp,fp
1010f5fc:	dfc00117 	ldw	ra,4(sp)
1010f600:	df000017 	ldw	fp,0(sp)
1010f604:	dec00204 	addi	sp,sp,8
1010f608:	f800283a 	ret

1010f60c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1010f60c:	defffe04 	addi	sp,sp,-8
1010f610:	dfc00115 	stw	ra,4(sp)
1010f614:	df000015 	stw	fp,0(sp)
1010f618:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1010f61c:	d0a00b17 	ldw	r2,-32724(gp)
1010f620:	10000326 	beq	r2,zero,1010f630 <alt_get_errno+0x24>
1010f624:	d0a00b17 	ldw	r2,-32724(gp)
1010f628:	103ee83a 	callr	r2
1010f62c:	00000106 	br	1010f634 <alt_get_errno+0x28>
1010f630:	d0a6ff04 	addi	r2,gp,-25604
}
1010f634:	e037883a 	mov	sp,fp
1010f638:	dfc00117 	ldw	ra,4(sp)
1010f63c:	df000017 	ldw	fp,0(sp)
1010f640:	dec00204 	addi	sp,sp,8
1010f644:	f800283a 	ret

1010f648 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
1010f648:	defffd04 	addi	sp,sp,-12
1010f64c:	df000215 	stw	fp,8(sp)
1010f650:	df000204 	addi	fp,sp,8
1010f654:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
1010f658:	e0bfff17 	ldw	r2,-4(fp)
1010f65c:	10800217 	ldw	r2,8(r2)
1010f660:	10d00034 	orhi	r3,r2,16384
1010f664:	e0bfff17 	ldw	r2,-4(fp)
1010f668:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010f66c:	e03ffe15 	stw	zero,-8(fp)
1010f670:	00001d06 	br	1010f6e8 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010f674:	00840474 	movhi	r2,4113
1010f678:	10835804 	addi	r2,r2,3424
1010f67c:	e0fffe17 	ldw	r3,-8(fp)
1010f680:	18c00324 	muli	r3,r3,12
1010f684:	10c5883a 	add	r2,r2,r3
1010f688:	10c00017 	ldw	r3,0(r2)
1010f68c:	e0bfff17 	ldw	r2,-4(fp)
1010f690:	10800017 	ldw	r2,0(r2)
1010f694:	1880111e 	bne	r3,r2,1010f6dc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010f698:	00840474 	movhi	r2,4113
1010f69c:	10835804 	addi	r2,r2,3424
1010f6a0:	e0fffe17 	ldw	r3,-8(fp)
1010f6a4:	18c00324 	muli	r3,r3,12
1010f6a8:	10c5883a 	add	r2,r2,r3
1010f6ac:	10800204 	addi	r2,r2,8
1010f6b0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
1010f6b4:	1000090e 	bge	r2,zero,1010f6dc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
1010f6b8:	e0bffe17 	ldw	r2,-8(fp)
1010f6bc:	10c00324 	muli	r3,r2,12
1010f6c0:	00840474 	movhi	r2,4113
1010f6c4:	10835804 	addi	r2,r2,3424
1010f6c8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
1010f6cc:	e0bfff17 	ldw	r2,-4(fp)
1010f6d0:	18800226 	beq	r3,r2,1010f6dc <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
1010f6d4:	00bffcc4 	movi	r2,-13
1010f6d8:	00000806 	br	1010f6fc <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
1010f6dc:	e0bffe17 	ldw	r2,-8(fp)
1010f6e0:	10800044 	addi	r2,r2,1
1010f6e4:	e0bffe15 	stw	r2,-8(fp)
1010f6e8:	d0a00a17 	ldw	r2,-32728(gp)
1010f6ec:	1007883a 	mov	r3,r2
1010f6f0:	e0bffe17 	ldw	r2,-8(fp)
1010f6f4:	18bfdf2e 	bgeu	r3,r2,1010f674 <__alt_data_end+0xfffef674>
    }
  }
  
  /* The device is not locked */
 
  return 0;
1010f6f8:	0005883a 	mov	r2,zero
}
1010f6fc:	e037883a 	mov	sp,fp
1010f700:	df000017 	ldw	fp,0(sp)
1010f704:	dec00104 	addi	sp,sp,4
1010f708:	f800283a 	ret

1010f70c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
1010f70c:	defff604 	addi	sp,sp,-40
1010f710:	dfc00915 	stw	ra,36(sp)
1010f714:	df000815 	stw	fp,32(sp)
1010f718:	df000804 	addi	fp,sp,32
1010f71c:	e13ffd15 	stw	r4,-12(fp)
1010f720:	e17ffe15 	stw	r5,-8(fp)
1010f724:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
1010f728:	00bfffc4 	movi	r2,-1
1010f72c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
1010f730:	00bffb44 	movi	r2,-19
1010f734:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
1010f738:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
1010f73c:	d1600804 	addi	r5,gp,-32736
1010f740:	e13ffd17 	ldw	r4,-12(fp)
1010f744:	010fa280 	call	1010fa28 <alt_find_dev>
1010f748:	e0bff815 	stw	r2,-32(fp)
1010f74c:	e0bff817 	ldw	r2,-32(fp)
1010f750:	1000051e 	bne	r2,zero,1010f768 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
1010f754:	e13ffd17 	ldw	r4,-12(fp)
1010f758:	010fab80 	call	1010fab8 <alt_find_file>
1010f75c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
1010f760:	00800044 	movi	r2,1
1010f764:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
1010f768:	e0bff817 	ldw	r2,-32(fp)
1010f76c:	10002926 	beq	r2,zero,1010f814 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
1010f770:	e13ff817 	ldw	r4,-32(fp)
1010f774:	010fbc00 	call	1010fbc0 <alt_get_fd>
1010f778:	e0bff915 	stw	r2,-28(fp)
1010f77c:	e0bff917 	ldw	r2,-28(fp)
1010f780:	1000030e 	bge	r2,zero,1010f790 <open+0x84>
    {
      status = index;
1010f784:	e0bff917 	ldw	r2,-28(fp)
1010f788:	e0bffa15 	stw	r2,-24(fp)
1010f78c:	00002306 	br	1010f81c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
1010f790:	e0bff917 	ldw	r2,-28(fp)
1010f794:	10c00324 	muli	r3,r2,12
1010f798:	00840474 	movhi	r2,4113
1010f79c:	10835804 	addi	r2,r2,3424
1010f7a0:	1885883a 	add	r2,r3,r2
1010f7a4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
1010f7a8:	e0fffe17 	ldw	r3,-8(fp)
1010f7ac:	00900034 	movhi	r2,16384
1010f7b0:	10bfffc4 	addi	r2,r2,-1
1010f7b4:	1886703a 	and	r3,r3,r2
1010f7b8:	e0bffc17 	ldw	r2,-16(fp)
1010f7bc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
1010f7c0:	e0bffb17 	ldw	r2,-20(fp)
1010f7c4:	1000051e 	bne	r2,zero,1010f7dc <open+0xd0>
1010f7c8:	e13ffc17 	ldw	r4,-16(fp)
1010f7cc:	010f6480 	call	1010f648 <alt_file_locked>
1010f7d0:	e0bffa15 	stw	r2,-24(fp)
1010f7d4:	e0bffa17 	ldw	r2,-24(fp)
1010f7d8:	10001016 	blt	r2,zero,1010f81c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
1010f7dc:	e0bff817 	ldw	r2,-32(fp)
1010f7e0:	10800317 	ldw	r2,12(r2)
1010f7e4:	10000826 	beq	r2,zero,1010f808 <open+0xfc>
1010f7e8:	e0bff817 	ldw	r2,-32(fp)
1010f7ec:	10800317 	ldw	r2,12(r2)
1010f7f0:	e1ffff17 	ldw	r7,-4(fp)
1010f7f4:	e1bffe17 	ldw	r6,-8(fp)
1010f7f8:	e17ffd17 	ldw	r5,-12(fp)
1010f7fc:	e13ffc17 	ldw	r4,-16(fp)
1010f800:	103ee83a 	callr	r2
1010f804:	00000106 	br	1010f80c <open+0x100>
1010f808:	0005883a 	mov	r2,zero
1010f80c:	e0bffa15 	stw	r2,-24(fp)
1010f810:	00000206 	br	1010f81c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
1010f814:	00bffb44 	movi	r2,-19
1010f818:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
1010f81c:	e0bffa17 	ldw	r2,-24(fp)
1010f820:	1000090e 	bge	r2,zero,1010f848 <open+0x13c>
  {
    alt_release_fd (index);  
1010f824:	e13ff917 	ldw	r4,-28(fp)
1010f828:	010dc700 	call	1010dc70 <alt_release_fd>
    ALT_ERRNO = -status;
1010f82c:	010f60c0 	call	1010f60c <alt_get_errno>
1010f830:	1007883a 	mov	r3,r2
1010f834:	e0bffa17 	ldw	r2,-24(fp)
1010f838:	0085c83a 	sub	r2,zero,r2
1010f83c:	18800015 	stw	r2,0(r3)
    return -1;
1010f840:	00bfffc4 	movi	r2,-1
1010f844:	00000106 	br	1010f84c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
1010f848:	e0bff917 	ldw	r2,-28(fp)
}
1010f84c:	e037883a 	mov	sp,fp
1010f850:	dfc00117 	ldw	ra,4(sp)
1010f854:	df000017 	ldw	fp,0(sp)
1010f858:	dec00204 	addi	sp,sp,8
1010f85c:	f800283a 	ret

1010f860 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
1010f860:	defffa04 	addi	sp,sp,-24
1010f864:	df000515 	stw	fp,20(sp)
1010f868:	df000504 	addi	fp,sp,20
1010f86c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1010f870:	0005303a 	rdctl	r2,status
1010f874:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1010f878:	e0fffc17 	ldw	r3,-16(fp)
1010f87c:	00bfff84 	movi	r2,-2
1010f880:	1884703a 	and	r2,r3,r2
1010f884:	1001703a 	wrctl	status,r2
  
  return context;
1010f888:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
1010f88c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
1010f890:	e0bfff17 	ldw	r2,-4(fp)
1010f894:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
1010f898:	e0bffd17 	ldw	r2,-12(fp)
1010f89c:	10800017 	ldw	r2,0(r2)
1010f8a0:	e0fffd17 	ldw	r3,-12(fp)
1010f8a4:	18c00117 	ldw	r3,4(r3)
1010f8a8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
1010f8ac:	e0bffd17 	ldw	r2,-12(fp)
1010f8b0:	10800117 	ldw	r2,4(r2)
1010f8b4:	e0fffd17 	ldw	r3,-12(fp)
1010f8b8:	18c00017 	ldw	r3,0(r3)
1010f8bc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
1010f8c0:	e0bffd17 	ldw	r2,-12(fp)
1010f8c4:	e0fffd17 	ldw	r3,-12(fp)
1010f8c8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
1010f8cc:	e0bffd17 	ldw	r2,-12(fp)
1010f8d0:	e0fffd17 	ldw	r3,-12(fp)
1010f8d4:	10c00015 	stw	r3,0(r2)
1010f8d8:	e0bffb17 	ldw	r2,-20(fp)
1010f8dc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
1010f8e0:	e0bffe17 	ldw	r2,-8(fp)
1010f8e4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
1010f8e8:	0001883a 	nop
1010f8ec:	e037883a 	mov	sp,fp
1010f8f0:	df000017 	ldw	fp,0(sp)
1010f8f4:	dec00104 	addi	sp,sp,4
1010f8f8:	f800283a 	ret

1010f8fc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
1010f8fc:	defffb04 	addi	sp,sp,-20
1010f900:	dfc00415 	stw	ra,16(sp)
1010f904:	df000315 	stw	fp,12(sp)
1010f908:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
1010f90c:	d0a02017 	ldw	r2,-32640(gp)
1010f910:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
1010f914:	d0a70517 	ldw	r2,-25580(gp)
1010f918:	10800044 	addi	r2,r2,1
1010f91c:	d0a70515 	stw	r2,-25580(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f920:	00002e06 	br	1010f9dc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
1010f924:	e0bffd17 	ldw	r2,-12(fp)
1010f928:	10800017 	ldw	r2,0(r2)
1010f92c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
1010f930:	e0bffd17 	ldw	r2,-12(fp)
1010f934:	10800403 	ldbu	r2,16(r2)
1010f938:	10803fcc 	andi	r2,r2,255
1010f93c:	10000426 	beq	r2,zero,1010f950 <alt_tick+0x54>
1010f940:	d0a70517 	ldw	r2,-25580(gp)
1010f944:	1000021e 	bne	r2,zero,1010f950 <alt_tick+0x54>
    {
      alarm->rollover = 0;
1010f948:	e0bffd17 	ldw	r2,-12(fp)
1010f94c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
1010f950:	e0bffd17 	ldw	r2,-12(fp)
1010f954:	10800217 	ldw	r2,8(r2)
1010f958:	d0e70517 	ldw	r3,-25580(gp)
1010f95c:	18801d36 	bltu	r3,r2,1010f9d4 <alt_tick+0xd8>
1010f960:	e0bffd17 	ldw	r2,-12(fp)
1010f964:	10800403 	ldbu	r2,16(r2)
1010f968:	10803fcc 	andi	r2,r2,255
1010f96c:	1000191e 	bne	r2,zero,1010f9d4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
1010f970:	e0bffd17 	ldw	r2,-12(fp)
1010f974:	10800317 	ldw	r2,12(r2)
1010f978:	e0fffd17 	ldw	r3,-12(fp)
1010f97c:	18c00517 	ldw	r3,20(r3)
1010f980:	1809883a 	mov	r4,r3
1010f984:	103ee83a 	callr	r2
1010f988:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
1010f98c:	e0bfff17 	ldw	r2,-4(fp)
1010f990:	1000031e 	bne	r2,zero,1010f9a0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
1010f994:	e13ffd17 	ldw	r4,-12(fp)
1010f998:	010f8600 	call	1010f860 <alt_alarm_stop>
1010f99c:	00000d06 	br	1010f9d4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
1010f9a0:	e0bffd17 	ldw	r2,-12(fp)
1010f9a4:	10c00217 	ldw	r3,8(r2)
1010f9a8:	e0bfff17 	ldw	r2,-4(fp)
1010f9ac:	1887883a 	add	r3,r3,r2
1010f9b0:	e0bffd17 	ldw	r2,-12(fp)
1010f9b4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
1010f9b8:	e0bffd17 	ldw	r2,-12(fp)
1010f9bc:	10c00217 	ldw	r3,8(r2)
1010f9c0:	d0a70517 	ldw	r2,-25580(gp)
1010f9c4:	1880032e 	bgeu	r3,r2,1010f9d4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
1010f9c8:	e0bffd17 	ldw	r2,-12(fp)
1010f9cc:	00c00044 	movi	r3,1
1010f9d0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
1010f9d4:	e0bffe17 	ldw	r2,-8(fp)
1010f9d8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
1010f9dc:	e0fffd17 	ldw	r3,-12(fp)
1010f9e0:	d0a02004 	addi	r2,gp,-32640
1010f9e4:	18bfcf1e 	bne	r3,r2,1010f924 <__alt_data_end+0xfffef924>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
1010f9e8:	0001883a 	nop
}
1010f9ec:	0001883a 	nop
1010f9f0:	e037883a 	mov	sp,fp
1010f9f4:	dfc00117 	ldw	ra,4(sp)
1010f9f8:	df000017 	ldw	fp,0(sp)
1010f9fc:	dec00204 	addi	sp,sp,8
1010fa00:	f800283a 	ret

1010fa04 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
1010fa04:	deffff04 	addi	sp,sp,-4
1010fa08:	df000015 	stw	fp,0(sp)
1010fa0c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
1010fa10:	000170fa 	wrctl	ienable,zero
}
1010fa14:	0001883a 	nop
1010fa18:	e037883a 	mov	sp,fp
1010fa1c:	df000017 	ldw	fp,0(sp)
1010fa20:	dec00104 	addi	sp,sp,4
1010fa24:	f800283a 	ret

1010fa28 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
1010fa28:	defffa04 	addi	sp,sp,-24
1010fa2c:	dfc00515 	stw	ra,20(sp)
1010fa30:	df000415 	stw	fp,16(sp)
1010fa34:	df000404 	addi	fp,sp,16
1010fa38:	e13ffe15 	stw	r4,-8(fp)
1010fa3c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
1010fa40:	e0bfff17 	ldw	r2,-4(fp)
1010fa44:	10800017 	ldw	r2,0(r2)
1010fa48:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
1010fa4c:	e13ffe17 	ldw	r4,-8(fp)
1010fa50:	0100d940 	call	10100d94 <strlen>
1010fa54:	10800044 	addi	r2,r2,1
1010fa58:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010fa5c:	00000d06 	br	1010fa94 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
1010fa60:	e0bffc17 	ldw	r2,-16(fp)
1010fa64:	10800217 	ldw	r2,8(r2)
1010fa68:	e0fffd17 	ldw	r3,-12(fp)
1010fa6c:	180d883a 	mov	r6,r3
1010fa70:	e17ffe17 	ldw	r5,-8(fp)
1010fa74:	1009883a 	mov	r4,r2
1010fa78:	010fddc0 	call	1010fddc <memcmp>
1010fa7c:	1000021e 	bne	r2,zero,1010fa88 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
1010fa80:	e0bffc17 	ldw	r2,-16(fp)
1010fa84:	00000706 	br	1010faa4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
1010fa88:	e0bffc17 	ldw	r2,-16(fp)
1010fa8c:	10800017 	ldw	r2,0(r2)
1010fa90:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
1010fa94:	e0fffc17 	ldw	r3,-16(fp)
1010fa98:	e0bfff17 	ldw	r2,-4(fp)
1010fa9c:	18bff01e 	bne	r3,r2,1010fa60 <__alt_data_end+0xfffefa60>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
1010faa0:	0005883a 	mov	r2,zero
}
1010faa4:	e037883a 	mov	sp,fp
1010faa8:	dfc00117 	ldw	ra,4(sp)
1010faac:	df000017 	ldw	fp,0(sp)
1010fab0:	dec00204 	addi	sp,sp,8
1010fab4:	f800283a 	ret

1010fab8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
1010fab8:	defffb04 	addi	sp,sp,-20
1010fabc:	dfc00415 	stw	ra,16(sp)
1010fac0:	df000315 	stw	fp,12(sp)
1010fac4:	df000304 	addi	fp,sp,12
1010fac8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
1010facc:	d0a00617 	ldw	r2,-32744(gp)
1010fad0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010fad4:	00003106 	br	1010fb9c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
1010fad8:	e0bffd17 	ldw	r2,-12(fp)
1010fadc:	10800217 	ldw	r2,8(r2)
1010fae0:	1009883a 	mov	r4,r2
1010fae4:	0100d940 	call	10100d94 <strlen>
1010fae8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
1010faec:	e0bffd17 	ldw	r2,-12(fp)
1010faf0:	10c00217 	ldw	r3,8(r2)
1010faf4:	e0bffe17 	ldw	r2,-8(fp)
1010faf8:	10bfffc4 	addi	r2,r2,-1
1010fafc:	1885883a 	add	r2,r3,r2
1010fb00:	10800003 	ldbu	r2,0(r2)
1010fb04:	10803fcc 	andi	r2,r2,255
1010fb08:	1080201c 	xori	r2,r2,128
1010fb0c:	10bfe004 	addi	r2,r2,-128
1010fb10:	10800bd8 	cmpnei	r2,r2,47
1010fb14:	1000031e 	bne	r2,zero,1010fb24 <alt_find_file+0x6c>
    {
      len -= 1;
1010fb18:	e0bffe17 	ldw	r2,-8(fp)
1010fb1c:	10bfffc4 	addi	r2,r2,-1
1010fb20:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010fb24:	e0bffe17 	ldw	r2,-8(fp)
1010fb28:	e0ffff17 	ldw	r3,-4(fp)
1010fb2c:	1885883a 	add	r2,r3,r2
1010fb30:	10800003 	ldbu	r2,0(r2)
1010fb34:	10803fcc 	andi	r2,r2,255
1010fb38:	1080201c 	xori	r2,r2,128
1010fb3c:	10bfe004 	addi	r2,r2,-128
1010fb40:	10800be0 	cmpeqi	r2,r2,47
1010fb44:	1000081e 	bne	r2,zero,1010fb68 <alt_find_file+0xb0>
1010fb48:	e0bffe17 	ldw	r2,-8(fp)
1010fb4c:	e0ffff17 	ldw	r3,-4(fp)
1010fb50:	1885883a 	add	r2,r3,r2
1010fb54:	10800003 	ldbu	r2,0(r2)
1010fb58:	10803fcc 	andi	r2,r2,255
1010fb5c:	1080201c 	xori	r2,r2,128
1010fb60:	10bfe004 	addi	r2,r2,-128
1010fb64:	10000a1e 	bne	r2,zero,1010fb90 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
1010fb68:	e0bffd17 	ldw	r2,-12(fp)
1010fb6c:	10800217 	ldw	r2,8(r2)
1010fb70:	e0fffe17 	ldw	r3,-8(fp)
1010fb74:	180d883a 	mov	r6,r3
1010fb78:	e17fff17 	ldw	r5,-4(fp)
1010fb7c:	1009883a 	mov	r4,r2
1010fb80:	010fddc0 	call	1010fddc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
1010fb84:	1000021e 	bne	r2,zero,1010fb90 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
1010fb88:	e0bffd17 	ldw	r2,-12(fp)
1010fb8c:	00000706 	br	1010fbac <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
1010fb90:	e0bffd17 	ldw	r2,-12(fp)
1010fb94:	10800017 	ldw	r2,0(r2)
1010fb98:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
1010fb9c:	e0fffd17 	ldw	r3,-12(fp)
1010fba0:	d0a00604 	addi	r2,gp,-32744
1010fba4:	18bfcc1e 	bne	r3,r2,1010fad8 <__alt_data_end+0xfffefad8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
1010fba8:	0005883a 	mov	r2,zero
}
1010fbac:	e037883a 	mov	sp,fp
1010fbb0:	dfc00117 	ldw	ra,4(sp)
1010fbb4:	df000017 	ldw	fp,0(sp)
1010fbb8:	dec00204 	addi	sp,sp,8
1010fbbc:	f800283a 	ret

1010fbc0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
1010fbc0:	defffc04 	addi	sp,sp,-16
1010fbc4:	df000315 	stw	fp,12(sp)
1010fbc8:	df000304 	addi	fp,sp,12
1010fbcc:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
1010fbd0:	00bffa04 	movi	r2,-24
1010fbd4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010fbd8:	e03ffd15 	stw	zero,-12(fp)
1010fbdc:	00001906 	br	1010fc44 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
1010fbe0:	00840474 	movhi	r2,4113
1010fbe4:	10835804 	addi	r2,r2,3424
1010fbe8:	e0fffd17 	ldw	r3,-12(fp)
1010fbec:	18c00324 	muli	r3,r3,12
1010fbf0:	10c5883a 	add	r2,r2,r3
1010fbf4:	10800017 	ldw	r2,0(r2)
1010fbf8:	10000f1e 	bne	r2,zero,1010fc38 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
1010fbfc:	00840474 	movhi	r2,4113
1010fc00:	10835804 	addi	r2,r2,3424
1010fc04:	e0fffd17 	ldw	r3,-12(fp)
1010fc08:	18c00324 	muli	r3,r3,12
1010fc0c:	10c5883a 	add	r2,r2,r3
1010fc10:	e0ffff17 	ldw	r3,-4(fp)
1010fc14:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
1010fc18:	d0e00a17 	ldw	r3,-32728(gp)
1010fc1c:	e0bffd17 	ldw	r2,-12(fp)
1010fc20:	1880020e 	bge	r3,r2,1010fc2c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
1010fc24:	e0bffd17 	ldw	r2,-12(fp)
1010fc28:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
1010fc2c:	e0bffd17 	ldw	r2,-12(fp)
1010fc30:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
1010fc34:	00000606 	br	1010fc50 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
1010fc38:	e0bffd17 	ldw	r2,-12(fp)
1010fc3c:	10800044 	addi	r2,r2,1
1010fc40:	e0bffd15 	stw	r2,-12(fp)
1010fc44:	e0bffd17 	ldw	r2,-12(fp)
1010fc48:	10800810 	cmplti	r2,r2,32
1010fc4c:	103fe41e 	bne	r2,zero,1010fbe0 <__alt_data_end+0xfffefbe0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
1010fc50:	e0bffe17 	ldw	r2,-8(fp)
}
1010fc54:	e037883a 	mov	sp,fp
1010fc58:	df000017 	ldw	fp,0(sp)
1010fc5c:	dec00104 	addi	sp,sp,4
1010fc60:	f800283a 	ret

1010fc64 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
1010fc64:	defffb04 	addi	sp,sp,-20
1010fc68:	df000415 	stw	fp,16(sp)
1010fc6c:	df000404 	addi	fp,sp,16
1010fc70:	e13ffe15 	stw	r4,-8(fp)
1010fc74:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
1010fc78:	e0bfff17 	ldw	r2,-4(fp)
1010fc7c:	10840070 	cmpltui	r2,r2,4097
1010fc80:	1000021e 	bne	r2,zero,1010fc8c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
1010fc84:	00840004 	movi	r2,4096
1010fc88:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
1010fc8c:	e0fffe17 	ldw	r3,-8(fp)
1010fc90:	e0bfff17 	ldw	r2,-4(fp)
1010fc94:	1885883a 	add	r2,r3,r2
1010fc98:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010fc9c:	e0bffe17 	ldw	r2,-8(fp)
1010fca0:	e0bffc15 	stw	r2,-16(fp)
1010fca4:	00000506 	br	1010fcbc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
1010fca8:	e0bffc17 	ldw	r2,-16(fp)
1010fcac:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
1010fcb0:	e0bffc17 	ldw	r2,-16(fp)
1010fcb4:	10800804 	addi	r2,r2,32
1010fcb8:	e0bffc15 	stw	r2,-16(fp)
1010fcbc:	e0fffc17 	ldw	r3,-16(fp)
1010fcc0:	e0bffd17 	ldw	r2,-12(fp)
1010fcc4:	18bff836 	bltu	r3,r2,1010fca8 <__alt_data_end+0xfffefca8>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
1010fcc8:	e0bffe17 	ldw	r2,-8(fp)
1010fccc:	108007cc 	andi	r2,r2,31
1010fcd0:	10000226 	beq	r2,zero,1010fcdc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
1010fcd4:	e0bffc17 	ldw	r2,-16(fp)
1010fcd8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
1010fcdc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
1010fce0:	0001883a 	nop
1010fce4:	e037883a 	mov	sp,fp
1010fce8:	df000017 	ldw	fp,0(sp)
1010fcec:	dec00104 	addi	sp,sp,4
1010fcf0:	f800283a 	ret

1010fcf4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
1010fcf4:	defffe04 	addi	sp,sp,-8
1010fcf8:	df000115 	stw	fp,4(sp)
1010fcfc:	df000104 	addi	fp,sp,4
1010fd00:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
1010fd04:	e0bfff17 	ldw	r2,-4(fp)
1010fd08:	10bffe84 	addi	r2,r2,-6
1010fd0c:	10c00428 	cmpgeui	r3,r2,16
1010fd10:	18001a1e 	bne	r3,zero,1010fd7c <alt_exception_cause_generated_bad_addr+0x88>
1010fd14:	100690ba 	slli	r3,r2,2
1010fd18:	00840474 	movhi	r2,4113
1010fd1c:	10bf4b04 	addi	r2,r2,-724
1010fd20:	1885883a 	add	r2,r3,r2
1010fd24:	10800017 	ldw	r2,0(r2)
1010fd28:	1000683a 	jmp	r2
1010fd2c:	1010fd6c 	andhi	zero,r2,17397
1010fd30:	1010fd6c 	andhi	zero,r2,17397
1010fd34:	1010fd7c 	xorhi	zero,r2,17397
1010fd38:	1010fd7c 	xorhi	zero,r2,17397
1010fd3c:	1010fd7c 	xorhi	zero,r2,17397
1010fd40:	1010fd6c 	andhi	zero,r2,17397
1010fd44:	1010fd74 	orhi	zero,r2,17397
1010fd48:	1010fd7c 	xorhi	zero,r2,17397
1010fd4c:	1010fd6c 	andhi	zero,r2,17397
1010fd50:	1010fd6c 	andhi	zero,r2,17397
1010fd54:	1010fd7c 	xorhi	zero,r2,17397
1010fd58:	1010fd6c 	andhi	zero,r2,17397
1010fd5c:	1010fd74 	orhi	zero,r2,17397
1010fd60:	1010fd7c 	xorhi	zero,r2,17397
1010fd64:	1010fd7c 	xorhi	zero,r2,17397
1010fd68:	1010fd6c 	andhi	zero,r2,17397
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
1010fd6c:	00800044 	movi	r2,1
1010fd70:	00000306 	br	1010fd80 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
1010fd74:	0005883a 	mov	r2,zero
1010fd78:	00000106 	br	1010fd80 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
1010fd7c:	0005883a 	mov	r2,zero
  }
}
1010fd80:	e037883a 	mov	sp,fp
1010fd84:	df000017 	ldw	fp,0(sp)
1010fd88:	dec00104 	addi	sp,sp,4
1010fd8c:	f800283a 	ret

1010fd90 <atexit>:
1010fd90:	200b883a 	mov	r5,r4
1010fd94:	000f883a 	mov	r7,zero
1010fd98:	000d883a 	mov	r6,zero
1010fd9c:	0009883a 	mov	r4,zero
1010fda0:	010fe581 	jmpi	1010fe58 <__register_exitproc>

1010fda4 <exit>:
1010fda4:	defffe04 	addi	sp,sp,-8
1010fda8:	000b883a 	mov	r5,zero
1010fdac:	dc000015 	stw	r16,0(sp)
1010fdb0:	dfc00115 	stw	ra,4(sp)
1010fdb4:	2021883a 	mov	r16,r4
1010fdb8:	010ff700 	call	1010ff70 <__call_exitprocs>
1010fdbc:	00840474 	movhi	r2,4113
1010fdc0:	1087da04 	addi	r2,r2,8040
1010fdc4:	11000017 	ldw	r4,0(r2)
1010fdc8:	20800f17 	ldw	r2,60(r4)
1010fdcc:	10000126 	beq	r2,zero,1010fdd4 <exit+0x30>
1010fdd0:	103ee83a 	callr	r2
1010fdd4:	8009883a 	mov	r4,r16
1010fdd8:	01100f00 	call	101100f0 <_exit>

1010fddc <memcmp>:
1010fddc:	01c000c4 	movi	r7,3
1010fde0:	3980192e 	bgeu	r7,r6,1010fe48 <memcmp+0x6c>
1010fde4:	2144b03a 	or	r2,r4,r5
1010fde8:	11c4703a 	and	r2,r2,r7
1010fdec:	10000f26 	beq	r2,zero,1010fe2c <memcmp+0x50>
1010fdf0:	20800003 	ldbu	r2,0(r4)
1010fdf4:	28c00003 	ldbu	r3,0(r5)
1010fdf8:	10c0151e 	bne	r2,r3,1010fe50 <memcmp+0x74>
1010fdfc:	31bfff84 	addi	r6,r6,-2
1010fe00:	01ffffc4 	movi	r7,-1
1010fe04:	00000406 	br	1010fe18 <memcmp+0x3c>
1010fe08:	20800003 	ldbu	r2,0(r4)
1010fe0c:	28c00003 	ldbu	r3,0(r5)
1010fe10:	31bfffc4 	addi	r6,r6,-1
1010fe14:	10c00e1e 	bne	r2,r3,1010fe50 <memcmp+0x74>
1010fe18:	21000044 	addi	r4,r4,1
1010fe1c:	29400044 	addi	r5,r5,1
1010fe20:	31fff91e 	bne	r6,r7,1010fe08 <__alt_data_end+0xfffefe08>
1010fe24:	0005883a 	mov	r2,zero
1010fe28:	f800283a 	ret
1010fe2c:	20c00017 	ldw	r3,0(r4)
1010fe30:	28800017 	ldw	r2,0(r5)
1010fe34:	18bfee1e 	bne	r3,r2,1010fdf0 <__alt_data_end+0xfffefdf0>
1010fe38:	31bfff04 	addi	r6,r6,-4
1010fe3c:	21000104 	addi	r4,r4,4
1010fe40:	29400104 	addi	r5,r5,4
1010fe44:	39bff936 	bltu	r7,r6,1010fe2c <__alt_data_end+0xfffefe2c>
1010fe48:	303fe91e 	bne	r6,zero,1010fdf0 <__alt_data_end+0xfffefdf0>
1010fe4c:	003ff506 	br	1010fe24 <__alt_data_end+0xfffefe24>
1010fe50:	10c5c83a 	sub	r2,r2,r3
1010fe54:	f800283a 	ret

1010fe58 <__register_exitproc>:
1010fe58:	defffa04 	addi	sp,sp,-24
1010fe5c:	dc000315 	stw	r16,12(sp)
1010fe60:	04040474 	movhi	r16,4113
1010fe64:	8407da04 	addi	r16,r16,8040
1010fe68:	80c00017 	ldw	r3,0(r16)
1010fe6c:	dc400415 	stw	r17,16(sp)
1010fe70:	dfc00515 	stw	ra,20(sp)
1010fe74:	18805217 	ldw	r2,328(r3)
1010fe78:	2023883a 	mov	r17,r4
1010fe7c:	10003726 	beq	r2,zero,1010ff5c <__register_exitproc+0x104>
1010fe80:	10c00117 	ldw	r3,4(r2)
1010fe84:	010007c4 	movi	r4,31
1010fe88:	20c00e16 	blt	r4,r3,1010fec4 <__register_exitproc+0x6c>
1010fe8c:	1a000044 	addi	r8,r3,1
1010fe90:	8800221e 	bne	r17,zero,1010ff1c <__register_exitproc+0xc4>
1010fe94:	18c00084 	addi	r3,r3,2
1010fe98:	18c7883a 	add	r3,r3,r3
1010fe9c:	18c7883a 	add	r3,r3,r3
1010fea0:	12000115 	stw	r8,4(r2)
1010fea4:	10c7883a 	add	r3,r2,r3
1010fea8:	19400015 	stw	r5,0(r3)
1010feac:	0005883a 	mov	r2,zero
1010feb0:	dfc00517 	ldw	ra,20(sp)
1010feb4:	dc400417 	ldw	r17,16(sp)
1010feb8:	dc000317 	ldw	r16,12(sp)
1010febc:	dec00604 	addi	sp,sp,24
1010fec0:	f800283a 	ret
1010fec4:	00800034 	movhi	r2,0
1010fec8:	10800004 	addi	r2,r2,0
1010fecc:	10002626 	beq	r2,zero,1010ff68 <__register_exitproc+0x110>
1010fed0:	01006404 	movi	r4,400
1010fed4:	d9400015 	stw	r5,0(sp)
1010fed8:	d9800115 	stw	r6,4(sp)
1010fedc:	d9c00215 	stw	r7,8(sp)
1010fee0:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1010fee4:	d9400017 	ldw	r5,0(sp)
1010fee8:	d9800117 	ldw	r6,4(sp)
1010feec:	d9c00217 	ldw	r7,8(sp)
1010fef0:	10001d26 	beq	r2,zero,1010ff68 <__register_exitproc+0x110>
1010fef4:	81000017 	ldw	r4,0(r16)
1010fef8:	10000115 	stw	zero,4(r2)
1010fefc:	02000044 	movi	r8,1
1010ff00:	22405217 	ldw	r9,328(r4)
1010ff04:	0007883a 	mov	r3,zero
1010ff08:	12400015 	stw	r9,0(r2)
1010ff0c:	20805215 	stw	r2,328(r4)
1010ff10:	10006215 	stw	zero,392(r2)
1010ff14:	10006315 	stw	zero,396(r2)
1010ff18:	883fde26 	beq	r17,zero,1010fe94 <__alt_data_end+0xfffefe94>
1010ff1c:	18c9883a 	add	r4,r3,r3
1010ff20:	2109883a 	add	r4,r4,r4
1010ff24:	1109883a 	add	r4,r2,r4
1010ff28:	21802215 	stw	r6,136(r4)
1010ff2c:	01800044 	movi	r6,1
1010ff30:	12406217 	ldw	r9,392(r2)
1010ff34:	30cc983a 	sll	r6,r6,r3
1010ff38:	4992b03a 	or	r9,r9,r6
1010ff3c:	12406215 	stw	r9,392(r2)
1010ff40:	21c04215 	stw	r7,264(r4)
1010ff44:	01000084 	movi	r4,2
1010ff48:	893fd21e 	bne	r17,r4,1010fe94 <__alt_data_end+0xfffefe94>
1010ff4c:	11006317 	ldw	r4,396(r2)
1010ff50:	218cb03a 	or	r6,r4,r6
1010ff54:	11806315 	stw	r6,396(r2)
1010ff58:	003fce06 	br	1010fe94 <__alt_data_end+0xfffefe94>
1010ff5c:	18805304 	addi	r2,r3,332
1010ff60:	18805215 	stw	r2,328(r3)
1010ff64:	003fc606 	br	1010fe80 <__alt_data_end+0xfffefe80>
1010ff68:	00bfffc4 	movi	r2,-1
1010ff6c:	003fd006 	br	1010feb0 <__alt_data_end+0xfffefeb0>

1010ff70 <__call_exitprocs>:
1010ff70:	defff504 	addi	sp,sp,-44
1010ff74:	df000915 	stw	fp,36(sp)
1010ff78:	dd400615 	stw	r21,24(sp)
1010ff7c:	dc800315 	stw	r18,12(sp)
1010ff80:	dfc00a15 	stw	ra,40(sp)
1010ff84:	ddc00815 	stw	r23,32(sp)
1010ff88:	dd800715 	stw	r22,28(sp)
1010ff8c:	dd000515 	stw	r20,20(sp)
1010ff90:	dcc00415 	stw	r19,16(sp)
1010ff94:	dc400215 	stw	r17,8(sp)
1010ff98:	dc000115 	stw	r16,4(sp)
1010ff9c:	d9000015 	stw	r4,0(sp)
1010ffa0:	2839883a 	mov	fp,r5
1010ffa4:	04800044 	movi	r18,1
1010ffa8:	057fffc4 	movi	r21,-1
1010ffac:	00840474 	movhi	r2,4113
1010ffb0:	1087da04 	addi	r2,r2,8040
1010ffb4:	12000017 	ldw	r8,0(r2)
1010ffb8:	45005217 	ldw	r20,328(r8)
1010ffbc:	44c05204 	addi	r19,r8,328
1010ffc0:	a0001c26 	beq	r20,zero,10110034 <__call_exitprocs+0xc4>
1010ffc4:	a0800117 	ldw	r2,4(r20)
1010ffc8:	15ffffc4 	addi	r23,r2,-1
1010ffcc:	b8000d16 	blt	r23,zero,10110004 <__call_exitprocs+0x94>
1010ffd0:	14000044 	addi	r16,r2,1
1010ffd4:	8421883a 	add	r16,r16,r16
1010ffd8:	8421883a 	add	r16,r16,r16
1010ffdc:	84402004 	addi	r17,r16,128
1010ffe0:	a463883a 	add	r17,r20,r17
1010ffe4:	a421883a 	add	r16,r20,r16
1010ffe8:	e0001e26 	beq	fp,zero,10110064 <__call_exitprocs+0xf4>
1010ffec:	80804017 	ldw	r2,256(r16)
1010fff0:	e0801c26 	beq	fp,r2,10110064 <__call_exitprocs+0xf4>
1010fff4:	bdffffc4 	addi	r23,r23,-1
1010fff8:	843fff04 	addi	r16,r16,-4
1010fffc:	8c7fff04 	addi	r17,r17,-4
10110000:	bd7ff91e 	bne	r23,r21,1010ffe8 <__alt_data_end+0xfffeffe8>
10110004:	00800034 	movhi	r2,0
10110008:	10800004 	addi	r2,r2,0
1011000c:	10000926 	beq	r2,zero,10110034 <__call_exitprocs+0xc4>
10110010:	a0800117 	ldw	r2,4(r20)
10110014:	1000301e 	bne	r2,zero,101100d8 <__call_exitprocs+0x168>
10110018:	a0800017 	ldw	r2,0(r20)
1011001c:	10003226 	beq	r2,zero,101100e8 <__call_exitprocs+0x178>
10110020:	a009883a 	mov	r4,r20
10110024:	98800015 	stw	r2,0(r19)
10110028:	00000000 	call	10000000 <__alt_mem_onchip_memory2_0-0x100000>
1011002c:	9d000017 	ldw	r20,0(r19)
10110030:	a03fe41e 	bne	r20,zero,1010ffc4 <__alt_data_end+0xfffeffc4>
10110034:	dfc00a17 	ldw	ra,40(sp)
10110038:	df000917 	ldw	fp,36(sp)
1011003c:	ddc00817 	ldw	r23,32(sp)
10110040:	dd800717 	ldw	r22,28(sp)
10110044:	dd400617 	ldw	r21,24(sp)
10110048:	dd000517 	ldw	r20,20(sp)
1011004c:	dcc00417 	ldw	r19,16(sp)
10110050:	dc800317 	ldw	r18,12(sp)
10110054:	dc400217 	ldw	r17,8(sp)
10110058:	dc000117 	ldw	r16,4(sp)
1011005c:	dec00b04 	addi	sp,sp,44
10110060:	f800283a 	ret
10110064:	a0800117 	ldw	r2,4(r20)
10110068:	80c00017 	ldw	r3,0(r16)
1011006c:	10bfffc4 	addi	r2,r2,-1
10110070:	15c01426 	beq	r2,r23,101100c4 <__call_exitprocs+0x154>
10110074:	80000015 	stw	zero,0(r16)
10110078:	183fde26 	beq	r3,zero,1010fff4 <__alt_data_end+0xfffefff4>
1011007c:	95c8983a 	sll	r4,r18,r23
10110080:	a0806217 	ldw	r2,392(r20)
10110084:	a5800117 	ldw	r22,4(r20)
10110088:	2084703a 	and	r2,r4,r2
1011008c:	10000b26 	beq	r2,zero,101100bc <__call_exitprocs+0x14c>
10110090:	a0806317 	ldw	r2,396(r20)
10110094:	2088703a 	and	r4,r4,r2
10110098:	20000c1e 	bne	r4,zero,101100cc <__call_exitprocs+0x15c>
1011009c:	89400017 	ldw	r5,0(r17)
101100a0:	d9000017 	ldw	r4,0(sp)
101100a4:	183ee83a 	callr	r3
101100a8:	a0800117 	ldw	r2,4(r20)
101100ac:	15bfbf1e 	bne	r2,r22,1010ffac <__alt_data_end+0xfffeffac>
101100b0:	98800017 	ldw	r2,0(r19)
101100b4:	153fcf26 	beq	r2,r20,1010fff4 <__alt_data_end+0xfffefff4>
101100b8:	003fbc06 	br	1010ffac <__alt_data_end+0xfffeffac>
101100bc:	183ee83a 	callr	r3
101100c0:	003ff906 	br	101100a8 <__alt_data_end+0xffff00a8>
101100c4:	a5c00115 	stw	r23,4(r20)
101100c8:	003feb06 	br	10110078 <__alt_data_end+0xffff0078>
101100cc:	89000017 	ldw	r4,0(r17)
101100d0:	183ee83a 	callr	r3
101100d4:	003ff406 	br	101100a8 <__alt_data_end+0xffff00a8>
101100d8:	a0800017 	ldw	r2,0(r20)
101100dc:	a027883a 	mov	r19,r20
101100e0:	1029883a 	mov	r20,r2
101100e4:	003fb606 	br	1010ffc0 <__alt_data_end+0xfffeffc0>
101100e8:	0005883a 	mov	r2,zero
101100ec:	003ffb06 	br	101100dc <__alt_data_end+0xffff00dc>

101100f0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
101100f0:	defffd04 	addi	sp,sp,-12
101100f4:	df000215 	stw	fp,8(sp)
101100f8:	df000204 	addi	fp,sp,8
101100fc:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10110100:	0001883a 	nop
10110104:	e0bfff17 	ldw	r2,-4(fp)
10110108:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
1011010c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10110110:	10000226 	beq	r2,zero,1011011c <_exit+0x2c>
    ALT_SIM_FAIL();
10110114:	002af070 	cmpltui	zero,zero,43969
10110118:	00000106 	br	10110120 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
1011011c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
10110120:	003fff06 	br	10110120 <__alt_data_end+0xffff0120>
