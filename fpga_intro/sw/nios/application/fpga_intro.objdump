
fpga_intro.elf:     file format elf32-littlenios2
fpga_intro.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0000f4d0 memsz 0x0000f4d0 flags r-x
    LOAD off    0x000104f0 vaddr 0x0002f4f0 paddr 0x00030fdc align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012ac8 vaddr 0x00032ac8 paddr 0x00032ac8 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000efa8  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000304  0002f1ec  0002f1ec  000101ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0002f4f0  00030fdc  000104f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00032ac8  00032ac8  00012ac8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00032c28  00032c28  00011fdc  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00011fdc  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e70  00000000  00000000  00012000  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000227ee  00000000  00000000  00012e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008c30  00000000  00000000  0003565e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b073  00000000  00000000  0003e28e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00001fc0  00000000  00000000  00049304  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000036b6  00000000  00000000  0004b2c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017751  00000000  00000000  0004e97a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000660cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001890  00000000  00000000  00066100  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006a93e  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006a941  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006a94d  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006a94e  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  0006a94f  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  0006a95a  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  0006a965  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000006  00000000  00000000  0006a970  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 00000039  00000000  00000000  0006a976  2**0
                  CONTENTS, READONLY
 26 .jdi          00005818  00000000  00000000  0006a9af  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     000331be  00000000  00000000  000701c7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
0002f1ec l    d  .rodata	00000000 .rodata
0002f4f0 l    d  .rwdata	00000000 .rwdata
00032ac8 l    d  .bss	00000000 .bss
00032c28 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 E:/EPFL/Semestre_7/Embedded_Systems/fpga_intro/sw/nios/fpga_intro_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0002f236 l     O .rodata	00000010 zeroes.4404
00022580 l     F .text	000000bc __sbprintf
0002f246 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00022790 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000242c0 l     F .text	00000008 __fp_unlock
000242d4 l     F .text	0000019c __sinit.part.1
00024470 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0002f4f0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0002f934 l     O .rwdata	00000020 lc_ctype_charset
0002f914 l     O .rwdata	00000020 lc_message_charset
0002f954 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0002f278 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00026d88 l     F .text	000000fc __sprint_r.part.0
0002f3ac l     O .rodata	00000010 blanks.4348
0002f39c l     O .rodata	00000010 zeroes.4349
00028314 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002cb4c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002cc58 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002cc84 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0002cd70 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002ce50 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002cf3c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002d110 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00030fcc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0002d35c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002d490 l     F .text	00000034 alt_dev_reg
0002ff3c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002d768 l     F .text	0000020c altera_avalon_jtag_uart_irq
0002d974 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002e120 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002e594 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0002e6d4 l     F .text	0000003c alt_get_errno
0002e710 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00032afc g     O .bss	00000004 alt_instruction_exception_handler
00026898 g     F .text	00000074 _mprec_log10
00026984 g     F .text	0000008c __any_on
00028d6c g     F .text	00000054 _isatty_r
0002f284 g     O .rodata	00000028 __mprec_tinytens
0002d04c g     F .text	0000007c alt_main
00032b28 g     O .bss	00000100 alt_irq
00028dc0 g     F .text	00000060 _lseek_r
00030fdc g       *ABS*	00000000 __flash_rwdata_start
0002b678 g     F .text	00000088 .hidden __eqdf2
00032c28 g       *ABS*	00000000 __alt_heap_start
00020330 g     F .text	0000003c printf
00029698 g     F .text	0000009c _wcrtomb_r
00026bb0 g     F .text	0000005c __sseek
00024610 g     F .text	00000010 __sinit
00029540 g     F .text	00000140 __swbuf_r
00024c1c g     F .text	0000007c _setlocale_r
00024478 g     F .text	00000068 __sfmoreglue
0002d0ec g     F .text	00000024 __malloc_unlock
00028e20 g     F .text	0000015c memmove
000245f8 g     F .text	00000018 _cleanup
00025a14 g     F .text	000000a8 _Balloc
0002b700 g     F .text	000000dc .hidden __gtdf2
0002eacc g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
00020020 g       *ABS*	00000000 __flash_exceptions_start
00028854 g     F .text	0000005c _fstat_r
00032ae0 g     O .bss	00000004 errno
00026b2c g     F .text	00000008 __seofread
00032ae8 g     O .bss	00000004 alt_argv
00038f9c g       *ABS*	00000000 _gp
0002fdbc g     O .rwdata	00000180 alt_fd_list
0002eaf0 g     F .text	00000090 alt_find_dev
000257a4 g     F .text	00000148 memcpy
000242c8 g     F .text	0000000c _cleanup_r
0002c964 g     F .text	000000dc .hidden __floatsidf
0002e658 g     F .text	0000007c alt_io_redirect
0002b7dc g     F .text	000000f4 .hidden __ltdf2
0002f1ec g       *ABS*	00000000 __DTOR_END__
0002edbc g     F .text	0000009c alt_exception_cause_generated_bad_addr
00026a10 g     F .text	00000074 __fpclassifyd
000267f4 g     F .text	000000a4 __ratio
000282f8 g     F .text	0000001c __vfiprintf_internal
0002db6c g     F .text	0000021c altera_avalon_jtag_uart_read
00020300 g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0002a428 g     F .text	00000064 .hidden __udivsi3
0002cdac g     F .text	000000a4 isatty
0002f2d4 g     O .rodata	000000c8 __mprec_tens
00024c98 g     F .text	0000000c __locale_charset
0002ed2c g     F .text	00000090 alt_icache_flush
00032adc g     O .bss	00000004 __malloc_top_pad
00030fa4 g     O .rwdata	00000004 __mb_cur_max
00024cc8 g     F .text	0000000c _localeconv_r
000288b0 g     F .text	000004bc __sfvwrite_r
00025e20 g     F .text	0000003c __i2b
00026a84 g     F .text	00000054 _sbrk_r
00028f7c g     F .text	00000060 _read_r
00030fc4 g     O .rwdata	00000004 alt_max_fd
00028548 g     F .text	000000f0 _fclose_r
00024290 g     F .text	00000030 fflush
00032ad8 g     O .bss	00000004 __malloc_max_sbrked_mem
0002a4e4 g     F .text	000008ac .hidden __adddf3
0002659c g     F .text	0000010c __b2d
00029df8 g     F .text	00000538 .hidden __umoddi3
0002cf78 g     F .text	000000d4 lseek
00030f9c g     O .rwdata	00000004 _global_impure_ptr
00028fdc g     F .text	00000564 _realloc_r
00032c28 g       *ABS*	00000000 __bss_end
0002e4a4 g     F .text	000000f0 alt_iic_isr_register
0002e9c4 g     F .text	00000108 alt_tick
00029880 g     F .text	00000578 .hidden __udivdi3
000287b0 g     F .text	00000024 _fputwc_r
0002f2ac g     O .rodata	00000028 __mprec_bigtens
00025c04 g     F .text	00000104 __s2b
0002ca40 g     F .text	000000a8 .hidden __floatunsidf
000262dc g     F .text	00000060 __mcmp
00024630 g     F .text	00000018 __fp_lock_all
0002e458 g     F .text	0000004c alt_ic_irq_enabled
0002e928 g     F .text	0000009c alt_alarm_stop
00032af0 g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
0002fd94 g     O .rwdata	00000028 alt_dev_null
0002e0d8 g     F .text	00000048 alt_dcache_flush_all
00025d08 g     F .text	00000068 __hi0bits
0002c8e4 g     F .text	00000080 .hidden __fixdfsi
00030fdc g       *ABS*	00000000 __ram_rwdata_end
00030fbc g     O .rwdata	00000008 alt_dev_list
0002d398 g     F .text	000000f8 write
0002f4f0 g       *ABS*	00000000 __ram_rodata_end
0002ccc0 g     F .text	000000b0 fstat
0002b7dc g     F .text	000000f4 .hidden __ledf2
00026054 g     F .text	00000140 __pow5mult
00026e9c g     F .text	0000145c ___vfiprintf_internal_r
00032ad0 g     O .bss	00000004 __nlocale_changed
0002a48c g     F .text	00000058 .hidden __umodsi3
00032c28 g       *ABS*	00000000 end
0002d6a8 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0002f1ec g       *ABS*	00000000 __CTOR_LIST__
00040000 g       *ABS*	00000000 __alt_stack_pointer
0002cae8 g     F .text	00000064 .hidden __clzsi2
0002dd88 g     F .text	00000224 altera_avalon_jtag_uart_write
00024620 g     F .text	00000004 __sfp_lock_acquire
000256c0 g     F .text	000000e4 memchr
0002036c g     F .text	000021f8 ___vfprintf_internal_r
00024784 g     F .text	00000310 _free_r
00024ca4 g     F .text	00000010 __locale_mb_cur_max
0002f038 g     F .text	00000180 __call_exitprocs
00032acc g     O .bss	00000004 __mlocale_changed
00030fa8 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00032af4 g     O .bss	00000004 _alt_tick_rate
00026194 g     F .text	00000148 __lshift
00032af8 g     O .bss	00000004 _alt_nticks
0002d14c g     F .text	000000fc read
0002d4fc g     F .text	00000048 alt_sys_init
0002ef20 g     F .text	00000118 __register_exitproc
00025e5c g     F .text	000001f8 __multiply
0002da14 g     F .text	00000068 altera_avalon_jtag_uart_close
0002f4f0 g       *ABS*	00000000 __ram_rwdata_start
0002f1ec g       *ABS*	00000000 __ram_rodata_start
00032b00 g     O .bss	00000028 __malloc_current_mallinfo
000266a8 g     F .text	0000014c __d2b
0002d544 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002ec88 g     F .text	000000a4 alt_get_fd
00028430 g     F .text	00000054 _close_r
0002eea4 g     F .text	0000007c memcmp
0002d604 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00032c28 g       *ABS*	00000000 __alt_stack_base
0002d654 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0002263c g     F .text	00000154 __swsetup_r
0002ad90 g     F .text	000008e8 .hidden __divdf3
000244e0 g     F .text	00000118 __sfp
0002690c g     F .text	00000078 __copybits
0002f98c g     O .rwdata	00000408 __malloc_av_
0002462c g     F .text	00000004 __sinit_lock_release
0002b8d0 g     F .text	00000718 .hidden __muldf3
00026ad8 g     F .text	00000054 __sread
0002eb80 g     F .text	00000108 alt_find_file
0002e15c g     F .text	000000a4 alt_dev_llist_insert
0002d0c8 g     F .text	00000024 __malloc_lock
0002d2ac g     F .text	000000b0 sbrk
00024234 g     F .text	0000005c _fflush_r
00028484 g     F .text	000000c4 _calloc_r
00032ac8 g       *ABS*	00000000 __bss_start
000258ec g     F .text	00000128 memset
00020290 g     F .text	00000070 main
00032aec g     O .bss	00000004 alt_envp
00032ad4 g     O .bss	00000004 __malloc_max_total_mem
0002d5a4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00029680 g     F .text	00000018 __swbuf
00026c0c g     F .text	00000008 __sclose
00040000 g       *ABS*	00000000 __alt_heap_limit
00028638 g     F .text	00000014 fclose
00022990 g     F .text	00001688 _dtoa_r
00024eb4 g     F .text	0000080c _malloc_r
000297f4 g     F .text	00000030 __ascii_wctomb
00030fc8 g     O .rwdata	00000004 alt_errno
00024a94 g     F .text	000000c4 _fwalk
0002a330 g     F .text	00000084 .hidden __divsi3
00024660 g     F .text	00000124 _malloc_trim_r
0002f1ec g       *ABS*	00000000 __CTOR_END__
00026c14 g     F .text	000000dc strcmp
0002f1ec g       *ABS*	00000000 __flash_rodata_start
0002f1ec g       *ABS*	00000000 __DTOR_LIST__
0002b678 g     F .text	00000088 .hidden __nedf2
0002d4c4 g     F .text	00000038 alt_irq_init
0002d248 g     F .text	00000064 alt_release_fd
0002f3bc g     O .rodata	00000100 .hidden __clz_tab
00032ac8 g     O .bss	00000004 _PathLocale
0002ee58 g     F .text	00000014 atexit
000283d0 g     F .text	00000060 _write_r
00024cd4 g     F .text	00000018 setlocale
00030fa0 g     O .rwdata	00000004 _impure_ptr
00032ae4 g     O .bss	00000004 alt_argc
00024018 g     F .text	0000021c __sflush_r
0002e260 g     F .text	00000060 _do_dtors
00024cc0 g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
00026538 g     F .text	00000064 __ulp
00024648 g     F .text	00000018 __fp_unlock_all
00030fb4 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
00024cec g     F .text	0000000c localeconv
0002e2f4 g     F .text	00000050 alt_ic_isr_register
00030fdc g       *ABS*	00000000 _edata
00032c28 g       *ABS*	00000000 _end
0002864c g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002da7c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002e3cc g     F .text	0000008c alt_ic_irq_disable
00026b34 g     F .text	0000007c __swrite
00030fac g     O .rwdata	00000004 __malloc_trim_threshold
00024cb4 g     F .text	0000000c __locale_msgcharset
0002ee6c g     F .text	00000038 exit
00024b58 g     F .text	000000c4 _fwalk_reent
0002633c g     F .text	000001fc __mdiff
0002a3b4 g     F .text	00000074 .hidden __modsi3
00040000 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
00024624 g     F .text	00000004 __sfp_lock_release
0002f1b8 g     F .text	00000034 _exit
0002dfac g     F .text	0000012c alt_alarm_start
00024cf8 g     F .text	000001bc __smakebuf_r
00026cf0 g     F .text	00000098 strlen
0002e7d4 g     F .text	00000154 open
0002b700 g     F .text	000000dc .hidden __gedf2
00030fb0 g     O .rwdata	00000004 __wctomb
00026e84 g     F .text	00000018 __sprint_r
0002e2c0 g     F .text	00000034 alt_icache_flush_all
00030fd0 g     O .rwdata	00000004 alt_priority_mask
0002e344 g     F .text	00000088 alt_ic_irq_enable
00022564 g     F .text	0000001c __vfprintf_internal
00029824 g     F .text	0000005c _wctomb_r
0002bfe8 g     F .text	000008fc .hidden __subdf3
00025d70 g     F .text	000000b0 __lo0bits
00030fd4 g     O .rwdata	00000008 alt_alarm_list
0002e200 g     F .text	00000060 _do_ctors
00029734 g     F .text	000000c0 wcrtomb
0002cb88 g     F .text	000000d0 close
0002ceb8 g     F .text	00000084 alt_load
000287d4 g     F .text	00000080 fputwc
00024628 g     F .text	00000004 __sinit_lock_acquire
00025ae4 g     F .text	00000120 __multadd
00025abc g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__alt_data_end+0xfffe0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	008000f4 	movhi	r2,3
   20140:	108aca04 	addi	r2,r2,11048
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	008000f4 	movhi	r2,3
   20158:	108aca04 	addi	r2,r2,11048
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <__alt_data_end+0xfffe012c>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <__alt_data_end+0xfffe0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a6d817 	ldw	r2,-25760(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a6d817 	ldw	r2,-25760(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <__alt_data_end+0xfffe0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00134 	movhi	sp,4
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   2025c:	068000f4 	movhi	gp,3
    ori gp, gp, %lo(_gp)
   20260:	d6a3e714 	ori	gp,gp,36764
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	008000f4 	movhi	r2,3
    ori r2, r2, %lo(__bss_start)
   20268:	108ab214 	ori	r2,r2,10952

    movhi r3, %hi(__bss_end)
   2026c:	00c000f4 	movhi	r3,3
    ori r3, r3, %lo(__bss_end)
   20270:	18cb0a14 	ori	r3,r3,11304

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <__alt_data_end+0xfffe0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002ceb80 	call	2ceb8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002d04c0 	call	2d04c <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <__alt_data_end+0xfffe028c>

00020290 <main>:
#define DISP_MODE       (4*0b00)
#define CPU_DISP        (4*0b01)
#define TIME            (4*0b10)

int main()
{
   20290:	defffc04 	addi	sp,sp,-16
   20294:	dfc00315 	stw	ra,12(sp)
   20298:	df000215 	stw	fp,8(sp)
   2029c:	df000204 	addi	fp,sp,8


    IOWR_32DIRECT(BASE_ADDRESS, TIME,0x23595000);
   202a0:	0088d674 	movhi	r2,9049
   202a4:	10940004 	addi	r2,r2,20480
   202a8:	00c00204 	movi	r3,8
   202ac:	18800035 	stwio	r2,0(r3)
    IOWR_32DIRECT(BASE_ADDRESS, DISP_MODE,0x00000001);
   202b0:	00800044 	movi	r2,1
   202b4:	0007883a 	mov	r3,zero
   202b8:	18800035 	stwio	r2,0(r3)
    int temp;
    //printf("init \n");
    while(1)
    {
        //printf("test \n");
        temp = IORD_32DIRECT(BASE_ADDRESS, TIME);
   202bc:	00800204 	movi	r2,8
   202c0:	10800037 	ldwio	r2,0(r2)
   202c4:	e0bfff15 	stw	r2,-4(fp)

        printf("%08x \n", temp);
   202c8:	e17fff17 	ldw	r5,-4(fp)
   202cc:	010000f4 	movhi	r4,3
   202d0:	213c7b04 	addi	r4,r4,-3604
   202d4:	00203300 	call	20330 <printf>
        for(int i = 0; i <5000000; i++){
   202d8:	e03ffe15 	stw	zero,-8(fp)
   202dc:	00000306 	br	202ec <main+0x5c>
   202e0:	e0bffe17 	ldw	r2,-8(fp)
   202e4:	10800044 	addi	r2,r2,1
   202e8:	e0bffe15 	stw	r2,-8(fp)
   202ec:	e0fffe17 	ldw	r3,-8(fp)
   202f0:	00801334 	movhi	r2,76
   202f4:	1092cfc4 	addi	r2,r2,19263
   202f8:	10fff90e 	bge	r2,r3,202e0 <__alt_data_end+0xfffe02e0>
            ;
        }
    }
   202fc:	003fef06 	br	202bc <__alt_data_end+0xfffe02bc>

00020300 <_printf_r>:
   20300:	defffd04 	addi	sp,sp,-12
   20304:	2805883a 	mov	r2,r5
   20308:	dfc00015 	stw	ra,0(sp)
   2030c:	d9800115 	stw	r6,4(sp)
   20310:	d9c00215 	stw	r7,8(sp)
   20314:	21400217 	ldw	r5,8(r4)
   20318:	d9c00104 	addi	r7,sp,4
   2031c:	100d883a 	mov	r6,r2
   20320:	002036c0 	call	2036c <___vfprintf_internal_r>
   20324:	dfc00017 	ldw	ra,0(sp)
   20328:	dec00304 	addi	sp,sp,12
   2032c:	f800283a 	ret

00020330 <printf>:
   20330:	defffc04 	addi	sp,sp,-16
   20334:	dfc00015 	stw	ra,0(sp)
   20338:	d9400115 	stw	r5,4(sp)
   2033c:	d9800215 	stw	r6,8(sp)
   20340:	d9c00315 	stw	r7,12(sp)
   20344:	008000f4 	movhi	r2,3
   20348:	1083e804 	addi	r2,r2,4000
   2034c:	10800017 	ldw	r2,0(r2)
   20350:	200b883a 	mov	r5,r4
   20354:	d9800104 	addi	r6,sp,4
   20358:	11000217 	ldw	r4,8(r2)
   2035c:	00225640 	call	22564 <__vfprintf_internal>
   20360:	dfc00017 	ldw	ra,0(sp)
   20364:	dec00404 	addi	sp,sp,16
   20368:	f800283a 	ret

0002036c <___vfprintf_internal_r>:
   2036c:	deffb804 	addi	sp,sp,-288
   20370:	dfc04715 	stw	ra,284(sp)
   20374:	ddc04515 	stw	r23,276(sp)
   20378:	dd404315 	stw	r21,268(sp)
   2037c:	d9002c15 	stw	r4,176(sp)
   20380:	282f883a 	mov	r23,r5
   20384:	302b883a 	mov	r21,r6
   20388:	d9c02d15 	stw	r7,180(sp)
   2038c:	df004615 	stw	fp,280(sp)
   20390:	dd804415 	stw	r22,272(sp)
   20394:	dd004215 	stw	r20,264(sp)
   20398:	dcc04115 	stw	r19,260(sp)
   2039c:	dc804015 	stw	r18,256(sp)
   203a0:	dc403f15 	stw	r17,252(sp)
   203a4:	dc003e15 	stw	r16,248(sp)
   203a8:	0024cc80 	call	24cc8 <_localeconv_r>
   203ac:	10800017 	ldw	r2,0(r2)
   203b0:	1009883a 	mov	r4,r2
   203b4:	d8803415 	stw	r2,208(sp)
   203b8:	0026cf00 	call	26cf0 <strlen>
   203bc:	d8803715 	stw	r2,220(sp)
   203c0:	d8802c17 	ldw	r2,176(sp)
   203c4:	10000226 	beq	r2,zero,203d0 <___vfprintf_internal_r+0x64>
   203c8:	10800e17 	ldw	r2,56(r2)
   203cc:	1000f926 	beq	r2,zero,207b4 <___vfprintf_internal_r+0x448>
   203d0:	b880030b 	ldhu	r2,12(r23)
   203d4:	10c8000c 	andi	r3,r2,8192
   203d8:	1800061e 	bne	r3,zero,203f4 <___vfprintf_internal_r+0x88>
   203dc:	b9001917 	ldw	r4,100(r23)
   203e0:	00f7ffc4 	movi	r3,-8193
   203e4:	10880014 	ori	r2,r2,8192
   203e8:	20c6703a 	and	r3,r4,r3
   203ec:	b880030d 	sth	r2,12(r23)
   203f0:	b8c01915 	stw	r3,100(r23)
   203f4:	10c0020c 	andi	r3,r2,8
   203f8:	1800c126 	beq	r3,zero,20700 <___vfprintf_internal_r+0x394>
   203fc:	b8c00417 	ldw	r3,16(r23)
   20400:	1800bf26 	beq	r3,zero,20700 <___vfprintf_internal_r+0x394>
   20404:	1080068c 	andi	r2,r2,26
   20408:	00c00284 	movi	r3,10
   2040c:	10c0c426 	beq	r2,r3,20720 <___vfprintf_internal_r+0x3b4>
   20410:	d8c00404 	addi	r3,sp,16
   20414:	050000f4 	movhi	r20,3
   20418:	d9001e04 	addi	r4,sp,120
   2041c:	a53c8d84 	addi	r20,r20,-3530
   20420:	d8c01e15 	stw	r3,120(sp)
   20424:	d8002015 	stw	zero,128(sp)
   20428:	d8001f15 	stw	zero,124(sp)
   2042c:	d8003315 	stw	zero,204(sp)
   20430:	d8003615 	stw	zero,216(sp)
   20434:	d8003815 	stw	zero,224(sp)
   20438:	1811883a 	mov	r8,r3
   2043c:	d8003915 	stw	zero,228(sp)
   20440:	d8003a15 	stw	zero,232(sp)
   20444:	d8002f15 	stw	zero,188(sp)
   20448:	d9002815 	stw	r4,160(sp)
   2044c:	a8800007 	ldb	r2,0(r21)
   20450:	10027b26 	beq	r2,zero,20e40 <___vfprintf_internal_r+0xad4>
   20454:	00c00944 	movi	r3,37
   20458:	a821883a 	mov	r16,r21
   2045c:	10c0021e 	bne	r2,r3,20468 <___vfprintf_internal_r+0xfc>
   20460:	00001406 	br	204b4 <___vfprintf_internal_r+0x148>
   20464:	10c00326 	beq	r2,r3,20474 <___vfprintf_internal_r+0x108>
   20468:	84000044 	addi	r16,r16,1
   2046c:	80800007 	ldb	r2,0(r16)
   20470:	103ffc1e 	bne	r2,zero,20464 <__alt_data_end+0xfffe0464>
   20474:	8563c83a 	sub	r17,r16,r21
   20478:	88000e26 	beq	r17,zero,204b4 <___vfprintf_internal_r+0x148>
   2047c:	d8c02017 	ldw	r3,128(sp)
   20480:	d8801f17 	ldw	r2,124(sp)
   20484:	45400015 	stw	r21,0(r8)
   20488:	1c47883a 	add	r3,r3,r17
   2048c:	10800044 	addi	r2,r2,1
   20490:	d8c02015 	stw	r3,128(sp)
   20494:	44400115 	stw	r17,4(r8)
   20498:	d8801f15 	stw	r2,124(sp)
   2049c:	00c001c4 	movi	r3,7
   204a0:	1880a716 	blt	r3,r2,20740 <___vfprintf_internal_r+0x3d4>
   204a4:	42000204 	addi	r8,r8,8
   204a8:	d9402f17 	ldw	r5,188(sp)
   204ac:	2c4b883a 	add	r5,r5,r17
   204b0:	d9402f15 	stw	r5,188(sp)
   204b4:	80800007 	ldb	r2,0(r16)
   204b8:	1000a826 	beq	r2,zero,2075c <___vfprintf_internal_r+0x3f0>
   204bc:	84400047 	ldb	r17,1(r16)
   204c0:	00bfffc4 	movi	r2,-1
   204c4:	85400044 	addi	r21,r16,1
   204c8:	d8002785 	stb	zero,158(sp)
   204cc:	0007883a 	mov	r3,zero
   204d0:	000f883a 	mov	r7,zero
   204d4:	d8802915 	stw	r2,164(sp)
   204d8:	d8003115 	stw	zero,196(sp)
   204dc:	0025883a 	mov	r18,zero
   204e0:	01401604 	movi	r5,88
   204e4:	01800244 	movi	r6,9
   204e8:	02800a84 	movi	r10,42
   204ec:	02401b04 	movi	r9,108
   204f0:	ad400044 	addi	r21,r21,1
   204f4:	88bff804 	addi	r2,r17,-32
   204f8:	28830436 	bltu	r5,r2,2110c <___vfprintf_internal_r+0xda0>
   204fc:	100490ba 	slli	r2,r2,2
   20500:	010000b4 	movhi	r4,2
   20504:	21014504 	addi	r4,r4,1300
   20508:	1105883a 	add	r2,r2,r4
   2050c:	10800017 	ldw	r2,0(r2)
   20510:	1000683a 	jmp	r2
   20514:	0002102c 	andhi	zero,zero,2112
   20518:	0002110c 	andi	zero,zero,2116
   2051c:	0002110c 	andi	zero,zero,2116
   20520:	0002104c 	andi	zero,zero,2113
   20524:	0002110c 	andi	zero,zero,2116
   20528:	0002110c 	andi	zero,zero,2116
   2052c:	0002110c 	andi	zero,zero,2116
   20530:	0002110c 	andi	zero,zero,2116
   20534:	0002110c 	andi	zero,zero,2116
   20538:	0002110c 	andi	zero,zero,2116
   2053c:	000207c0 	call	207c <__alt_mem_onchip_memory2_0-0x1df84>
   20540:	00020f68 	cmpgeui	zero,zero,2109
   20544:	0002110c 	andi	zero,zero,2116
   20548:	00020688 	cmpgei	zero,zero,2074
   2054c:	000207e8 	cmpgeui	zero,zero,2079
   20550:	0002110c 	andi	zero,zero,2116
   20554:	00020828 	cmpgeui	zero,zero,2080
   20558:	00020834 	movhi	zero,2080
   2055c:	00020834 	movhi	zero,2080
   20560:	00020834 	movhi	zero,2080
   20564:	00020834 	movhi	zero,2080
   20568:	00020834 	movhi	zero,2080
   2056c:	00020834 	movhi	zero,2080
   20570:	00020834 	movhi	zero,2080
   20574:	00020834 	movhi	zero,2080
   20578:	00020834 	movhi	zero,2080
   2057c:	0002110c 	andi	zero,zero,2116
   20580:	0002110c 	andi	zero,zero,2116
   20584:	0002110c 	andi	zero,zero,2116
   20588:	0002110c 	andi	zero,zero,2116
   2058c:	0002110c 	andi	zero,zero,2116
   20590:	0002110c 	andi	zero,zero,2116
   20594:	0002110c 	andi	zero,zero,2116
   20598:	0002110c 	andi	zero,zero,2116
   2059c:	0002110c 	andi	zero,zero,2116
   205a0:	0002110c 	andi	zero,zero,2116
   205a4:	00020868 	cmpgeui	zero,zero,2081
   205a8:	00020924 	muli	zero,zero,2084
   205ac:	0002110c 	andi	zero,zero,2116
   205b0:	00020924 	muli	zero,zero,2084
   205b4:	0002110c 	andi	zero,zero,2116
   205b8:	0002110c 	andi	zero,zero,2116
   205bc:	0002110c 	andi	zero,zero,2116
   205c0:	0002110c 	andi	zero,zero,2116
   205c4:	000209c4 	movi	zero,2087
   205c8:	0002110c 	andi	zero,zero,2116
   205cc:	0002110c 	andi	zero,zero,2116
   205d0:	000209d0 	cmplti	zero,zero,2087
   205d4:	0002110c 	andi	zero,zero,2116
   205d8:	0002110c 	andi	zero,zero,2116
   205dc:	0002110c 	andi	zero,zero,2116
   205e0:	0002110c 	andi	zero,zero,2116
   205e4:	0002110c 	andi	zero,zero,2116
   205e8:	00020e48 	cmpgei	zero,zero,2105
   205ec:	0002110c 	andi	zero,zero,2116
   205f0:	0002110c 	andi	zero,zero,2116
   205f4:	00020ea8 	cmpgeui	zero,zero,2106
   205f8:	0002110c 	andi	zero,zero,2116
   205fc:	0002110c 	andi	zero,zero,2116
   20600:	0002110c 	andi	zero,zero,2116
   20604:	0002110c 	andi	zero,zero,2116
   20608:	0002110c 	andi	zero,zero,2116
   2060c:	0002110c 	andi	zero,zero,2116
   20610:	0002110c 	andi	zero,zero,2116
   20614:	0002110c 	andi	zero,zero,2116
   20618:	0002110c 	andi	zero,zero,2116
   2061c:	0002110c 	andi	zero,zero,2116
   20620:	000210b8 	rdprs	zero,zero,2114
   20624:	00021058 	cmpnei	zero,zero,2113
   20628:	00020924 	muli	zero,zero,2084
   2062c:	00020924 	muli	zero,zero,2084
   20630:	00020924 	muli	zero,zero,2084
   20634:	00021068 	cmpgeui	zero,zero,2113
   20638:	00021058 	cmpnei	zero,zero,2113
   2063c:	0002110c 	andi	zero,zero,2116
   20640:	0002110c 	andi	zero,zero,2116
   20644:	00021074 	movhi	zero,2113
   20648:	0002110c 	andi	zero,zero,2116
   2064c:	00021084 	movi	zero,2114
   20650:	00020f58 	cmpnei	zero,zero,2109
   20654:	00020694 	movui	zero,2074
   20658:	00020f78 	rdprs	zero,zero,2109
   2065c:	0002110c 	andi	zero,zero,2116
   20660:	00020f84 	movi	zero,2110
   20664:	0002110c 	andi	zero,zero,2116
   20668:	00020fe0 	cmpeqi	zero,zero,2111
   2066c:	0002110c 	andi	zero,zero,2116
   20670:	0002110c 	andi	zero,zero,2116
   20674:	00020ff0 	cmpltui	zero,zero,2111
   20678:	d9003117 	ldw	r4,196(sp)
   2067c:	d8802d15 	stw	r2,180(sp)
   20680:	0109c83a 	sub	r4,zero,r4
   20684:	d9003115 	stw	r4,196(sp)
   20688:	94800114 	ori	r18,r18,4
   2068c:	ac400007 	ldb	r17,0(r21)
   20690:	003f9706 	br	204f0 <__alt_data_end+0xfffe04f0>
   20694:	00800c04 	movi	r2,48
   20698:	d9002d17 	ldw	r4,180(sp)
   2069c:	d9402917 	ldw	r5,164(sp)
   206a0:	d8802705 	stb	r2,156(sp)
   206a4:	00801e04 	movi	r2,120
   206a8:	d8802745 	stb	r2,157(sp)
   206ac:	d8002785 	stb	zero,158(sp)
   206b0:	20c00104 	addi	r3,r4,4
   206b4:	24c00017 	ldw	r19,0(r4)
   206b8:	002d883a 	mov	r22,zero
   206bc:	90800094 	ori	r2,r18,2
   206c0:	28029a16 	blt	r5,zero,2112c <___vfprintf_internal_r+0xdc0>
   206c4:	00bfdfc4 	movi	r2,-129
   206c8:	90a4703a 	and	r18,r18,r2
   206cc:	d8c02d15 	stw	r3,180(sp)
   206d0:	94800094 	ori	r18,r18,2
   206d4:	9802871e 	bne	r19,zero,210f4 <___vfprintf_internal_r+0xd88>
   206d8:	008000f4 	movhi	r2,3
   206dc:	10bc8604 	addi	r2,r2,-3560
   206e0:	d8803915 	stw	r2,228(sp)
   206e4:	04401e04 	movi	r17,120
   206e8:	d8802917 	ldw	r2,164(sp)
   206ec:	0039883a 	mov	fp,zero
   206f0:	1001e926 	beq	r2,zero,20e98 <___vfprintf_internal_r+0xb2c>
   206f4:	0027883a 	mov	r19,zero
   206f8:	002d883a 	mov	r22,zero
   206fc:	00020506 	br	20f14 <___vfprintf_internal_r+0xba8>
   20700:	d9002c17 	ldw	r4,176(sp)
   20704:	b80b883a 	mov	r5,r23
   20708:	002263c0 	call	2263c <__swsetup_r>
   2070c:	1005ac1e 	bne	r2,zero,21dc0 <___vfprintf_internal_r+0x1a54>
   20710:	b880030b 	ldhu	r2,12(r23)
   20714:	00c00284 	movi	r3,10
   20718:	1080068c 	andi	r2,r2,26
   2071c:	10ff3c1e 	bne	r2,r3,20410 <__alt_data_end+0xfffe0410>
   20720:	b880038f 	ldh	r2,14(r23)
   20724:	103f3a16 	blt	r2,zero,20410 <__alt_data_end+0xfffe0410>
   20728:	d9c02d17 	ldw	r7,180(sp)
   2072c:	d9002c17 	ldw	r4,176(sp)
   20730:	a80d883a 	mov	r6,r21
   20734:	b80b883a 	mov	r5,r23
   20738:	00225800 	call	22580 <__sbprintf>
   2073c:	00001106 	br	20784 <___vfprintf_internal_r+0x418>
   20740:	d9002c17 	ldw	r4,176(sp)
   20744:	d9801e04 	addi	r6,sp,120
   20748:	b80b883a 	mov	r5,r23
   2074c:	0026e840 	call	26e84 <__sprint_r>
   20750:	1000081e 	bne	r2,zero,20774 <___vfprintf_internal_r+0x408>
   20754:	da000404 	addi	r8,sp,16
   20758:	003f5306 	br	204a8 <__alt_data_end+0xfffe04a8>
   2075c:	d8802017 	ldw	r2,128(sp)
   20760:	10000426 	beq	r2,zero,20774 <___vfprintf_internal_r+0x408>
   20764:	d9002c17 	ldw	r4,176(sp)
   20768:	d9801e04 	addi	r6,sp,120
   2076c:	b80b883a 	mov	r5,r23
   20770:	0026e840 	call	26e84 <__sprint_r>
   20774:	b880030b 	ldhu	r2,12(r23)
   20778:	1080100c 	andi	r2,r2,64
   2077c:	1005901e 	bne	r2,zero,21dc0 <___vfprintf_internal_r+0x1a54>
   20780:	d8802f17 	ldw	r2,188(sp)
   20784:	dfc04717 	ldw	ra,284(sp)
   20788:	df004617 	ldw	fp,280(sp)
   2078c:	ddc04517 	ldw	r23,276(sp)
   20790:	dd804417 	ldw	r22,272(sp)
   20794:	dd404317 	ldw	r21,268(sp)
   20798:	dd004217 	ldw	r20,264(sp)
   2079c:	dcc04117 	ldw	r19,260(sp)
   207a0:	dc804017 	ldw	r18,256(sp)
   207a4:	dc403f17 	ldw	r17,252(sp)
   207a8:	dc003e17 	ldw	r16,248(sp)
   207ac:	dec04804 	addi	sp,sp,288
   207b0:	f800283a 	ret
   207b4:	d9002c17 	ldw	r4,176(sp)
   207b8:	00246100 	call	24610 <__sinit>
   207bc:	003f0406 	br	203d0 <__alt_data_end+0xfffe03d0>
   207c0:	d8802d17 	ldw	r2,180(sp)
   207c4:	d9002d17 	ldw	r4,180(sp)
   207c8:	10800017 	ldw	r2,0(r2)
   207cc:	d8803115 	stw	r2,196(sp)
   207d0:	20800104 	addi	r2,r4,4
   207d4:	d9003117 	ldw	r4,196(sp)
   207d8:	203fa716 	blt	r4,zero,20678 <__alt_data_end+0xfffe0678>
   207dc:	d8802d15 	stw	r2,180(sp)
   207e0:	ac400007 	ldb	r17,0(r21)
   207e4:	003f4206 	br	204f0 <__alt_data_end+0xfffe04f0>
   207e8:	ac400007 	ldb	r17,0(r21)
   207ec:	aac00044 	addi	r11,r21,1
   207f0:	8a872826 	beq	r17,r10,22494 <___vfprintf_internal_r+0x2128>
   207f4:	88bff404 	addi	r2,r17,-48
   207f8:	0009883a 	mov	r4,zero
   207fc:	30867d36 	bltu	r6,r2,221f4 <___vfprintf_internal_r+0x1e88>
   20800:	5c400007 	ldb	r17,0(r11)
   20804:	210002a4 	muli	r4,r4,10
   20808:	5d400044 	addi	r21,r11,1
   2080c:	a817883a 	mov	r11,r21
   20810:	2089883a 	add	r4,r4,r2
   20814:	88bff404 	addi	r2,r17,-48
   20818:	30bff92e 	bgeu	r6,r2,20800 <__alt_data_end+0xfffe0800>
   2081c:	2005c916 	blt	r4,zero,21f44 <___vfprintf_internal_r+0x1bd8>
   20820:	d9002915 	stw	r4,164(sp)
   20824:	003f3306 	br	204f4 <__alt_data_end+0xfffe04f4>
   20828:	94802014 	ori	r18,r18,128
   2082c:	ac400007 	ldb	r17,0(r21)
   20830:	003f2f06 	br	204f0 <__alt_data_end+0xfffe04f0>
   20834:	a809883a 	mov	r4,r21
   20838:	d8003115 	stw	zero,196(sp)
   2083c:	88bff404 	addi	r2,r17,-48
   20840:	0017883a 	mov	r11,zero
   20844:	24400007 	ldb	r17,0(r4)
   20848:	5ac002a4 	muli	r11,r11,10
   2084c:	ad400044 	addi	r21,r21,1
   20850:	a809883a 	mov	r4,r21
   20854:	12d7883a 	add	r11,r2,r11
   20858:	88bff404 	addi	r2,r17,-48
   2085c:	30bff92e 	bgeu	r6,r2,20844 <__alt_data_end+0xfffe0844>
   20860:	dac03115 	stw	r11,196(sp)
   20864:	003f2306 	br	204f4 <__alt_data_end+0xfffe04f4>
   20868:	18c03fcc 	andi	r3,r3,255
   2086c:	18072b1e 	bne	r3,zero,2251c <___vfprintf_internal_r+0x21b0>
   20870:	94800414 	ori	r18,r18,16
   20874:	9080080c 	andi	r2,r18,32
   20878:	10037b26 	beq	r2,zero,21668 <___vfprintf_internal_r+0x12fc>
   2087c:	d9402d17 	ldw	r5,180(sp)
   20880:	28800117 	ldw	r2,4(r5)
   20884:	2cc00017 	ldw	r19,0(r5)
   20888:	29400204 	addi	r5,r5,8
   2088c:	d9402d15 	stw	r5,180(sp)
   20890:	102d883a 	mov	r22,r2
   20894:	10044b16 	blt	r2,zero,219c4 <___vfprintf_internal_r+0x1658>
   20898:	d9402917 	ldw	r5,164(sp)
   2089c:	df002783 	ldbu	fp,158(sp)
   208a0:	2803bc16 	blt	r5,zero,21794 <___vfprintf_internal_r+0x1428>
   208a4:	00ffdfc4 	movi	r3,-129
   208a8:	9d84b03a 	or	r2,r19,r22
   208ac:	90e4703a 	and	r18,r18,r3
   208b0:	10017726 	beq	r2,zero,20e90 <___vfprintf_internal_r+0xb24>
   208b4:	b0038326 	beq	r22,zero,216c4 <___vfprintf_internal_r+0x1358>
   208b8:	dc402a15 	stw	r17,168(sp)
   208bc:	dc001e04 	addi	r16,sp,120
   208c0:	b023883a 	mov	r17,r22
   208c4:	402d883a 	mov	r22,r8
   208c8:	9809883a 	mov	r4,r19
   208cc:	880b883a 	mov	r5,r17
   208d0:	01800284 	movi	r6,10
   208d4:	000f883a 	mov	r7,zero
   208d8:	0029df80 	call	29df8 <__umoddi3>
   208dc:	10800c04 	addi	r2,r2,48
   208e0:	843fffc4 	addi	r16,r16,-1
   208e4:	9809883a 	mov	r4,r19
   208e8:	880b883a 	mov	r5,r17
   208ec:	80800005 	stb	r2,0(r16)
   208f0:	01800284 	movi	r6,10
   208f4:	000f883a 	mov	r7,zero
   208f8:	00298800 	call	29880 <__udivdi3>
   208fc:	1027883a 	mov	r19,r2
   20900:	10c4b03a 	or	r2,r2,r3
   20904:	1823883a 	mov	r17,r3
   20908:	103fef1e 	bne	r2,zero,208c8 <__alt_data_end+0xfffe08c8>
   2090c:	d8c02817 	ldw	r3,160(sp)
   20910:	dc402a17 	ldw	r17,168(sp)
   20914:	b011883a 	mov	r8,r22
   20918:	1c07c83a 	sub	r3,r3,r16
   2091c:	d8c02e15 	stw	r3,184(sp)
   20920:	00005906 	br	20a88 <___vfprintf_internal_r+0x71c>
   20924:	18c03fcc 	andi	r3,r3,255
   20928:	1806fa1e 	bne	r3,zero,22514 <___vfprintf_internal_r+0x21a8>
   2092c:	9080020c 	andi	r2,r18,8
   20930:	10048a26 	beq	r2,zero,21b5c <___vfprintf_internal_r+0x17f0>
   20934:	d8c02d17 	ldw	r3,180(sp)
   20938:	d9002d17 	ldw	r4,180(sp)
   2093c:	d9402d17 	ldw	r5,180(sp)
   20940:	18c00017 	ldw	r3,0(r3)
   20944:	21000117 	ldw	r4,4(r4)
   20948:	29400204 	addi	r5,r5,8
   2094c:	d8c03615 	stw	r3,216(sp)
   20950:	d9003815 	stw	r4,224(sp)
   20954:	d9402d15 	stw	r5,180(sp)
   20958:	d9003617 	ldw	r4,216(sp)
   2095c:	d9403817 	ldw	r5,224(sp)
   20960:	da003d15 	stw	r8,244(sp)
   20964:	04000044 	movi	r16,1
   20968:	0026a100 	call	26a10 <__fpclassifyd>
   2096c:	da003d17 	ldw	r8,244(sp)
   20970:	14041f1e 	bne	r2,r16,219f0 <___vfprintf_internal_r+0x1684>
   20974:	d9003617 	ldw	r4,216(sp)
   20978:	d9403817 	ldw	r5,224(sp)
   2097c:	000d883a 	mov	r6,zero
   20980:	000f883a 	mov	r7,zero
   20984:	002b7dc0 	call	2b7dc <__ledf2>
   20988:	da003d17 	ldw	r8,244(sp)
   2098c:	1005be16 	blt	r2,zero,22088 <___vfprintf_internal_r+0x1d1c>
   20990:	df002783 	ldbu	fp,158(sp)
   20994:	008011c4 	movi	r2,71
   20998:	1445330e 	bge	r2,r17,21e68 <___vfprintf_internal_r+0x1afc>
   2099c:	040000f4 	movhi	r16,3
   209a0:	843c7e04 	addi	r16,r16,-3592
   209a4:	00c000c4 	movi	r3,3
   209a8:	00bfdfc4 	movi	r2,-129
   209ac:	d8c02a15 	stw	r3,168(sp)
   209b0:	90a4703a 	and	r18,r18,r2
   209b4:	d8c02e15 	stw	r3,184(sp)
   209b8:	d8002915 	stw	zero,164(sp)
   209bc:	d8003215 	stw	zero,200(sp)
   209c0:	00003706 	br	20aa0 <___vfprintf_internal_r+0x734>
   209c4:	94800214 	ori	r18,r18,8
   209c8:	ac400007 	ldb	r17,0(r21)
   209cc:	003ec806 	br	204f0 <__alt_data_end+0xfffe04f0>
   209d0:	18c03fcc 	andi	r3,r3,255
   209d4:	1806db1e 	bne	r3,zero,22544 <___vfprintf_internal_r+0x21d8>
   209d8:	94800414 	ori	r18,r18,16
   209dc:	9080080c 	andi	r2,r18,32
   209e0:	1002d826 	beq	r2,zero,21544 <___vfprintf_internal_r+0x11d8>
   209e4:	d9402d17 	ldw	r5,180(sp)
   209e8:	d8c02917 	ldw	r3,164(sp)
   209ec:	d8002785 	stb	zero,158(sp)
   209f0:	28800204 	addi	r2,r5,8
   209f4:	2cc00017 	ldw	r19,0(r5)
   209f8:	2d800117 	ldw	r22,4(r5)
   209fc:	18048f16 	blt	r3,zero,21c3c <___vfprintf_internal_r+0x18d0>
   20a00:	013fdfc4 	movi	r4,-129
   20a04:	9d86b03a 	or	r3,r19,r22
   20a08:	d8802d15 	stw	r2,180(sp)
   20a0c:	9124703a 	and	r18,r18,r4
   20a10:	1802d91e 	bne	r3,zero,21578 <___vfprintf_internal_r+0x120c>
   20a14:	d8c02917 	ldw	r3,164(sp)
   20a18:	0039883a 	mov	fp,zero
   20a1c:	1805c326 	beq	r3,zero,2212c <___vfprintf_internal_r+0x1dc0>
   20a20:	0027883a 	mov	r19,zero
   20a24:	002d883a 	mov	r22,zero
   20a28:	dc001e04 	addi	r16,sp,120
   20a2c:	9806d0fa 	srli	r3,r19,3
   20a30:	b008977a 	slli	r4,r22,29
   20a34:	b02cd0fa 	srli	r22,r22,3
   20a38:	9cc001cc 	andi	r19,r19,7
   20a3c:	98800c04 	addi	r2,r19,48
   20a40:	843fffc4 	addi	r16,r16,-1
   20a44:	20e6b03a 	or	r19,r4,r3
   20a48:	80800005 	stb	r2,0(r16)
   20a4c:	9d86b03a 	or	r3,r19,r22
   20a50:	183ff61e 	bne	r3,zero,20a2c <__alt_data_end+0xfffe0a2c>
   20a54:	90c0004c 	andi	r3,r18,1
   20a58:	18013b26 	beq	r3,zero,20f48 <___vfprintf_internal_r+0xbdc>
   20a5c:	10803fcc 	andi	r2,r2,255
   20a60:	1080201c 	xori	r2,r2,128
   20a64:	10bfe004 	addi	r2,r2,-128
   20a68:	00c00c04 	movi	r3,48
   20a6c:	10c13626 	beq	r2,r3,20f48 <___vfprintf_internal_r+0xbdc>
   20a70:	80ffffc5 	stb	r3,-1(r16)
   20a74:	d8c02817 	ldw	r3,160(sp)
   20a78:	80bfffc4 	addi	r2,r16,-1
   20a7c:	1021883a 	mov	r16,r2
   20a80:	1887c83a 	sub	r3,r3,r2
   20a84:	d8c02e15 	stw	r3,184(sp)
   20a88:	d8802e17 	ldw	r2,184(sp)
   20a8c:	d9002917 	ldw	r4,164(sp)
   20a90:	1100010e 	bge	r2,r4,20a98 <___vfprintf_internal_r+0x72c>
   20a94:	2005883a 	mov	r2,r4
   20a98:	d8802a15 	stw	r2,168(sp)
   20a9c:	d8003215 	stw	zero,200(sp)
   20aa0:	e7003fcc 	andi	fp,fp,255
   20aa4:	e700201c 	xori	fp,fp,128
   20aa8:	e73fe004 	addi	fp,fp,-128
   20aac:	e0000326 	beq	fp,zero,20abc <___vfprintf_internal_r+0x750>
   20ab0:	d8c02a17 	ldw	r3,168(sp)
   20ab4:	18c00044 	addi	r3,r3,1
   20ab8:	d8c02a15 	stw	r3,168(sp)
   20abc:	90c0008c 	andi	r3,r18,2
   20ac0:	d8c02b15 	stw	r3,172(sp)
   20ac4:	18000326 	beq	r3,zero,20ad4 <___vfprintf_internal_r+0x768>
   20ac8:	d8c02a17 	ldw	r3,168(sp)
   20acc:	18c00084 	addi	r3,r3,2
   20ad0:	d8c02a15 	stw	r3,168(sp)
   20ad4:	90c0210c 	andi	r3,r18,132
   20ad8:	d8c03015 	stw	r3,192(sp)
   20adc:	1801a31e 	bne	r3,zero,2116c <___vfprintf_internal_r+0xe00>
   20ae0:	d9003117 	ldw	r4,196(sp)
   20ae4:	d8c02a17 	ldw	r3,168(sp)
   20ae8:	20e7c83a 	sub	r19,r4,r3
   20aec:	04c19f0e 	bge	zero,r19,2116c <___vfprintf_internal_r+0xe00>
   20af0:	02400404 	movi	r9,16
   20af4:	d8c02017 	ldw	r3,128(sp)
   20af8:	d8801f17 	ldw	r2,124(sp)
   20afc:	4cc50d0e 	bge	r9,r19,21f34 <___vfprintf_internal_r+0x1bc8>
   20b00:	014000f4 	movhi	r5,3
   20b04:	297c9184 	addi	r5,r5,-3514
   20b08:	dc403b15 	stw	r17,236(sp)
   20b0c:	d9403515 	stw	r5,212(sp)
   20b10:	9823883a 	mov	r17,r19
   20b14:	482d883a 	mov	r22,r9
   20b18:	9027883a 	mov	r19,r18
   20b1c:	070001c4 	movi	fp,7
   20b20:	8025883a 	mov	r18,r16
   20b24:	dc002c17 	ldw	r16,176(sp)
   20b28:	00000306 	br	20b38 <___vfprintf_internal_r+0x7cc>
   20b2c:	8c7ffc04 	addi	r17,r17,-16
   20b30:	42000204 	addi	r8,r8,8
   20b34:	b440130e 	bge	r22,r17,20b84 <___vfprintf_internal_r+0x818>
   20b38:	010000f4 	movhi	r4,3
   20b3c:	18c00404 	addi	r3,r3,16
   20b40:	10800044 	addi	r2,r2,1
   20b44:	213c9184 	addi	r4,r4,-3514
   20b48:	41000015 	stw	r4,0(r8)
   20b4c:	45800115 	stw	r22,4(r8)
   20b50:	d8c02015 	stw	r3,128(sp)
   20b54:	d8801f15 	stw	r2,124(sp)
   20b58:	e0bff40e 	bge	fp,r2,20b2c <__alt_data_end+0xfffe0b2c>
   20b5c:	d9801e04 	addi	r6,sp,120
   20b60:	b80b883a 	mov	r5,r23
   20b64:	8009883a 	mov	r4,r16
   20b68:	0026e840 	call	26e84 <__sprint_r>
   20b6c:	103f011e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   20b70:	8c7ffc04 	addi	r17,r17,-16
   20b74:	d8c02017 	ldw	r3,128(sp)
   20b78:	d8801f17 	ldw	r2,124(sp)
   20b7c:	da000404 	addi	r8,sp,16
   20b80:	b47fed16 	blt	r22,r17,20b38 <__alt_data_end+0xfffe0b38>
   20b84:	9021883a 	mov	r16,r18
   20b88:	9825883a 	mov	r18,r19
   20b8c:	8827883a 	mov	r19,r17
   20b90:	dc403b17 	ldw	r17,236(sp)
   20b94:	d9403517 	ldw	r5,212(sp)
   20b98:	98c7883a 	add	r3,r19,r3
   20b9c:	10800044 	addi	r2,r2,1
   20ba0:	41400015 	stw	r5,0(r8)
   20ba4:	44c00115 	stw	r19,4(r8)
   20ba8:	d8c02015 	stw	r3,128(sp)
   20bac:	d8801f15 	stw	r2,124(sp)
   20bb0:	010001c4 	movi	r4,7
   20bb4:	2082a316 	blt	r4,r2,21644 <___vfprintf_internal_r+0x12d8>
   20bb8:	df002787 	ldb	fp,158(sp)
   20bbc:	42000204 	addi	r8,r8,8
   20bc0:	e0000c26 	beq	fp,zero,20bf4 <___vfprintf_internal_r+0x888>
   20bc4:	d8801f17 	ldw	r2,124(sp)
   20bc8:	d9002784 	addi	r4,sp,158
   20bcc:	18c00044 	addi	r3,r3,1
   20bd0:	10800044 	addi	r2,r2,1
   20bd4:	41000015 	stw	r4,0(r8)
   20bd8:	01000044 	movi	r4,1
   20bdc:	41000115 	stw	r4,4(r8)
   20be0:	d8c02015 	stw	r3,128(sp)
   20be4:	d8801f15 	stw	r2,124(sp)
   20be8:	010001c4 	movi	r4,7
   20bec:	20823c16 	blt	r4,r2,214e0 <___vfprintf_internal_r+0x1174>
   20bf0:	42000204 	addi	r8,r8,8
   20bf4:	d8802b17 	ldw	r2,172(sp)
   20bf8:	10000c26 	beq	r2,zero,20c2c <___vfprintf_internal_r+0x8c0>
   20bfc:	d8801f17 	ldw	r2,124(sp)
   20c00:	d9002704 	addi	r4,sp,156
   20c04:	18c00084 	addi	r3,r3,2
   20c08:	10800044 	addi	r2,r2,1
   20c0c:	41000015 	stw	r4,0(r8)
   20c10:	01000084 	movi	r4,2
   20c14:	41000115 	stw	r4,4(r8)
   20c18:	d8c02015 	stw	r3,128(sp)
   20c1c:	d8801f15 	stw	r2,124(sp)
   20c20:	010001c4 	movi	r4,7
   20c24:	20823616 	blt	r4,r2,21500 <___vfprintf_internal_r+0x1194>
   20c28:	42000204 	addi	r8,r8,8
   20c2c:	d9003017 	ldw	r4,192(sp)
   20c30:	00802004 	movi	r2,128
   20c34:	20819926 	beq	r4,r2,2129c <___vfprintf_internal_r+0xf30>
   20c38:	d9402917 	ldw	r5,164(sp)
   20c3c:	d8802e17 	ldw	r2,184(sp)
   20c40:	28adc83a 	sub	r22,r5,r2
   20c44:	0580310e 	bge	zero,r22,20d0c <___vfprintf_internal_r+0x9a0>
   20c48:	07000404 	movi	fp,16
   20c4c:	d8801f17 	ldw	r2,124(sp)
   20c50:	e584140e 	bge	fp,r22,21ca4 <___vfprintf_internal_r+0x1938>
   20c54:	014000f4 	movhi	r5,3
   20c58:	297c8d84 	addi	r5,r5,-3530
   20c5c:	dc402915 	stw	r17,164(sp)
   20c60:	d9402b15 	stw	r5,172(sp)
   20c64:	b023883a 	mov	r17,r22
   20c68:	04c001c4 	movi	r19,7
   20c6c:	a82d883a 	mov	r22,r21
   20c70:	902b883a 	mov	r21,r18
   20c74:	8025883a 	mov	r18,r16
   20c78:	dc002c17 	ldw	r16,176(sp)
   20c7c:	00000306 	br	20c8c <___vfprintf_internal_r+0x920>
   20c80:	8c7ffc04 	addi	r17,r17,-16
   20c84:	42000204 	addi	r8,r8,8
   20c88:	e440110e 	bge	fp,r17,20cd0 <___vfprintf_internal_r+0x964>
   20c8c:	18c00404 	addi	r3,r3,16
   20c90:	10800044 	addi	r2,r2,1
   20c94:	45000015 	stw	r20,0(r8)
   20c98:	47000115 	stw	fp,4(r8)
   20c9c:	d8c02015 	stw	r3,128(sp)
   20ca0:	d8801f15 	stw	r2,124(sp)
   20ca4:	98bff60e 	bge	r19,r2,20c80 <__alt_data_end+0xfffe0c80>
   20ca8:	d9801e04 	addi	r6,sp,120
   20cac:	b80b883a 	mov	r5,r23
   20cb0:	8009883a 	mov	r4,r16
   20cb4:	0026e840 	call	26e84 <__sprint_r>
   20cb8:	103eae1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   20cbc:	8c7ffc04 	addi	r17,r17,-16
   20cc0:	d8c02017 	ldw	r3,128(sp)
   20cc4:	d8801f17 	ldw	r2,124(sp)
   20cc8:	da000404 	addi	r8,sp,16
   20ccc:	e47fef16 	blt	fp,r17,20c8c <__alt_data_end+0xfffe0c8c>
   20cd0:	9021883a 	mov	r16,r18
   20cd4:	a825883a 	mov	r18,r21
   20cd8:	b02b883a 	mov	r21,r22
   20cdc:	882d883a 	mov	r22,r17
   20ce0:	dc402917 	ldw	r17,164(sp)
   20ce4:	d9002b17 	ldw	r4,172(sp)
   20ce8:	1d87883a 	add	r3,r3,r22
   20cec:	10800044 	addi	r2,r2,1
   20cf0:	41000015 	stw	r4,0(r8)
   20cf4:	45800115 	stw	r22,4(r8)
   20cf8:	d8c02015 	stw	r3,128(sp)
   20cfc:	d8801f15 	stw	r2,124(sp)
   20d00:	010001c4 	movi	r4,7
   20d04:	2081ee16 	blt	r4,r2,214c0 <___vfprintf_internal_r+0x1154>
   20d08:	42000204 	addi	r8,r8,8
   20d0c:	9080400c 	andi	r2,r18,256
   20d10:	1001181e 	bne	r2,zero,21174 <___vfprintf_internal_r+0xe08>
   20d14:	d9402e17 	ldw	r5,184(sp)
   20d18:	d8801f17 	ldw	r2,124(sp)
   20d1c:	44000015 	stw	r16,0(r8)
   20d20:	1947883a 	add	r3,r3,r5
   20d24:	10800044 	addi	r2,r2,1
   20d28:	41400115 	stw	r5,4(r8)
   20d2c:	d8c02015 	stw	r3,128(sp)
   20d30:	d8801f15 	stw	r2,124(sp)
   20d34:	010001c4 	movi	r4,7
   20d38:	2081d316 	blt	r4,r2,21488 <___vfprintf_internal_r+0x111c>
   20d3c:	42000204 	addi	r8,r8,8
   20d40:	9480010c 	andi	r18,r18,4
   20d44:	90003226 	beq	r18,zero,20e10 <___vfprintf_internal_r+0xaa4>
   20d48:	d9403117 	ldw	r5,196(sp)
   20d4c:	d8802a17 	ldw	r2,168(sp)
   20d50:	28a1c83a 	sub	r16,r5,r2
   20d54:	04002e0e 	bge	zero,r16,20e10 <___vfprintf_internal_r+0xaa4>
   20d58:	04400404 	movi	r17,16
   20d5c:	d8801f17 	ldw	r2,124(sp)
   20d60:	8c04a20e 	bge	r17,r16,21fec <___vfprintf_internal_r+0x1c80>
   20d64:	014000f4 	movhi	r5,3
   20d68:	297c9184 	addi	r5,r5,-3514
   20d6c:	d9403515 	stw	r5,212(sp)
   20d70:	048001c4 	movi	r18,7
   20d74:	dcc02c17 	ldw	r19,176(sp)
   20d78:	00000306 	br	20d88 <___vfprintf_internal_r+0xa1c>
   20d7c:	843ffc04 	addi	r16,r16,-16
   20d80:	42000204 	addi	r8,r8,8
   20d84:	8c00130e 	bge	r17,r16,20dd4 <___vfprintf_internal_r+0xa68>
   20d88:	010000f4 	movhi	r4,3
   20d8c:	18c00404 	addi	r3,r3,16
   20d90:	10800044 	addi	r2,r2,1
   20d94:	213c9184 	addi	r4,r4,-3514
   20d98:	41000015 	stw	r4,0(r8)
   20d9c:	44400115 	stw	r17,4(r8)
   20da0:	d8c02015 	stw	r3,128(sp)
   20da4:	d8801f15 	stw	r2,124(sp)
   20da8:	90bff40e 	bge	r18,r2,20d7c <__alt_data_end+0xfffe0d7c>
   20dac:	d9801e04 	addi	r6,sp,120
   20db0:	b80b883a 	mov	r5,r23
   20db4:	9809883a 	mov	r4,r19
   20db8:	0026e840 	call	26e84 <__sprint_r>
   20dbc:	103e6d1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   20dc0:	843ffc04 	addi	r16,r16,-16
   20dc4:	d8c02017 	ldw	r3,128(sp)
   20dc8:	d8801f17 	ldw	r2,124(sp)
   20dcc:	da000404 	addi	r8,sp,16
   20dd0:	8c3fed16 	blt	r17,r16,20d88 <__alt_data_end+0xfffe0d88>
   20dd4:	d9403517 	ldw	r5,212(sp)
   20dd8:	1c07883a 	add	r3,r3,r16
   20ddc:	10800044 	addi	r2,r2,1
   20de0:	41400015 	stw	r5,0(r8)
   20de4:	44000115 	stw	r16,4(r8)
   20de8:	d8c02015 	stw	r3,128(sp)
   20dec:	d8801f15 	stw	r2,124(sp)
   20df0:	010001c4 	movi	r4,7
   20df4:	2080060e 	bge	r4,r2,20e10 <___vfprintf_internal_r+0xaa4>
   20df8:	d9002c17 	ldw	r4,176(sp)
   20dfc:	d9801e04 	addi	r6,sp,120
   20e00:	b80b883a 	mov	r5,r23
   20e04:	0026e840 	call	26e84 <__sprint_r>
   20e08:	103e5a1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   20e0c:	d8c02017 	ldw	r3,128(sp)
   20e10:	d8803117 	ldw	r2,196(sp)
   20e14:	d9002a17 	ldw	r4,168(sp)
   20e18:	1100010e 	bge	r2,r4,20e20 <___vfprintf_internal_r+0xab4>
   20e1c:	2005883a 	mov	r2,r4
   20e20:	d9402f17 	ldw	r5,188(sp)
   20e24:	288b883a 	add	r5,r5,r2
   20e28:	d9402f15 	stw	r5,188(sp)
   20e2c:	18019e1e 	bne	r3,zero,214a8 <___vfprintf_internal_r+0x113c>
   20e30:	a8800007 	ldb	r2,0(r21)
   20e34:	d8001f15 	stw	zero,124(sp)
   20e38:	da000404 	addi	r8,sp,16
   20e3c:	103d851e 	bne	r2,zero,20454 <__alt_data_end+0xfffe0454>
   20e40:	a821883a 	mov	r16,r21
   20e44:	003d9b06 	br	204b4 <__alt_data_end+0xfffe04b4>
   20e48:	18c03fcc 	andi	r3,r3,255
   20e4c:	1805c11e 	bne	r3,zero,22554 <___vfprintf_internal_r+0x21e8>
   20e50:	94800414 	ori	r18,r18,16
   20e54:	9080080c 	andi	r2,r18,32
   20e58:	10020c26 	beq	r2,zero,2168c <___vfprintf_internal_r+0x1320>
   20e5c:	d8802d17 	ldw	r2,180(sp)
   20e60:	d9002917 	ldw	r4,164(sp)
   20e64:	d8002785 	stb	zero,158(sp)
   20e68:	10c00204 	addi	r3,r2,8
   20e6c:	14c00017 	ldw	r19,0(r2)
   20e70:	15800117 	ldw	r22,4(r2)
   20e74:	20040f16 	blt	r4,zero,21eb4 <___vfprintf_internal_r+0x1b48>
   20e78:	013fdfc4 	movi	r4,-129
   20e7c:	9d84b03a 	or	r2,r19,r22
   20e80:	d8c02d15 	stw	r3,180(sp)
   20e84:	9124703a 	and	r18,r18,r4
   20e88:	0039883a 	mov	fp,zero
   20e8c:	103e891e 	bne	r2,zero,208b4 <__alt_data_end+0xfffe08b4>
   20e90:	d9002917 	ldw	r4,164(sp)
   20e94:	2002c11e 	bne	r4,zero,2199c <___vfprintf_internal_r+0x1630>
   20e98:	d8002915 	stw	zero,164(sp)
   20e9c:	d8002e15 	stw	zero,184(sp)
   20ea0:	dc001e04 	addi	r16,sp,120
   20ea4:	003ef806 	br	20a88 <__alt_data_end+0xfffe0a88>
   20ea8:	18c03fcc 	andi	r3,r3,255
   20eac:	18059d1e 	bne	r3,zero,22524 <___vfprintf_internal_r+0x21b8>
   20eb0:	014000f4 	movhi	r5,3
   20eb4:	297c8104 	addi	r5,r5,-3580
   20eb8:	d9403915 	stw	r5,228(sp)
   20ebc:	9080080c 	andi	r2,r18,32
   20ec0:	10005226 	beq	r2,zero,2100c <___vfprintf_internal_r+0xca0>
   20ec4:	d8802d17 	ldw	r2,180(sp)
   20ec8:	14c00017 	ldw	r19,0(r2)
   20ecc:	15800117 	ldw	r22,4(r2)
   20ed0:	10800204 	addi	r2,r2,8
   20ed4:	d8802d15 	stw	r2,180(sp)
   20ed8:	9080004c 	andi	r2,r18,1
   20edc:	10019026 	beq	r2,zero,21520 <___vfprintf_internal_r+0x11b4>
   20ee0:	9d84b03a 	or	r2,r19,r22
   20ee4:	10036926 	beq	r2,zero,21c8c <___vfprintf_internal_r+0x1920>
   20ee8:	d8c02917 	ldw	r3,164(sp)
   20eec:	00800c04 	movi	r2,48
   20ef0:	d8802705 	stb	r2,156(sp)
   20ef4:	dc402745 	stb	r17,157(sp)
   20ef8:	d8002785 	stb	zero,158(sp)
   20efc:	90800094 	ori	r2,r18,2
   20f00:	18045d16 	blt	r3,zero,22078 <___vfprintf_internal_r+0x1d0c>
   20f04:	00bfdfc4 	movi	r2,-129
   20f08:	90a4703a 	and	r18,r18,r2
   20f0c:	94800094 	ori	r18,r18,2
   20f10:	0039883a 	mov	fp,zero
   20f14:	d9003917 	ldw	r4,228(sp)
   20f18:	dc001e04 	addi	r16,sp,120
   20f1c:	988003cc 	andi	r2,r19,15
   20f20:	b006973a 	slli	r3,r22,28
   20f24:	2085883a 	add	r2,r4,r2
   20f28:	9826d13a 	srli	r19,r19,4
   20f2c:	10800003 	ldbu	r2,0(r2)
   20f30:	b02cd13a 	srli	r22,r22,4
   20f34:	843fffc4 	addi	r16,r16,-1
   20f38:	1ce6b03a 	or	r19,r3,r19
   20f3c:	80800005 	stb	r2,0(r16)
   20f40:	9d84b03a 	or	r2,r19,r22
   20f44:	103ff51e 	bne	r2,zero,20f1c <__alt_data_end+0xfffe0f1c>
   20f48:	d8c02817 	ldw	r3,160(sp)
   20f4c:	1c07c83a 	sub	r3,r3,r16
   20f50:	d8c02e15 	stw	r3,184(sp)
   20f54:	003ecc06 	br	20a88 <__alt_data_end+0xfffe0a88>
   20f58:	18c03fcc 	andi	r3,r3,255
   20f5c:	183e9f26 	beq	r3,zero,209dc <__alt_data_end+0xfffe09dc>
   20f60:	d9c02785 	stb	r7,158(sp)
   20f64:	003e9d06 	br	209dc <__alt_data_end+0xfffe09dc>
   20f68:	00c00044 	movi	r3,1
   20f6c:	01c00ac4 	movi	r7,43
   20f70:	ac400007 	ldb	r17,0(r21)
   20f74:	003d5e06 	br	204f0 <__alt_data_end+0xfffe04f0>
   20f78:	94800814 	ori	r18,r18,32
   20f7c:	ac400007 	ldb	r17,0(r21)
   20f80:	003d5b06 	br	204f0 <__alt_data_end+0xfffe04f0>
   20f84:	d8c02d17 	ldw	r3,180(sp)
   20f88:	d8002785 	stb	zero,158(sp)
   20f8c:	1c000017 	ldw	r16,0(r3)
   20f90:	1cc00104 	addi	r19,r3,4
   20f94:	80041926 	beq	r16,zero,21ffc <___vfprintf_internal_r+0x1c90>
   20f98:	d9002917 	ldw	r4,164(sp)
   20f9c:	2003d016 	blt	r4,zero,21ee0 <___vfprintf_internal_r+0x1b74>
   20fa0:	200d883a 	mov	r6,r4
   20fa4:	000b883a 	mov	r5,zero
   20fa8:	8009883a 	mov	r4,r16
   20fac:	da003d15 	stw	r8,244(sp)
   20fb0:	00256c00 	call	256c0 <memchr>
   20fb4:	da003d17 	ldw	r8,244(sp)
   20fb8:	10045426 	beq	r2,zero,2210c <___vfprintf_internal_r+0x1da0>
   20fbc:	1405c83a 	sub	r2,r2,r16
   20fc0:	d8802e15 	stw	r2,184(sp)
   20fc4:	1003cc16 	blt	r2,zero,21ef8 <___vfprintf_internal_r+0x1b8c>
   20fc8:	df002783 	ldbu	fp,158(sp)
   20fcc:	d8802a15 	stw	r2,168(sp)
   20fd0:	dcc02d15 	stw	r19,180(sp)
   20fd4:	d8002915 	stw	zero,164(sp)
   20fd8:	d8003215 	stw	zero,200(sp)
   20fdc:	003eb006 	br	20aa0 <__alt_data_end+0xfffe0aa0>
   20fe0:	18c03fcc 	andi	r3,r3,255
   20fe4:	183f9b26 	beq	r3,zero,20e54 <__alt_data_end+0xfffe0e54>
   20fe8:	d9c02785 	stb	r7,158(sp)
   20fec:	003f9906 	br	20e54 <__alt_data_end+0xfffe0e54>
   20ff0:	18c03fcc 	andi	r3,r3,255
   20ff4:	1805551e 	bne	r3,zero,2254c <___vfprintf_internal_r+0x21e0>
   20ff8:	014000f4 	movhi	r5,3
   20ffc:	297c8604 	addi	r5,r5,-3560
   21000:	d9403915 	stw	r5,228(sp)
   21004:	9080080c 	andi	r2,r18,32
   21008:	103fae1e 	bne	r2,zero,20ec4 <__alt_data_end+0xfffe0ec4>
   2100c:	9080040c 	andi	r2,r18,16
   21010:	1002de26 	beq	r2,zero,21b8c <___vfprintf_internal_r+0x1820>
   21014:	d8c02d17 	ldw	r3,180(sp)
   21018:	002d883a 	mov	r22,zero
   2101c:	1cc00017 	ldw	r19,0(r3)
   21020:	18c00104 	addi	r3,r3,4
   21024:	d8c02d15 	stw	r3,180(sp)
   21028:	003fab06 	br	20ed8 <__alt_data_end+0xfffe0ed8>
   2102c:	38803fcc 	andi	r2,r7,255
   21030:	1080201c 	xori	r2,r2,128
   21034:	10bfe004 	addi	r2,r2,-128
   21038:	1002d21e 	bne	r2,zero,21b84 <___vfprintf_internal_r+0x1818>
   2103c:	00c00044 	movi	r3,1
   21040:	01c00804 	movi	r7,32
   21044:	ac400007 	ldb	r17,0(r21)
   21048:	003d2906 	br	204f0 <__alt_data_end+0xfffe04f0>
   2104c:	94800054 	ori	r18,r18,1
   21050:	ac400007 	ldb	r17,0(r21)
   21054:	003d2606 	br	204f0 <__alt_data_end+0xfffe04f0>
   21058:	18c03fcc 	andi	r3,r3,255
   2105c:	183e0526 	beq	r3,zero,20874 <__alt_data_end+0xfffe0874>
   21060:	d9c02785 	stb	r7,158(sp)
   21064:	003e0306 	br	20874 <__alt_data_end+0xfffe0874>
   21068:	94801014 	ori	r18,r18,64
   2106c:	ac400007 	ldb	r17,0(r21)
   21070:	003d1f06 	br	204f0 <__alt_data_end+0xfffe04f0>
   21074:	ac400007 	ldb	r17,0(r21)
   21078:	8a438726 	beq	r17,r9,21e98 <___vfprintf_internal_r+0x1b2c>
   2107c:	94800414 	ori	r18,r18,16
   21080:	003d1b06 	br	204f0 <__alt_data_end+0xfffe04f0>
   21084:	18c03fcc 	andi	r3,r3,255
   21088:	1805341e 	bne	r3,zero,2255c <___vfprintf_internal_r+0x21f0>
   2108c:	9080080c 	andi	r2,r18,32
   21090:	1002cd26 	beq	r2,zero,21bc8 <___vfprintf_internal_r+0x185c>
   21094:	d9402d17 	ldw	r5,180(sp)
   21098:	d9002f17 	ldw	r4,188(sp)
   2109c:	28800017 	ldw	r2,0(r5)
   210a0:	2007d7fa 	srai	r3,r4,31
   210a4:	29400104 	addi	r5,r5,4
   210a8:	d9402d15 	stw	r5,180(sp)
   210ac:	11000015 	stw	r4,0(r2)
   210b0:	10c00115 	stw	r3,4(r2)
   210b4:	003ce506 	br	2044c <__alt_data_end+0xfffe044c>
   210b8:	d8c02d17 	ldw	r3,180(sp)
   210bc:	d9002d17 	ldw	r4,180(sp)
   210c0:	d8002785 	stb	zero,158(sp)
   210c4:	18800017 	ldw	r2,0(r3)
   210c8:	21000104 	addi	r4,r4,4
   210cc:	00c00044 	movi	r3,1
   210d0:	d8c02a15 	stw	r3,168(sp)
   210d4:	d8801405 	stb	r2,80(sp)
   210d8:	d9002d15 	stw	r4,180(sp)
   210dc:	d8c02e15 	stw	r3,184(sp)
   210e0:	d8002915 	stw	zero,164(sp)
   210e4:	d8003215 	stw	zero,200(sp)
   210e8:	dc001404 	addi	r16,sp,80
   210ec:	0039883a 	mov	fp,zero
   210f0:	003e7206 	br	20abc <__alt_data_end+0xfffe0abc>
   210f4:	010000f4 	movhi	r4,3
   210f8:	213c8604 	addi	r4,r4,-3560
   210fc:	0039883a 	mov	fp,zero
   21100:	d9003915 	stw	r4,228(sp)
   21104:	04401e04 	movi	r17,120
   21108:	003f8206 	br	20f14 <__alt_data_end+0xfffe0f14>
   2110c:	18c03fcc 	andi	r3,r3,255
   21110:	1805061e 	bne	r3,zero,2252c <___vfprintf_internal_r+0x21c0>
   21114:	883d9126 	beq	r17,zero,2075c <__alt_data_end+0xfffe075c>
   21118:	00c00044 	movi	r3,1
   2111c:	d8c02a15 	stw	r3,168(sp)
   21120:	dc401405 	stb	r17,80(sp)
   21124:	d8002785 	stb	zero,158(sp)
   21128:	003fec06 	br	210dc <__alt_data_end+0xfffe10dc>
   2112c:	014000f4 	movhi	r5,3
   21130:	297c8604 	addi	r5,r5,-3560
   21134:	d9403915 	stw	r5,228(sp)
   21138:	d8c02d15 	stw	r3,180(sp)
   2113c:	1025883a 	mov	r18,r2
   21140:	04401e04 	movi	r17,120
   21144:	9d84b03a 	or	r2,r19,r22
   21148:	1000fc1e 	bne	r2,zero,2153c <___vfprintf_internal_r+0x11d0>
   2114c:	0039883a 	mov	fp,zero
   21150:	00800084 	movi	r2,2
   21154:	10803fcc 	andi	r2,r2,255
   21158:	00c00044 	movi	r3,1
   2115c:	10c20f26 	beq	r2,r3,2199c <___vfprintf_internal_r+0x1630>
   21160:	00c00084 	movi	r3,2
   21164:	10fd6326 	beq	r2,r3,206f4 <__alt_data_end+0xfffe06f4>
   21168:	003e2d06 	br	20a20 <__alt_data_end+0xfffe0a20>
   2116c:	d8c02017 	ldw	r3,128(sp)
   21170:	003e9306 	br	20bc0 <__alt_data_end+0xfffe0bc0>
   21174:	00801944 	movi	r2,101
   21178:	14407e0e 	bge	r2,r17,21374 <___vfprintf_internal_r+0x1008>
   2117c:	d9003617 	ldw	r4,216(sp)
   21180:	d9403817 	ldw	r5,224(sp)
   21184:	000d883a 	mov	r6,zero
   21188:	000f883a 	mov	r7,zero
   2118c:	d8c03c15 	stw	r3,240(sp)
   21190:	da003d15 	stw	r8,244(sp)
   21194:	002b6780 	call	2b678 <__eqdf2>
   21198:	d8c03c17 	ldw	r3,240(sp)
   2119c:	da003d17 	ldw	r8,244(sp)
   211a0:	1000f71e 	bne	r2,zero,21580 <___vfprintf_internal_r+0x1214>
   211a4:	d8801f17 	ldw	r2,124(sp)
   211a8:	010000f4 	movhi	r4,3
   211ac:	213c8d04 	addi	r4,r4,-3532
   211b0:	18c00044 	addi	r3,r3,1
   211b4:	10800044 	addi	r2,r2,1
   211b8:	41000015 	stw	r4,0(r8)
   211bc:	01000044 	movi	r4,1
   211c0:	41000115 	stw	r4,4(r8)
   211c4:	d8c02015 	stw	r3,128(sp)
   211c8:	d8801f15 	stw	r2,124(sp)
   211cc:	010001c4 	movi	r4,7
   211d0:	2082b816 	blt	r4,r2,21cb4 <___vfprintf_internal_r+0x1948>
   211d4:	42000204 	addi	r8,r8,8
   211d8:	d8802617 	ldw	r2,152(sp)
   211dc:	d9403317 	ldw	r5,204(sp)
   211e0:	11400216 	blt	r2,r5,211ec <___vfprintf_internal_r+0xe80>
   211e4:	9080004c 	andi	r2,r18,1
   211e8:	103ed526 	beq	r2,zero,20d40 <__alt_data_end+0xfffe0d40>
   211ec:	d8803717 	ldw	r2,220(sp)
   211f0:	d9003417 	ldw	r4,208(sp)
   211f4:	d9403717 	ldw	r5,220(sp)
   211f8:	1887883a 	add	r3,r3,r2
   211fc:	d8801f17 	ldw	r2,124(sp)
   21200:	41000015 	stw	r4,0(r8)
   21204:	41400115 	stw	r5,4(r8)
   21208:	10800044 	addi	r2,r2,1
   2120c:	d8c02015 	stw	r3,128(sp)
   21210:	d8801f15 	stw	r2,124(sp)
   21214:	010001c4 	movi	r4,7
   21218:	20832916 	blt	r4,r2,21ec0 <___vfprintf_internal_r+0x1b54>
   2121c:	42000204 	addi	r8,r8,8
   21220:	d8803317 	ldw	r2,204(sp)
   21224:	143fffc4 	addi	r16,r2,-1
   21228:	043ec50e 	bge	zero,r16,20d40 <__alt_data_end+0xfffe0d40>
   2122c:	04400404 	movi	r17,16
   21230:	d8801f17 	ldw	r2,124(sp)
   21234:	8c00880e 	bge	r17,r16,21458 <___vfprintf_internal_r+0x10ec>
   21238:	014000f4 	movhi	r5,3
   2123c:	297c8d84 	addi	r5,r5,-3530
   21240:	d9402b15 	stw	r5,172(sp)
   21244:	058001c4 	movi	r22,7
   21248:	dcc02c17 	ldw	r19,176(sp)
   2124c:	00000306 	br	2125c <___vfprintf_internal_r+0xef0>
   21250:	42000204 	addi	r8,r8,8
   21254:	843ffc04 	addi	r16,r16,-16
   21258:	8c00820e 	bge	r17,r16,21464 <___vfprintf_internal_r+0x10f8>
   2125c:	18c00404 	addi	r3,r3,16
   21260:	10800044 	addi	r2,r2,1
   21264:	45000015 	stw	r20,0(r8)
   21268:	44400115 	stw	r17,4(r8)
   2126c:	d8c02015 	stw	r3,128(sp)
   21270:	d8801f15 	stw	r2,124(sp)
   21274:	b0bff60e 	bge	r22,r2,21250 <__alt_data_end+0xfffe1250>
   21278:	d9801e04 	addi	r6,sp,120
   2127c:	b80b883a 	mov	r5,r23
   21280:	9809883a 	mov	r4,r19
   21284:	0026e840 	call	26e84 <__sprint_r>
   21288:	103d3a1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   2128c:	d8c02017 	ldw	r3,128(sp)
   21290:	d8801f17 	ldw	r2,124(sp)
   21294:	da000404 	addi	r8,sp,16
   21298:	003fee06 	br	21254 <__alt_data_end+0xfffe1254>
   2129c:	d9403117 	ldw	r5,196(sp)
   212a0:	d8802a17 	ldw	r2,168(sp)
   212a4:	28adc83a 	sub	r22,r5,r2
   212a8:	05be630e 	bge	zero,r22,20c38 <__alt_data_end+0xfffe0c38>
   212ac:	07000404 	movi	fp,16
   212b0:	d8801f17 	ldw	r2,124(sp)
   212b4:	e5838f0e 	bge	fp,r22,220f4 <___vfprintf_internal_r+0x1d88>
   212b8:	014000f4 	movhi	r5,3
   212bc:	297c8d84 	addi	r5,r5,-3530
   212c0:	dc403015 	stw	r17,192(sp)
   212c4:	d9402b15 	stw	r5,172(sp)
   212c8:	b023883a 	mov	r17,r22
   212cc:	04c001c4 	movi	r19,7
   212d0:	a82d883a 	mov	r22,r21
   212d4:	902b883a 	mov	r21,r18
   212d8:	8025883a 	mov	r18,r16
   212dc:	dc002c17 	ldw	r16,176(sp)
   212e0:	00000306 	br	212f0 <___vfprintf_internal_r+0xf84>
   212e4:	8c7ffc04 	addi	r17,r17,-16
   212e8:	42000204 	addi	r8,r8,8
   212ec:	e440110e 	bge	fp,r17,21334 <___vfprintf_internal_r+0xfc8>
   212f0:	18c00404 	addi	r3,r3,16
   212f4:	10800044 	addi	r2,r2,1
   212f8:	45000015 	stw	r20,0(r8)
   212fc:	47000115 	stw	fp,4(r8)
   21300:	d8c02015 	stw	r3,128(sp)
   21304:	d8801f15 	stw	r2,124(sp)
   21308:	98bff60e 	bge	r19,r2,212e4 <__alt_data_end+0xfffe12e4>
   2130c:	d9801e04 	addi	r6,sp,120
   21310:	b80b883a 	mov	r5,r23
   21314:	8009883a 	mov	r4,r16
   21318:	0026e840 	call	26e84 <__sprint_r>
   2131c:	103d151e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21320:	8c7ffc04 	addi	r17,r17,-16
   21324:	d8c02017 	ldw	r3,128(sp)
   21328:	d8801f17 	ldw	r2,124(sp)
   2132c:	da000404 	addi	r8,sp,16
   21330:	e47fef16 	blt	fp,r17,212f0 <__alt_data_end+0xfffe12f0>
   21334:	9021883a 	mov	r16,r18
   21338:	a825883a 	mov	r18,r21
   2133c:	b02b883a 	mov	r21,r22
   21340:	882d883a 	mov	r22,r17
   21344:	dc403017 	ldw	r17,192(sp)
   21348:	d9002b17 	ldw	r4,172(sp)
   2134c:	1d87883a 	add	r3,r3,r22
   21350:	10800044 	addi	r2,r2,1
   21354:	41000015 	stw	r4,0(r8)
   21358:	45800115 	stw	r22,4(r8)
   2135c:	d8c02015 	stw	r3,128(sp)
   21360:	d8801f15 	stw	r2,124(sp)
   21364:	010001c4 	movi	r4,7
   21368:	20818e16 	blt	r4,r2,219a4 <___vfprintf_internal_r+0x1638>
   2136c:	42000204 	addi	r8,r8,8
   21370:	003e3106 	br	20c38 <__alt_data_end+0xfffe0c38>
   21374:	d9403317 	ldw	r5,204(sp)
   21378:	00800044 	movi	r2,1
   2137c:	18c00044 	addi	r3,r3,1
   21380:	1141530e 	bge	r2,r5,218d0 <___vfprintf_internal_r+0x1564>
   21384:	dc401f17 	ldw	r17,124(sp)
   21388:	00800044 	movi	r2,1
   2138c:	40800115 	stw	r2,4(r8)
   21390:	8c400044 	addi	r17,r17,1
   21394:	44000015 	stw	r16,0(r8)
   21398:	d8c02015 	stw	r3,128(sp)
   2139c:	dc401f15 	stw	r17,124(sp)
   213a0:	008001c4 	movi	r2,7
   213a4:	14416b16 	blt	r2,r17,21954 <___vfprintf_internal_r+0x15e8>
   213a8:	42000204 	addi	r8,r8,8
   213ac:	d8803717 	ldw	r2,220(sp)
   213b0:	d9003417 	ldw	r4,208(sp)
   213b4:	8c400044 	addi	r17,r17,1
   213b8:	10c7883a 	add	r3,r2,r3
   213bc:	40800115 	stw	r2,4(r8)
   213c0:	41000015 	stw	r4,0(r8)
   213c4:	d8c02015 	stw	r3,128(sp)
   213c8:	dc401f15 	stw	r17,124(sp)
   213cc:	008001c4 	movi	r2,7
   213d0:	14416916 	blt	r2,r17,21978 <___vfprintf_internal_r+0x160c>
   213d4:	45800204 	addi	r22,r8,8
   213d8:	d9003617 	ldw	r4,216(sp)
   213dc:	d9403817 	ldw	r5,224(sp)
   213e0:	000d883a 	mov	r6,zero
   213e4:	000f883a 	mov	r7,zero
   213e8:	d8c03c15 	stw	r3,240(sp)
   213ec:	002b6780 	call	2b678 <__eqdf2>
   213f0:	d8c03c17 	ldw	r3,240(sp)
   213f4:	1000bc26 	beq	r2,zero,216e8 <___vfprintf_internal_r+0x137c>
   213f8:	d9403317 	ldw	r5,204(sp)
   213fc:	84000044 	addi	r16,r16,1
   21400:	8c400044 	addi	r17,r17,1
   21404:	28bfffc4 	addi	r2,r5,-1
   21408:	1887883a 	add	r3,r3,r2
   2140c:	b0800115 	stw	r2,4(r22)
   21410:	b4000015 	stw	r16,0(r22)
   21414:	d8c02015 	stw	r3,128(sp)
   21418:	dc401f15 	stw	r17,124(sp)
   2141c:	008001c4 	movi	r2,7
   21420:	14414316 	blt	r2,r17,21930 <___vfprintf_internal_r+0x15c4>
   21424:	b5800204 	addi	r22,r22,8
   21428:	d9003a17 	ldw	r4,232(sp)
   2142c:	df0022c4 	addi	fp,sp,139
   21430:	8c400044 	addi	r17,r17,1
   21434:	20c7883a 	add	r3,r4,r3
   21438:	b7000015 	stw	fp,0(r22)
   2143c:	b1000115 	stw	r4,4(r22)
   21440:	d8c02015 	stw	r3,128(sp)
   21444:	dc401f15 	stw	r17,124(sp)
   21448:	008001c4 	movi	r2,7
   2144c:	14400e16 	blt	r2,r17,21488 <___vfprintf_internal_r+0x111c>
   21450:	b2000204 	addi	r8,r22,8
   21454:	003e3a06 	br	20d40 <__alt_data_end+0xfffe0d40>
   21458:	010000f4 	movhi	r4,3
   2145c:	213c8d84 	addi	r4,r4,-3530
   21460:	d9002b15 	stw	r4,172(sp)
   21464:	d9002b17 	ldw	r4,172(sp)
   21468:	1c07883a 	add	r3,r3,r16
   2146c:	44000115 	stw	r16,4(r8)
   21470:	41000015 	stw	r4,0(r8)
   21474:	10800044 	addi	r2,r2,1
   21478:	d8c02015 	stw	r3,128(sp)
   2147c:	d8801f15 	stw	r2,124(sp)
   21480:	010001c4 	movi	r4,7
   21484:	20be2d0e 	bge	r4,r2,20d3c <__alt_data_end+0xfffe0d3c>
   21488:	d9002c17 	ldw	r4,176(sp)
   2148c:	d9801e04 	addi	r6,sp,120
   21490:	b80b883a 	mov	r5,r23
   21494:	0026e840 	call	26e84 <__sprint_r>
   21498:	103cb61e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   2149c:	d8c02017 	ldw	r3,128(sp)
   214a0:	da000404 	addi	r8,sp,16
   214a4:	003e2606 	br	20d40 <__alt_data_end+0xfffe0d40>
   214a8:	d9002c17 	ldw	r4,176(sp)
   214ac:	d9801e04 	addi	r6,sp,120
   214b0:	b80b883a 	mov	r5,r23
   214b4:	0026e840 	call	26e84 <__sprint_r>
   214b8:	103e5d26 	beq	r2,zero,20e30 <__alt_data_end+0xfffe0e30>
   214bc:	003cad06 	br	20774 <__alt_data_end+0xfffe0774>
   214c0:	d9002c17 	ldw	r4,176(sp)
   214c4:	d9801e04 	addi	r6,sp,120
   214c8:	b80b883a 	mov	r5,r23
   214cc:	0026e840 	call	26e84 <__sprint_r>
   214d0:	103ca81e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   214d4:	d8c02017 	ldw	r3,128(sp)
   214d8:	da000404 	addi	r8,sp,16
   214dc:	003e0b06 	br	20d0c <__alt_data_end+0xfffe0d0c>
   214e0:	d9002c17 	ldw	r4,176(sp)
   214e4:	d9801e04 	addi	r6,sp,120
   214e8:	b80b883a 	mov	r5,r23
   214ec:	0026e840 	call	26e84 <__sprint_r>
   214f0:	103ca01e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   214f4:	d8c02017 	ldw	r3,128(sp)
   214f8:	da000404 	addi	r8,sp,16
   214fc:	003dbd06 	br	20bf4 <__alt_data_end+0xfffe0bf4>
   21500:	d9002c17 	ldw	r4,176(sp)
   21504:	d9801e04 	addi	r6,sp,120
   21508:	b80b883a 	mov	r5,r23
   2150c:	0026e840 	call	26e84 <__sprint_r>
   21510:	103c981e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21514:	d8c02017 	ldw	r3,128(sp)
   21518:	da000404 	addi	r8,sp,16
   2151c:	003dc306 	br	20c2c <__alt_data_end+0xfffe0c2c>
   21520:	d8802917 	ldw	r2,164(sp)
   21524:	d8002785 	stb	zero,158(sp)
   21528:	103f0616 	blt	r2,zero,21144 <__alt_data_end+0xfffe1144>
   2152c:	00ffdfc4 	movi	r3,-129
   21530:	9d84b03a 	or	r2,r19,r22
   21534:	90e4703a 	and	r18,r18,r3
   21538:	103c6b26 	beq	r2,zero,206e8 <__alt_data_end+0xfffe06e8>
   2153c:	0039883a 	mov	fp,zero
   21540:	003e7406 	br	20f14 <__alt_data_end+0xfffe0f14>
   21544:	9080040c 	andi	r2,r18,16
   21548:	1001b326 	beq	r2,zero,21c18 <___vfprintf_internal_r+0x18ac>
   2154c:	d9002d17 	ldw	r4,180(sp)
   21550:	d9402917 	ldw	r5,164(sp)
   21554:	d8002785 	stb	zero,158(sp)
   21558:	20800104 	addi	r2,r4,4
   2155c:	24c00017 	ldw	r19,0(r4)
   21560:	002d883a 	mov	r22,zero
   21564:	2801b516 	blt	r5,zero,21c3c <___vfprintf_internal_r+0x18d0>
   21568:	00ffdfc4 	movi	r3,-129
   2156c:	d8802d15 	stw	r2,180(sp)
   21570:	90e4703a 	and	r18,r18,r3
   21574:	983d2726 	beq	r19,zero,20a14 <__alt_data_end+0xfffe0a14>
   21578:	0039883a 	mov	fp,zero
   2157c:	003d2a06 	br	20a28 <__alt_data_end+0xfffe0a28>
   21580:	dc402617 	ldw	r17,152(sp)
   21584:	0441d30e 	bge	zero,r17,21cd4 <___vfprintf_internal_r+0x1968>
   21588:	dc403217 	ldw	r17,200(sp)
   2158c:	d8803317 	ldw	r2,204(sp)
   21590:	1440010e 	bge	r2,r17,21598 <___vfprintf_internal_r+0x122c>
   21594:	1023883a 	mov	r17,r2
   21598:	04400a0e 	bge	zero,r17,215c4 <___vfprintf_internal_r+0x1258>
   2159c:	d8801f17 	ldw	r2,124(sp)
   215a0:	1c47883a 	add	r3,r3,r17
   215a4:	44000015 	stw	r16,0(r8)
   215a8:	10800044 	addi	r2,r2,1
   215ac:	44400115 	stw	r17,4(r8)
   215b0:	d8c02015 	stw	r3,128(sp)
   215b4:	d8801f15 	stw	r2,124(sp)
   215b8:	010001c4 	movi	r4,7
   215bc:	20826516 	blt	r4,r2,21f54 <___vfprintf_internal_r+0x1be8>
   215c0:	42000204 	addi	r8,r8,8
   215c4:	88026116 	blt	r17,zero,21f4c <___vfprintf_internal_r+0x1be0>
   215c8:	d9003217 	ldw	r4,200(sp)
   215cc:	2463c83a 	sub	r17,r4,r17
   215d0:	04407b0e 	bge	zero,r17,217c0 <___vfprintf_internal_r+0x1454>
   215d4:	05800404 	movi	r22,16
   215d8:	d8801f17 	ldw	r2,124(sp)
   215dc:	b4419d0e 	bge	r22,r17,21c54 <___vfprintf_internal_r+0x18e8>
   215e0:	010000f4 	movhi	r4,3
   215e4:	213c8d84 	addi	r4,r4,-3530
   215e8:	d9002b15 	stw	r4,172(sp)
   215ec:	070001c4 	movi	fp,7
   215f0:	dcc02c17 	ldw	r19,176(sp)
   215f4:	00000306 	br	21604 <___vfprintf_internal_r+0x1298>
   215f8:	42000204 	addi	r8,r8,8
   215fc:	8c7ffc04 	addi	r17,r17,-16
   21600:	b441970e 	bge	r22,r17,21c60 <___vfprintf_internal_r+0x18f4>
   21604:	18c00404 	addi	r3,r3,16
   21608:	10800044 	addi	r2,r2,1
   2160c:	45000015 	stw	r20,0(r8)
   21610:	45800115 	stw	r22,4(r8)
   21614:	d8c02015 	stw	r3,128(sp)
   21618:	d8801f15 	stw	r2,124(sp)
   2161c:	e0bff60e 	bge	fp,r2,215f8 <__alt_data_end+0xfffe15f8>
   21620:	d9801e04 	addi	r6,sp,120
   21624:	b80b883a 	mov	r5,r23
   21628:	9809883a 	mov	r4,r19
   2162c:	0026e840 	call	26e84 <__sprint_r>
   21630:	103c501e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21634:	d8c02017 	ldw	r3,128(sp)
   21638:	d8801f17 	ldw	r2,124(sp)
   2163c:	da000404 	addi	r8,sp,16
   21640:	003fee06 	br	215fc <__alt_data_end+0xfffe15fc>
   21644:	d9002c17 	ldw	r4,176(sp)
   21648:	d9801e04 	addi	r6,sp,120
   2164c:	b80b883a 	mov	r5,r23
   21650:	0026e840 	call	26e84 <__sprint_r>
   21654:	103c471e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21658:	d8c02017 	ldw	r3,128(sp)
   2165c:	df002787 	ldb	fp,158(sp)
   21660:	da000404 	addi	r8,sp,16
   21664:	003d5606 	br	20bc0 <__alt_data_end+0xfffe0bc0>
   21668:	9080040c 	andi	r2,r18,16
   2166c:	10016126 	beq	r2,zero,21bf4 <___vfprintf_internal_r+0x1888>
   21670:	d8802d17 	ldw	r2,180(sp)
   21674:	14c00017 	ldw	r19,0(r2)
   21678:	10800104 	addi	r2,r2,4
   2167c:	d8802d15 	stw	r2,180(sp)
   21680:	982dd7fa 	srai	r22,r19,31
   21684:	b005883a 	mov	r2,r22
   21688:	003c8206 	br	20894 <__alt_data_end+0xfffe0894>
   2168c:	9080040c 	andi	r2,r18,16
   21690:	10003526 	beq	r2,zero,21768 <___vfprintf_internal_r+0x13fc>
   21694:	d9402d17 	ldw	r5,180(sp)
   21698:	d8c02917 	ldw	r3,164(sp)
   2169c:	d8002785 	stb	zero,158(sp)
   216a0:	28800104 	addi	r2,r5,4
   216a4:	2cc00017 	ldw	r19,0(r5)
   216a8:	002d883a 	mov	r22,zero
   216ac:	18003716 	blt	r3,zero,2178c <___vfprintf_internal_r+0x1420>
   216b0:	00ffdfc4 	movi	r3,-129
   216b4:	d8802d15 	stw	r2,180(sp)
   216b8:	90e4703a 	and	r18,r18,r3
   216bc:	0039883a 	mov	fp,zero
   216c0:	983df326 	beq	r19,zero,20e90 <__alt_data_end+0xfffe0e90>
   216c4:	00800244 	movi	r2,9
   216c8:	14fc7b36 	bltu	r2,r19,208b8 <__alt_data_end+0xfffe08b8>
   216cc:	d8c02817 	ldw	r3,160(sp)
   216d0:	dc001dc4 	addi	r16,sp,119
   216d4:	9cc00c04 	addi	r19,r19,48
   216d8:	1c07c83a 	sub	r3,r3,r16
   216dc:	dcc01dc5 	stb	r19,119(sp)
   216e0:	d8c02e15 	stw	r3,184(sp)
   216e4:	003ce806 	br	20a88 <__alt_data_end+0xfffe0a88>
   216e8:	d8803317 	ldw	r2,204(sp)
   216ec:	143fffc4 	addi	r16,r2,-1
   216f0:	043f4d0e 	bge	zero,r16,21428 <__alt_data_end+0xfffe1428>
   216f4:	07000404 	movi	fp,16
   216f8:	e400810e 	bge	fp,r16,21900 <___vfprintf_internal_r+0x1594>
   216fc:	014000f4 	movhi	r5,3
   21700:	297c8d84 	addi	r5,r5,-3530
   21704:	d9402b15 	stw	r5,172(sp)
   21708:	01c001c4 	movi	r7,7
   2170c:	dcc02c17 	ldw	r19,176(sp)
   21710:	00000306 	br	21720 <___vfprintf_internal_r+0x13b4>
   21714:	b5800204 	addi	r22,r22,8
   21718:	843ffc04 	addi	r16,r16,-16
   2171c:	e4007b0e 	bge	fp,r16,2190c <___vfprintf_internal_r+0x15a0>
   21720:	18c00404 	addi	r3,r3,16
   21724:	8c400044 	addi	r17,r17,1
   21728:	b5000015 	stw	r20,0(r22)
   2172c:	b7000115 	stw	fp,4(r22)
   21730:	d8c02015 	stw	r3,128(sp)
   21734:	dc401f15 	stw	r17,124(sp)
   21738:	3c7ff60e 	bge	r7,r17,21714 <__alt_data_end+0xfffe1714>
   2173c:	d9801e04 	addi	r6,sp,120
   21740:	b80b883a 	mov	r5,r23
   21744:	9809883a 	mov	r4,r19
   21748:	d9c03c15 	stw	r7,240(sp)
   2174c:	0026e840 	call	26e84 <__sprint_r>
   21750:	d9c03c17 	ldw	r7,240(sp)
   21754:	103c071e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21758:	d8c02017 	ldw	r3,128(sp)
   2175c:	dc401f17 	ldw	r17,124(sp)
   21760:	dd800404 	addi	r22,sp,16
   21764:	003fec06 	br	21718 <__alt_data_end+0xfffe1718>
   21768:	9080100c 	andi	r2,r18,64
   2176c:	d8002785 	stb	zero,158(sp)
   21770:	10010e26 	beq	r2,zero,21bac <___vfprintf_internal_r+0x1840>
   21774:	d9002d17 	ldw	r4,180(sp)
   21778:	d9402917 	ldw	r5,164(sp)
   2177c:	002d883a 	mov	r22,zero
   21780:	20800104 	addi	r2,r4,4
   21784:	24c0000b 	ldhu	r19,0(r4)
   21788:	283fc90e 	bge	r5,zero,216b0 <__alt_data_end+0xfffe16b0>
   2178c:	d8802d15 	stw	r2,180(sp)
   21790:	0039883a 	mov	fp,zero
   21794:	9d84b03a 	or	r2,r19,r22
   21798:	103c461e 	bne	r2,zero,208b4 <__alt_data_end+0xfffe08b4>
   2179c:	00800044 	movi	r2,1
   217a0:	003e6c06 	br	21154 <__alt_data_end+0xfffe1154>
   217a4:	d9002c17 	ldw	r4,176(sp)
   217a8:	d9801e04 	addi	r6,sp,120
   217ac:	b80b883a 	mov	r5,r23
   217b0:	0026e840 	call	26e84 <__sprint_r>
   217b4:	103bef1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   217b8:	d8c02017 	ldw	r3,128(sp)
   217bc:	da000404 	addi	r8,sp,16
   217c0:	d9003217 	ldw	r4,200(sp)
   217c4:	d8802617 	ldw	r2,152(sp)
   217c8:	d9403317 	ldw	r5,204(sp)
   217cc:	8123883a 	add	r17,r16,r4
   217d0:	11400216 	blt	r2,r5,217dc <___vfprintf_internal_r+0x1470>
   217d4:	9100004c 	andi	r4,r18,1
   217d8:	20000d26 	beq	r4,zero,21810 <___vfprintf_internal_r+0x14a4>
   217dc:	d9003717 	ldw	r4,220(sp)
   217e0:	d9403417 	ldw	r5,208(sp)
   217e4:	1907883a 	add	r3,r3,r4
   217e8:	d9001f17 	ldw	r4,124(sp)
   217ec:	41400015 	stw	r5,0(r8)
   217f0:	d9403717 	ldw	r5,220(sp)
   217f4:	21000044 	addi	r4,r4,1
   217f8:	d8c02015 	stw	r3,128(sp)
   217fc:	41400115 	stw	r5,4(r8)
   21800:	d9001f15 	stw	r4,124(sp)
   21804:	014001c4 	movi	r5,7
   21808:	2901e816 	blt	r5,r4,21fac <___vfprintf_internal_r+0x1c40>
   2180c:	42000204 	addi	r8,r8,8
   21810:	d9003317 	ldw	r4,204(sp)
   21814:	8121883a 	add	r16,r16,r4
   21818:	2085c83a 	sub	r2,r4,r2
   2181c:	8461c83a 	sub	r16,r16,r17
   21820:	1400010e 	bge	r2,r16,21828 <___vfprintf_internal_r+0x14bc>
   21824:	1021883a 	mov	r16,r2
   21828:	04000a0e 	bge	zero,r16,21854 <___vfprintf_internal_r+0x14e8>
   2182c:	d9001f17 	ldw	r4,124(sp)
   21830:	1c07883a 	add	r3,r3,r16
   21834:	44400015 	stw	r17,0(r8)
   21838:	21000044 	addi	r4,r4,1
   2183c:	44000115 	stw	r16,4(r8)
   21840:	d8c02015 	stw	r3,128(sp)
   21844:	d9001f15 	stw	r4,124(sp)
   21848:	014001c4 	movi	r5,7
   2184c:	2901fb16 	blt	r5,r4,2203c <___vfprintf_internal_r+0x1cd0>
   21850:	42000204 	addi	r8,r8,8
   21854:	8001f716 	blt	r16,zero,22034 <___vfprintf_internal_r+0x1cc8>
   21858:	1421c83a 	sub	r16,r2,r16
   2185c:	043d380e 	bge	zero,r16,20d40 <__alt_data_end+0xfffe0d40>
   21860:	04400404 	movi	r17,16
   21864:	d8801f17 	ldw	r2,124(sp)
   21868:	8c3efb0e 	bge	r17,r16,21458 <__alt_data_end+0xfffe1458>
   2186c:	014000f4 	movhi	r5,3
   21870:	297c8d84 	addi	r5,r5,-3530
   21874:	d9402b15 	stw	r5,172(sp)
   21878:	058001c4 	movi	r22,7
   2187c:	dcc02c17 	ldw	r19,176(sp)
   21880:	00000306 	br	21890 <___vfprintf_internal_r+0x1524>
   21884:	42000204 	addi	r8,r8,8
   21888:	843ffc04 	addi	r16,r16,-16
   2188c:	8c3ef50e 	bge	r17,r16,21464 <__alt_data_end+0xfffe1464>
   21890:	18c00404 	addi	r3,r3,16
   21894:	10800044 	addi	r2,r2,1
   21898:	45000015 	stw	r20,0(r8)
   2189c:	44400115 	stw	r17,4(r8)
   218a0:	d8c02015 	stw	r3,128(sp)
   218a4:	d8801f15 	stw	r2,124(sp)
   218a8:	b0bff60e 	bge	r22,r2,21884 <__alt_data_end+0xfffe1884>
   218ac:	d9801e04 	addi	r6,sp,120
   218b0:	b80b883a 	mov	r5,r23
   218b4:	9809883a 	mov	r4,r19
   218b8:	0026e840 	call	26e84 <__sprint_r>
   218bc:	103bad1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   218c0:	d8c02017 	ldw	r3,128(sp)
   218c4:	d8801f17 	ldw	r2,124(sp)
   218c8:	da000404 	addi	r8,sp,16
   218cc:	003fee06 	br	21888 <__alt_data_end+0xfffe1888>
   218d0:	9088703a 	and	r4,r18,r2
   218d4:	203eab1e 	bne	r4,zero,21384 <__alt_data_end+0xfffe1384>
   218d8:	dc401f17 	ldw	r17,124(sp)
   218dc:	40800115 	stw	r2,4(r8)
   218e0:	44000015 	stw	r16,0(r8)
   218e4:	8c400044 	addi	r17,r17,1
   218e8:	d8c02015 	stw	r3,128(sp)
   218ec:	dc401f15 	stw	r17,124(sp)
   218f0:	008001c4 	movi	r2,7
   218f4:	14400e16 	blt	r2,r17,21930 <___vfprintf_internal_r+0x15c4>
   218f8:	45800204 	addi	r22,r8,8
   218fc:	003eca06 	br	21428 <__alt_data_end+0xfffe1428>
   21900:	010000f4 	movhi	r4,3
   21904:	213c8d84 	addi	r4,r4,-3530
   21908:	d9002b15 	stw	r4,172(sp)
   2190c:	d8802b17 	ldw	r2,172(sp)
   21910:	1c07883a 	add	r3,r3,r16
   21914:	8c400044 	addi	r17,r17,1
   21918:	b0800015 	stw	r2,0(r22)
   2191c:	b4000115 	stw	r16,4(r22)
   21920:	d8c02015 	stw	r3,128(sp)
   21924:	dc401f15 	stw	r17,124(sp)
   21928:	008001c4 	movi	r2,7
   2192c:	147ebd0e 	bge	r2,r17,21424 <__alt_data_end+0xfffe1424>
   21930:	d9002c17 	ldw	r4,176(sp)
   21934:	d9801e04 	addi	r6,sp,120
   21938:	b80b883a 	mov	r5,r23
   2193c:	0026e840 	call	26e84 <__sprint_r>
   21940:	103b8c1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21944:	d8c02017 	ldw	r3,128(sp)
   21948:	dc401f17 	ldw	r17,124(sp)
   2194c:	dd800404 	addi	r22,sp,16
   21950:	003eb506 	br	21428 <__alt_data_end+0xfffe1428>
   21954:	d9002c17 	ldw	r4,176(sp)
   21958:	d9801e04 	addi	r6,sp,120
   2195c:	b80b883a 	mov	r5,r23
   21960:	0026e840 	call	26e84 <__sprint_r>
   21964:	103b831e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21968:	d8c02017 	ldw	r3,128(sp)
   2196c:	dc401f17 	ldw	r17,124(sp)
   21970:	da000404 	addi	r8,sp,16
   21974:	003e8d06 	br	213ac <__alt_data_end+0xfffe13ac>
   21978:	d9002c17 	ldw	r4,176(sp)
   2197c:	d9801e04 	addi	r6,sp,120
   21980:	b80b883a 	mov	r5,r23
   21984:	0026e840 	call	26e84 <__sprint_r>
   21988:	103b7a1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   2198c:	d8c02017 	ldw	r3,128(sp)
   21990:	dc401f17 	ldw	r17,124(sp)
   21994:	dd800404 	addi	r22,sp,16
   21998:	003e8f06 	br	213d8 <__alt_data_end+0xfffe13d8>
   2199c:	0027883a 	mov	r19,zero
   219a0:	003f4a06 	br	216cc <__alt_data_end+0xfffe16cc>
   219a4:	d9002c17 	ldw	r4,176(sp)
   219a8:	d9801e04 	addi	r6,sp,120
   219ac:	b80b883a 	mov	r5,r23
   219b0:	0026e840 	call	26e84 <__sprint_r>
   219b4:	103b6f1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   219b8:	d8c02017 	ldw	r3,128(sp)
   219bc:	da000404 	addi	r8,sp,16
   219c0:	003c9d06 	br	20c38 <__alt_data_end+0xfffe0c38>
   219c4:	04e7c83a 	sub	r19,zero,r19
   219c8:	9804c03a 	cmpne	r2,r19,zero
   219cc:	05adc83a 	sub	r22,zero,r22
   219d0:	b0adc83a 	sub	r22,r22,r2
   219d4:	d8802917 	ldw	r2,164(sp)
   219d8:	07000b44 	movi	fp,45
   219dc:	df002785 	stb	fp,158(sp)
   219e0:	10017b16 	blt	r2,zero,21fd0 <___vfprintf_internal_r+0x1c64>
   219e4:	00bfdfc4 	movi	r2,-129
   219e8:	90a4703a 	and	r18,r18,r2
   219ec:	003bb106 	br	208b4 <__alt_data_end+0xfffe08b4>
   219f0:	d9003617 	ldw	r4,216(sp)
   219f4:	d9403817 	ldw	r5,224(sp)
   219f8:	da003d15 	stw	r8,244(sp)
   219fc:	0026a100 	call	26a10 <__fpclassifyd>
   21a00:	da003d17 	ldw	r8,244(sp)
   21a04:	1000f026 	beq	r2,zero,21dc8 <___vfprintf_internal_r+0x1a5c>
   21a08:	d9002917 	ldw	r4,164(sp)
   21a0c:	05bff7c4 	movi	r22,-33
   21a10:	00bfffc4 	movi	r2,-1
   21a14:	8dac703a 	and	r22,r17,r22
   21a18:	20820026 	beq	r4,r2,2221c <___vfprintf_internal_r+0x1eb0>
   21a1c:	008011c4 	movi	r2,71
   21a20:	b081f726 	beq	r22,r2,22200 <___vfprintf_internal_r+0x1e94>
   21a24:	d9003817 	ldw	r4,224(sp)
   21a28:	90c04014 	ori	r3,r18,256
   21a2c:	d8c02b15 	stw	r3,172(sp)
   21a30:	20021516 	blt	r4,zero,22288 <___vfprintf_internal_r+0x1f1c>
   21a34:	dcc03817 	ldw	r19,224(sp)
   21a38:	d8002a05 	stb	zero,168(sp)
   21a3c:	00801984 	movi	r2,102
   21a40:	8881f926 	beq	r17,r2,22228 <___vfprintf_internal_r+0x1ebc>
   21a44:	00801184 	movi	r2,70
   21a48:	88821c26 	beq	r17,r2,222bc <___vfprintf_internal_r+0x1f50>
   21a4c:	00801144 	movi	r2,69
   21a50:	b081ef26 	beq	r22,r2,22210 <___vfprintf_internal_r+0x1ea4>
   21a54:	d8c02917 	ldw	r3,164(sp)
   21a58:	d8802104 	addi	r2,sp,132
   21a5c:	d8800315 	stw	r2,12(sp)
   21a60:	d9403617 	ldw	r5,216(sp)
   21a64:	d8802504 	addi	r2,sp,148
   21a68:	d9002c17 	ldw	r4,176(sp)
   21a6c:	d8800215 	stw	r2,8(sp)
   21a70:	d8802604 	addi	r2,sp,152
   21a74:	d8c00015 	stw	r3,0(sp)
   21a78:	d8800115 	stw	r2,4(sp)
   21a7c:	01c00084 	movi	r7,2
   21a80:	980d883a 	mov	r6,r19
   21a84:	d8c03c15 	stw	r3,240(sp)
   21a88:	da003d15 	stw	r8,244(sp)
   21a8c:	00229900 	call	22990 <_dtoa_r>
   21a90:	1021883a 	mov	r16,r2
   21a94:	008019c4 	movi	r2,103
   21a98:	d8c03c17 	ldw	r3,240(sp)
   21a9c:	da003d17 	ldw	r8,244(sp)
   21aa0:	88817126 	beq	r17,r2,22068 <___vfprintf_internal_r+0x1cfc>
   21aa4:	008011c4 	movi	r2,71
   21aa8:	88829226 	beq	r17,r2,224f4 <___vfprintf_internal_r+0x2188>
   21aac:	80f9883a 	add	fp,r16,r3
   21ab0:	d9003617 	ldw	r4,216(sp)
   21ab4:	000d883a 	mov	r6,zero
   21ab8:	000f883a 	mov	r7,zero
   21abc:	980b883a 	mov	r5,r19
   21ac0:	da003d15 	stw	r8,244(sp)
   21ac4:	002b6780 	call	2b678 <__eqdf2>
   21ac8:	da003d17 	ldw	r8,244(sp)
   21acc:	10018d26 	beq	r2,zero,22104 <___vfprintf_internal_r+0x1d98>
   21ad0:	d8802117 	ldw	r2,132(sp)
   21ad4:	1700062e 	bgeu	r2,fp,21af0 <___vfprintf_internal_r+0x1784>
   21ad8:	01000c04 	movi	r4,48
   21adc:	10c00044 	addi	r3,r2,1
   21ae0:	d8c02115 	stw	r3,132(sp)
   21ae4:	11000005 	stb	r4,0(r2)
   21ae8:	d8802117 	ldw	r2,132(sp)
   21aec:	173ffb36 	bltu	r2,fp,21adc <__alt_data_end+0xfffe1adc>
   21af0:	1405c83a 	sub	r2,r2,r16
   21af4:	d8803315 	stw	r2,204(sp)
   21af8:	008011c4 	movi	r2,71
   21afc:	b0817626 	beq	r22,r2,220d8 <___vfprintf_internal_r+0x1d6c>
   21b00:	00801944 	movi	r2,101
   21b04:	1442810e 	bge	r2,r17,2250c <___vfprintf_internal_r+0x21a0>
   21b08:	d8c02617 	ldw	r3,152(sp)
   21b0c:	00801984 	movi	r2,102
   21b10:	d8c03215 	stw	r3,200(sp)
   21b14:	8881fe26 	beq	r17,r2,22310 <___vfprintf_internal_r+0x1fa4>
   21b18:	d8c03217 	ldw	r3,200(sp)
   21b1c:	d9003317 	ldw	r4,204(sp)
   21b20:	1901dd16 	blt	r3,r4,22298 <___vfprintf_internal_r+0x1f2c>
   21b24:	9480004c 	andi	r18,r18,1
   21b28:	90022b1e 	bne	r18,zero,223d8 <___vfprintf_internal_r+0x206c>
   21b2c:	1805883a 	mov	r2,r3
   21b30:	18028016 	blt	r3,zero,22534 <___vfprintf_internal_r+0x21c8>
   21b34:	d8c03217 	ldw	r3,200(sp)
   21b38:	044019c4 	movi	r17,103
   21b3c:	d8c02e15 	stw	r3,184(sp)
   21b40:	df002a07 	ldb	fp,168(sp)
   21b44:	e001531e 	bne	fp,zero,22094 <___vfprintf_internal_r+0x1d28>
   21b48:	df002783 	ldbu	fp,158(sp)
   21b4c:	d8802a15 	stw	r2,168(sp)
   21b50:	dc802b17 	ldw	r18,172(sp)
   21b54:	d8002915 	stw	zero,164(sp)
   21b58:	003bd106 	br	20aa0 <__alt_data_end+0xfffe0aa0>
   21b5c:	d8802d17 	ldw	r2,180(sp)
   21b60:	d8c02d17 	ldw	r3,180(sp)
   21b64:	d9002d17 	ldw	r4,180(sp)
   21b68:	10800017 	ldw	r2,0(r2)
   21b6c:	18c00117 	ldw	r3,4(r3)
   21b70:	21000204 	addi	r4,r4,8
   21b74:	d8803615 	stw	r2,216(sp)
   21b78:	d8c03815 	stw	r3,224(sp)
   21b7c:	d9002d15 	stw	r4,180(sp)
   21b80:	003b7506 	br	20958 <__alt_data_end+0xfffe0958>
   21b84:	ac400007 	ldb	r17,0(r21)
   21b88:	003a5906 	br	204f0 <__alt_data_end+0xfffe04f0>
   21b8c:	9080100c 	andi	r2,r18,64
   21b90:	1000a826 	beq	r2,zero,21e34 <___vfprintf_internal_r+0x1ac8>
   21b94:	d9002d17 	ldw	r4,180(sp)
   21b98:	002d883a 	mov	r22,zero
   21b9c:	24c0000b 	ldhu	r19,0(r4)
   21ba0:	21000104 	addi	r4,r4,4
   21ba4:	d9002d15 	stw	r4,180(sp)
   21ba8:	003ccb06 	br	20ed8 <__alt_data_end+0xfffe0ed8>
   21bac:	d8c02d17 	ldw	r3,180(sp)
   21bb0:	d9002917 	ldw	r4,164(sp)
   21bb4:	002d883a 	mov	r22,zero
   21bb8:	18800104 	addi	r2,r3,4
   21bbc:	1cc00017 	ldw	r19,0(r3)
   21bc0:	203ebb0e 	bge	r4,zero,216b0 <__alt_data_end+0xfffe16b0>
   21bc4:	003ef106 	br	2178c <__alt_data_end+0xfffe178c>
   21bc8:	9080040c 	andi	r2,r18,16
   21bcc:	1000921e 	bne	r2,zero,21e18 <___vfprintf_internal_r+0x1aac>
   21bd0:	9480100c 	andi	r18,r18,64
   21bd4:	90013926 	beq	r18,zero,220bc <___vfprintf_internal_r+0x1d50>
   21bd8:	d9002d17 	ldw	r4,180(sp)
   21bdc:	d9402f17 	ldw	r5,188(sp)
   21be0:	20800017 	ldw	r2,0(r4)
   21be4:	21000104 	addi	r4,r4,4
   21be8:	d9002d15 	stw	r4,180(sp)
   21bec:	1140000d 	sth	r5,0(r2)
   21bf0:	003a1606 	br	2044c <__alt_data_end+0xfffe044c>
   21bf4:	9080100c 	andi	r2,r18,64
   21bf8:	10008026 	beq	r2,zero,21dfc <___vfprintf_internal_r+0x1a90>
   21bfc:	d8c02d17 	ldw	r3,180(sp)
   21c00:	1cc0000f 	ldh	r19,0(r3)
   21c04:	18c00104 	addi	r3,r3,4
   21c08:	d8c02d15 	stw	r3,180(sp)
   21c0c:	982dd7fa 	srai	r22,r19,31
   21c10:	b005883a 	mov	r2,r22
   21c14:	003b1f06 	br	20894 <__alt_data_end+0xfffe0894>
   21c18:	9080100c 	andi	r2,r18,64
   21c1c:	d8002785 	stb	zero,158(sp)
   21c20:	10008a1e 	bne	r2,zero,21e4c <___vfprintf_internal_r+0x1ae0>
   21c24:	d9402d17 	ldw	r5,180(sp)
   21c28:	d8c02917 	ldw	r3,164(sp)
   21c2c:	002d883a 	mov	r22,zero
   21c30:	28800104 	addi	r2,r5,4
   21c34:	2cc00017 	ldw	r19,0(r5)
   21c38:	183e4b0e 	bge	r3,zero,21568 <__alt_data_end+0xfffe1568>
   21c3c:	9d86b03a 	or	r3,r19,r22
   21c40:	d8802d15 	stw	r2,180(sp)
   21c44:	183e4c1e 	bne	r3,zero,21578 <__alt_data_end+0xfffe1578>
   21c48:	0039883a 	mov	fp,zero
   21c4c:	0005883a 	mov	r2,zero
   21c50:	003d4006 	br	21154 <__alt_data_end+0xfffe1154>
   21c54:	014000f4 	movhi	r5,3
   21c58:	297c8d84 	addi	r5,r5,-3530
   21c5c:	d9402b15 	stw	r5,172(sp)
   21c60:	d9402b17 	ldw	r5,172(sp)
   21c64:	1c47883a 	add	r3,r3,r17
   21c68:	10800044 	addi	r2,r2,1
   21c6c:	41400015 	stw	r5,0(r8)
   21c70:	44400115 	stw	r17,4(r8)
   21c74:	d8c02015 	stw	r3,128(sp)
   21c78:	d8801f15 	stw	r2,124(sp)
   21c7c:	010001c4 	movi	r4,7
   21c80:	20bec816 	blt	r4,r2,217a4 <__alt_data_end+0xfffe17a4>
   21c84:	42000204 	addi	r8,r8,8
   21c88:	003ecd06 	br	217c0 <__alt_data_end+0xfffe17c0>
   21c8c:	d9002917 	ldw	r4,164(sp)
   21c90:	d8002785 	stb	zero,158(sp)
   21c94:	203d2d16 	blt	r4,zero,2114c <__alt_data_end+0xfffe114c>
   21c98:	00bfdfc4 	movi	r2,-129
   21c9c:	90a4703a 	and	r18,r18,r2
   21ca0:	003a9106 	br	206e8 <__alt_data_end+0xfffe06e8>
   21ca4:	010000f4 	movhi	r4,3
   21ca8:	213c8d84 	addi	r4,r4,-3530
   21cac:	d9002b15 	stw	r4,172(sp)
   21cb0:	003c0c06 	br	20ce4 <__alt_data_end+0xfffe0ce4>
   21cb4:	d9002c17 	ldw	r4,176(sp)
   21cb8:	d9801e04 	addi	r6,sp,120
   21cbc:	b80b883a 	mov	r5,r23
   21cc0:	0026e840 	call	26e84 <__sprint_r>
   21cc4:	103aab1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21cc8:	d8c02017 	ldw	r3,128(sp)
   21ccc:	da000404 	addi	r8,sp,16
   21cd0:	003d4106 	br	211d8 <__alt_data_end+0xfffe11d8>
   21cd4:	d8801f17 	ldw	r2,124(sp)
   21cd8:	014000f4 	movhi	r5,3
   21cdc:	01000044 	movi	r4,1
   21ce0:	18c00044 	addi	r3,r3,1
   21ce4:	10800044 	addi	r2,r2,1
   21ce8:	297c8d04 	addi	r5,r5,-3532
   21cec:	41000115 	stw	r4,4(r8)
   21cf0:	41400015 	stw	r5,0(r8)
   21cf4:	d8c02015 	stw	r3,128(sp)
   21cf8:	d8801f15 	stw	r2,124(sp)
   21cfc:	010001c4 	movi	r4,7
   21d00:	20805c16 	blt	r4,r2,21e74 <___vfprintf_internal_r+0x1b08>
   21d04:	42000204 	addi	r8,r8,8
   21d08:	8800041e 	bne	r17,zero,21d1c <___vfprintf_internal_r+0x19b0>
   21d0c:	d8803317 	ldw	r2,204(sp)
   21d10:	1000021e 	bne	r2,zero,21d1c <___vfprintf_internal_r+0x19b0>
   21d14:	9080004c 	andi	r2,r18,1
   21d18:	103c0926 	beq	r2,zero,20d40 <__alt_data_end+0xfffe0d40>
   21d1c:	d9003717 	ldw	r4,220(sp)
   21d20:	d8801f17 	ldw	r2,124(sp)
   21d24:	d9403417 	ldw	r5,208(sp)
   21d28:	20c7883a 	add	r3,r4,r3
   21d2c:	10800044 	addi	r2,r2,1
   21d30:	41000115 	stw	r4,4(r8)
   21d34:	41400015 	stw	r5,0(r8)
   21d38:	d8c02015 	stw	r3,128(sp)
   21d3c:	d8801f15 	stw	r2,124(sp)
   21d40:	010001c4 	movi	r4,7
   21d44:	20812116 	blt	r4,r2,221cc <___vfprintf_internal_r+0x1e60>
   21d48:	42000204 	addi	r8,r8,8
   21d4c:	0463c83a 	sub	r17,zero,r17
   21d50:	0440730e 	bge	zero,r17,21f20 <___vfprintf_internal_r+0x1bb4>
   21d54:	05800404 	movi	r22,16
   21d58:	b440860e 	bge	r22,r17,21f74 <___vfprintf_internal_r+0x1c08>
   21d5c:	014000f4 	movhi	r5,3
   21d60:	297c8d84 	addi	r5,r5,-3530
   21d64:	d9402b15 	stw	r5,172(sp)
   21d68:	070001c4 	movi	fp,7
   21d6c:	dcc02c17 	ldw	r19,176(sp)
   21d70:	00000306 	br	21d80 <___vfprintf_internal_r+0x1a14>
   21d74:	42000204 	addi	r8,r8,8
   21d78:	8c7ffc04 	addi	r17,r17,-16
   21d7c:	b440800e 	bge	r22,r17,21f80 <___vfprintf_internal_r+0x1c14>
   21d80:	18c00404 	addi	r3,r3,16
   21d84:	10800044 	addi	r2,r2,1
   21d88:	45000015 	stw	r20,0(r8)
   21d8c:	45800115 	stw	r22,4(r8)
   21d90:	d8c02015 	stw	r3,128(sp)
   21d94:	d8801f15 	stw	r2,124(sp)
   21d98:	e0bff60e 	bge	fp,r2,21d74 <__alt_data_end+0xfffe1d74>
   21d9c:	d9801e04 	addi	r6,sp,120
   21da0:	b80b883a 	mov	r5,r23
   21da4:	9809883a 	mov	r4,r19
   21da8:	0026e840 	call	26e84 <__sprint_r>
   21dac:	103a711e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21db0:	d8c02017 	ldw	r3,128(sp)
   21db4:	d8801f17 	ldw	r2,124(sp)
   21db8:	da000404 	addi	r8,sp,16
   21dbc:	003fee06 	br	21d78 <__alt_data_end+0xfffe1d78>
   21dc0:	00bfffc4 	movi	r2,-1
   21dc4:	003a6f06 	br	20784 <__alt_data_end+0xfffe0784>
   21dc8:	008011c4 	movi	r2,71
   21dcc:	1440b816 	blt	r2,r17,220b0 <___vfprintf_internal_r+0x1d44>
   21dd0:	040000f4 	movhi	r16,3
   21dd4:	843c7f04 	addi	r16,r16,-3588
   21dd8:	00c000c4 	movi	r3,3
   21ddc:	00bfdfc4 	movi	r2,-129
   21de0:	d8c02a15 	stw	r3,168(sp)
   21de4:	90a4703a 	and	r18,r18,r2
   21de8:	df002783 	ldbu	fp,158(sp)
   21dec:	d8c02e15 	stw	r3,184(sp)
   21df0:	d8002915 	stw	zero,164(sp)
   21df4:	d8003215 	stw	zero,200(sp)
   21df8:	003b2906 	br	20aa0 <__alt_data_end+0xfffe0aa0>
   21dfc:	d9002d17 	ldw	r4,180(sp)
   21e00:	24c00017 	ldw	r19,0(r4)
   21e04:	21000104 	addi	r4,r4,4
   21e08:	d9002d15 	stw	r4,180(sp)
   21e0c:	982dd7fa 	srai	r22,r19,31
   21e10:	b005883a 	mov	r2,r22
   21e14:	003a9f06 	br	20894 <__alt_data_end+0xfffe0894>
   21e18:	d9402d17 	ldw	r5,180(sp)
   21e1c:	d8c02f17 	ldw	r3,188(sp)
   21e20:	28800017 	ldw	r2,0(r5)
   21e24:	29400104 	addi	r5,r5,4
   21e28:	d9402d15 	stw	r5,180(sp)
   21e2c:	10c00015 	stw	r3,0(r2)
   21e30:	00398606 	br	2044c <__alt_data_end+0xfffe044c>
   21e34:	d9402d17 	ldw	r5,180(sp)
   21e38:	002d883a 	mov	r22,zero
   21e3c:	2cc00017 	ldw	r19,0(r5)
   21e40:	29400104 	addi	r5,r5,4
   21e44:	d9402d15 	stw	r5,180(sp)
   21e48:	003c2306 	br	20ed8 <__alt_data_end+0xfffe0ed8>
   21e4c:	d8c02d17 	ldw	r3,180(sp)
   21e50:	d9002917 	ldw	r4,164(sp)
   21e54:	002d883a 	mov	r22,zero
   21e58:	18800104 	addi	r2,r3,4
   21e5c:	1cc0000b 	ldhu	r19,0(r3)
   21e60:	203dc10e 	bge	r4,zero,21568 <__alt_data_end+0xfffe1568>
   21e64:	003f7506 	br	21c3c <__alt_data_end+0xfffe1c3c>
   21e68:	040000f4 	movhi	r16,3
   21e6c:	843c7d04 	addi	r16,r16,-3596
   21e70:	003acc06 	br	209a4 <__alt_data_end+0xfffe09a4>
   21e74:	d9002c17 	ldw	r4,176(sp)
   21e78:	d9801e04 	addi	r6,sp,120
   21e7c:	b80b883a 	mov	r5,r23
   21e80:	0026e840 	call	26e84 <__sprint_r>
   21e84:	103a3b1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21e88:	dc402617 	ldw	r17,152(sp)
   21e8c:	d8c02017 	ldw	r3,128(sp)
   21e90:	da000404 	addi	r8,sp,16
   21e94:	003f9c06 	br	21d08 <__alt_data_end+0xfffe1d08>
   21e98:	ac400043 	ldbu	r17,1(r21)
   21e9c:	94800814 	ori	r18,r18,32
   21ea0:	ad400044 	addi	r21,r21,1
   21ea4:	8c403fcc 	andi	r17,r17,255
   21ea8:	8c40201c 	xori	r17,r17,128
   21eac:	8c7fe004 	addi	r17,r17,-128
   21eb0:	00398f06 	br	204f0 <__alt_data_end+0xfffe04f0>
   21eb4:	d8c02d15 	stw	r3,180(sp)
   21eb8:	0039883a 	mov	fp,zero
   21ebc:	003e3506 	br	21794 <__alt_data_end+0xfffe1794>
   21ec0:	d9002c17 	ldw	r4,176(sp)
   21ec4:	d9801e04 	addi	r6,sp,120
   21ec8:	b80b883a 	mov	r5,r23
   21ecc:	0026e840 	call	26e84 <__sprint_r>
   21ed0:	103a281e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21ed4:	d8c02017 	ldw	r3,128(sp)
   21ed8:	da000404 	addi	r8,sp,16
   21edc:	003cd006 	br	21220 <__alt_data_end+0xfffe1220>
   21ee0:	8009883a 	mov	r4,r16
   21ee4:	da003d15 	stw	r8,244(sp)
   21ee8:	0026cf00 	call	26cf0 <strlen>
   21eec:	d8802e15 	stw	r2,184(sp)
   21ef0:	da003d17 	ldw	r8,244(sp)
   21ef4:	103c340e 	bge	r2,zero,20fc8 <__alt_data_end+0xfffe0fc8>
   21ef8:	0005883a 	mov	r2,zero
   21efc:	003c3206 	br	20fc8 <__alt_data_end+0xfffe0fc8>
   21f00:	d9002c17 	ldw	r4,176(sp)
   21f04:	d9801e04 	addi	r6,sp,120
   21f08:	b80b883a 	mov	r5,r23
   21f0c:	0026e840 	call	26e84 <__sprint_r>
   21f10:	103a181e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21f14:	d8c02017 	ldw	r3,128(sp)
   21f18:	d8801f17 	ldw	r2,124(sp)
   21f1c:	da000404 	addi	r8,sp,16
   21f20:	d9403317 	ldw	r5,204(sp)
   21f24:	10800044 	addi	r2,r2,1
   21f28:	44000015 	stw	r16,0(r8)
   21f2c:	28c7883a 	add	r3,r5,r3
   21f30:	003b7d06 	br	20d28 <__alt_data_end+0xfffe0d28>
   21f34:	010000f4 	movhi	r4,3
   21f38:	213c9184 	addi	r4,r4,-3514
   21f3c:	d9003515 	stw	r4,212(sp)
   21f40:	003b1406 	br	20b94 <__alt_data_end+0xfffe0b94>
   21f44:	013fffc4 	movi	r4,-1
   21f48:	003a3506 	br	20820 <__alt_data_end+0xfffe0820>
   21f4c:	0023883a 	mov	r17,zero
   21f50:	003d9d06 	br	215c8 <__alt_data_end+0xfffe15c8>
   21f54:	d9002c17 	ldw	r4,176(sp)
   21f58:	d9801e04 	addi	r6,sp,120
   21f5c:	b80b883a 	mov	r5,r23
   21f60:	0026e840 	call	26e84 <__sprint_r>
   21f64:	103a031e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21f68:	d8c02017 	ldw	r3,128(sp)
   21f6c:	da000404 	addi	r8,sp,16
   21f70:	003d9406 	br	215c4 <__alt_data_end+0xfffe15c4>
   21f74:	010000f4 	movhi	r4,3
   21f78:	213c8d84 	addi	r4,r4,-3530
   21f7c:	d9002b15 	stw	r4,172(sp)
   21f80:	d9002b17 	ldw	r4,172(sp)
   21f84:	1c47883a 	add	r3,r3,r17
   21f88:	10800044 	addi	r2,r2,1
   21f8c:	41000015 	stw	r4,0(r8)
   21f90:	44400115 	stw	r17,4(r8)
   21f94:	d8c02015 	stw	r3,128(sp)
   21f98:	d8801f15 	stw	r2,124(sp)
   21f9c:	010001c4 	movi	r4,7
   21fa0:	20bfd716 	blt	r4,r2,21f00 <__alt_data_end+0xfffe1f00>
   21fa4:	42000204 	addi	r8,r8,8
   21fa8:	003fdd06 	br	21f20 <__alt_data_end+0xfffe1f20>
   21fac:	d9002c17 	ldw	r4,176(sp)
   21fb0:	d9801e04 	addi	r6,sp,120
   21fb4:	b80b883a 	mov	r5,r23
   21fb8:	0026e840 	call	26e84 <__sprint_r>
   21fbc:	1039ed1e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   21fc0:	d8802617 	ldw	r2,152(sp)
   21fc4:	d8c02017 	ldw	r3,128(sp)
   21fc8:	da000404 	addi	r8,sp,16
   21fcc:	003e1006 	br	21810 <__alt_data_end+0xfffe1810>
   21fd0:	00800044 	movi	r2,1
   21fd4:	10803fcc 	andi	r2,r2,255
   21fd8:	00c00044 	movi	r3,1
   21fdc:	10fa3526 	beq	r2,r3,208b4 <__alt_data_end+0xfffe08b4>
   21fe0:	00c00084 	movi	r3,2
   21fe4:	10fbcb26 	beq	r2,r3,20f14 <__alt_data_end+0xfffe0f14>
   21fe8:	003a8f06 	br	20a28 <__alt_data_end+0xfffe0a28>
   21fec:	010000f4 	movhi	r4,3
   21ff0:	213c9184 	addi	r4,r4,-3514
   21ff4:	d9003515 	stw	r4,212(sp)
   21ff8:	003b7606 	br	20dd4 <__alt_data_end+0xfffe0dd4>
   21ffc:	d8802917 	ldw	r2,164(sp)
   22000:	00c00184 	movi	r3,6
   22004:	1880012e 	bgeu	r3,r2,2200c <___vfprintf_internal_r+0x1ca0>
   22008:	1805883a 	mov	r2,r3
   2200c:	d8802e15 	stw	r2,184(sp)
   22010:	1000ef16 	blt	r2,zero,223d0 <___vfprintf_internal_r+0x2064>
   22014:	040000f4 	movhi	r16,3
   22018:	d8802a15 	stw	r2,168(sp)
   2201c:	dcc02d15 	stw	r19,180(sp)
   22020:	d8002915 	stw	zero,164(sp)
   22024:	d8003215 	stw	zero,200(sp)
   22028:	843c8b04 	addi	r16,r16,-3540
   2202c:	0039883a 	mov	fp,zero
   22030:	003aa206 	br	20abc <__alt_data_end+0xfffe0abc>
   22034:	0021883a 	mov	r16,zero
   22038:	003e0706 	br	21858 <__alt_data_end+0xfffe1858>
   2203c:	d9002c17 	ldw	r4,176(sp)
   22040:	d9801e04 	addi	r6,sp,120
   22044:	b80b883a 	mov	r5,r23
   22048:	0026e840 	call	26e84 <__sprint_r>
   2204c:	1039c91e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   22050:	d8802617 	ldw	r2,152(sp)
   22054:	d9403317 	ldw	r5,204(sp)
   22058:	d8c02017 	ldw	r3,128(sp)
   2205c:	da000404 	addi	r8,sp,16
   22060:	2885c83a 	sub	r2,r5,r2
   22064:	003dfb06 	br	21854 <__alt_data_end+0xfffe1854>
   22068:	9080004c 	andi	r2,r18,1
   2206c:	103e8f1e 	bne	r2,zero,21aac <__alt_data_end+0xfffe1aac>
   22070:	d8802117 	ldw	r2,132(sp)
   22074:	003e9e06 	br	21af0 <__alt_data_end+0xfffe1af0>
   22078:	1025883a 	mov	r18,r2
   2207c:	0039883a 	mov	fp,zero
   22080:	00800084 	movi	r2,2
   22084:	003fd306 	br	21fd4 <__alt_data_end+0xfffe1fd4>
   22088:	07000b44 	movi	fp,45
   2208c:	df002785 	stb	fp,158(sp)
   22090:	003a4006 	br	20994 <__alt_data_end+0xfffe0994>
   22094:	00c00b44 	movi	r3,45
   22098:	d8c02785 	stb	r3,158(sp)
   2209c:	d8802a15 	stw	r2,168(sp)
   220a0:	dc802b17 	ldw	r18,172(sp)
   220a4:	d8002915 	stw	zero,164(sp)
   220a8:	07000b44 	movi	fp,45
   220ac:	003a8006 	br	20ab0 <__alt_data_end+0xfffe0ab0>
   220b0:	040000f4 	movhi	r16,3
   220b4:	843c8004 	addi	r16,r16,-3584
   220b8:	003f4706 	br	21dd8 <__alt_data_end+0xfffe1dd8>
   220bc:	d8c02d17 	ldw	r3,180(sp)
   220c0:	d9002f17 	ldw	r4,188(sp)
   220c4:	18800017 	ldw	r2,0(r3)
   220c8:	18c00104 	addi	r3,r3,4
   220cc:	d8c02d15 	stw	r3,180(sp)
   220d0:	11000015 	stw	r4,0(r2)
   220d4:	0038dd06 	br	2044c <__alt_data_end+0xfffe044c>
   220d8:	dd802617 	ldw	r22,152(sp)
   220dc:	00bfff44 	movi	r2,-3
   220e0:	b0801c16 	blt	r22,r2,22154 <___vfprintf_internal_r+0x1de8>
   220e4:	d9402917 	ldw	r5,164(sp)
   220e8:	2d801a16 	blt	r5,r22,22154 <___vfprintf_internal_r+0x1de8>
   220ec:	dd803215 	stw	r22,200(sp)
   220f0:	003e8906 	br	21b18 <__alt_data_end+0xfffe1b18>
   220f4:	010000f4 	movhi	r4,3
   220f8:	213c8d84 	addi	r4,r4,-3530
   220fc:	d9002b15 	stw	r4,172(sp)
   22100:	003c9106 	br	21348 <__alt_data_end+0xfffe1348>
   22104:	e005883a 	mov	r2,fp
   22108:	003e7906 	br	21af0 <__alt_data_end+0xfffe1af0>
   2210c:	d9402917 	ldw	r5,164(sp)
   22110:	df002783 	ldbu	fp,158(sp)
   22114:	dcc02d15 	stw	r19,180(sp)
   22118:	d9402a15 	stw	r5,168(sp)
   2211c:	d9402e15 	stw	r5,184(sp)
   22120:	d8002915 	stw	zero,164(sp)
   22124:	d8003215 	stw	zero,200(sp)
   22128:	003a5d06 	br	20aa0 <__alt_data_end+0xfffe0aa0>
   2212c:	9080004c 	andi	r2,r18,1
   22130:	0039883a 	mov	fp,zero
   22134:	10000426 	beq	r2,zero,22148 <___vfprintf_internal_r+0x1ddc>
   22138:	00800c04 	movi	r2,48
   2213c:	dc001dc4 	addi	r16,sp,119
   22140:	d8801dc5 	stb	r2,119(sp)
   22144:	003b8006 	br	20f48 <__alt_data_end+0xfffe0f48>
   22148:	d8002e15 	stw	zero,184(sp)
   2214c:	dc001e04 	addi	r16,sp,120
   22150:	003a4d06 	br	20a88 <__alt_data_end+0xfffe0a88>
   22154:	8c7fff84 	addi	r17,r17,-2
   22158:	b5bfffc4 	addi	r22,r22,-1
   2215c:	dd802615 	stw	r22,152(sp)
   22160:	dc4022c5 	stb	r17,139(sp)
   22164:	b000bf16 	blt	r22,zero,22464 <___vfprintf_internal_r+0x20f8>
   22168:	00800ac4 	movi	r2,43
   2216c:	d8802305 	stb	r2,140(sp)
   22170:	00800244 	movi	r2,9
   22174:	15807016 	blt	r2,r22,22338 <___vfprintf_internal_r+0x1fcc>
   22178:	00800c04 	movi	r2,48
   2217c:	b5800c04 	addi	r22,r22,48
   22180:	d8802345 	stb	r2,141(sp)
   22184:	dd802385 	stb	r22,142(sp)
   22188:	d88023c4 	addi	r2,sp,143
   2218c:	df0022c4 	addi	fp,sp,139
   22190:	d8c03317 	ldw	r3,204(sp)
   22194:	1739c83a 	sub	fp,r2,fp
   22198:	d9003317 	ldw	r4,204(sp)
   2219c:	e0c7883a 	add	r3,fp,r3
   221a0:	df003a15 	stw	fp,232(sp)
   221a4:	d8c02e15 	stw	r3,184(sp)
   221a8:	00800044 	movi	r2,1
   221ac:	1100b30e 	bge	r2,r4,2247c <___vfprintf_internal_r+0x2110>
   221b0:	d8c02e17 	ldw	r3,184(sp)
   221b4:	18c00044 	addi	r3,r3,1
   221b8:	d8c02e15 	stw	r3,184(sp)
   221bc:	1805883a 	mov	r2,r3
   221c0:	1800ac16 	blt	r3,zero,22474 <___vfprintf_internal_r+0x2108>
   221c4:	d8003215 	stw	zero,200(sp)
   221c8:	003e5d06 	br	21b40 <__alt_data_end+0xfffe1b40>
   221cc:	d9002c17 	ldw	r4,176(sp)
   221d0:	d9801e04 	addi	r6,sp,120
   221d4:	b80b883a 	mov	r5,r23
   221d8:	0026e840 	call	26e84 <__sprint_r>
   221dc:	1039651e 	bne	r2,zero,20774 <__alt_data_end+0xfffe0774>
   221e0:	dc402617 	ldw	r17,152(sp)
   221e4:	d8c02017 	ldw	r3,128(sp)
   221e8:	d8801f17 	ldw	r2,124(sp)
   221ec:	da000404 	addi	r8,sp,16
   221f0:	003ed606 	br	21d4c <__alt_data_end+0xfffe1d4c>
   221f4:	582b883a 	mov	r21,r11
   221f8:	d8002915 	stw	zero,164(sp)
   221fc:	0038bd06 	br	204f4 <__alt_data_end+0xfffe04f4>
   22200:	d8802917 	ldw	r2,164(sp)
   22204:	103e071e 	bne	r2,zero,21a24 <__alt_data_end+0xfffe1a24>
   22208:	dc002915 	stw	r16,164(sp)
   2220c:	003e0506 	br	21a24 <__alt_data_end+0xfffe1a24>
   22210:	d9002917 	ldw	r4,164(sp)
   22214:	20c00044 	addi	r3,r4,1
   22218:	003e0f06 	br	21a58 <__alt_data_end+0xfffe1a58>
   2221c:	01400184 	movi	r5,6
   22220:	d9402915 	stw	r5,164(sp)
   22224:	003dff06 	br	21a24 <__alt_data_end+0xfffe1a24>
   22228:	d8802104 	addi	r2,sp,132
   2222c:	d8800315 	stw	r2,12(sp)
   22230:	d8802504 	addi	r2,sp,148
   22234:	d8800215 	stw	r2,8(sp)
   22238:	d8802604 	addi	r2,sp,152
   2223c:	d8800115 	stw	r2,4(sp)
   22240:	d8802917 	ldw	r2,164(sp)
   22244:	d9403617 	ldw	r5,216(sp)
   22248:	d9002c17 	ldw	r4,176(sp)
   2224c:	d8800015 	stw	r2,0(sp)
   22250:	01c000c4 	movi	r7,3
   22254:	980d883a 	mov	r6,r19
   22258:	da003d15 	stw	r8,244(sp)
   2225c:	00229900 	call	22990 <_dtoa_r>
   22260:	d8c02917 	ldw	r3,164(sp)
   22264:	da003d17 	ldw	r8,244(sp)
   22268:	1021883a 	mov	r16,r2
   2226c:	10f9883a 	add	fp,r2,r3
   22270:	81000007 	ldb	r4,0(r16)
   22274:	00800c04 	movi	r2,48
   22278:	20805e26 	beq	r4,r2,223f4 <___vfprintf_internal_r+0x2088>
   2227c:	d8c02617 	ldw	r3,152(sp)
   22280:	e0f9883a 	add	fp,fp,r3
   22284:	003e0a06 	br	21ab0 <__alt_data_end+0xfffe1ab0>
   22288:	00c00b44 	movi	r3,45
   2228c:	24e0003c 	xorhi	r19,r4,32768
   22290:	d8c02a05 	stb	r3,168(sp)
   22294:	003de906 	br	21a3c <__alt_data_end+0xfffe1a3c>
   22298:	d8c03217 	ldw	r3,200(sp)
   2229c:	00c07a0e 	bge	zero,r3,22488 <___vfprintf_internal_r+0x211c>
   222a0:	00800044 	movi	r2,1
   222a4:	d9003317 	ldw	r4,204(sp)
   222a8:	1105883a 	add	r2,r2,r4
   222ac:	d8802e15 	stw	r2,184(sp)
   222b0:	10004e16 	blt	r2,zero,223ec <___vfprintf_internal_r+0x2080>
   222b4:	044019c4 	movi	r17,103
   222b8:	003e2106 	br	21b40 <__alt_data_end+0xfffe1b40>
   222bc:	d9002917 	ldw	r4,164(sp)
   222c0:	d8802104 	addi	r2,sp,132
   222c4:	d8800315 	stw	r2,12(sp)
   222c8:	d9000015 	stw	r4,0(sp)
   222cc:	d8802504 	addi	r2,sp,148
   222d0:	d9403617 	ldw	r5,216(sp)
   222d4:	d9002c17 	ldw	r4,176(sp)
   222d8:	d8800215 	stw	r2,8(sp)
   222dc:	d8802604 	addi	r2,sp,152
   222e0:	d8800115 	stw	r2,4(sp)
   222e4:	01c000c4 	movi	r7,3
   222e8:	980d883a 	mov	r6,r19
   222ec:	da003d15 	stw	r8,244(sp)
   222f0:	00229900 	call	22990 <_dtoa_r>
   222f4:	d8c02917 	ldw	r3,164(sp)
   222f8:	da003d17 	ldw	r8,244(sp)
   222fc:	1021883a 	mov	r16,r2
   22300:	00801184 	movi	r2,70
   22304:	80f9883a 	add	fp,r16,r3
   22308:	88bfd926 	beq	r17,r2,22270 <__alt_data_end+0xfffe2270>
   2230c:	003de806 	br	21ab0 <__alt_data_end+0xfffe1ab0>
   22310:	d9002917 	ldw	r4,164(sp)
   22314:	00c04d0e 	bge	zero,r3,2244c <___vfprintf_internal_r+0x20e0>
   22318:	2000441e 	bne	r4,zero,2242c <___vfprintf_internal_r+0x20c0>
   2231c:	9480004c 	andi	r18,r18,1
   22320:	9000421e 	bne	r18,zero,2242c <___vfprintf_internal_r+0x20c0>
   22324:	1805883a 	mov	r2,r3
   22328:	18007016 	blt	r3,zero,224ec <___vfprintf_internal_r+0x2180>
   2232c:	d8c03217 	ldw	r3,200(sp)
   22330:	d8c02e15 	stw	r3,184(sp)
   22334:	003e0206 	br	21b40 <__alt_data_end+0xfffe1b40>
   22338:	df0022c4 	addi	fp,sp,139
   2233c:	dc002915 	stw	r16,164(sp)
   22340:	4027883a 	mov	r19,r8
   22344:	e021883a 	mov	r16,fp
   22348:	b009883a 	mov	r4,r22
   2234c:	01400284 	movi	r5,10
   22350:	002a3b40 	call	2a3b4 <__modsi3>
   22354:	10800c04 	addi	r2,r2,48
   22358:	843fffc4 	addi	r16,r16,-1
   2235c:	b009883a 	mov	r4,r22
   22360:	01400284 	movi	r5,10
   22364:	80800005 	stb	r2,0(r16)
   22368:	002a3300 	call	2a330 <__divsi3>
   2236c:	102d883a 	mov	r22,r2
   22370:	00800244 	movi	r2,9
   22374:	15bff416 	blt	r2,r22,22348 <__alt_data_end+0xfffe2348>
   22378:	9811883a 	mov	r8,r19
   2237c:	b0800c04 	addi	r2,r22,48
   22380:	8027883a 	mov	r19,r16
   22384:	997fffc4 	addi	r5,r19,-1
   22388:	98bfffc5 	stb	r2,-1(r19)
   2238c:	dc002917 	ldw	r16,164(sp)
   22390:	2f006a2e 	bgeu	r5,fp,2253c <___vfprintf_internal_r+0x21d0>
   22394:	d9c02384 	addi	r7,sp,142
   22398:	3ccfc83a 	sub	r7,r7,r19
   2239c:	d9002344 	addi	r4,sp,141
   223a0:	e1cf883a 	add	r7,fp,r7
   223a4:	00000106 	br	223ac <___vfprintf_internal_r+0x2040>
   223a8:	28800003 	ldbu	r2,0(r5)
   223ac:	20800005 	stb	r2,0(r4)
   223b0:	21000044 	addi	r4,r4,1
   223b4:	29400044 	addi	r5,r5,1
   223b8:	393ffb1e 	bne	r7,r4,223a8 <__alt_data_end+0xfffe23a8>
   223bc:	d8802304 	addi	r2,sp,140
   223c0:	14c5c83a 	sub	r2,r2,r19
   223c4:	d8c02344 	addi	r3,sp,141
   223c8:	1885883a 	add	r2,r3,r2
   223cc:	003f7006 	br	22190 <__alt_data_end+0xfffe2190>
   223d0:	0005883a 	mov	r2,zero
   223d4:	003f0f06 	br	22014 <__alt_data_end+0xfffe2014>
   223d8:	d8c03217 	ldw	r3,200(sp)
   223dc:	18c00044 	addi	r3,r3,1
   223e0:	d8c02e15 	stw	r3,184(sp)
   223e4:	1805883a 	mov	r2,r3
   223e8:	183fb20e 	bge	r3,zero,222b4 <__alt_data_end+0xfffe22b4>
   223ec:	0005883a 	mov	r2,zero
   223f0:	003fb006 	br	222b4 <__alt_data_end+0xfffe22b4>
   223f4:	d9003617 	ldw	r4,216(sp)
   223f8:	000d883a 	mov	r6,zero
   223fc:	000f883a 	mov	r7,zero
   22400:	980b883a 	mov	r5,r19
   22404:	d8c03c15 	stw	r3,240(sp)
   22408:	da003d15 	stw	r8,244(sp)
   2240c:	002b6780 	call	2b678 <__eqdf2>
   22410:	d8c03c17 	ldw	r3,240(sp)
   22414:	da003d17 	ldw	r8,244(sp)
   22418:	103f9826 	beq	r2,zero,2227c <__alt_data_end+0xfffe227c>
   2241c:	00800044 	movi	r2,1
   22420:	10c7c83a 	sub	r3,r2,r3
   22424:	d8c02615 	stw	r3,152(sp)
   22428:	003f9506 	br	22280 <__alt_data_end+0xfffe2280>
   2242c:	d9002917 	ldw	r4,164(sp)
   22430:	d8c03217 	ldw	r3,200(sp)
   22434:	20800044 	addi	r2,r4,1
   22438:	1885883a 	add	r2,r3,r2
   2243c:	d8802e15 	stw	r2,184(sp)
   22440:	103dbf0e 	bge	r2,zero,21b40 <__alt_data_end+0xfffe1b40>
   22444:	0005883a 	mov	r2,zero
   22448:	003dbd06 	br	21b40 <__alt_data_end+0xfffe1b40>
   2244c:	2000211e 	bne	r4,zero,224d4 <___vfprintf_internal_r+0x2168>
   22450:	9480004c 	andi	r18,r18,1
   22454:	90001f1e 	bne	r18,zero,224d4 <___vfprintf_internal_r+0x2168>
   22458:	00800044 	movi	r2,1
   2245c:	d8802e15 	stw	r2,184(sp)
   22460:	003db706 	br	21b40 <__alt_data_end+0xfffe1b40>
   22464:	00800b44 	movi	r2,45
   22468:	05adc83a 	sub	r22,zero,r22
   2246c:	d8802305 	stb	r2,140(sp)
   22470:	003f3f06 	br	22170 <__alt_data_end+0xfffe2170>
   22474:	0005883a 	mov	r2,zero
   22478:	003f5206 	br	221c4 <__alt_data_end+0xfffe21c4>
   2247c:	90a4703a 	and	r18,r18,r2
   22480:	903f4e26 	beq	r18,zero,221bc <__alt_data_end+0xfffe21bc>
   22484:	003f4a06 	br	221b0 <__alt_data_end+0xfffe21b0>
   22488:	00800084 	movi	r2,2
   2248c:	10c5c83a 	sub	r2,r2,r3
   22490:	003f8406 	br	222a4 <__alt_data_end+0xfffe22a4>
   22494:	d8802d17 	ldw	r2,180(sp)
   22498:	d9002d17 	ldw	r4,180(sp)
   2249c:	ac400043 	ldbu	r17,1(r21)
   224a0:	10800017 	ldw	r2,0(r2)
   224a4:	582b883a 	mov	r21,r11
   224a8:	d8802915 	stw	r2,164(sp)
   224ac:	20800104 	addi	r2,r4,4
   224b0:	d9002917 	ldw	r4,164(sp)
   224b4:	d8802d15 	stw	r2,180(sp)
   224b8:	203e7a0e 	bge	r4,zero,21ea4 <__alt_data_end+0xfffe1ea4>
   224bc:	8c403fcc 	andi	r17,r17,255
   224c0:	00bfffc4 	movi	r2,-1
   224c4:	8c40201c 	xori	r17,r17,128
   224c8:	d8802915 	stw	r2,164(sp)
   224cc:	8c7fe004 	addi	r17,r17,-128
   224d0:	00380706 	br	204f0 <__alt_data_end+0xfffe04f0>
   224d4:	d8c02917 	ldw	r3,164(sp)
   224d8:	18c00084 	addi	r3,r3,2
   224dc:	d8c02e15 	stw	r3,184(sp)
   224e0:	1805883a 	mov	r2,r3
   224e4:	183d960e 	bge	r3,zero,21b40 <__alt_data_end+0xfffe1b40>
   224e8:	003fd606 	br	22444 <__alt_data_end+0xfffe2444>
   224ec:	0005883a 	mov	r2,zero
   224f0:	003f8e06 	br	2232c <__alt_data_end+0xfffe232c>
   224f4:	9080004c 	andi	r2,r18,1
   224f8:	103f811e 	bne	r2,zero,22300 <__alt_data_end+0xfffe2300>
   224fc:	d8802117 	ldw	r2,132(sp)
   22500:	1405c83a 	sub	r2,r2,r16
   22504:	d8803315 	stw	r2,204(sp)
   22508:	b47ef326 	beq	r22,r17,220d8 <__alt_data_end+0xfffe20d8>
   2250c:	dd802617 	ldw	r22,152(sp)
   22510:	003f1106 	br	22158 <__alt_data_end+0xfffe2158>
   22514:	d9c02785 	stb	r7,158(sp)
   22518:	00390406 	br	2092c <__alt_data_end+0xfffe092c>
   2251c:	d9c02785 	stb	r7,158(sp)
   22520:	0038d306 	br	20870 <__alt_data_end+0xfffe0870>
   22524:	d9c02785 	stb	r7,158(sp)
   22528:	003a6106 	br	20eb0 <__alt_data_end+0xfffe0eb0>
   2252c:	d9c02785 	stb	r7,158(sp)
   22530:	003af806 	br	21114 <__alt_data_end+0xfffe1114>
   22534:	0005883a 	mov	r2,zero
   22538:	003d7e06 	br	21b34 <__alt_data_end+0xfffe1b34>
   2253c:	d8802344 	addi	r2,sp,141
   22540:	003f1306 	br	22190 <__alt_data_end+0xfffe2190>
   22544:	d9c02785 	stb	r7,158(sp)
   22548:	00392306 	br	209d8 <__alt_data_end+0xfffe09d8>
   2254c:	d9c02785 	stb	r7,158(sp)
   22550:	003aa906 	br	20ff8 <__alt_data_end+0xfffe0ff8>
   22554:	d9c02785 	stb	r7,158(sp)
   22558:	003a3d06 	br	20e50 <__alt_data_end+0xfffe0e50>
   2255c:	d9c02785 	stb	r7,158(sp)
   22560:	003aca06 	br	2108c <__alt_data_end+0xfffe108c>

00022564 <__vfprintf_internal>:
   22564:	008000f4 	movhi	r2,3
   22568:	1083e804 	addi	r2,r2,4000
   2256c:	300f883a 	mov	r7,r6
   22570:	280d883a 	mov	r6,r5
   22574:	200b883a 	mov	r5,r4
   22578:	11000017 	ldw	r4,0(r2)
   2257c:	002036c1 	jmpi	2036c <___vfprintf_internal_r>

00022580 <__sbprintf>:
   22580:	2880030b 	ldhu	r2,12(r5)
   22584:	2ac01917 	ldw	r11,100(r5)
   22588:	2a80038b 	ldhu	r10,14(r5)
   2258c:	2a400717 	ldw	r9,28(r5)
   22590:	2a000917 	ldw	r8,36(r5)
   22594:	defee204 	addi	sp,sp,-1144
   22598:	00c10004 	movi	r3,1024
   2259c:	dc011a15 	stw	r16,1128(sp)
   225a0:	10bfff4c 	andi	r2,r2,65533
   225a4:	2821883a 	mov	r16,r5
   225a8:	d8cb883a 	add	r5,sp,r3
   225ac:	dc811c15 	stw	r18,1136(sp)
   225b0:	dc411b15 	stw	r17,1132(sp)
   225b4:	dfc11d15 	stw	ra,1140(sp)
   225b8:	2025883a 	mov	r18,r4
   225bc:	d881030d 	sth	r2,1036(sp)
   225c0:	dac11915 	stw	r11,1124(sp)
   225c4:	da81038d 	sth	r10,1038(sp)
   225c8:	da410715 	stw	r9,1052(sp)
   225cc:	da010915 	stw	r8,1060(sp)
   225d0:	dec10015 	stw	sp,1024(sp)
   225d4:	dec10415 	stw	sp,1040(sp)
   225d8:	d8c10215 	stw	r3,1032(sp)
   225dc:	d8c10515 	stw	r3,1044(sp)
   225e0:	d8010615 	stw	zero,1048(sp)
   225e4:	002036c0 	call	2036c <___vfprintf_internal_r>
   225e8:	1023883a 	mov	r17,r2
   225ec:	10000416 	blt	r2,zero,22600 <__sbprintf+0x80>
   225f0:	d9410004 	addi	r5,sp,1024
   225f4:	9009883a 	mov	r4,r18
   225f8:	00242340 	call	24234 <_fflush_r>
   225fc:	10000d1e 	bne	r2,zero,22634 <__sbprintf+0xb4>
   22600:	d881030b 	ldhu	r2,1036(sp)
   22604:	1080100c 	andi	r2,r2,64
   22608:	10000326 	beq	r2,zero,22618 <__sbprintf+0x98>
   2260c:	8080030b 	ldhu	r2,12(r16)
   22610:	10801014 	ori	r2,r2,64
   22614:	8080030d 	sth	r2,12(r16)
   22618:	8805883a 	mov	r2,r17
   2261c:	dfc11d17 	ldw	ra,1140(sp)
   22620:	dc811c17 	ldw	r18,1136(sp)
   22624:	dc411b17 	ldw	r17,1132(sp)
   22628:	dc011a17 	ldw	r16,1128(sp)
   2262c:	dec11e04 	addi	sp,sp,1144
   22630:	f800283a 	ret
   22634:	047fffc4 	movi	r17,-1
   22638:	003ff106 	br	22600 <__alt_data_end+0xfffe2600>

0002263c <__swsetup_r>:
   2263c:	008000f4 	movhi	r2,3
   22640:	defffd04 	addi	sp,sp,-12
   22644:	1083e804 	addi	r2,r2,4000
   22648:	dc400115 	stw	r17,4(sp)
   2264c:	2023883a 	mov	r17,r4
   22650:	11000017 	ldw	r4,0(r2)
   22654:	dc000015 	stw	r16,0(sp)
   22658:	dfc00215 	stw	ra,8(sp)
   2265c:	2821883a 	mov	r16,r5
   22660:	20000226 	beq	r4,zero,2266c <__swsetup_r+0x30>
   22664:	20800e17 	ldw	r2,56(r4)
   22668:	10003126 	beq	r2,zero,22730 <__swsetup_r+0xf4>
   2266c:	8080030b 	ldhu	r2,12(r16)
   22670:	10c0020c 	andi	r3,r2,8
   22674:	1009883a 	mov	r4,r2
   22678:	18000f26 	beq	r3,zero,226b8 <__swsetup_r+0x7c>
   2267c:	80c00417 	ldw	r3,16(r16)
   22680:	18001526 	beq	r3,zero,226d8 <__swsetup_r+0x9c>
   22684:	1100004c 	andi	r4,r2,1
   22688:	20001c1e 	bne	r4,zero,226fc <__swsetup_r+0xc0>
   2268c:	1080008c 	andi	r2,r2,2
   22690:	1000291e 	bne	r2,zero,22738 <__swsetup_r+0xfc>
   22694:	80800517 	ldw	r2,20(r16)
   22698:	80800215 	stw	r2,8(r16)
   2269c:	18001c26 	beq	r3,zero,22710 <__swsetup_r+0xd4>
   226a0:	0005883a 	mov	r2,zero
   226a4:	dfc00217 	ldw	ra,8(sp)
   226a8:	dc400117 	ldw	r17,4(sp)
   226ac:	dc000017 	ldw	r16,0(sp)
   226b0:	dec00304 	addi	sp,sp,12
   226b4:	f800283a 	ret
   226b8:	2080040c 	andi	r2,r4,16
   226bc:	10002e26 	beq	r2,zero,22778 <__swsetup_r+0x13c>
   226c0:	2080010c 	andi	r2,r4,4
   226c4:	10001e1e 	bne	r2,zero,22740 <__swsetup_r+0x104>
   226c8:	80c00417 	ldw	r3,16(r16)
   226cc:	20800214 	ori	r2,r4,8
   226d0:	8080030d 	sth	r2,12(r16)
   226d4:	183feb1e 	bne	r3,zero,22684 <__alt_data_end+0xfffe2684>
   226d8:	1100a00c 	andi	r4,r2,640
   226dc:	01408004 	movi	r5,512
   226e0:	217fe826 	beq	r4,r5,22684 <__alt_data_end+0xfffe2684>
   226e4:	800b883a 	mov	r5,r16
   226e8:	8809883a 	mov	r4,r17
   226ec:	0024cf80 	call	24cf8 <__smakebuf_r>
   226f0:	8080030b 	ldhu	r2,12(r16)
   226f4:	80c00417 	ldw	r3,16(r16)
   226f8:	003fe206 	br	22684 <__alt_data_end+0xfffe2684>
   226fc:	80800517 	ldw	r2,20(r16)
   22700:	80000215 	stw	zero,8(r16)
   22704:	0085c83a 	sub	r2,zero,r2
   22708:	80800615 	stw	r2,24(r16)
   2270c:	183fe41e 	bne	r3,zero,226a0 <__alt_data_end+0xfffe26a0>
   22710:	80c0030b 	ldhu	r3,12(r16)
   22714:	0005883a 	mov	r2,zero
   22718:	1900200c 	andi	r4,r3,128
   2271c:	203fe126 	beq	r4,zero,226a4 <__alt_data_end+0xfffe26a4>
   22720:	18c01014 	ori	r3,r3,64
   22724:	80c0030d 	sth	r3,12(r16)
   22728:	00bfffc4 	movi	r2,-1
   2272c:	003fdd06 	br	226a4 <__alt_data_end+0xfffe26a4>
   22730:	00246100 	call	24610 <__sinit>
   22734:	003fcd06 	br	2266c <__alt_data_end+0xfffe266c>
   22738:	0005883a 	mov	r2,zero
   2273c:	003fd606 	br	22698 <__alt_data_end+0xfffe2698>
   22740:	81400c17 	ldw	r5,48(r16)
   22744:	28000626 	beq	r5,zero,22760 <__swsetup_r+0x124>
   22748:	80801004 	addi	r2,r16,64
   2274c:	28800326 	beq	r5,r2,2275c <__swsetup_r+0x120>
   22750:	8809883a 	mov	r4,r17
   22754:	00247840 	call	24784 <_free_r>
   22758:	8100030b 	ldhu	r4,12(r16)
   2275c:	80000c15 	stw	zero,48(r16)
   22760:	80c00417 	ldw	r3,16(r16)
   22764:	00bff6c4 	movi	r2,-37
   22768:	1108703a 	and	r4,r2,r4
   2276c:	80000115 	stw	zero,4(r16)
   22770:	80c00015 	stw	r3,0(r16)
   22774:	003fd506 	br	226cc <__alt_data_end+0xfffe26cc>
   22778:	00800244 	movi	r2,9
   2277c:	88800015 	stw	r2,0(r17)
   22780:	20801014 	ori	r2,r4,64
   22784:	8080030d 	sth	r2,12(r16)
   22788:	00bfffc4 	movi	r2,-1
   2278c:	003fc506 	br	226a4 <__alt_data_end+0xfffe26a4>

00022790 <quorem>:
   22790:	defff704 	addi	sp,sp,-36
   22794:	dc800215 	stw	r18,8(sp)
   22798:	20800417 	ldw	r2,16(r4)
   2279c:	2c800417 	ldw	r18,16(r5)
   227a0:	dfc00815 	stw	ra,32(sp)
   227a4:	ddc00715 	stw	r23,28(sp)
   227a8:	dd800615 	stw	r22,24(sp)
   227ac:	dd400515 	stw	r21,20(sp)
   227b0:	dd000415 	stw	r20,16(sp)
   227b4:	dcc00315 	stw	r19,12(sp)
   227b8:	dc400115 	stw	r17,4(sp)
   227bc:	dc000015 	stw	r16,0(sp)
   227c0:	14807116 	blt	r2,r18,22988 <quorem+0x1f8>
   227c4:	94bfffc4 	addi	r18,r18,-1
   227c8:	94ad883a 	add	r22,r18,r18
   227cc:	b5ad883a 	add	r22,r22,r22
   227d0:	2c400504 	addi	r17,r5,20
   227d4:	8da9883a 	add	r20,r17,r22
   227d8:	25400504 	addi	r21,r4,20
   227dc:	282f883a 	mov	r23,r5
   227e0:	adad883a 	add	r22,r21,r22
   227e4:	a1400017 	ldw	r5,0(r20)
   227e8:	2021883a 	mov	r16,r4
   227ec:	b1000017 	ldw	r4,0(r22)
   227f0:	29400044 	addi	r5,r5,1
   227f4:	002a4280 	call	2a428 <__udivsi3>
   227f8:	1027883a 	mov	r19,r2
   227fc:	10002c26 	beq	r2,zero,228b0 <quorem+0x120>
   22800:	a813883a 	mov	r9,r21
   22804:	880b883a 	mov	r5,r17
   22808:	0009883a 	mov	r4,zero
   2280c:	000d883a 	mov	r6,zero
   22810:	2a000017 	ldw	r8,0(r5)
   22814:	49c00017 	ldw	r7,0(r9)
   22818:	29400104 	addi	r5,r5,4
   2281c:	40bfffcc 	andi	r2,r8,65535
   22820:	14c5383a 	mul	r2,r2,r19
   22824:	4010d43a 	srli	r8,r8,16
   22828:	38ffffcc 	andi	r3,r7,65535
   2282c:	1105883a 	add	r2,r2,r4
   22830:	1008d43a 	srli	r4,r2,16
   22834:	44d1383a 	mul	r8,r8,r19
   22838:	198d883a 	add	r6,r3,r6
   2283c:	10ffffcc 	andi	r3,r2,65535
   22840:	30c7c83a 	sub	r3,r6,r3
   22844:	380ed43a 	srli	r7,r7,16
   22848:	4105883a 	add	r2,r8,r4
   2284c:	180dd43a 	srai	r6,r3,16
   22850:	113fffcc 	andi	r4,r2,65535
   22854:	390fc83a 	sub	r7,r7,r4
   22858:	398d883a 	add	r6,r7,r6
   2285c:	300e943a 	slli	r7,r6,16
   22860:	18ffffcc 	andi	r3,r3,65535
   22864:	1008d43a 	srli	r4,r2,16
   22868:	38ceb03a 	or	r7,r7,r3
   2286c:	49c00015 	stw	r7,0(r9)
   22870:	300dd43a 	srai	r6,r6,16
   22874:	4a400104 	addi	r9,r9,4
   22878:	a17fe52e 	bgeu	r20,r5,22810 <__alt_data_end+0xfffe2810>
   2287c:	b0800017 	ldw	r2,0(r22)
   22880:	10000b1e 	bne	r2,zero,228b0 <quorem+0x120>
   22884:	b0bfff04 	addi	r2,r22,-4
   22888:	a880082e 	bgeu	r21,r2,228ac <quorem+0x11c>
   2288c:	b0ffff17 	ldw	r3,-4(r22)
   22890:	18000326 	beq	r3,zero,228a0 <quorem+0x110>
   22894:	00000506 	br	228ac <quorem+0x11c>
   22898:	10c00017 	ldw	r3,0(r2)
   2289c:	1800031e 	bne	r3,zero,228ac <quorem+0x11c>
   228a0:	10bfff04 	addi	r2,r2,-4
   228a4:	94bfffc4 	addi	r18,r18,-1
   228a8:	a8bffb36 	bltu	r21,r2,22898 <__alt_data_end+0xfffe2898>
   228ac:	84800415 	stw	r18,16(r16)
   228b0:	b80b883a 	mov	r5,r23
   228b4:	8009883a 	mov	r4,r16
   228b8:	00262dc0 	call	262dc <__mcmp>
   228bc:	10002616 	blt	r2,zero,22958 <quorem+0x1c8>
   228c0:	9cc00044 	addi	r19,r19,1
   228c4:	a805883a 	mov	r2,r21
   228c8:	000b883a 	mov	r5,zero
   228cc:	11000017 	ldw	r4,0(r2)
   228d0:	89800017 	ldw	r6,0(r17)
   228d4:	10800104 	addi	r2,r2,4
   228d8:	20ffffcc 	andi	r3,r4,65535
   228dc:	194b883a 	add	r5,r3,r5
   228e0:	30ffffcc 	andi	r3,r6,65535
   228e4:	28c7c83a 	sub	r3,r5,r3
   228e8:	300cd43a 	srli	r6,r6,16
   228ec:	2008d43a 	srli	r4,r4,16
   228f0:	180bd43a 	srai	r5,r3,16
   228f4:	18ffffcc 	andi	r3,r3,65535
   228f8:	2189c83a 	sub	r4,r4,r6
   228fc:	2149883a 	add	r4,r4,r5
   22900:	200c943a 	slli	r6,r4,16
   22904:	8c400104 	addi	r17,r17,4
   22908:	200bd43a 	srai	r5,r4,16
   2290c:	30c6b03a 	or	r3,r6,r3
   22910:	10ffff15 	stw	r3,-4(r2)
   22914:	a47fed2e 	bgeu	r20,r17,228cc <__alt_data_end+0xfffe28cc>
   22918:	9485883a 	add	r2,r18,r18
   2291c:	1085883a 	add	r2,r2,r2
   22920:	a887883a 	add	r3,r21,r2
   22924:	18800017 	ldw	r2,0(r3)
   22928:	10000b1e 	bne	r2,zero,22958 <quorem+0x1c8>
   2292c:	18bfff04 	addi	r2,r3,-4
   22930:	a880082e 	bgeu	r21,r2,22954 <quorem+0x1c4>
   22934:	18ffff17 	ldw	r3,-4(r3)
   22938:	18000326 	beq	r3,zero,22948 <quorem+0x1b8>
   2293c:	00000506 	br	22954 <quorem+0x1c4>
   22940:	10c00017 	ldw	r3,0(r2)
   22944:	1800031e 	bne	r3,zero,22954 <quorem+0x1c4>
   22948:	10bfff04 	addi	r2,r2,-4
   2294c:	94bfffc4 	addi	r18,r18,-1
   22950:	a8bffb36 	bltu	r21,r2,22940 <__alt_data_end+0xfffe2940>
   22954:	84800415 	stw	r18,16(r16)
   22958:	9805883a 	mov	r2,r19
   2295c:	dfc00817 	ldw	ra,32(sp)
   22960:	ddc00717 	ldw	r23,28(sp)
   22964:	dd800617 	ldw	r22,24(sp)
   22968:	dd400517 	ldw	r21,20(sp)
   2296c:	dd000417 	ldw	r20,16(sp)
   22970:	dcc00317 	ldw	r19,12(sp)
   22974:	dc800217 	ldw	r18,8(sp)
   22978:	dc400117 	ldw	r17,4(sp)
   2297c:	dc000017 	ldw	r16,0(sp)
   22980:	dec00904 	addi	sp,sp,36
   22984:	f800283a 	ret
   22988:	0005883a 	mov	r2,zero
   2298c:	003ff306 	br	2295c <__alt_data_end+0xfffe295c>

00022990 <_dtoa_r>:
   22990:	20801017 	ldw	r2,64(r4)
   22994:	deffde04 	addi	sp,sp,-136
   22998:	df002015 	stw	fp,128(sp)
   2299c:	dcc01b15 	stw	r19,108(sp)
   229a0:	dc801a15 	stw	r18,104(sp)
   229a4:	dc401915 	stw	r17,100(sp)
   229a8:	dc001815 	stw	r16,96(sp)
   229ac:	dfc02115 	stw	ra,132(sp)
   229b0:	ddc01f15 	stw	r23,124(sp)
   229b4:	dd801e15 	stw	r22,120(sp)
   229b8:	dd401d15 	stw	r21,116(sp)
   229bc:	dd001c15 	stw	r20,112(sp)
   229c0:	d9c00315 	stw	r7,12(sp)
   229c4:	2039883a 	mov	fp,r4
   229c8:	3023883a 	mov	r17,r6
   229cc:	2825883a 	mov	r18,r5
   229d0:	dc002417 	ldw	r16,144(sp)
   229d4:	3027883a 	mov	r19,r6
   229d8:	10000826 	beq	r2,zero,229fc <_dtoa_r+0x6c>
   229dc:	21801117 	ldw	r6,68(r4)
   229e0:	00c00044 	movi	r3,1
   229e4:	100b883a 	mov	r5,r2
   229e8:	1986983a 	sll	r3,r3,r6
   229ec:	11800115 	stw	r6,4(r2)
   229f0:	10c00215 	stw	r3,8(r2)
   229f4:	0025abc0 	call	25abc <_Bfree>
   229f8:	e0001015 	stw	zero,64(fp)
   229fc:	88002e16 	blt	r17,zero,22ab8 <_dtoa_r+0x128>
   22a00:	80000015 	stw	zero,0(r16)
   22a04:	889ffc2c 	andhi	r2,r17,32752
   22a08:	00dffc34 	movhi	r3,32752
   22a0c:	10c01c26 	beq	r2,r3,22a80 <_dtoa_r+0xf0>
   22a10:	000d883a 	mov	r6,zero
   22a14:	000f883a 	mov	r7,zero
   22a18:	9009883a 	mov	r4,r18
   22a1c:	980b883a 	mov	r5,r19
   22a20:	002b6780 	call	2b678 <__eqdf2>
   22a24:	10002b1e 	bne	r2,zero,22ad4 <_dtoa_r+0x144>
   22a28:	d9c02317 	ldw	r7,140(sp)
   22a2c:	00800044 	movi	r2,1
   22a30:	38800015 	stw	r2,0(r7)
   22a34:	d8802517 	ldw	r2,148(sp)
   22a38:	10019e26 	beq	r2,zero,230b4 <_dtoa_r+0x724>
   22a3c:	d8c02517 	ldw	r3,148(sp)
   22a40:	008000f4 	movhi	r2,3
   22a44:	10bc8d44 	addi	r2,r2,-3531
   22a48:	18800015 	stw	r2,0(r3)
   22a4c:	10bfffc4 	addi	r2,r2,-1
   22a50:	dfc02117 	ldw	ra,132(sp)
   22a54:	df002017 	ldw	fp,128(sp)
   22a58:	ddc01f17 	ldw	r23,124(sp)
   22a5c:	dd801e17 	ldw	r22,120(sp)
   22a60:	dd401d17 	ldw	r21,116(sp)
   22a64:	dd001c17 	ldw	r20,112(sp)
   22a68:	dcc01b17 	ldw	r19,108(sp)
   22a6c:	dc801a17 	ldw	r18,104(sp)
   22a70:	dc401917 	ldw	r17,100(sp)
   22a74:	dc001817 	ldw	r16,96(sp)
   22a78:	dec02204 	addi	sp,sp,136
   22a7c:	f800283a 	ret
   22a80:	d8c02317 	ldw	r3,140(sp)
   22a84:	0089c3c4 	movi	r2,9999
   22a88:	18800015 	stw	r2,0(r3)
   22a8c:	90017726 	beq	r18,zero,2306c <_dtoa_r+0x6dc>
   22a90:	008000f4 	movhi	r2,3
   22a94:	10bc9904 	addi	r2,r2,-3484
   22a98:	d9002517 	ldw	r4,148(sp)
   22a9c:	203fec26 	beq	r4,zero,22a50 <__alt_data_end+0xfffe2a50>
   22aa0:	10c000c7 	ldb	r3,3(r2)
   22aa4:	1801781e 	bne	r3,zero,23088 <_dtoa_r+0x6f8>
   22aa8:	10c000c4 	addi	r3,r2,3
   22aac:	d9802517 	ldw	r6,148(sp)
   22ab0:	30c00015 	stw	r3,0(r6)
   22ab4:	003fe606 	br	22a50 <__alt_data_end+0xfffe2a50>
   22ab8:	04e00034 	movhi	r19,32768
   22abc:	9cffffc4 	addi	r19,r19,-1
   22ac0:	00800044 	movi	r2,1
   22ac4:	8ce6703a 	and	r19,r17,r19
   22ac8:	80800015 	stw	r2,0(r16)
   22acc:	9823883a 	mov	r17,r19
   22ad0:	003fcc06 	br	22a04 <__alt_data_end+0xfffe2a04>
   22ad4:	d8800204 	addi	r2,sp,8
   22ad8:	d8800015 	stw	r2,0(sp)
   22adc:	d9c00104 	addi	r7,sp,4
   22ae0:	900b883a 	mov	r5,r18
   22ae4:	980d883a 	mov	r6,r19
   22ae8:	e009883a 	mov	r4,fp
   22aec:	8820d53a 	srli	r16,r17,20
   22af0:	00266a80 	call	266a8 <__d2b>
   22af4:	d8800915 	stw	r2,36(sp)
   22af8:	8001651e 	bne	r16,zero,23090 <_dtoa_r+0x700>
   22afc:	dd800217 	ldw	r22,8(sp)
   22b00:	dc000117 	ldw	r16,4(sp)
   22b04:	00800804 	movi	r2,32
   22b08:	b421883a 	add	r16,r22,r16
   22b0c:	80c10c84 	addi	r3,r16,1074
   22b10:	10c2d10e 	bge	r2,r3,23658 <_dtoa_r+0xcc8>
   22b14:	00801004 	movi	r2,64
   22b18:	81010484 	addi	r4,r16,1042
   22b1c:	10c7c83a 	sub	r3,r2,r3
   22b20:	9108d83a 	srl	r4,r18,r4
   22b24:	88e2983a 	sll	r17,r17,r3
   22b28:	2448b03a 	or	r4,r4,r17
   22b2c:	002ca400 	call	2ca40 <__floatunsidf>
   22b30:	017f8434 	movhi	r5,65040
   22b34:	01800044 	movi	r6,1
   22b38:	1009883a 	mov	r4,r2
   22b3c:	194b883a 	add	r5,r3,r5
   22b40:	843fffc4 	addi	r16,r16,-1
   22b44:	d9801115 	stw	r6,68(sp)
   22b48:	000d883a 	mov	r6,zero
   22b4c:	01cffe34 	movhi	r7,16376
   22b50:	002bfe80 	call	2bfe8 <__subdf3>
   22b54:	0198dbf4 	movhi	r6,25455
   22b58:	01cff4f4 	movhi	r7,16339
   22b5c:	3190d844 	addi	r6,r6,17249
   22b60:	39e1e9c4 	addi	r7,r7,-30809
   22b64:	1009883a 	mov	r4,r2
   22b68:	180b883a 	mov	r5,r3
   22b6c:	002b8d00 	call	2b8d0 <__muldf3>
   22b70:	01a2d874 	movhi	r6,35681
   22b74:	01cff1f4 	movhi	r7,16327
   22b78:	31b22cc4 	addi	r6,r6,-14157
   22b7c:	39e28a04 	addi	r7,r7,-30168
   22b80:	180b883a 	mov	r5,r3
   22b84:	1009883a 	mov	r4,r2
   22b88:	002a4e40 	call	2a4e4 <__adddf3>
   22b8c:	8009883a 	mov	r4,r16
   22b90:	1029883a 	mov	r20,r2
   22b94:	1823883a 	mov	r17,r3
   22b98:	002c9640 	call	2c964 <__floatsidf>
   22b9c:	019427f4 	movhi	r6,20639
   22ba0:	01cff4f4 	movhi	r7,16339
   22ba4:	319e7ec4 	addi	r6,r6,31227
   22ba8:	39d104c4 	addi	r7,r7,17427
   22bac:	1009883a 	mov	r4,r2
   22bb0:	180b883a 	mov	r5,r3
   22bb4:	002b8d00 	call	2b8d0 <__muldf3>
   22bb8:	100d883a 	mov	r6,r2
   22bbc:	180f883a 	mov	r7,r3
   22bc0:	a009883a 	mov	r4,r20
   22bc4:	880b883a 	mov	r5,r17
   22bc8:	002a4e40 	call	2a4e4 <__adddf3>
   22bcc:	1009883a 	mov	r4,r2
   22bd0:	180b883a 	mov	r5,r3
   22bd4:	1029883a 	mov	r20,r2
   22bd8:	1823883a 	mov	r17,r3
   22bdc:	002c8e40 	call	2c8e4 <__fixdfsi>
   22be0:	000d883a 	mov	r6,zero
   22be4:	000f883a 	mov	r7,zero
   22be8:	a009883a 	mov	r4,r20
   22bec:	880b883a 	mov	r5,r17
   22bf0:	d8800515 	stw	r2,20(sp)
   22bf4:	002b7dc0 	call	2b7dc <__ledf2>
   22bf8:	10028716 	blt	r2,zero,23618 <_dtoa_r+0xc88>
   22bfc:	d8c00517 	ldw	r3,20(sp)
   22c00:	00800584 	movi	r2,22
   22c04:	10c27536 	bltu	r2,r3,235dc <_dtoa_r+0xc4c>
   22c08:	180490fa 	slli	r2,r3,3
   22c0c:	00c000f4 	movhi	r3,3
   22c10:	18fcb504 	addi	r3,r3,-3372
   22c14:	1885883a 	add	r2,r3,r2
   22c18:	11000017 	ldw	r4,0(r2)
   22c1c:	11400117 	ldw	r5,4(r2)
   22c20:	900d883a 	mov	r6,r18
   22c24:	980f883a 	mov	r7,r19
   22c28:	002b7000 	call	2b700 <__gedf2>
   22c2c:	00828d0e 	bge	zero,r2,23664 <_dtoa_r+0xcd4>
   22c30:	d9000517 	ldw	r4,20(sp)
   22c34:	d8000e15 	stw	zero,56(sp)
   22c38:	213fffc4 	addi	r4,r4,-1
   22c3c:	d9000515 	stw	r4,20(sp)
   22c40:	b42dc83a 	sub	r22,r22,r16
   22c44:	b5bfffc4 	addi	r22,r22,-1
   22c48:	b0026f16 	blt	r22,zero,23608 <_dtoa_r+0xc78>
   22c4c:	d8000815 	stw	zero,32(sp)
   22c50:	d9c00517 	ldw	r7,20(sp)
   22c54:	38026416 	blt	r7,zero,235e8 <_dtoa_r+0xc58>
   22c58:	b1ed883a 	add	r22,r22,r7
   22c5c:	d9c00d15 	stw	r7,52(sp)
   22c60:	d8000a15 	stw	zero,40(sp)
   22c64:	d9800317 	ldw	r6,12(sp)
   22c68:	00800244 	movi	r2,9
   22c6c:	11811436 	bltu	r2,r6,230c0 <_dtoa_r+0x730>
   22c70:	00800144 	movi	r2,5
   22c74:	1184e10e 	bge	r2,r6,23ffc <_dtoa_r+0x166c>
   22c78:	31bfff04 	addi	r6,r6,-4
   22c7c:	d9800315 	stw	r6,12(sp)
   22c80:	0023883a 	mov	r17,zero
   22c84:	d9800317 	ldw	r6,12(sp)
   22c88:	008000c4 	movi	r2,3
   22c8c:	30836726 	beq	r6,r2,23a2c <_dtoa_r+0x109c>
   22c90:	1183410e 	bge	r2,r6,23998 <_dtoa_r+0x1008>
   22c94:	d9c00317 	ldw	r7,12(sp)
   22c98:	00800104 	movi	r2,4
   22c9c:	38827c26 	beq	r7,r2,23690 <_dtoa_r+0xd00>
   22ca0:	00800144 	movi	r2,5
   22ca4:	3884c41e 	bne	r7,r2,23fb8 <_dtoa_r+0x1628>
   22ca8:	00800044 	movi	r2,1
   22cac:	d8800b15 	stw	r2,44(sp)
   22cb0:	d8c00517 	ldw	r3,20(sp)
   22cb4:	d9002217 	ldw	r4,136(sp)
   22cb8:	1907883a 	add	r3,r3,r4
   22cbc:	19800044 	addi	r6,r3,1
   22cc0:	d8c00c15 	stw	r3,48(sp)
   22cc4:	d9800615 	stw	r6,24(sp)
   22cc8:	0183a40e 	bge	zero,r6,23b5c <_dtoa_r+0x11cc>
   22ccc:	d9800617 	ldw	r6,24(sp)
   22cd0:	3021883a 	mov	r16,r6
   22cd4:	e0001115 	stw	zero,68(fp)
   22cd8:	008005c4 	movi	r2,23
   22cdc:	1184c92e 	bgeu	r2,r6,24004 <_dtoa_r+0x1674>
   22ce0:	00c00044 	movi	r3,1
   22ce4:	00800104 	movi	r2,4
   22ce8:	1085883a 	add	r2,r2,r2
   22cec:	11000504 	addi	r4,r2,20
   22cf0:	180b883a 	mov	r5,r3
   22cf4:	18c00044 	addi	r3,r3,1
   22cf8:	313ffb2e 	bgeu	r6,r4,22ce8 <__alt_data_end+0xfffe2ce8>
   22cfc:	e1401115 	stw	r5,68(fp)
   22d00:	e009883a 	mov	r4,fp
   22d04:	0025a140 	call	25a14 <_Balloc>
   22d08:	d8800715 	stw	r2,28(sp)
   22d0c:	e0801015 	stw	r2,64(fp)
   22d10:	00800384 	movi	r2,14
   22d14:	1400f736 	bltu	r2,r16,230f4 <_dtoa_r+0x764>
   22d18:	8800f626 	beq	r17,zero,230f4 <_dtoa_r+0x764>
   22d1c:	d9c00517 	ldw	r7,20(sp)
   22d20:	01c39a0e 	bge	zero,r7,23b8c <_dtoa_r+0x11fc>
   22d24:	388003cc 	andi	r2,r7,15
   22d28:	100490fa 	slli	r2,r2,3
   22d2c:	382bd13a 	srai	r21,r7,4
   22d30:	00c000f4 	movhi	r3,3
   22d34:	18fcb504 	addi	r3,r3,-3372
   22d38:	1885883a 	add	r2,r3,r2
   22d3c:	a8c0040c 	andi	r3,r21,16
   22d40:	12400017 	ldw	r9,0(r2)
   22d44:	12000117 	ldw	r8,4(r2)
   22d48:	18037926 	beq	r3,zero,23b30 <_dtoa_r+0x11a0>
   22d4c:	008000f4 	movhi	r2,3
   22d50:	10bcab04 	addi	r2,r2,-3412
   22d54:	11800817 	ldw	r6,32(r2)
   22d58:	11c00917 	ldw	r7,36(r2)
   22d5c:	9009883a 	mov	r4,r18
   22d60:	980b883a 	mov	r5,r19
   22d64:	da001715 	stw	r8,92(sp)
   22d68:	da401615 	stw	r9,88(sp)
   22d6c:	002ad900 	call	2ad90 <__divdf3>
   22d70:	da001717 	ldw	r8,92(sp)
   22d74:	da401617 	ldw	r9,88(sp)
   22d78:	ad4003cc 	andi	r21,r21,15
   22d7c:	040000c4 	movi	r16,3
   22d80:	1023883a 	mov	r17,r2
   22d84:	1829883a 	mov	r20,r3
   22d88:	a8001126 	beq	r21,zero,22dd0 <_dtoa_r+0x440>
   22d8c:	05c000f4 	movhi	r23,3
   22d90:	bdfcab04 	addi	r23,r23,-3412
   22d94:	4805883a 	mov	r2,r9
   22d98:	4007883a 	mov	r3,r8
   22d9c:	a980004c 	andi	r6,r21,1
   22da0:	1009883a 	mov	r4,r2
   22da4:	a82bd07a 	srai	r21,r21,1
   22da8:	180b883a 	mov	r5,r3
   22dac:	30000426 	beq	r6,zero,22dc0 <_dtoa_r+0x430>
   22db0:	b9800017 	ldw	r6,0(r23)
   22db4:	b9c00117 	ldw	r7,4(r23)
   22db8:	84000044 	addi	r16,r16,1
   22dbc:	002b8d00 	call	2b8d0 <__muldf3>
   22dc0:	bdc00204 	addi	r23,r23,8
   22dc4:	a83ff51e 	bne	r21,zero,22d9c <__alt_data_end+0xfffe2d9c>
   22dc8:	1013883a 	mov	r9,r2
   22dcc:	1811883a 	mov	r8,r3
   22dd0:	480d883a 	mov	r6,r9
   22dd4:	400f883a 	mov	r7,r8
   22dd8:	8809883a 	mov	r4,r17
   22ddc:	a00b883a 	mov	r5,r20
   22de0:	002ad900 	call	2ad90 <__divdf3>
   22de4:	d8800f15 	stw	r2,60(sp)
   22de8:	d8c01015 	stw	r3,64(sp)
   22dec:	d8c00e17 	ldw	r3,56(sp)
   22df0:	18000626 	beq	r3,zero,22e0c <_dtoa_r+0x47c>
   22df4:	d9000f17 	ldw	r4,60(sp)
   22df8:	d9401017 	ldw	r5,64(sp)
   22dfc:	000d883a 	mov	r6,zero
   22e00:	01cffc34 	movhi	r7,16368
   22e04:	002b7dc0 	call	2b7dc <__ledf2>
   22e08:	10040b16 	blt	r2,zero,23e38 <_dtoa_r+0x14a8>
   22e0c:	8009883a 	mov	r4,r16
   22e10:	002c9640 	call	2c964 <__floatsidf>
   22e14:	d9800f17 	ldw	r6,60(sp)
   22e18:	d9c01017 	ldw	r7,64(sp)
   22e1c:	1009883a 	mov	r4,r2
   22e20:	180b883a 	mov	r5,r3
   22e24:	002b8d00 	call	2b8d0 <__muldf3>
   22e28:	000d883a 	mov	r6,zero
   22e2c:	01d00734 	movhi	r7,16412
   22e30:	1009883a 	mov	r4,r2
   22e34:	180b883a 	mov	r5,r3
   22e38:	002a4e40 	call	2a4e4 <__adddf3>
   22e3c:	1021883a 	mov	r16,r2
   22e40:	d8800617 	ldw	r2,24(sp)
   22e44:	047f3034 	movhi	r17,64704
   22e48:	1c63883a 	add	r17,r3,r17
   22e4c:	10031826 	beq	r2,zero,23ab0 <_dtoa_r+0x1120>
   22e50:	d8c00517 	ldw	r3,20(sp)
   22e54:	db000617 	ldw	r12,24(sp)
   22e58:	d8c01315 	stw	r3,76(sp)
   22e5c:	d9000b17 	ldw	r4,44(sp)
   22e60:	20038f26 	beq	r4,zero,23ca0 <_dtoa_r+0x1310>
   22e64:	60bfffc4 	addi	r2,r12,-1
   22e68:	100490fa 	slli	r2,r2,3
   22e6c:	00c000f4 	movhi	r3,3
   22e70:	18fcb504 	addi	r3,r3,-3372
   22e74:	1885883a 	add	r2,r3,r2
   22e78:	11800017 	ldw	r6,0(r2)
   22e7c:	11c00117 	ldw	r7,4(r2)
   22e80:	d8800717 	ldw	r2,28(sp)
   22e84:	0009883a 	mov	r4,zero
   22e88:	014ff834 	movhi	r5,16352
   22e8c:	db001615 	stw	r12,88(sp)
   22e90:	15c00044 	addi	r23,r2,1
   22e94:	002ad900 	call	2ad90 <__divdf3>
   22e98:	800d883a 	mov	r6,r16
   22e9c:	880f883a 	mov	r7,r17
   22ea0:	1009883a 	mov	r4,r2
   22ea4:	180b883a 	mov	r5,r3
   22ea8:	002bfe80 	call	2bfe8 <__subdf3>
   22eac:	d9401017 	ldw	r5,64(sp)
   22eb0:	d9000f17 	ldw	r4,60(sp)
   22eb4:	102b883a 	mov	r21,r2
   22eb8:	d8c01215 	stw	r3,72(sp)
   22ebc:	002c8e40 	call	2c8e4 <__fixdfsi>
   22ec0:	1009883a 	mov	r4,r2
   22ec4:	1029883a 	mov	r20,r2
   22ec8:	002c9640 	call	2c964 <__floatsidf>
   22ecc:	d9000f17 	ldw	r4,60(sp)
   22ed0:	d9401017 	ldw	r5,64(sp)
   22ed4:	100d883a 	mov	r6,r2
   22ed8:	180f883a 	mov	r7,r3
   22edc:	002bfe80 	call	2bfe8 <__subdf3>
   22ee0:	1823883a 	mov	r17,r3
   22ee4:	d8c00717 	ldw	r3,28(sp)
   22ee8:	d9401217 	ldw	r5,72(sp)
   22eec:	a2000c04 	addi	r8,r20,48
   22ef0:	1021883a 	mov	r16,r2
   22ef4:	1a000005 	stb	r8,0(r3)
   22ef8:	800d883a 	mov	r6,r16
   22efc:	880f883a 	mov	r7,r17
   22f00:	a809883a 	mov	r4,r21
   22f04:	4029883a 	mov	r20,r8
   22f08:	002b7000 	call	2b700 <__gedf2>
   22f0c:	00841d16 	blt	zero,r2,23f84 <_dtoa_r+0x15f4>
   22f10:	800d883a 	mov	r6,r16
   22f14:	880f883a 	mov	r7,r17
   22f18:	0009883a 	mov	r4,zero
   22f1c:	014ffc34 	movhi	r5,16368
   22f20:	002bfe80 	call	2bfe8 <__subdf3>
   22f24:	d9401217 	ldw	r5,72(sp)
   22f28:	100d883a 	mov	r6,r2
   22f2c:	180f883a 	mov	r7,r3
   22f30:	a809883a 	mov	r4,r21
   22f34:	002b7000 	call	2b700 <__gedf2>
   22f38:	db001617 	ldw	r12,88(sp)
   22f3c:	00840e16 	blt	zero,r2,23f78 <_dtoa_r+0x15e8>
   22f40:	00800044 	movi	r2,1
   22f44:	13006b0e 	bge	r2,r12,230f4 <_dtoa_r+0x764>
   22f48:	d9000717 	ldw	r4,28(sp)
   22f4c:	dd800f15 	stw	r22,60(sp)
   22f50:	dcc01015 	stw	r19,64(sp)
   22f54:	2319883a 	add	r12,r4,r12
   22f58:	dcc01217 	ldw	r19,72(sp)
   22f5c:	602d883a 	mov	r22,r12
   22f60:	dc801215 	stw	r18,72(sp)
   22f64:	b825883a 	mov	r18,r23
   22f68:	00000906 	br	22f90 <_dtoa_r+0x600>
   22f6c:	002bfe80 	call	2bfe8 <__subdf3>
   22f70:	a80d883a 	mov	r6,r21
   22f74:	980f883a 	mov	r7,r19
   22f78:	1009883a 	mov	r4,r2
   22f7c:	180b883a 	mov	r5,r3
   22f80:	002b7dc0 	call	2b7dc <__ledf2>
   22f84:	1003e816 	blt	r2,zero,23f28 <_dtoa_r+0x1598>
   22f88:	b825883a 	mov	r18,r23
   22f8c:	bd83e926 	beq	r23,r22,23f34 <_dtoa_r+0x15a4>
   22f90:	a809883a 	mov	r4,r21
   22f94:	980b883a 	mov	r5,r19
   22f98:	000d883a 	mov	r6,zero
   22f9c:	01d00934 	movhi	r7,16420
   22fa0:	002b8d00 	call	2b8d0 <__muldf3>
   22fa4:	000d883a 	mov	r6,zero
   22fa8:	01d00934 	movhi	r7,16420
   22fac:	8009883a 	mov	r4,r16
   22fb0:	880b883a 	mov	r5,r17
   22fb4:	102b883a 	mov	r21,r2
   22fb8:	1827883a 	mov	r19,r3
   22fbc:	002b8d00 	call	2b8d0 <__muldf3>
   22fc0:	180b883a 	mov	r5,r3
   22fc4:	1009883a 	mov	r4,r2
   22fc8:	1821883a 	mov	r16,r3
   22fcc:	1023883a 	mov	r17,r2
   22fd0:	002c8e40 	call	2c8e4 <__fixdfsi>
   22fd4:	1009883a 	mov	r4,r2
   22fd8:	1029883a 	mov	r20,r2
   22fdc:	002c9640 	call	2c964 <__floatsidf>
   22fe0:	8809883a 	mov	r4,r17
   22fe4:	800b883a 	mov	r5,r16
   22fe8:	100d883a 	mov	r6,r2
   22fec:	180f883a 	mov	r7,r3
   22ff0:	002bfe80 	call	2bfe8 <__subdf3>
   22ff4:	a5000c04 	addi	r20,r20,48
   22ff8:	a80d883a 	mov	r6,r21
   22ffc:	980f883a 	mov	r7,r19
   23000:	1009883a 	mov	r4,r2
   23004:	180b883a 	mov	r5,r3
   23008:	95000005 	stb	r20,0(r18)
   2300c:	1021883a 	mov	r16,r2
   23010:	1823883a 	mov	r17,r3
   23014:	002b7dc0 	call	2b7dc <__ledf2>
   23018:	bdc00044 	addi	r23,r23,1
   2301c:	800d883a 	mov	r6,r16
   23020:	880f883a 	mov	r7,r17
   23024:	0009883a 	mov	r4,zero
   23028:	014ffc34 	movhi	r5,16368
   2302c:	103fcf0e 	bge	r2,zero,22f6c <__alt_data_end+0xfffe2f6c>
   23030:	d8c01317 	ldw	r3,76(sp)
   23034:	d8c00515 	stw	r3,20(sp)
   23038:	d9400917 	ldw	r5,36(sp)
   2303c:	e009883a 	mov	r4,fp
   23040:	0025abc0 	call	25abc <_Bfree>
   23044:	d9000517 	ldw	r4,20(sp)
   23048:	d9802317 	ldw	r6,140(sp)
   2304c:	d9c02517 	ldw	r7,148(sp)
   23050:	b8000005 	stb	zero,0(r23)
   23054:	20800044 	addi	r2,r4,1
   23058:	30800015 	stw	r2,0(r6)
   2305c:	3802aa26 	beq	r7,zero,23b08 <_dtoa_r+0x1178>
   23060:	3dc00015 	stw	r23,0(r7)
   23064:	d8800717 	ldw	r2,28(sp)
   23068:	003e7906 	br	22a50 <__alt_data_end+0xfffe2a50>
   2306c:	00800434 	movhi	r2,16
   23070:	10bfffc4 	addi	r2,r2,-1
   23074:	88a2703a 	and	r17,r17,r2
   23078:	883e851e 	bne	r17,zero,22a90 <__alt_data_end+0xfffe2a90>
   2307c:	008000f4 	movhi	r2,3
   23080:	10bc9604 	addi	r2,r2,-3496
   23084:	003e8406 	br	22a98 <__alt_data_end+0xfffe2a98>
   23088:	10c00204 	addi	r3,r2,8
   2308c:	003e8706 	br	22aac <__alt_data_end+0xfffe2aac>
   23090:	01400434 	movhi	r5,16
   23094:	297fffc4 	addi	r5,r5,-1
   23098:	994a703a 	and	r5,r19,r5
   2309c:	9009883a 	mov	r4,r18
   230a0:	843f0044 	addi	r16,r16,-1023
   230a4:	294ffc34 	orhi	r5,r5,16368
   230a8:	dd800217 	ldw	r22,8(sp)
   230ac:	d8001115 	stw	zero,68(sp)
   230b0:	003ea506 	br	22b48 <__alt_data_end+0xfffe2b48>
   230b4:	008000f4 	movhi	r2,3
   230b8:	10bc8d04 	addi	r2,r2,-3532
   230bc:	003e6406 	br	22a50 <__alt_data_end+0xfffe2a50>
   230c0:	e0001115 	stw	zero,68(fp)
   230c4:	000b883a 	mov	r5,zero
   230c8:	e009883a 	mov	r4,fp
   230cc:	0025a140 	call	25a14 <_Balloc>
   230d0:	01bfffc4 	movi	r6,-1
   230d4:	01c00044 	movi	r7,1
   230d8:	d8800715 	stw	r2,28(sp)
   230dc:	d9800c15 	stw	r6,48(sp)
   230e0:	e0801015 	stw	r2,64(fp)
   230e4:	d8000315 	stw	zero,12(sp)
   230e8:	d9c00b15 	stw	r7,44(sp)
   230ec:	d9800615 	stw	r6,24(sp)
   230f0:	d8002215 	stw	zero,136(sp)
   230f4:	d8800117 	ldw	r2,4(sp)
   230f8:	10008916 	blt	r2,zero,23320 <_dtoa_r+0x990>
   230fc:	d9000517 	ldw	r4,20(sp)
   23100:	00c00384 	movi	r3,14
   23104:	19008616 	blt	r3,r4,23320 <_dtoa_r+0x990>
   23108:	200490fa 	slli	r2,r4,3
   2310c:	00c000f4 	movhi	r3,3
   23110:	d9802217 	ldw	r6,136(sp)
   23114:	18fcb504 	addi	r3,r3,-3372
   23118:	1885883a 	add	r2,r3,r2
   2311c:	14000017 	ldw	r16,0(r2)
   23120:	14400117 	ldw	r17,4(r2)
   23124:	30016316 	blt	r6,zero,236b4 <_dtoa_r+0xd24>
   23128:	800d883a 	mov	r6,r16
   2312c:	880f883a 	mov	r7,r17
   23130:	9009883a 	mov	r4,r18
   23134:	980b883a 	mov	r5,r19
   23138:	002ad900 	call	2ad90 <__divdf3>
   2313c:	180b883a 	mov	r5,r3
   23140:	1009883a 	mov	r4,r2
   23144:	002c8e40 	call	2c8e4 <__fixdfsi>
   23148:	1009883a 	mov	r4,r2
   2314c:	102b883a 	mov	r21,r2
   23150:	002c9640 	call	2c964 <__floatsidf>
   23154:	800d883a 	mov	r6,r16
   23158:	880f883a 	mov	r7,r17
   2315c:	1009883a 	mov	r4,r2
   23160:	180b883a 	mov	r5,r3
   23164:	002b8d00 	call	2b8d0 <__muldf3>
   23168:	100d883a 	mov	r6,r2
   2316c:	180f883a 	mov	r7,r3
   23170:	9009883a 	mov	r4,r18
   23174:	980b883a 	mov	r5,r19
   23178:	002bfe80 	call	2bfe8 <__subdf3>
   2317c:	d9c00717 	ldw	r7,28(sp)
   23180:	1009883a 	mov	r4,r2
   23184:	a8800c04 	addi	r2,r21,48
   23188:	38800005 	stb	r2,0(r7)
   2318c:	3dc00044 	addi	r23,r7,1
   23190:	d9c00617 	ldw	r7,24(sp)
   23194:	01800044 	movi	r6,1
   23198:	180b883a 	mov	r5,r3
   2319c:	2005883a 	mov	r2,r4
   231a0:	39803826 	beq	r7,r6,23284 <_dtoa_r+0x8f4>
   231a4:	000d883a 	mov	r6,zero
   231a8:	01d00934 	movhi	r7,16420
   231ac:	002b8d00 	call	2b8d0 <__muldf3>
   231b0:	000d883a 	mov	r6,zero
   231b4:	000f883a 	mov	r7,zero
   231b8:	1009883a 	mov	r4,r2
   231bc:	180b883a 	mov	r5,r3
   231c0:	1025883a 	mov	r18,r2
   231c4:	1827883a 	mov	r19,r3
   231c8:	002b6780 	call	2b678 <__eqdf2>
   231cc:	103f9a26 	beq	r2,zero,23038 <__alt_data_end+0xfffe3038>
   231d0:	d9c00617 	ldw	r7,24(sp)
   231d4:	d8c00717 	ldw	r3,28(sp)
   231d8:	b829883a 	mov	r20,r23
   231dc:	38bfffc4 	addi	r2,r7,-1
   231e0:	18ad883a 	add	r22,r3,r2
   231e4:	00000a06 	br	23210 <_dtoa_r+0x880>
   231e8:	002b8d00 	call	2b8d0 <__muldf3>
   231ec:	000d883a 	mov	r6,zero
   231f0:	000f883a 	mov	r7,zero
   231f4:	1009883a 	mov	r4,r2
   231f8:	180b883a 	mov	r5,r3
   231fc:	1025883a 	mov	r18,r2
   23200:	1827883a 	mov	r19,r3
   23204:	b829883a 	mov	r20,r23
   23208:	002b6780 	call	2b678 <__eqdf2>
   2320c:	103f8a26 	beq	r2,zero,23038 <__alt_data_end+0xfffe3038>
   23210:	800d883a 	mov	r6,r16
   23214:	880f883a 	mov	r7,r17
   23218:	9009883a 	mov	r4,r18
   2321c:	980b883a 	mov	r5,r19
   23220:	002ad900 	call	2ad90 <__divdf3>
   23224:	180b883a 	mov	r5,r3
   23228:	1009883a 	mov	r4,r2
   2322c:	002c8e40 	call	2c8e4 <__fixdfsi>
   23230:	1009883a 	mov	r4,r2
   23234:	102b883a 	mov	r21,r2
   23238:	002c9640 	call	2c964 <__floatsidf>
   2323c:	800d883a 	mov	r6,r16
   23240:	880f883a 	mov	r7,r17
   23244:	1009883a 	mov	r4,r2
   23248:	180b883a 	mov	r5,r3
   2324c:	002b8d00 	call	2b8d0 <__muldf3>
   23250:	100d883a 	mov	r6,r2
   23254:	180f883a 	mov	r7,r3
   23258:	9009883a 	mov	r4,r18
   2325c:	980b883a 	mov	r5,r19
   23260:	002bfe80 	call	2bfe8 <__subdf3>
   23264:	aa000c04 	addi	r8,r21,48
   23268:	a2000005 	stb	r8,0(r20)
   2326c:	000d883a 	mov	r6,zero
   23270:	01d00934 	movhi	r7,16420
   23274:	1009883a 	mov	r4,r2
   23278:	180b883a 	mov	r5,r3
   2327c:	a5c00044 	addi	r23,r20,1
   23280:	b53fd91e 	bne	r22,r20,231e8 <__alt_data_end+0xfffe31e8>
   23284:	100d883a 	mov	r6,r2
   23288:	180f883a 	mov	r7,r3
   2328c:	1009883a 	mov	r4,r2
   23290:	180b883a 	mov	r5,r3
   23294:	002a4e40 	call	2a4e4 <__adddf3>
   23298:	100d883a 	mov	r6,r2
   2329c:	180f883a 	mov	r7,r3
   232a0:	8009883a 	mov	r4,r16
   232a4:	880b883a 	mov	r5,r17
   232a8:	1027883a 	mov	r19,r2
   232ac:	1825883a 	mov	r18,r3
   232b0:	002b7dc0 	call	2b7dc <__ledf2>
   232b4:	10000816 	blt	r2,zero,232d8 <_dtoa_r+0x948>
   232b8:	980d883a 	mov	r6,r19
   232bc:	900f883a 	mov	r7,r18
   232c0:	8009883a 	mov	r4,r16
   232c4:	880b883a 	mov	r5,r17
   232c8:	002b6780 	call	2b678 <__eqdf2>
   232cc:	103f5a1e 	bne	r2,zero,23038 <__alt_data_end+0xfffe3038>
   232d0:	ad40004c 	andi	r21,r21,1
   232d4:	a83f5826 	beq	r21,zero,23038 <__alt_data_end+0xfffe3038>
   232d8:	bd3fffc3 	ldbu	r20,-1(r23)
   232dc:	b8bfffc4 	addi	r2,r23,-1
   232e0:	1007883a 	mov	r3,r2
   232e4:	01400e44 	movi	r5,57
   232e8:	d9800717 	ldw	r6,28(sp)
   232ec:	00000506 	br	23304 <_dtoa_r+0x974>
   232f0:	18ffffc4 	addi	r3,r3,-1
   232f4:	11824726 	beq	r2,r6,23c14 <_dtoa_r+0x1284>
   232f8:	1d000003 	ldbu	r20,0(r3)
   232fc:	102f883a 	mov	r23,r2
   23300:	10bfffc4 	addi	r2,r2,-1
   23304:	a1003fcc 	andi	r4,r20,255
   23308:	2100201c 	xori	r4,r4,128
   2330c:	213fe004 	addi	r4,r4,-128
   23310:	217ff726 	beq	r4,r5,232f0 <__alt_data_end+0xfffe32f0>
   23314:	a2000044 	addi	r8,r20,1
   23318:	12000005 	stb	r8,0(r2)
   2331c:	003f4606 	br	23038 <__alt_data_end+0xfffe3038>
   23320:	d9000b17 	ldw	r4,44(sp)
   23324:	2000c826 	beq	r4,zero,23648 <_dtoa_r+0xcb8>
   23328:	d9800317 	ldw	r6,12(sp)
   2332c:	00c00044 	movi	r3,1
   23330:	1980f90e 	bge	r3,r6,23718 <_dtoa_r+0xd88>
   23334:	d8800617 	ldw	r2,24(sp)
   23338:	d8c00a17 	ldw	r3,40(sp)
   2333c:	157fffc4 	addi	r21,r2,-1
   23340:	1d41f316 	blt	r3,r21,23b10 <_dtoa_r+0x1180>
   23344:	1d6bc83a 	sub	r21,r3,r21
   23348:	d9c00617 	ldw	r7,24(sp)
   2334c:	3802aa16 	blt	r7,zero,23df8 <_dtoa_r+0x1468>
   23350:	dd000817 	ldw	r20,32(sp)
   23354:	d8800617 	ldw	r2,24(sp)
   23358:	d8c00817 	ldw	r3,32(sp)
   2335c:	01400044 	movi	r5,1
   23360:	e009883a 	mov	r4,fp
   23364:	1887883a 	add	r3,r3,r2
   23368:	d8c00815 	stw	r3,32(sp)
   2336c:	b0ad883a 	add	r22,r22,r2
   23370:	0025e200 	call	25e20 <__i2b>
   23374:	1023883a 	mov	r17,r2
   23378:	a0000826 	beq	r20,zero,2339c <_dtoa_r+0xa0c>
   2337c:	0580070e 	bge	zero,r22,2339c <_dtoa_r+0xa0c>
   23380:	a005883a 	mov	r2,r20
   23384:	b500b916 	blt	r22,r20,2366c <_dtoa_r+0xcdc>
   23388:	d9000817 	ldw	r4,32(sp)
   2338c:	a0a9c83a 	sub	r20,r20,r2
   23390:	b0adc83a 	sub	r22,r22,r2
   23394:	2089c83a 	sub	r4,r4,r2
   23398:	d9000815 	stw	r4,32(sp)
   2339c:	d9800a17 	ldw	r6,40(sp)
   233a0:	0181810e 	bge	zero,r6,239a8 <_dtoa_r+0x1018>
   233a4:	d9c00b17 	ldw	r7,44(sp)
   233a8:	3800b326 	beq	r7,zero,23678 <_dtoa_r+0xce8>
   233ac:	a800b226 	beq	r21,zero,23678 <_dtoa_r+0xce8>
   233b0:	880b883a 	mov	r5,r17
   233b4:	a80d883a 	mov	r6,r21
   233b8:	e009883a 	mov	r4,fp
   233bc:	00260540 	call	26054 <__pow5mult>
   233c0:	d9800917 	ldw	r6,36(sp)
   233c4:	100b883a 	mov	r5,r2
   233c8:	e009883a 	mov	r4,fp
   233cc:	1023883a 	mov	r17,r2
   233d0:	0025e5c0 	call	25e5c <__multiply>
   233d4:	1021883a 	mov	r16,r2
   233d8:	d8800a17 	ldw	r2,40(sp)
   233dc:	d9400917 	ldw	r5,36(sp)
   233e0:	e009883a 	mov	r4,fp
   233e4:	1545c83a 	sub	r2,r2,r21
   233e8:	d8800a15 	stw	r2,40(sp)
   233ec:	0025abc0 	call	25abc <_Bfree>
   233f0:	d8c00a17 	ldw	r3,40(sp)
   233f4:	18009f1e 	bne	r3,zero,23674 <_dtoa_r+0xce4>
   233f8:	05c00044 	movi	r23,1
   233fc:	e009883a 	mov	r4,fp
   23400:	b80b883a 	mov	r5,r23
   23404:	0025e200 	call	25e20 <__i2b>
   23408:	d9000d17 	ldw	r4,52(sp)
   2340c:	102b883a 	mov	r21,r2
   23410:	2000ce26 	beq	r4,zero,2374c <_dtoa_r+0xdbc>
   23414:	200d883a 	mov	r6,r4
   23418:	100b883a 	mov	r5,r2
   2341c:	e009883a 	mov	r4,fp
   23420:	00260540 	call	26054 <__pow5mult>
   23424:	d9800317 	ldw	r6,12(sp)
   23428:	102b883a 	mov	r21,r2
   2342c:	b981810e 	bge	r23,r6,23a34 <_dtoa_r+0x10a4>
   23430:	0027883a 	mov	r19,zero
   23434:	a8800417 	ldw	r2,16(r21)
   23438:	05c00804 	movi	r23,32
   2343c:	10800104 	addi	r2,r2,4
   23440:	1085883a 	add	r2,r2,r2
   23444:	1085883a 	add	r2,r2,r2
   23448:	a885883a 	add	r2,r21,r2
   2344c:	11000017 	ldw	r4,0(r2)
   23450:	0025d080 	call	25d08 <__hi0bits>
   23454:	b885c83a 	sub	r2,r23,r2
   23458:	1585883a 	add	r2,r2,r22
   2345c:	108007cc 	andi	r2,r2,31
   23460:	1000b326 	beq	r2,zero,23730 <_dtoa_r+0xda0>
   23464:	00c00804 	movi	r3,32
   23468:	1887c83a 	sub	r3,r3,r2
   2346c:	01000104 	movi	r4,4
   23470:	20c2cd0e 	bge	r4,r3,23fa8 <_dtoa_r+0x1618>
   23474:	00c00704 	movi	r3,28
   23478:	1885c83a 	sub	r2,r3,r2
   2347c:	d8c00817 	ldw	r3,32(sp)
   23480:	a0a9883a 	add	r20,r20,r2
   23484:	b0ad883a 	add	r22,r22,r2
   23488:	1887883a 	add	r3,r3,r2
   2348c:	d8c00815 	stw	r3,32(sp)
   23490:	d9800817 	ldw	r6,32(sp)
   23494:	0180040e 	bge	zero,r6,234a8 <_dtoa_r+0xb18>
   23498:	800b883a 	mov	r5,r16
   2349c:	e009883a 	mov	r4,fp
   234a0:	00261940 	call	26194 <__lshift>
   234a4:	1021883a 	mov	r16,r2
   234a8:	0580050e 	bge	zero,r22,234c0 <_dtoa_r+0xb30>
   234ac:	a80b883a 	mov	r5,r21
   234b0:	b00d883a 	mov	r6,r22
   234b4:	e009883a 	mov	r4,fp
   234b8:	00261940 	call	26194 <__lshift>
   234bc:	102b883a 	mov	r21,r2
   234c0:	d9c00e17 	ldw	r7,56(sp)
   234c4:	3801211e 	bne	r7,zero,2394c <_dtoa_r+0xfbc>
   234c8:	d9800617 	ldw	r6,24(sp)
   234cc:	0181380e 	bge	zero,r6,239b0 <_dtoa_r+0x1020>
   234d0:	d8c00b17 	ldw	r3,44(sp)
   234d4:	1800ab1e 	bne	r3,zero,23784 <_dtoa_r+0xdf4>
   234d8:	dc800717 	ldw	r18,28(sp)
   234dc:	dcc00617 	ldw	r19,24(sp)
   234e0:	9029883a 	mov	r20,r18
   234e4:	00000206 	br	234f0 <_dtoa_r+0xb60>
   234e8:	0025ae40 	call	25ae4 <__multadd>
   234ec:	1021883a 	mov	r16,r2
   234f0:	a80b883a 	mov	r5,r21
   234f4:	8009883a 	mov	r4,r16
   234f8:	00227900 	call	22790 <quorem>
   234fc:	10800c04 	addi	r2,r2,48
   23500:	90800005 	stb	r2,0(r18)
   23504:	94800044 	addi	r18,r18,1
   23508:	9507c83a 	sub	r3,r18,r20
   2350c:	000f883a 	mov	r7,zero
   23510:	01800284 	movi	r6,10
   23514:	800b883a 	mov	r5,r16
   23518:	e009883a 	mov	r4,fp
   2351c:	1cfff216 	blt	r3,r19,234e8 <__alt_data_end+0xfffe34e8>
   23520:	1011883a 	mov	r8,r2
   23524:	d8800617 	ldw	r2,24(sp)
   23528:	0082370e 	bge	zero,r2,23e08 <_dtoa_r+0x1478>
   2352c:	d9000717 	ldw	r4,28(sp)
   23530:	0025883a 	mov	r18,zero
   23534:	20af883a 	add	r23,r4,r2
   23538:	01800044 	movi	r6,1
   2353c:	800b883a 	mov	r5,r16
   23540:	e009883a 	mov	r4,fp
   23544:	da001715 	stw	r8,92(sp)
   23548:	00261940 	call	26194 <__lshift>
   2354c:	a80b883a 	mov	r5,r21
   23550:	1009883a 	mov	r4,r2
   23554:	d8800915 	stw	r2,36(sp)
   23558:	00262dc0 	call	262dc <__mcmp>
   2355c:	da001717 	ldw	r8,92(sp)
   23560:	0081800e 	bge	zero,r2,23b64 <_dtoa_r+0x11d4>
   23564:	b93fffc3 	ldbu	r4,-1(r23)
   23568:	b8bfffc4 	addi	r2,r23,-1
   2356c:	1007883a 	mov	r3,r2
   23570:	01800e44 	movi	r6,57
   23574:	d9c00717 	ldw	r7,28(sp)
   23578:	00000506 	br	23590 <_dtoa_r+0xc00>
   2357c:	18ffffc4 	addi	r3,r3,-1
   23580:	11c12326 	beq	r2,r7,23a10 <_dtoa_r+0x1080>
   23584:	19000003 	ldbu	r4,0(r3)
   23588:	102f883a 	mov	r23,r2
   2358c:	10bfffc4 	addi	r2,r2,-1
   23590:	21403fcc 	andi	r5,r4,255
   23594:	2940201c 	xori	r5,r5,128
   23598:	297fe004 	addi	r5,r5,-128
   2359c:	29bff726 	beq	r5,r6,2357c <__alt_data_end+0xfffe357c>
   235a0:	21000044 	addi	r4,r4,1
   235a4:	11000005 	stb	r4,0(r2)
   235a8:	a80b883a 	mov	r5,r21
   235ac:	e009883a 	mov	r4,fp
   235b0:	0025abc0 	call	25abc <_Bfree>
   235b4:	883ea026 	beq	r17,zero,23038 <__alt_data_end+0xfffe3038>
   235b8:	90000426 	beq	r18,zero,235cc <_dtoa_r+0xc3c>
   235bc:	94400326 	beq	r18,r17,235cc <_dtoa_r+0xc3c>
   235c0:	900b883a 	mov	r5,r18
   235c4:	e009883a 	mov	r4,fp
   235c8:	0025abc0 	call	25abc <_Bfree>
   235cc:	880b883a 	mov	r5,r17
   235d0:	e009883a 	mov	r4,fp
   235d4:	0025abc0 	call	25abc <_Bfree>
   235d8:	003e9706 	br	23038 <__alt_data_end+0xfffe3038>
   235dc:	01800044 	movi	r6,1
   235e0:	d9800e15 	stw	r6,56(sp)
   235e4:	003d9606 	br	22c40 <__alt_data_end+0xfffe2c40>
   235e8:	d8800817 	ldw	r2,32(sp)
   235ec:	d8c00517 	ldw	r3,20(sp)
   235f0:	d8000d15 	stw	zero,52(sp)
   235f4:	10c5c83a 	sub	r2,r2,r3
   235f8:	00c9c83a 	sub	r4,zero,r3
   235fc:	d8800815 	stw	r2,32(sp)
   23600:	d9000a15 	stw	r4,40(sp)
   23604:	003d9706 	br	22c64 <__alt_data_end+0xfffe2c64>
   23608:	05adc83a 	sub	r22,zero,r22
   2360c:	dd800815 	stw	r22,32(sp)
   23610:	002d883a 	mov	r22,zero
   23614:	003d8e06 	br	22c50 <__alt_data_end+0xfffe2c50>
   23618:	d9000517 	ldw	r4,20(sp)
   2361c:	002c9640 	call	2c964 <__floatsidf>
   23620:	100d883a 	mov	r6,r2
   23624:	180f883a 	mov	r7,r3
   23628:	a009883a 	mov	r4,r20
   2362c:	880b883a 	mov	r5,r17
   23630:	002b6780 	call	2b678 <__eqdf2>
   23634:	103d7126 	beq	r2,zero,22bfc <__alt_data_end+0xfffe2bfc>
   23638:	d9c00517 	ldw	r7,20(sp)
   2363c:	39ffffc4 	addi	r7,r7,-1
   23640:	d9c00515 	stw	r7,20(sp)
   23644:	003d6d06 	br	22bfc <__alt_data_end+0xfffe2bfc>
   23648:	dd400a17 	ldw	r21,40(sp)
   2364c:	dd000817 	ldw	r20,32(sp)
   23650:	0023883a 	mov	r17,zero
   23654:	003f4806 	br	23378 <__alt_data_end+0xfffe3378>
   23658:	10e3c83a 	sub	r17,r2,r3
   2365c:	9448983a 	sll	r4,r18,r17
   23660:	003d3206 	br	22b2c <__alt_data_end+0xfffe2b2c>
   23664:	d8000e15 	stw	zero,56(sp)
   23668:	003d7506 	br	22c40 <__alt_data_end+0xfffe2c40>
   2366c:	b005883a 	mov	r2,r22
   23670:	003f4506 	br	23388 <__alt_data_end+0xfffe3388>
   23674:	dc000915 	stw	r16,36(sp)
   23678:	d9800a17 	ldw	r6,40(sp)
   2367c:	d9400917 	ldw	r5,36(sp)
   23680:	e009883a 	mov	r4,fp
   23684:	00260540 	call	26054 <__pow5mult>
   23688:	1021883a 	mov	r16,r2
   2368c:	003f5a06 	br	233f8 <__alt_data_end+0xfffe33f8>
   23690:	01c00044 	movi	r7,1
   23694:	d9c00b15 	stw	r7,44(sp)
   23698:	d8802217 	ldw	r2,136(sp)
   2369c:	0081280e 	bge	zero,r2,23b40 <_dtoa_r+0x11b0>
   236a0:	100d883a 	mov	r6,r2
   236a4:	1021883a 	mov	r16,r2
   236a8:	d8800c15 	stw	r2,48(sp)
   236ac:	d8800615 	stw	r2,24(sp)
   236b0:	003d8806 	br	22cd4 <__alt_data_end+0xfffe2cd4>
   236b4:	d8800617 	ldw	r2,24(sp)
   236b8:	00be9b16 	blt	zero,r2,23128 <__alt_data_end+0xfffe3128>
   236bc:	10010f1e 	bne	r2,zero,23afc <_dtoa_r+0x116c>
   236c0:	880b883a 	mov	r5,r17
   236c4:	000d883a 	mov	r6,zero
   236c8:	01d00534 	movhi	r7,16404
   236cc:	8009883a 	mov	r4,r16
   236d0:	002b8d00 	call	2b8d0 <__muldf3>
   236d4:	900d883a 	mov	r6,r18
   236d8:	980f883a 	mov	r7,r19
   236dc:	1009883a 	mov	r4,r2
   236e0:	180b883a 	mov	r5,r3
   236e4:	002b7000 	call	2b700 <__gedf2>
   236e8:	002b883a 	mov	r21,zero
   236ec:	0023883a 	mov	r17,zero
   236f0:	1000bf16 	blt	r2,zero,239f0 <_dtoa_r+0x1060>
   236f4:	d9802217 	ldw	r6,136(sp)
   236f8:	ddc00717 	ldw	r23,28(sp)
   236fc:	018c303a 	nor	r6,zero,r6
   23700:	d9800515 	stw	r6,20(sp)
   23704:	a80b883a 	mov	r5,r21
   23708:	e009883a 	mov	r4,fp
   2370c:	0025abc0 	call	25abc <_Bfree>
   23710:	883e4926 	beq	r17,zero,23038 <__alt_data_end+0xfffe3038>
   23714:	003fad06 	br	235cc <__alt_data_end+0xfffe35cc>
   23718:	d9c01117 	ldw	r7,68(sp)
   2371c:	3801bc26 	beq	r7,zero,23e10 <_dtoa_r+0x1480>
   23720:	10810cc4 	addi	r2,r2,1075
   23724:	dd400a17 	ldw	r21,40(sp)
   23728:	dd000817 	ldw	r20,32(sp)
   2372c:	003f0a06 	br	23358 <__alt_data_end+0xfffe3358>
   23730:	00800704 	movi	r2,28
   23734:	d9000817 	ldw	r4,32(sp)
   23738:	a0a9883a 	add	r20,r20,r2
   2373c:	b0ad883a 	add	r22,r22,r2
   23740:	2089883a 	add	r4,r4,r2
   23744:	d9000815 	stw	r4,32(sp)
   23748:	003f5106 	br	23490 <__alt_data_end+0xfffe3490>
   2374c:	d8c00317 	ldw	r3,12(sp)
   23750:	b8c1fc0e 	bge	r23,r3,23f44 <_dtoa_r+0x15b4>
   23754:	0027883a 	mov	r19,zero
   23758:	b805883a 	mov	r2,r23
   2375c:	003f3e06 	br	23458 <__alt_data_end+0xfffe3458>
   23760:	880b883a 	mov	r5,r17
   23764:	e009883a 	mov	r4,fp
   23768:	000f883a 	mov	r7,zero
   2376c:	01800284 	movi	r6,10
   23770:	0025ae40 	call	25ae4 <__multadd>
   23774:	d9000c17 	ldw	r4,48(sp)
   23778:	1023883a 	mov	r17,r2
   2377c:	0102040e 	bge	zero,r4,23f90 <_dtoa_r+0x1600>
   23780:	d9000615 	stw	r4,24(sp)
   23784:	0500050e 	bge	zero,r20,2379c <_dtoa_r+0xe0c>
   23788:	880b883a 	mov	r5,r17
   2378c:	a00d883a 	mov	r6,r20
   23790:	e009883a 	mov	r4,fp
   23794:	00261940 	call	26194 <__lshift>
   23798:	1023883a 	mov	r17,r2
   2379c:	9801241e 	bne	r19,zero,23c30 <_dtoa_r+0x12a0>
   237a0:	8829883a 	mov	r20,r17
   237a4:	d9000617 	ldw	r4,24(sp)
   237a8:	dcc00717 	ldw	r19,28(sp)
   237ac:	9480004c 	andi	r18,r18,1
   237b0:	20bfffc4 	addi	r2,r4,-1
   237b4:	9885883a 	add	r2,r19,r2
   237b8:	d8800415 	stw	r2,16(sp)
   237bc:	dc800615 	stw	r18,24(sp)
   237c0:	a80b883a 	mov	r5,r21
   237c4:	8009883a 	mov	r4,r16
   237c8:	00227900 	call	22790 <quorem>
   237cc:	880b883a 	mov	r5,r17
   237d0:	8009883a 	mov	r4,r16
   237d4:	102f883a 	mov	r23,r2
   237d8:	00262dc0 	call	262dc <__mcmp>
   237dc:	a80b883a 	mov	r5,r21
   237e0:	a00d883a 	mov	r6,r20
   237e4:	e009883a 	mov	r4,fp
   237e8:	102d883a 	mov	r22,r2
   237ec:	002633c0 	call	2633c <__mdiff>
   237f0:	1007883a 	mov	r3,r2
   237f4:	10800317 	ldw	r2,12(r2)
   237f8:	bc800c04 	addi	r18,r23,48
   237fc:	180b883a 	mov	r5,r3
   23800:	10004e1e 	bne	r2,zero,2393c <_dtoa_r+0xfac>
   23804:	8009883a 	mov	r4,r16
   23808:	d8c01615 	stw	r3,88(sp)
   2380c:	00262dc0 	call	262dc <__mcmp>
   23810:	d8c01617 	ldw	r3,88(sp)
   23814:	e009883a 	mov	r4,fp
   23818:	d8801615 	stw	r2,88(sp)
   2381c:	180b883a 	mov	r5,r3
   23820:	0025abc0 	call	25abc <_Bfree>
   23824:	d8801617 	ldw	r2,88(sp)
   23828:	1000041e 	bne	r2,zero,2383c <_dtoa_r+0xeac>
   2382c:	d9800317 	ldw	r6,12(sp)
   23830:	3000021e 	bne	r6,zero,2383c <_dtoa_r+0xeac>
   23834:	d8c00617 	ldw	r3,24(sp)
   23838:	18003726 	beq	r3,zero,23918 <_dtoa_r+0xf88>
   2383c:	b0002016 	blt	r22,zero,238c0 <_dtoa_r+0xf30>
   23840:	b000041e 	bne	r22,zero,23854 <_dtoa_r+0xec4>
   23844:	d9000317 	ldw	r4,12(sp)
   23848:	2000021e 	bne	r4,zero,23854 <_dtoa_r+0xec4>
   2384c:	d8c00617 	ldw	r3,24(sp)
   23850:	18001b26 	beq	r3,zero,238c0 <_dtoa_r+0xf30>
   23854:	00810716 	blt	zero,r2,23c74 <_dtoa_r+0x12e4>
   23858:	d8c00417 	ldw	r3,16(sp)
   2385c:	9d800044 	addi	r22,r19,1
   23860:	9c800005 	stb	r18,0(r19)
   23864:	b02f883a 	mov	r23,r22
   23868:	98c10626 	beq	r19,r3,23c84 <_dtoa_r+0x12f4>
   2386c:	800b883a 	mov	r5,r16
   23870:	000f883a 	mov	r7,zero
   23874:	01800284 	movi	r6,10
   23878:	e009883a 	mov	r4,fp
   2387c:	0025ae40 	call	25ae4 <__multadd>
   23880:	1021883a 	mov	r16,r2
   23884:	000f883a 	mov	r7,zero
   23888:	01800284 	movi	r6,10
   2388c:	880b883a 	mov	r5,r17
   23890:	e009883a 	mov	r4,fp
   23894:	8d002526 	beq	r17,r20,2392c <_dtoa_r+0xf9c>
   23898:	0025ae40 	call	25ae4 <__multadd>
   2389c:	a00b883a 	mov	r5,r20
   238a0:	000f883a 	mov	r7,zero
   238a4:	01800284 	movi	r6,10
   238a8:	e009883a 	mov	r4,fp
   238ac:	1023883a 	mov	r17,r2
   238b0:	0025ae40 	call	25ae4 <__multadd>
   238b4:	1029883a 	mov	r20,r2
   238b8:	b027883a 	mov	r19,r22
   238bc:	003fc006 	br	237c0 <__alt_data_end+0xfffe37c0>
   238c0:	9011883a 	mov	r8,r18
   238c4:	00800e0e 	bge	zero,r2,23900 <_dtoa_r+0xf70>
   238c8:	800b883a 	mov	r5,r16
   238cc:	01800044 	movi	r6,1
   238d0:	e009883a 	mov	r4,fp
   238d4:	da001715 	stw	r8,92(sp)
   238d8:	00261940 	call	26194 <__lshift>
   238dc:	a80b883a 	mov	r5,r21
   238e0:	1009883a 	mov	r4,r2
   238e4:	1021883a 	mov	r16,r2
   238e8:	00262dc0 	call	262dc <__mcmp>
   238ec:	da001717 	ldw	r8,92(sp)
   238f0:	0081960e 	bge	zero,r2,23f4c <_dtoa_r+0x15bc>
   238f4:	00800e44 	movi	r2,57
   238f8:	40817026 	beq	r8,r2,23ebc <_dtoa_r+0x152c>
   238fc:	ba000c44 	addi	r8,r23,49
   23900:	8825883a 	mov	r18,r17
   23904:	9dc00044 	addi	r23,r19,1
   23908:	9a000005 	stb	r8,0(r19)
   2390c:	a023883a 	mov	r17,r20
   23910:	dc000915 	stw	r16,36(sp)
   23914:	003f2406 	br	235a8 <__alt_data_end+0xfffe35a8>
   23918:	00800e44 	movi	r2,57
   2391c:	9011883a 	mov	r8,r18
   23920:	90816626 	beq	r18,r2,23ebc <_dtoa_r+0x152c>
   23924:	05bff516 	blt	zero,r22,238fc <__alt_data_end+0xfffe38fc>
   23928:	003ff506 	br	23900 <__alt_data_end+0xfffe3900>
   2392c:	0025ae40 	call	25ae4 <__multadd>
   23930:	1023883a 	mov	r17,r2
   23934:	1029883a 	mov	r20,r2
   23938:	003fdf06 	br	238b8 <__alt_data_end+0xfffe38b8>
   2393c:	e009883a 	mov	r4,fp
   23940:	0025abc0 	call	25abc <_Bfree>
   23944:	00800044 	movi	r2,1
   23948:	003fbc06 	br	2383c <__alt_data_end+0xfffe383c>
   2394c:	a80b883a 	mov	r5,r21
   23950:	8009883a 	mov	r4,r16
   23954:	00262dc0 	call	262dc <__mcmp>
   23958:	103edb0e 	bge	r2,zero,234c8 <__alt_data_end+0xfffe34c8>
   2395c:	800b883a 	mov	r5,r16
   23960:	000f883a 	mov	r7,zero
   23964:	01800284 	movi	r6,10
   23968:	e009883a 	mov	r4,fp
   2396c:	0025ae40 	call	25ae4 <__multadd>
   23970:	1021883a 	mov	r16,r2
   23974:	d8800517 	ldw	r2,20(sp)
   23978:	d8c00b17 	ldw	r3,44(sp)
   2397c:	10bfffc4 	addi	r2,r2,-1
   23980:	d8800515 	stw	r2,20(sp)
   23984:	183f761e 	bne	r3,zero,23760 <__alt_data_end+0xfffe3760>
   23988:	d9000c17 	ldw	r4,48(sp)
   2398c:	0101730e 	bge	zero,r4,23f5c <_dtoa_r+0x15cc>
   23990:	d9000615 	stw	r4,24(sp)
   23994:	003ed006 	br	234d8 <__alt_data_end+0xfffe34d8>
   23998:	00800084 	movi	r2,2
   2399c:	3081861e 	bne	r6,r2,23fb8 <_dtoa_r+0x1628>
   239a0:	d8000b15 	stw	zero,44(sp)
   239a4:	003f3c06 	br	23698 <__alt_data_end+0xfffe3698>
   239a8:	dc000917 	ldw	r16,36(sp)
   239ac:	003e9206 	br	233f8 <__alt_data_end+0xfffe33f8>
   239b0:	d9c00317 	ldw	r7,12(sp)
   239b4:	00800084 	movi	r2,2
   239b8:	11fec50e 	bge	r2,r7,234d0 <__alt_data_end+0xfffe34d0>
   239bc:	d9000617 	ldw	r4,24(sp)
   239c0:	20013c1e 	bne	r4,zero,23eb4 <_dtoa_r+0x1524>
   239c4:	a80b883a 	mov	r5,r21
   239c8:	000f883a 	mov	r7,zero
   239cc:	01800144 	movi	r6,5
   239d0:	e009883a 	mov	r4,fp
   239d4:	0025ae40 	call	25ae4 <__multadd>
   239d8:	100b883a 	mov	r5,r2
   239dc:	8009883a 	mov	r4,r16
   239e0:	102b883a 	mov	r21,r2
   239e4:	00262dc0 	call	262dc <__mcmp>
   239e8:	dc000915 	stw	r16,36(sp)
   239ec:	00bf410e 	bge	zero,r2,236f4 <__alt_data_end+0xfffe36f4>
   239f0:	d9c00717 	ldw	r7,28(sp)
   239f4:	00800c44 	movi	r2,49
   239f8:	38800005 	stb	r2,0(r7)
   239fc:	d8800517 	ldw	r2,20(sp)
   23a00:	3dc00044 	addi	r23,r7,1
   23a04:	10800044 	addi	r2,r2,1
   23a08:	d8800515 	stw	r2,20(sp)
   23a0c:	003f3d06 	br	23704 <__alt_data_end+0xfffe3704>
   23a10:	d9800517 	ldw	r6,20(sp)
   23a14:	d9c00717 	ldw	r7,28(sp)
   23a18:	00800c44 	movi	r2,49
   23a1c:	31800044 	addi	r6,r6,1
   23a20:	d9800515 	stw	r6,20(sp)
   23a24:	38800005 	stb	r2,0(r7)
   23a28:	003edf06 	br	235a8 <__alt_data_end+0xfffe35a8>
   23a2c:	d8000b15 	stw	zero,44(sp)
   23a30:	003c9f06 	br	22cb0 <__alt_data_end+0xfffe2cb0>
   23a34:	903e7e1e 	bne	r18,zero,23430 <__alt_data_end+0xfffe3430>
   23a38:	00800434 	movhi	r2,16
   23a3c:	10bfffc4 	addi	r2,r2,-1
   23a40:	9884703a 	and	r2,r19,r2
   23a44:	1000ea1e 	bne	r2,zero,23df0 <_dtoa_r+0x1460>
   23a48:	9cdffc2c 	andhi	r19,r19,32752
   23a4c:	9800e826 	beq	r19,zero,23df0 <_dtoa_r+0x1460>
   23a50:	d9c00817 	ldw	r7,32(sp)
   23a54:	b5800044 	addi	r22,r22,1
   23a58:	04c00044 	movi	r19,1
   23a5c:	39c00044 	addi	r7,r7,1
   23a60:	d9c00815 	stw	r7,32(sp)
   23a64:	d8800d17 	ldw	r2,52(sp)
   23a68:	103e721e 	bne	r2,zero,23434 <__alt_data_end+0xfffe3434>
   23a6c:	00800044 	movi	r2,1
   23a70:	003e7906 	br	23458 <__alt_data_end+0xfffe3458>
   23a74:	8009883a 	mov	r4,r16
   23a78:	002c9640 	call	2c964 <__floatsidf>
   23a7c:	d9800f17 	ldw	r6,60(sp)
   23a80:	d9c01017 	ldw	r7,64(sp)
   23a84:	1009883a 	mov	r4,r2
   23a88:	180b883a 	mov	r5,r3
   23a8c:	002b8d00 	call	2b8d0 <__muldf3>
   23a90:	000d883a 	mov	r6,zero
   23a94:	01d00734 	movhi	r7,16412
   23a98:	1009883a 	mov	r4,r2
   23a9c:	180b883a 	mov	r5,r3
   23aa0:	002a4e40 	call	2a4e4 <__adddf3>
   23aa4:	047f3034 	movhi	r17,64704
   23aa8:	1021883a 	mov	r16,r2
   23aac:	1c63883a 	add	r17,r3,r17
   23ab0:	d9000f17 	ldw	r4,60(sp)
   23ab4:	d9401017 	ldw	r5,64(sp)
   23ab8:	000d883a 	mov	r6,zero
   23abc:	01d00534 	movhi	r7,16404
   23ac0:	002bfe80 	call	2bfe8 <__subdf3>
   23ac4:	800d883a 	mov	r6,r16
   23ac8:	880f883a 	mov	r7,r17
   23acc:	1009883a 	mov	r4,r2
   23ad0:	180b883a 	mov	r5,r3
   23ad4:	102b883a 	mov	r21,r2
   23ad8:	1829883a 	mov	r20,r3
   23adc:	002b7000 	call	2b700 <__gedf2>
   23ae0:	00806c16 	blt	zero,r2,23c94 <_dtoa_r+0x1304>
   23ae4:	89e0003c 	xorhi	r7,r17,32768
   23ae8:	800d883a 	mov	r6,r16
   23aec:	a809883a 	mov	r4,r21
   23af0:	a00b883a 	mov	r5,r20
   23af4:	002b7dc0 	call	2b7dc <__ledf2>
   23af8:	103d7e0e 	bge	r2,zero,230f4 <__alt_data_end+0xfffe30f4>
   23afc:	002b883a 	mov	r21,zero
   23b00:	0023883a 	mov	r17,zero
   23b04:	003efb06 	br	236f4 <__alt_data_end+0xfffe36f4>
   23b08:	d8800717 	ldw	r2,28(sp)
   23b0c:	003bd006 	br	22a50 <__alt_data_end+0xfffe2a50>
   23b10:	d9000a17 	ldw	r4,40(sp)
   23b14:	d9800d17 	ldw	r6,52(sp)
   23b18:	dd400a15 	stw	r21,40(sp)
   23b1c:	a905c83a 	sub	r2,r21,r4
   23b20:	308d883a 	add	r6,r6,r2
   23b24:	d9800d15 	stw	r6,52(sp)
   23b28:	002b883a 	mov	r21,zero
   23b2c:	003e0606 	br	23348 <__alt_data_end+0xfffe3348>
   23b30:	9023883a 	mov	r17,r18
   23b34:	9829883a 	mov	r20,r19
   23b38:	04000084 	movi	r16,2
   23b3c:	003c9206 	br	22d88 <__alt_data_end+0xfffe2d88>
   23b40:	04000044 	movi	r16,1
   23b44:	dc000c15 	stw	r16,48(sp)
   23b48:	dc000615 	stw	r16,24(sp)
   23b4c:	dc002215 	stw	r16,136(sp)
   23b50:	e0001115 	stw	zero,68(fp)
   23b54:	000b883a 	mov	r5,zero
   23b58:	003c6906 	br	22d00 <__alt_data_end+0xfffe2d00>
   23b5c:	3021883a 	mov	r16,r6
   23b60:	003ffb06 	br	23b50 <__alt_data_end+0xfffe3b50>
   23b64:	1000021e 	bne	r2,zero,23b70 <_dtoa_r+0x11e0>
   23b68:	4200004c 	andi	r8,r8,1
   23b6c:	403e7d1e 	bne	r8,zero,23564 <__alt_data_end+0xfffe3564>
   23b70:	01000c04 	movi	r4,48
   23b74:	00000106 	br	23b7c <_dtoa_r+0x11ec>
   23b78:	102f883a 	mov	r23,r2
   23b7c:	b8bfffc4 	addi	r2,r23,-1
   23b80:	10c00007 	ldb	r3,0(r2)
   23b84:	193ffc26 	beq	r3,r4,23b78 <__alt_data_end+0xfffe3b78>
   23b88:	003e8706 	br	235a8 <__alt_data_end+0xfffe35a8>
   23b8c:	d8800517 	ldw	r2,20(sp)
   23b90:	00a3c83a 	sub	r17,zero,r2
   23b94:	8800a426 	beq	r17,zero,23e28 <_dtoa_r+0x1498>
   23b98:	888003cc 	andi	r2,r17,15
   23b9c:	100490fa 	slli	r2,r2,3
   23ba0:	00c000f4 	movhi	r3,3
   23ba4:	18fcb504 	addi	r3,r3,-3372
   23ba8:	1885883a 	add	r2,r3,r2
   23bac:	11800017 	ldw	r6,0(r2)
   23bb0:	11c00117 	ldw	r7,4(r2)
   23bb4:	9009883a 	mov	r4,r18
   23bb8:	980b883a 	mov	r5,r19
   23bbc:	8823d13a 	srai	r17,r17,4
   23bc0:	002b8d00 	call	2b8d0 <__muldf3>
   23bc4:	d8800f15 	stw	r2,60(sp)
   23bc8:	d8c01015 	stw	r3,64(sp)
   23bcc:	8800e826 	beq	r17,zero,23f70 <_dtoa_r+0x15e0>
   23bd0:	050000f4 	movhi	r20,3
   23bd4:	a53cab04 	addi	r20,r20,-3412
   23bd8:	04000084 	movi	r16,2
   23bdc:	8980004c 	andi	r6,r17,1
   23be0:	1009883a 	mov	r4,r2
   23be4:	8823d07a 	srai	r17,r17,1
   23be8:	180b883a 	mov	r5,r3
   23bec:	30000426 	beq	r6,zero,23c00 <_dtoa_r+0x1270>
   23bf0:	a1800017 	ldw	r6,0(r20)
   23bf4:	a1c00117 	ldw	r7,4(r20)
   23bf8:	84000044 	addi	r16,r16,1
   23bfc:	002b8d00 	call	2b8d0 <__muldf3>
   23c00:	a5000204 	addi	r20,r20,8
   23c04:	883ff51e 	bne	r17,zero,23bdc <__alt_data_end+0xfffe3bdc>
   23c08:	d8800f15 	stw	r2,60(sp)
   23c0c:	d8c01015 	stw	r3,64(sp)
   23c10:	003c7606 	br	22dec <__alt_data_end+0xfffe2dec>
   23c14:	00c00c04 	movi	r3,48
   23c18:	10c00005 	stb	r3,0(r2)
   23c1c:	d8c00517 	ldw	r3,20(sp)
   23c20:	bd3fffc3 	ldbu	r20,-1(r23)
   23c24:	18c00044 	addi	r3,r3,1
   23c28:	d8c00515 	stw	r3,20(sp)
   23c2c:	003db906 	br	23314 <__alt_data_end+0xfffe3314>
   23c30:	89400117 	ldw	r5,4(r17)
   23c34:	e009883a 	mov	r4,fp
   23c38:	0025a140 	call	25a14 <_Balloc>
   23c3c:	89800417 	ldw	r6,16(r17)
   23c40:	89400304 	addi	r5,r17,12
   23c44:	11000304 	addi	r4,r2,12
   23c48:	31800084 	addi	r6,r6,2
   23c4c:	318d883a 	add	r6,r6,r6
   23c50:	318d883a 	add	r6,r6,r6
   23c54:	1027883a 	mov	r19,r2
   23c58:	00257a40 	call	257a4 <memcpy>
   23c5c:	01800044 	movi	r6,1
   23c60:	980b883a 	mov	r5,r19
   23c64:	e009883a 	mov	r4,fp
   23c68:	00261940 	call	26194 <__lshift>
   23c6c:	1029883a 	mov	r20,r2
   23c70:	003ecc06 	br	237a4 <__alt_data_end+0xfffe37a4>
   23c74:	00800e44 	movi	r2,57
   23c78:	90809026 	beq	r18,r2,23ebc <_dtoa_r+0x152c>
   23c7c:	92000044 	addi	r8,r18,1
   23c80:	003f1f06 	br	23900 <__alt_data_end+0xfffe3900>
   23c84:	9011883a 	mov	r8,r18
   23c88:	8825883a 	mov	r18,r17
   23c8c:	a023883a 	mov	r17,r20
   23c90:	003e2906 	br	23538 <__alt_data_end+0xfffe3538>
   23c94:	002b883a 	mov	r21,zero
   23c98:	0023883a 	mov	r17,zero
   23c9c:	003f5406 	br	239f0 <__alt_data_end+0xfffe39f0>
   23ca0:	61bfffc4 	addi	r6,r12,-1
   23ca4:	300490fa 	slli	r2,r6,3
   23ca8:	00c000f4 	movhi	r3,3
   23cac:	18fcb504 	addi	r3,r3,-3372
   23cb0:	1885883a 	add	r2,r3,r2
   23cb4:	11000017 	ldw	r4,0(r2)
   23cb8:	11400117 	ldw	r5,4(r2)
   23cbc:	d8800717 	ldw	r2,28(sp)
   23cc0:	880f883a 	mov	r7,r17
   23cc4:	d9801215 	stw	r6,72(sp)
   23cc8:	800d883a 	mov	r6,r16
   23ccc:	db001615 	stw	r12,88(sp)
   23cd0:	15c00044 	addi	r23,r2,1
   23cd4:	002b8d00 	call	2b8d0 <__muldf3>
   23cd8:	d9401017 	ldw	r5,64(sp)
   23cdc:	d9000f17 	ldw	r4,60(sp)
   23ce0:	d8c01515 	stw	r3,84(sp)
   23ce4:	d8801415 	stw	r2,80(sp)
   23ce8:	002c8e40 	call	2c8e4 <__fixdfsi>
   23cec:	1009883a 	mov	r4,r2
   23cf0:	1021883a 	mov	r16,r2
   23cf4:	002c9640 	call	2c964 <__floatsidf>
   23cf8:	d9000f17 	ldw	r4,60(sp)
   23cfc:	d9401017 	ldw	r5,64(sp)
   23d00:	100d883a 	mov	r6,r2
   23d04:	180f883a 	mov	r7,r3
   23d08:	002bfe80 	call	2bfe8 <__subdf3>
   23d0c:	1829883a 	mov	r20,r3
   23d10:	d8c00717 	ldw	r3,28(sp)
   23d14:	84000c04 	addi	r16,r16,48
   23d18:	1023883a 	mov	r17,r2
   23d1c:	1c000005 	stb	r16,0(r3)
   23d20:	db001617 	ldw	r12,88(sp)
   23d24:	00800044 	movi	r2,1
   23d28:	60802226 	beq	r12,r2,23db4 <_dtoa_r+0x1424>
   23d2c:	d9c00717 	ldw	r7,28(sp)
   23d30:	8805883a 	mov	r2,r17
   23d34:	b82b883a 	mov	r21,r23
   23d38:	3b19883a 	add	r12,r7,r12
   23d3c:	6023883a 	mov	r17,r12
   23d40:	a007883a 	mov	r3,r20
   23d44:	dc800f15 	stw	r18,60(sp)
   23d48:	000d883a 	mov	r6,zero
   23d4c:	01d00934 	movhi	r7,16420
   23d50:	1009883a 	mov	r4,r2
   23d54:	180b883a 	mov	r5,r3
   23d58:	002b8d00 	call	2b8d0 <__muldf3>
   23d5c:	180b883a 	mov	r5,r3
   23d60:	1009883a 	mov	r4,r2
   23d64:	1829883a 	mov	r20,r3
   23d68:	1025883a 	mov	r18,r2
   23d6c:	002c8e40 	call	2c8e4 <__fixdfsi>
   23d70:	1009883a 	mov	r4,r2
   23d74:	1021883a 	mov	r16,r2
   23d78:	002c9640 	call	2c964 <__floatsidf>
   23d7c:	100d883a 	mov	r6,r2
   23d80:	180f883a 	mov	r7,r3
   23d84:	9009883a 	mov	r4,r18
   23d88:	a00b883a 	mov	r5,r20
   23d8c:	84000c04 	addi	r16,r16,48
   23d90:	002bfe80 	call	2bfe8 <__subdf3>
   23d94:	ad400044 	addi	r21,r21,1
   23d98:	ac3fffc5 	stb	r16,-1(r21)
   23d9c:	ac7fea1e 	bne	r21,r17,23d48 <__alt_data_end+0xfffe3d48>
   23da0:	1023883a 	mov	r17,r2
   23da4:	d8801217 	ldw	r2,72(sp)
   23da8:	dc800f17 	ldw	r18,60(sp)
   23dac:	1829883a 	mov	r20,r3
   23db0:	b8af883a 	add	r23,r23,r2
   23db4:	d9001417 	ldw	r4,80(sp)
   23db8:	d9401517 	ldw	r5,84(sp)
   23dbc:	000d883a 	mov	r6,zero
   23dc0:	01cff834 	movhi	r7,16352
   23dc4:	002a4e40 	call	2a4e4 <__adddf3>
   23dc8:	880d883a 	mov	r6,r17
   23dcc:	a00f883a 	mov	r7,r20
   23dd0:	1009883a 	mov	r4,r2
   23dd4:	180b883a 	mov	r5,r3
   23dd8:	002b7dc0 	call	2b7dc <__ledf2>
   23ddc:	10003e0e 	bge	r2,zero,23ed8 <_dtoa_r+0x1548>
   23de0:	d9001317 	ldw	r4,76(sp)
   23de4:	bd3fffc3 	ldbu	r20,-1(r23)
   23de8:	d9000515 	stw	r4,20(sp)
   23dec:	003d3b06 	br	232dc <__alt_data_end+0xfffe32dc>
   23df0:	0027883a 	mov	r19,zero
   23df4:	003f1b06 	br	23a64 <__alt_data_end+0xfffe3a64>
   23df8:	d8800817 	ldw	r2,32(sp)
   23dfc:	11e9c83a 	sub	r20,r2,r7
   23e00:	0005883a 	mov	r2,zero
   23e04:	003d5406 	br	23358 <__alt_data_end+0xfffe3358>
   23e08:	00800044 	movi	r2,1
   23e0c:	003dc706 	br	2352c <__alt_data_end+0xfffe352c>
   23e10:	d8c00217 	ldw	r3,8(sp)
   23e14:	00800d84 	movi	r2,54
   23e18:	dd400a17 	ldw	r21,40(sp)
   23e1c:	10c5c83a 	sub	r2,r2,r3
   23e20:	dd000817 	ldw	r20,32(sp)
   23e24:	003d4c06 	br	23358 <__alt_data_end+0xfffe3358>
   23e28:	dc800f15 	stw	r18,60(sp)
   23e2c:	dcc01015 	stw	r19,64(sp)
   23e30:	04000084 	movi	r16,2
   23e34:	003bed06 	br	22dec <__alt_data_end+0xfffe2dec>
   23e38:	d9000617 	ldw	r4,24(sp)
   23e3c:	203f0d26 	beq	r4,zero,23a74 <__alt_data_end+0xfffe3a74>
   23e40:	d9800c17 	ldw	r6,48(sp)
   23e44:	01bcab0e 	bge	zero,r6,230f4 <__alt_data_end+0xfffe30f4>
   23e48:	d9401017 	ldw	r5,64(sp)
   23e4c:	d9000f17 	ldw	r4,60(sp)
   23e50:	000d883a 	mov	r6,zero
   23e54:	01d00934 	movhi	r7,16420
   23e58:	002b8d00 	call	2b8d0 <__muldf3>
   23e5c:	81000044 	addi	r4,r16,1
   23e60:	d8800f15 	stw	r2,60(sp)
   23e64:	d8c01015 	stw	r3,64(sp)
   23e68:	002c9640 	call	2c964 <__floatsidf>
   23e6c:	d9800f17 	ldw	r6,60(sp)
   23e70:	d9c01017 	ldw	r7,64(sp)
   23e74:	1009883a 	mov	r4,r2
   23e78:	180b883a 	mov	r5,r3
   23e7c:	002b8d00 	call	2b8d0 <__muldf3>
   23e80:	01d00734 	movhi	r7,16412
   23e84:	000d883a 	mov	r6,zero
   23e88:	1009883a 	mov	r4,r2
   23e8c:	180b883a 	mov	r5,r3
   23e90:	002a4e40 	call	2a4e4 <__adddf3>
   23e94:	d9c00517 	ldw	r7,20(sp)
   23e98:	047f3034 	movhi	r17,64704
   23e9c:	1021883a 	mov	r16,r2
   23ea0:	39ffffc4 	addi	r7,r7,-1
   23ea4:	d9c01315 	stw	r7,76(sp)
   23ea8:	1c63883a 	add	r17,r3,r17
   23eac:	db000c17 	ldw	r12,48(sp)
   23eb0:	003bea06 	br	22e5c <__alt_data_end+0xfffe2e5c>
   23eb4:	dc000915 	stw	r16,36(sp)
   23eb8:	003e0e06 	br	236f4 <__alt_data_end+0xfffe36f4>
   23ebc:	01000e44 	movi	r4,57
   23ec0:	8825883a 	mov	r18,r17
   23ec4:	9dc00044 	addi	r23,r19,1
   23ec8:	99000005 	stb	r4,0(r19)
   23ecc:	a023883a 	mov	r17,r20
   23ed0:	dc000915 	stw	r16,36(sp)
   23ed4:	003da406 	br	23568 <__alt_data_end+0xfffe3568>
   23ed8:	d9801417 	ldw	r6,80(sp)
   23edc:	d9c01517 	ldw	r7,84(sp)
   23ee0:	0009883a 	mov	r4,zero
   23ee4:	014ff834 	movhi	r5,16352
   23ee8:	002bfe80 	call	2bfe8 <__subdf3>
   23eec:	880d883a 	mov	r6,r17
   23ef0:	a00f883a 	mov	r7,r20
   23ef4:	1009883a 	mov	r4,r2
   23ef8:	180b883a 	mov	r5,r3
   23efc:	002b7000 	call	2b700 <__gedf2>
   23f00:	00bc7c0e 	bge	zero,r2,230f4 <__alt_data_end+0xfffe30f4>
   23f04:	01000c04 	movi	r4,48
   23f08:	00000106 	br	23f10 <_dtoa_r+0x1580>
   23f0c:	102f883a 	mov	r23,r2
   23f10:	b8bfffc4 	addi	r2,r23,-1
   23f14:	10c00007 	ldb	r3,0(r2)
   23f18:	193ffc26 	beq	r3,r4,23f0c <__alt_data_end+0xfffe3f0c>
   23f1c:	d9801317 	ldw	r6,76(sp)
   23f20:	d9800515 	stw	r6,20(sp)
   23f24:	003c4406 	br	23038 <__alt_data_end+0xfffe3038>
   23f28:	d9801317 	ldw	r6,76(sp)
   23f2c:	d9800515 	stw	r6,20(sp)
   23f30:	003cea06 	br	232dc <__alt_data_end+0xfffe32dc>
   23f34:	dd800f17 	ldw	r22,60(sp)
   23f38:	dcc01017 	ldw	r19,64(sp)
   23f3c:	dc801217 	ldw	r18,72(sp)
   23f40:	003c6c06 	br	230f4 <__alt_data_end+0xfffe30f4>
   23f44:	903e031e 	bne	r18,zero,23754 <__alt_data_end+0xfffe3754>
   23f48:	003ebb06 	br	23a38 <__alt_data_end+0xfffe3a38>
   23f4c:	103e6c1e 	bne	r2,zero,23900 <__alt_data_end+0xfffe3900>
   23f50:	4080004c 	andi	r2,r8,1
   23f54:	103e6a26 	beq	r2,zero,23900 <__alt_data_end+0xfffe3900>
   23f58:	003e6606 	br	238f4 <__alt_data_end+0xfffe38f4>
   23f5c:	d8c00317 	ldw	r3,12(sp)
   23f60:	00800084 	movi	r2,2
   23f64:	10c02916 	blt	r2,r3,2400c <_dtoa_r+0x167c>
   23f68:	d9000c17 	ldw	r4,48(sp)
   23f6c:	003e8806 	br	23990 <__alt_data_end+0xfffe3990>
   23f70:	04000084 	movi	r16,2
   23f74:	003b9d06 	br	22dec <__alt_data_end+0xfffe2dec>
   23f78:	d9001317 	ldw	r4,76(sp)
   23f7c:	d9000515 	stw	r4,20(sp)
   23f80:	003cd606 	br	232dc <__alt_data_end+0xfffe32dc>
   23f84:	d8801317 	ldw	r2,76(sp)
   23f88:	d8800515 	stw	r2,20(sp)
   23f8c:	003c2a06 	br	23038 <__alt_data_end+0xfffe3038>
   23f90:	d9800317 	ldw	r6,12(sp)
   23f94:	00800084 	movi	r2,2
   23f98:	11801516 	blt	r2,r6,23ff0 <_dtoa_r+0x1660>
   23f9c:	d9c00c17 	ldw	r7,48(sp)
   23fa0:	d9c00615 	stw	r7,24(sp)
   23fa4:	003df706 	br	23784 <__alt_data_end+0xfffe3784>
   23fa8:	193d3926 	beq	r3,r4,23490 <__alt_data_end+0xfffe3490>
   23fac:	00c00f04 	movi	r3,60
   23fb0:	1885c83a 	sub	r2,r3,r2
   23fb4:	003ddf06 	br	23734 <__alt_data_end+0xfffe3734>
   23fb8:	e009883a 	mov	r4,fp
   23fbc:	e0001115 	stw	zero,68(fp)
   23fc0:	000b883a 	mov	r5,zero
   23fc4:	0025a140 	call	25a14 <_Balloc>
   23fc8:	d8800715 	stw	r2,28(sp)
   23fcc:	d8c00717 	ldw	r3,28(sp)
   23fd0:	00bfffc4 	movi	r2,-1
   23fd4:	01000044 	movi	r4,1
   23fd8:	d8800c15 	stw	r2,48(sp)
   23fdc:	e0c01015 	stw	r3,64(fp)
   23fe0:	d9000b15 	stw	r4,44(sp)
   23fe4:	d8800615 	stw	r2,24(sp)
   23fe8:	d8002215 	stw	zero,136(sp)
   23fec:	003c4106 	br	230f4 <__alt_data_end+0xfffe30f4>
   23ff0:	d8c00c17 	ldw	r3,48(sp)
   23ff4:	d8c00615 	stw	r3,24(sp)
   23ff8:	003e7006 	br	239bc <__alt_data_end+0xfffe39bc>
   23ffc:	04400044 	movi	r17,1
   24000:	003b2006 	br	22c84 <__alt_data_end+0xfffe2c84>
   24004:	000b883a 	mov	r5,zero
   24008:	003b3d06 	br	22d00 <__alt_data_end+0xfffe2d00>
   2400c:	d8800c17 	ldw	r2,48(sp)
   24010:	d8800615 	stw	r2,24(sp)
   24014:	003e6906 	br	239bc <__alt_data_end+0xfffe39bc>

00024018 <__sflush_r>:
   24018:	2880030b 	ldhu	r2,12(r5)
   2401c:	defffb04 	addi	sp,sp,-20
   24020:	dcc00315 	stw	r19,12(sp)
   24024:	dc400115 	stw	r17,4(sp)
   24028:	dfc00415 	stw	ra,16(sp)
   2402c:	dc800215 	stw	r18,8(sp)
   24030:	dc000015 	stw	r16,0(sp)
   24034:	10c0020c 	andi	r3,r2,8
   24038:	2823883a 	mov	r17,r5
   2403c:	2027883a 	mov	r19,r4
   24040:	1800311e 	bne	r3,zero,24108 <__sflush_r+0xf0>
   24044:	28c00117 	ldw	r3,4(r5)
   24048:	10820014 	ori	r2,r2,2048
   2404c:	2880030d 	sth	r2,12(r5)
   24050:	00c04b0e 	bge	zero,r3,24180 <__sflush_r+0x168>
   24054:	8a000a17 	ldw	r8,40(r17)
   24058:	40002326 	beq	r8,zero,240e8 <__sflush_r+0xd0>
   2405c:	9c000017 	ldw	r16,0(r19)
   24060:	10c4000c 	andi	r3,r2,4096
   24064:	98000015 	stw	zero,0(r19)
   24068:	18004826 	beq	r3,zero,2418c <__sflush_r+0x174>
   2406c:	89801417 	ldw	r6,80(r17)
   24070:	10c0010c 	andi	r3,r2,4
   24074:	18000626 	beq	r3,zero,24090 <__sflush_r+0x78>
   24078:	88c00117 	ldw	r3,4(r17)
   2407c:	88800c17 	ldw	r2,48(r17)
   24080:	30cdc83a 	sub	r6,r6,r3
   24084:	10000226 	beq	r2,zero,24090 <__sflush_r+0x78>
   24088:	88800f17 	ldw	r2,60(r17)
   2408c:	308dc83a 	sub	r6,r6,r2
   24090:	89400717 	ldw	r5,28(r17)
   24094:	000f883a 	mov	r7,zero
   24098:	9809883a 	mov	r4,r19
   2409c:	403ee83a 	callr	r8
   240a0:	00ffffc4 	movi	r3,-1
   240a4:	10c04426 	beq	r2,r3,241b8 <__sflush_r+0x1a0>
   240a8:	88c0030b 	ldhu	r3,12(r17)
   240ac:	89000417 	ldw	r4,16(r17)
   240b0:	88000115 	stw	zero,4(r17)
   240b4:	197dffcc 	andi	r5,r3,63487
   240b8:	8940030d 	sth	r5,12(r17)
   240bc:	89000015 	stw	r4,0(r17)
   240c0:	18c4000c 	andi	r3,r3,4096
   240c4:	18002c1e 	bne	r3,zero,24178 <__sflush_r+0x160>
   240c8:	89400c17 	ldw	r5,48(r17)
   240cc:	9c000015 	stw	r16,0(r19)
   240d0:	28000526 	beq	r5,zero,240e8 <__sflush_r+0xd0>
   240d4:	88801004 	addi	r2,r17,64
   240d8:	28800226 	beq	r5,r2,240e4 <__sflush_r+0xcc>
   240dc:	9809883a 	mov	r4,r19
   240e0:	00247840 	call	24784 <_free_r>
   240e4:	88000c15 	stw	zero,48(r17)
   240e8:	0005883a 	mov	r2,zero
   240ec:	dfc00417 	ldw	ra,16(sp)
   240f0:	dcc00317 	ldw	r19,12(sp)
   240f4:	dc800217 	ldw	r18,8(sp)
   240f8:	dc400117 	ldw	r17,4(sp)
   240fc:	dc000017 	ldw	r16,0(sp)
   24100:	dec00504 	addi	sp,sp,20
   24104:	f800283a 	ret
   24108:	2c800417 	ldw	r18,16(r5)
   2410c:	903ff626 	beq	r18,zero,240e8 <__alt_data_end+0xfffe40e8>
   24110:	2c000017 	ldw	r16,0(r5)
   24114:	108000cc 	andi	r2,r2,3
   24118:	2c800015 	stw	r18,0(r5)
   2411c:	84a1c83a 	sub	r16,r16,r18
   24120:	1000131e 	bne	r2,zero,24170 <__sflush_r+0x158>
   24124:	28800517 	ldw	r2,20(r5)
   24128:	88800215 	stw	r2,8(r17)
   2412c:	04000316 	blt	zero,r16,2413c <__sflush_r+0x124>
   24130:	003fed06 	br	240e8 <__alt_data_end+0xfffe40e8>
   24134:	90a5883a 	add	r18,r18,r2
   24138:	043feb0e 	bge	zero,r16,240e8 <__alt_data_end+0xfffe40e8>
   2413c:	88800917 	ldw	r2,36(r17)
   24140:	89400717 	ldw	r5,28(r17)
   24144:	800f883a 	mov	r7,r16
   24148:	900d883a 	mov	r6,r18
   2414c:	9809883a 	mov	r4,r19
   24150:	103ee83a 	callr	r2
   24154:	80a1c83a 	sub	r16,r16,r2
   24158:	00bff616 	blt	zero,r2,24134 <__alt_data_end+0xfffe4134>
   2415c:	88c0030b 	ldhu	r3,12(r17)
   24160:	00bfffc4 	movi	r2,-1
   24164:	18c01014 	ori	r3,r3,64
   24168:	88c0030d 	sth	r3,12(r17)
   2416c:	003fdf06 	br	240ec <__alt_data_end+0xfffe40ec>
   24170:	0005883a 	mov	r2,zero
   24174:	003fec06 	br	24128 <__alt_data_end+0xfffe4128>
   24178:	88801415 	stw	r2,80(r17)
   2417c:	003fd206 	br	240c8 <__alt_data_end+0xfffe40c8>
   24180:	28c00f17 	ldw	r3,60(r5)
   24184:	00ffb316 	blt	zero,r3,24054 <__alt_data_end+0xfffe4054>
   24188:	003fd706 	br	240e8 <__alt_data_end+0xfffe40e8>
   2418c:	89400717 	ldw	r5,28(r17)
   24190:	000d883a 	mov	r6,zero
   24194:	01c00044 	movi	r7,1
   24198:	9809883a 	mov	r4,r19
   2419c:	403ee83a 	callr	r8
   241a0:	100d883a 	mov	r6,r2
   241a4:	00bfffc4 	movi	r2,-1
   241a8:	30801426 	beq	r6,r2,241fc <__sflush_r+0x1e4>
   241ac:	8880030b 	ldhu	r2,12(r17)
   241b0:	8a000a17 	ldw	r8,40(r17)
   241b4:	003fae06 	br	24070 <__alt_data_end+0xfffe4070>
   241b8:	98c00017 	ldw	r3,0(r19)
   241bc:	183fba26 	beq	r3,zero,240a8 <__alt_data_end+0xfffe40a8>
   241c0:	01000744 	movi	r4,29
   241c4:	19000626 	beq	r3,r4,241e0 <__sflush_r+0x1c8>
   241c8:	01000584 	movi	r4,22
   241cc:	19000426 	beq	r3,r4,241e0 <__sflush_r+0x1c8>
   241d0:	88c0030b 	ldhu	r3,12(r17)
   241d4:	18c01014 	ori	r3,r3,64
   241d8:	88c0030d 	sth	r3,12(r17)
   241dc:	003fc306 	br	240ec <__alt_data_end+0xfffe40ec>
   241e0:	8880030b 	ldhu	r2,12(r17)
   241e4:	88c00417 	ldw	r3,16(r17)
   241e8:	88000115 	stw	zero,4(r17)
   241ec:	10bdffcc 	andi	r2,r2,63487
   241f0:	8880030d 	sth	r2,12(r17)
   241f4:	88c00015 	stw	r3,0(r17)
   241f8:	003fb306 	br	240c8 <__alt_data_end+0xfffe40c8>
   241fc:	98800017 	ldw	r2,0(r19)
   24200:	103fea26 	beq	r2,zero,241ac <__alt_data_end+0xfffe41ac>
   24204:	00c00744 	movi	r3,29
   24208:	10c00226 	beq	r2,r3,24214 <__sflush_r+0x1fc>
   2420c:	00c00584 	movi	r3,22
   24210:	10c0031e 	bne	r2,r3,24220 <__sflush_r+0x208>
   24214:	9c000015 	stw	r16,0(r19)
   24218:	0005883a 	mov	r2,zero
   2421c:	003fb306 	br	240ec <__alt_data_end+0xfffe40ec>
   24220:	88c0030b 	ldhu	r3,12(r17)
   24224:	3005883a 	mov	r2,r6
   24228:	18c01014 	ori	r3,r3,64
   2422c:	88c0030d 	sth	r3,12(r17)
   24230:	003fae06 	br	240ec <__alt_data_end+0xfffe40ec>

00024234 <_fflush_r>:
   24234:	defffd04 	addi	sp,sp,-12
   24238:	dc000115 	stw	r16,4(sp)
   2423c:	dfc00215 	stw	ra,8(sp)
   24240:	2021883a 	mov	r16,r4
   24244:	20000226 	beq	r4,zero,24250 <_fflush_r+0x1c>
   24248:	20800e17 	ldw	r2,56(r4)
   2424c:	10000c26 	beq	r2,zero,24280 <_fflush_r+0x4c>
   24250:	2880030f 	ldh	r2,12(r5)
   24254:	1000051e 	bne	r2,zero,2426c <_fflush_r+0x38>
   24258:	0005883a 	mov	r2,zero
   2425c:	dfc00217 	ldw	ra,8(sp)
   24260:	dc000117 	ldw	r16,4(sp)
   24264:	dec00304 	addi	sp,sp,12
   24268:	f800283a 	ret
   2426c:	8009883a 	mov	r4,r16
   24270:	dfc00217 	ldw	ra,8(sp)
   24274:	dc000117 	ldw	r16,4(sp)
   24278:	dec00304 	addi	sp,sp,12
   2427c:	00240181 	jmpi	24018 <__sflush_r>
   24280:	d9400015 	stw	r5,0(sp)
   24284:	00246100 	call	24610 <__sinit>
   24288:	d9400017 	ldw	r5,0(sp)
   2428c:	003ff006 	br	24250 <__alt_data_end+0xfffe4250>

00024290 <fflush>:
   24290:	20000526 	beq	r4,zero,242a8 <fflush+0x18>
   24294:	008000f4 	movhi	r2,3
   24298:	1083e804 	addi	r2,r2,4000
   2429c:	200b883a 	mov	r5,r4
   242a0:	11000017 	ldw	r4,0(r2)
   242a4:	00242341 	jmpi	24234 <_fflush_r>
   242a8:	008000f4 	movhi	r2,3
   242ac:	1083e704 	addi	r2,r2,3996
   242b0:	11000017 	ldw	r4,0(r2)
   242b4:	014000b4 	movhi	r5,2
   242b8:	29508d04 	addi	r5,r5,16948
   242bc:	0024b581 	jmpi	24b58 <_fwalk_reent>

000242c0 <__fp_unlock>:
   242c0:	0005883a 	mov	r2,zero
   242c4:	f800283a 	ret

000242c8 <_cleanup_r>:
   242c8:	014000f4 	movhi	r5,3
   242cc:	29615204 	addi	r5,r5,-31416
   242d0:	0024b581 	jmpi	24b58 <_fwalk_reent>

000242d4 <__sinit.part.1>:
   242d4:	defff704 	addi	sp,sp,-36
   242d8:	00c000b4 	movhi	r3,2
   242dc:	dfc00815 	stw	ra,32(sp)
   242e0:	ddc00715 	stw	r23,28(sp)
   242e4:	dd800615 	stw	r22,24(sp)
   242e8:	dd400515 	stw	r21,20(sp)
   242ec:	dd000415 	stw	r20,16(sp)
   242f0:	dcc00315 	stw	r19,12(sp)
   242f4:	dc800215 	stw	r18,8(sp)
   242f8:	dc400115 	stw	r17,4(sp)
   242fc:	dc000015 	stw	r16,0(sp)
   24300:	18d0b204 	addi	r3,r3,17096
   24304:	24000117 	ldw	r16,4(r4)
   24308:	20c00f15 	stw	r3,60(r4)
   2430c:	2080bb04 	addi	r2,r4,748
   24310:	00c000c4 	movi	r3,3
   24314:	20c0b915 	stw	r3,740(r4)
   24318:	2080ba15 	stw	r2,744(r4)
   2431c:	2000b815 	stw	zero,736(r4)
   24320:	05c00204 	movi	r23,8
   24324:	00800104 	movi	r2,4
   24328:	2025883a 	mov	r18,r4
   2432c:	b80d883a 	mov	r6,r23
   24330:	81001704 	addi	r4,r16,92
   24334:	000b883a 	mov	r5,zero
   24338:	80000015 	stw	zero,0(r16)
   2433c:	80000115 	stw	zero,4(r16)
   24340:	80000215 	stw	zero,8(r16)
   24344:	8080030d 	sth	r2,12(r16)
   24348:	80001915 	stw	zero,100(r16)
   2434c:	8000038d 	sth	zero,14(r16)
   24350:	80000415 	stw	zero,16(r16)
   24354:	80000515 	stw	zero,20(r16)
   24358:	80000615 	stw	zero,24(r16)
   2435c:	00258ec0 	call	258ec <memset>
   24360:	058000b4 	movhi	r22,2
   24364:	94400217 	ldw	r17,8(r18)
   24368:	054000b4 	movhi	r21,2
   2436c:	050000b4 	movhi	r20,2
   24370:	04c000b4 	movhi	r19,2
   24374:	b59ab604 	addi	r22,r22,27352
   24378:	ad5acd04 	addi	r21,r21,27444
   2437c:	a51aec04 	addi	r20,r20,27568
   24380:	9cdb0304 	addi	r19,r19,27660
   24384:	85800815 	stw	r22,32(r16)
   24388:	85400915 	stw	r21,36(r16)
   2438c:	85000a15 	stw	r20,40(r16)
   24390:	84c00b15 	stw	r19,44(r16)
   24394:	84000715 	stw	r16,28(r16)
   24398:	00800284 	movi	r2,10
   2439c:	8880030d 	sth	r2,12(r17)
   243a0:	00800044 	movi	r2,1
   243a4:	b80d883a 	mov	r6,r23
   243a8:	89001704 	addi	r4,r17,92
   243ac:	000b883a 	mov	r5,zero
   243b0:	88000015 	stw	zero,0(r17)
   243b4:	88000115 	stw	zero,4(r17)
   243b8:	88000215 	stw	zero,8(r17)
   243bc:	88001915 	stw	zero,100(r17)
   243c0:	8880038d 	sth	r2,14(r17)
   243c4:	88000415 	stw	zero,16(r17)
   243c8:	88000515 	stw	zero,20(r17)
   243cc:	88000615 	stw	zero,24(r17)
   243d0:	00258ec0 	call	258ec <memset>
   243d4:	94000317 	ldw	r16,12(r18)
   243d8:	00800484 	movi	r2,18
   243dc:	8c400715 	stw	r17,28(r17)
   243e0:	8d800815 	stw	r22,32(r17)
   243e4:	8d400915 	stw	r21,36(r17)
   243e8:	8d000a15 	stw	r20,40(r17)
   243ec:	8cc00b15 	stw	r19,44(r17)
   243f0:	8080030d 	sth	r2,12(r16)
   243f4:	00800084 	movi	r2,2
   243f8:	80000015 	stw	zero,0(r16)
   243fc:	80000115 	stw	zero,4(r16)
   24400:	80000215 	stw	zero,8(r16)
   24404:	80001915 	stw	zero,100(r16)
   24408:	8080038d 	sth	r2,14(r16)
   2440c:	80000415 	stw	zero,16(r16)
   24410:	80000515 	stw	zero,20(r16)
   24414:	80000615 	stw	zero,24(r16)
   24418:	b80d883a 	mov	r6,r23
   2441c:	000b883a 	mov	r5,zero
   24420:	81001704 	addi	r4,r16,92
   24424:	00258ec0 	call	258ec <memset>
   24428:	00800044 	movi	r2,1
   2442c:	84000715 	stw	r16,28(r16)
   24430:	85800815 	stw	r22,32(r16)
   24434:	85400915 	stw	r21,36(r16)
   24438:	85000a15 	stw	r20,40(r16)
   2443c:	84c00b15 	stw	r19,44(r16)
   24440:	90800e15 	stw	r2,56(r18)
   24444:	dfc00817 	ldw	ra,32(sp)
   24448:	ddc00717 	ldw	r23,28(sp)
   2444c:	dd800617 	ldw	r22,24(sp)
   24450:	dd400517 	ldw	r21,20(sp)
   24454:	dd000417 	ldw	r20,16(sp)
   24458:	dcc00317 	ldw	r19,12(sp)
   2445c:	dc800217 	ldw	r18,8(sp)
   24460:	dc400117 	ldw	r17,4(sp)
   24464:	dc000017 	ldw	r16,0(sp)
   24468:	dec00904 	addi	sp,sp,36
   2446c:	f800283a 	ret

00024470 <__fp_lock>:
   24470:	0005883a 	mov	r2,zero
   24474:	f800283a 	ret

00024478 <__sfmoreglue>:
   24478:	defffc04 	addi	sp,sp,-16
   2447c:	dc400115 	stw	r17,4(sp)
   24480:	2c7fffc4 	addi	r17,r5,-1
   24484:	8c401a24 	muli	r17,r17,104
   24488:	dc800215 	stw	r18,8(sp)
   2448c:	2825883a 	mov	r18,r5
   24490:	89401d04 	addi	r5,r17,116
   24494:	dc000015 	stw	r16,0(sp)
   24498:	dfc00315 	stw	ra,12(sp)
   2449c:	0024eb40 	call	24eb4 <_malloc_r>
   244a0:	1021883a 	mov	r16,r2
   244a4:	10000726 	beq	r2,zero,244c4 <__sfmoreglue+0x4c>
   244a8:	11000304 	addi	r4,r2,12
   244ac:	10000015 	stw	zero,0(r2)
   244b0:	14800115 	stw	r18,4(r2)
   244b4:	11000215 	stw	r4,8(r2)
   244b8:	89801a04 	addi	r6,r17,104
   244bc:	000b883a 	mov	r5,zero
   244c0:	00258ec0 	call	258ec <memset>
   244c4:	8005883a 	mov	r2,r16
   244c8:	dfc00317 	ldw	ra,12(sp)
   244cc:	dc800217 	ldw	r18,8(sp)
   244d0:	dc400117 	ldw	r17,4(sp)
   244d4:	dc000017 	ldw	r16,0(sp)
   244d8:	dec00404 	addi	sp,sp,16
   244dc:	f800283a 	ret

000244e0 <__sfp>:
   244e0:	defffb04 	addi	sp,sp,-20
   244e4:	dc000015 	stw	r16,0(sp)
   244e8:	040000f4 	movhi	r16,3
   244ec:	8403e704 	addi	r16,r16,3996
   244f0:	dcc00315 	stw	r19,12(sp)
   244f4:	2027883a 	mov	r19,r4
   244f8:	81000017 	ldw	r4,0(r16)
   244fc:	dfc00415 	stw	ra,16(sp)
   24500:	dc800215 	stw	r18,8(sp)
   24504:	20800e17 	ldw	r2,56(r4)
   24508:	dc400115 	stw	r17,4(sp)
   2450c:	1000021e 	bne	r2,zero,24518 <__sfp+0x38>
   24510:	00242d40 	call	242d4 <__sinit.part.1>
   24514:	81000017 	ldw	r4,0(r16)
   24518:	2480b804 	addi	r18,r4,736
   2451c:	047fffc4 	movi	r17,-1
   24520:	91000117 	ldw	r4,4(r18)
   24524:	94000217 	ldw	r16,8(r18)
   24528:	213fffc4 	addi	r4,r4,-1
   2452c:	20000a16 	blt	r4,zero,24558 <__sfp+0x78>
   24530:	8080030f 	ldh	r2,12(r16)
   24534:	10000c26 	beq	r2,zero,24568 <__sfp+0x88>
   24538:	80c01d04 	addi	r3,r16,116
   2453c:	00000206 	br	24548 <__sfp+0x68>
   24540:	18bfe60f 	ldh	r2,-104(r3)
   24544:	10000826 	beq	r2,zero,24568 <__sfp+0x88>
   24548:	213fffc4 	addi	r4,r4,-1
   2454c:	1c3ffd04 	addi	r16,r3,-12
   24550:	18c01a04 	addi	r3,r3,104
   24554:	247ffa1e 	bne	r4,r17,24540 <__alt_data_end+0xfffe4540>
   24558:	90800017 	ldw	r2,0(r18)
   2455c:	10001d26 	beq	r2,zero,245d4 <__sfp+0xf4>
   24560:	1025883a 	mov	r18,r2
   24564:	003fee06 	br	24520 <__alt_data_end+0xfffe4520>
   24568:	00bfffc4 	movi	r2,-1
   2456c:	8080038d 	sth	r2,14(r16)
   24570:	00800044 	movi	r2,1
   24574:	8080030d 	sth	r2,12(r16)
   24578:	80001915 	stw	zero,100(r16)
   2457c:	80000015 	stw	zero,0(r16)
   24580:	80000215 	stw	zero,8(r16)
   24584:	80000115 	stw	zero,4(r16)
   24588:	80000415 	stw	zero,16(r16)
   2458c:	80000515 	stw	zero,20(r16)
   24590:	80000615 	stw	zero,24(r16)
   24594:	01800204 	movi	r6,8
   24598:	000b883a 	mov	r5,zero
   2459c:	81001704 	addi	r4,r16,92
   245a0:	00258ec0 	call	258ec <memset>
   245a4:	8005883a 	mov	r2,r16
   245a8:	80000c15 	stw	zero,48(r16)
   245ac:	80000d15 	stw	zero,52(r16)
   245b0:	80001115 	stw	zero,68(r16)
   245b4:	80001215 	stw	zero,72(r16)
   245b8:	dfc00417 	ldw	ra,16(sp)
   245bc:	dcc00317 	ldw	r19,12(sp)
   245c0:	dc800217 	ldw	r18,8(sp)
   245c4:	dc400117 	ldw	r17,4(sp)
   245c8:	dc000017 	ldw	r16,0(sp)
   245cc:	dec00504 	addi	sp,sp,20
   245d0:	f800283a 	ret
   245d4:	01400104 	movi	r5,4
   245d8:	9809883a 	mov	r4,r19
   245dc:	00244780 	call	24478 <__sfmoreglue>
   245e0:	90800015 	stw	r2,0(r18)
   245e4:	103fde1e 	bne	r2,zero,24560 <__alt_data_end+0xfffe4560>
   245e8:	00800304 	movi	r2,12
   245ec:	98800015 	stw	r2,0(r19)
   245f0:	0005883a 	mov	r2,zero
   245f4:	003ff006 	br	245b8 <__alt_data_end+0xfffe45b8>

000245f8 <_cleanup>:
   245f8:	008000f4 	movhi	r2,3
   245fc:	1083e704 	addi	r2,r2,3996
   24600:	11000017 	ldw	r4,0(r2)
   24604:	014000f4 	movhi	r5,3
   24608:	29615204 	addi	r5,r5,-31416
   2460c:	0024b581 	jmpi	24b58 <_fwalk_reent>

00024610 <__sinit>:
   24610:	20800e17 	ldw	r2,56(r4)
   24614:	10000126 	beq	r2,zero,2461c <__sinit+0xc>
   24618:	f800283a 	ret
   2461c:	00242d41 	jmpi	242d4 <__sinit.part.1>

00024620 <__sfp_lock_acquire>:
   24620:	f800283a 	ret

00024624 <__sfp_lock_release>:
   24624:	f800283a 	ret

00024628 <__sinit_lock_acquire>:
   24628:	f800283a 	ret

0002462c <__sinit_lock_release>:
   2462c:	f800283a 	ret

00024630 <__fp_lock_all>:
   24630:	008000f4 	movhi	r2,3
   24634:	1083e804 	addi	r2,r2,4000
   24638:	11000017 	ldw	r4,0(r2)
   2463c:	014000b4 	movhi	r5,2
   24640:	29511c04 	addi	r5,r5,17520
   24644:	0024a941 	jmpi	24a94 <_fwalk>

00024648 <__fp_unlock_all>:
   24648:	008000f4 	movhi	r2,3
   2464c:	1083e804 	addi	r2,r2,4000
   24650:	11000017 	ldw	r4,0(r2)
   24654:	014000b4 	movhi	r5,2
   24658:	2950b004 	addi	r5,r5,17088
   2465c:	0024a941 	jmpi	24a94 <_fwalk>

00024660 <_malloc_trim_r>:
   24660:	defffb04 	addi	sp,sp,-20
   24664:	dcc00315 	stw	r19,12(sp)
   24668:	04c000f4 	movhi	r19,3
   2466c:	dc800215 	stw	r18,8(sp)
   24670:	dc400115 	stw	r17,4(sp)
   24674:	dc000015 	stw	r16,0(sp)
   24678:	dfc00415 	stw	ra,16(sp)
   2467c:	2821883a 	mov	r16,r5
   24680:	9cfe6304 	addi	r19,r19,-1652
   24684:	2025883a 	mov	r18,r4
   24688:	002d0c80 	call	2d0c8 <__malloc_lock>
   2468c:	98800217 	ldw	r2,8(r19)
   24690:	14400117 	ldw	r17,4(r2)
   24694:	00bfff04 	movi	r2,-4
   24698:	88a2703a 	and	r17,r17,r2
   2469c:	8c21c83a 	sub	r16,r17,r16
   246a0:	8403fbc4 	addi	r16,r16,4079
   246a4:	8020d33a 	srli	r16,r16,12
   246a8:	0083ffc4 	movi	r2,4095
   246ac:	843fffc4 	addi	r16,r16,-1
   246b0:	8020933a 	slli	r16,r16,12
   246b4:	1400060e 	bge	r2,r16,246d0 <_malloc_trim_r+0x70>
   246b8:	000b883a 	mov	r5,zero
   246bc:	9009883a 	mov	r4,r18
   246c0:	0026a840 	call	26a84 <_sbrk_r>
   246c4:	98c00217 	ldw	r3,8(r19)
   246c8:	1c47883a 	add	r3,r3,r17
   246cc:	10c00a26 	beq	r2,r3,246f8 <_malloc_trim_r+0x98>
   246d0:	9009883a 	mov	r4,r18
   246d4:	002d0ec0 	call	2d0ec <__malloc_unlock>
   246d8:	0005883a 	mov	r2,zero
   246dc:	dfc00417 	ldw	ra,16(sp)
   246e0:	dcc00317 	ldw	r19,12(sp)
   246e4:	dc800217 	ldw	r18,8(sp)
   246e8:	dc400117 	ldw	r17,4(sp)
   246ec:	dc000017 	ldw	r16,0(sp)
   246f0:	dec00504 	addi	sp,sp,20
   246f4:	f800283a 	ret
   246f8:	040bc83a 	sub	r5,zero,r16
   246fc:	9009883a 	mov	r4,r18
   24700:	0026a840 	call	26a84 <_sbrk_r>
   24704:	00ffffc4 	movi	r3,-1
   24708:	10c00d26 	beq	r2,r3,24740 <_malloc_trim_r+0xe0>
   2470c:	00c000f4 	movhi	r3,3
   24710:	18cac004 	addi	r3,r3,11008
   24714:	18800017 	ldw	r2,0(r3)
   24718:	99000217 	ldw	r4,8(r19)
   2471c:	8c23c83a 	sub	r17,r17,r16
   24720:	8c400054 	ori	r17,r17,1
   24724:	1421c83a 	sub	r16,r2,r16
   24728:	24400115 	stw	r17,4(r4)
   2472c:	9009883a 	mov	r4,r18
   24730:	1c000015 	stw	r16,0(r3)
   24734:	002d0ec0 	call	2d0ec <__malloc_unlock>
   24738:	00800044 	movi	r2,1
   2473c:	003fe706 	br	246dc <__alt_data_end+0xfffe46dc>
   24740:	000b883a 	mov	r5,zero
   24744:	9009883a 	mov	r4,r18
   24748:	0026a840 	call	26a84 <_sbrk_r>
   2474c:	99000217 	ldw	r4,8(r19)
   24750:	014003c4 	movi	r5,15
   24754:	1107c83a 	sub	r3,r2,r4
   24758:	28ffdd0e 	bge	r5,r3,246d0 <__alt_data_end+0xfffe46d0>
   2475c:	014000f4 	movhi	r5,3
   24760:	2943ea04 	addi	r5,r5,4008
   24764:	29400017 	ldw	r5,0(r5)
   24768:	18c00054 	ori	r3,r3,1
   2476c:	20c00115 	stw	r3,4(r4)
   24770:	00c000f4 	movhi	r3,3
   24774:	1145c83a 	sub	r2,r2,r5
   24778:	18cac004 	addi	r3,r3,11008
   2477c:	18800015 	stw	r2,0(r3)
   24780:	003fd306 	br	246d0 <__alt_data_end+0xfffe46d0>

00024784 <_free_r>:
   24784:	28004126 	beq	r5,zero,2488c <_free_r+0x108>
   24788:	defffd04 	addi	sp,sp,-12
   2478c:	dc400115 	stw	r17,4(sp)
   24790:	dc000015 	stw	r16,0(sp)
   24794:	2023883a 	mov	r17,r4
   24798:	2821883a 	mov	r16,r5
   2479c:	dfc00215 	stw	ra,8(sp)
   247a0:	002d0c80 	call	2d0c8 <__malloc_lock>
   247a4:	81ffff17 	ldw	r7,-4(r16)
   247a8:	00bfff84 	movi	r2,-2
   247ac:	010000f4 	movhi	r4,3
   247b0:	81bffe04 	addi	r6,r16,-8
   247b4:	3884703a 	and	r2,r7,r2
   247b8:	213e6304 	addi	r4,r4,-1652
   247bc:	308b883a 	add	r5,r6,r2
   247c0:	2a400117 	ldw	r9,4(r5)
   247c4:	22000217 	ldw	r8,8(r4)
   247c8:	00ffff04 	movi	r3,-4
   247cc:	48c6703a 	and	r3,r9,r3
   247d0:	2a005726 	beq	r5,r8,24930 <_free_r+0x1ac>
   247d4:	28c00115 	stw	r3,4(r5)
   247d8:	39c0004c 	andi	r7,r7,1
   247dc:	3800091e 	bne	r7,zero,24804 <_free_r+0x80>
   247e0:	823ffe17 	ldw	r8,-8(r16)
   247e4:	22400204 	addi	r9,r4,8
   247e8:	320dc83a 	sub	r6,r6,r8
   247ec:	31c00217 	ldw	r7,8(r6)
   247f0:	1205883a 	add	r2,r2,r8
   247f4:	3a406526 	beq	r7,r9,2498c <_free_r+0x208>
   247f8:	32000317 	ldw	r8,12(r6)
   247fc:	3a000315 	stw	r8,12(r7)
   24800:	41c00215 	stw	r7,8(r8)
   24804:	28cf883a 	add	r7,r5,r3
   24808:	39c00117 	ldw	r7,4(r7)
   2480c:	39c0004c 	andi	r7,r7,1
   24810:	38003a26 	beq	r7,zero,248fc <_free_r+0x178>
   24814:	10c00054 	ori	r3,r2,1
   24818:	30c00115 	stw	r3,4(r6)
   2481c:	3087883a 	add	r3,r6,r2
   24820:	18800015 	stw	r2,0(r3)
   24824:	00c07fc4 	movi	r3,511
   24828:	18801936 	bltu	r3,r2,24890 <_free_r+0x10c>
   2482c:	1004d0fa 	srli	r2,r2,3
   24830:	01c00044 	movi	r7,1
   24834:	21400117 	ldw	r5,4(r4)
   24838:	10c00044 	addi	r3,r2,1
   2483c:	18c7883a 	add	r3,r3,r3
   24840:	1005d0ba 	srai	r2,r2,2
   24844:	18c7883a 	add	r3,r3,r3
   24848:	18c7883a 	add	r3,r3,r3
   2484c:	1907883a 	add	r3,r3,r4
   24850:	3884983a 	sll	r2,r7,r2
   24854:	19c00017 	ldw	r7,0(r3)
   24858:	1a3ffe04 	addi	r8,r3,-8
   2485c:	1144b03a 	or	r2,r2,r5
   24860:	32000315 	stw	r8,12(r6)
   24864:	31c00215 	stw	r7,8(r6)
   24868:	20800115 	stw	r2,4(r4)
   2486c:	19800015 	stw	r6,0(r3)
   24870:	39800315 	stw	r6,12(r7)
   24874:	8809883a 	mov	r4,r17
   24878:	dfc00217 	ldw	ra,8(sp)
   2487c:	dc400117 	ldw	r17,4(sp)
   24880:	dc000017 	ldw	r16,0(sp)
   24884:	dec00304 	addi	sp,sp,12
   24888:	002d0ec1 	jmpi	2d0ec <__malloc_unlock>
   2488c:	f800283a 	ret
   24890:	100ad27a 	srli	r5,r2,9
   24894:	00c00104 	movi	r3,4
   24898:	19404a36 	bltu	r3,r5,249c4 <_free_r+0x240>
   2489c:	100ad1ba 	srli	r5,r2,6
   248a0:	28c00e44 	addi	r3,r5,57
   248a4:	18c7883a 	add	r3,r3,r3
   248a8:	29400e04 	addi	r5,r5,56
   248ac:	18c7883a 	add	r3,r3,r3
   248b0:	18c7883a 	add	r3,r3,r3
   248b4:	1909883a 	add	r4,r3,r4
   248b8:	20c00017 	ldw	r3,0(r4)
   248bc:	01c000f4 	movhi	r7,3
   248c0:	213ffe04 	addi	r4,r4,-8
   248c4:	39fe6304 	addi	r7,r7,-1652
   248c8:	20c04426 	beq	r4,r3,249dc <_free_r+0x258>
   248cc:	01ffff04 	movi	r7,-4
   248d0:	19400117 	ldw	r5,4(r3)
   248d4:	29ca703a 	and	r5,r5,r7
   248d8:	1140022e 	bgeu	r2,r5,248e4 <_free_r+0x160>
   248dc:	18c00217 	ldw	r3,8(r3)
   248e0:	20fffb1e 	bne	r4,r3,248d0 <__alt_data_end+0xfffe48d0>
   248e4:	19000317 	ldw	r4,12(r3)
   248e8:	31000315 	stw	r4,12(r6)
   248ec:	30c00215 	stw	r3,8(r6)
   248f0:	21800215 	stw	r6,8(r4)
   248f4:	19800315 	stw	r6,12(r3)
   248f8:	003fde06 	br	24874 <__alt_data_end+0xfffe4874>
   248fc:	29c00217 	ldw	r7,8(r5)
   24900:	10c5883a 	add	r2,r2,r3
   24904:	00c000f4 	movhi	r3,3
   24908:	18fe6504 	addi	r3,r3,-1644
   2490c:	38c03b26 	beq	r7,r3,249fc <_free_r+0x278>
   24910:	2a000317 	ldw	r8,12(r5)
   24914:	11400054 	ori	r5,r2,1
   24918:	3087883a 	add	r3,r6,r2
   2491c:	3a000315 	stw	r8,12(r7)
   24920:	41c00215 	stw	r7,8(r8)
   24924:	31400115 	stw	r5,4(r6)
   24928:	18800015 	stw	r2,0(r3)
   2492c:	003fbd06 	br	24824 <__alt_data_end+0xfffe4824>
   24930:	39c0004c 	andi	r7,r7,1
   24934:	10c5883a 	add	r2,r2,r3
   24938:	3800071e 	bne	r7,zero,24958 <_free_r+0x1d4>
   2493c:	81fffe17 	ldw	r7,-8(r16)
   24940:	31cdc83a 	sub	r6,r6,r7
   24944:	30c00317 	ldw	r3,12(r6)
   24948:	31400217 	ldw	r5,8(r6)
   2494c:	11c5883a 	add	r2,r2,r7
   24950:	28c00315 	stw	r3,12(r5)
   24954:	19400215 	stw	r5,8(r3)
   24958:	10c00054 	ori	r3,r2,1
   2495c:	30c00115 	stw	r3,4(r6)
   24960:	00c000f4 	movhi	r3,3
   24964:	18c3eb04 	addi	r3,r3,4012
   24968:	18c00017 	ldw	r3,0(r3)
   2496c:	21800215 	stw	r6,8(r4)
   24970:	10ffc036 	bltu	r2,r3,24874 <__alt_data_end+0xfffe4874>
   24974:	008000f4 	movhi	r2,3
   24978:	108ab704 	addi	r2,r2,10972
   2497c:	11400017 	ldw	r5,0(r2)
   24980:	8809883a 	mov	r4,r17
   24984:	00246600 	call	24660 <_malloc_trim_r>
   24988:	003fba06 	br	24874 <__alt_data_end+0xfffe4874>
   2498c:	28c9883a 	add	r4,r5,r3
   24990:	21000117 	ldw	r4,4(r4)
   24994:	2100004c 	andi	r4,r4,1
   24998:	2000391e 	bne	r4,zero,24a80 <_free_r+0x2fc>
   2499c:	29c00217 	ldw	r7,8(r5)
   249a0:	29000317 	ldw	r4,12(r5)
   249a4:	1885883a 	add	r2,r3,r2
   249a8:	10c00054 	ori	r3,r2,1
   249ac:	39000315 	stw	r4,12(r7)
   249b0:	21c00215 	stw	r7,8(r4)
   249b4:	30c00115 	stw	r3,4(r6)
   249b8:	308d883a 	add	r6,r6,r2
   249bc:	30800015 	stw	r2,0(r6)
   249c0:	003fac06 	br	24874 <__alt_data_end+0xfffe4874>
   249c4:	00c00504 	movi	r3,20
   249c8:	19401536 	bltu	r3,r5,24a20 <_free_r+0x29c>
   249cc:	28c01704 	addi	r3,r5,92
   249d0:	18c7883a 	add	r3,r3,r3
   249d4:	294016c4 	addi	r5,r5,91
   249d8:	003fb406 	br	248ac <__alt_data_end+0xfffe48ac>
   249dc:	280bd0ba 	srai	r5,r5,2
   249e0:	00c00044 	movi	r3,1
   249e4:	38800117 	ldw	r2,4(r7)
   249e8:	194a983a 	sll	r5,r3,r5
   249ec:	2007883a 	mov	r3,r4
   249f0:	2884b03a 	or	r2,r5,r2
   249f4:	38800115 	stw	r2,4(r7)
   249f8:	003fbb06 	br	248e8 <__alt_data_end+0xfffe48e8>
   249fc:	21800515 	stw	r6,20(r4)
   24a00:	21800415 	stw	r6,16(r4)
   24a04:	10c00054 	ori	r3,r2,1
   24a08:	31c00315 	stw	r7,12(r6)
   24a0c:	31c00215 	stw	r7,8(r6)
   24a10:	30c00115 	stw	r3,4(r6)
   24a14:	308d883a 	add	r6,r6,r2
   24a18:	30800015 	stw	r2,0(r6)
   24a1c:	003f9506 	br	24874 <__alt_data_end+0xfffe4874>
   24a20:	00c01504 	movi	r3,84
   24a24:	19400536 	bltu	r3,r5,24a3c <_free_r+0x2b8>
   24a28:	100ad33a 	srli	r5,r2,12
   24a2c:	28c01bc4 	addi	r3,r5,111
   24a30:	18c7883a 	add	r3,r3,r3
   24a34:	29401b84 	addi	r5,r5,110
   24a38:	003f9c06 	br	248ac <__alt_data_end+0xfffe48ac>
   24a3c:	00c05504 	movi	r3,340
   24a40:	19400536 	bltu	r3,r5,24a58 <_free_r+0x2d4>
   24a44:	100ad3fa 	srli	r5,r2,15
   24a48:	28c01e04 	addi	r3,r5,120
   24a4c:	18c7883a 	add	r3,r3,r3
   24a50:	29401dc4 	addi	r5,r5,119
   24a54:	003f9506 	br	248ac <__alt_data_end+0xfffe48ac>
   24a58:	00c15504 	movi	r3,1364
   24a5c:	19400536 	bltu	r3,r5,24a74 <_free_r+0x2f0>
   24a60:	100ad4ba 	srli	r5,r2,18
   24a64:	28c01f44 	addi	r3,r5,125
   24a68:	18c7883a 	add	r3,r3,r3
   24a6c:	29401f04 	addi	r5,r5,124
   24a70:	003f8e06 	br	248ac <__alt_data_end+0xfffe48ac>
   24a74:	00c03f84 	movi	r3,254
   24a78:	01401f84 	movi	r5,126
   24a7c:	003f8b06 	br	248ac <__alt_data_end+0xfffe48ac>
   24a80:	10c00054 	ori	r3,r2,1
   24a84:	30c00115 	stw	r3,4(r6)
   24a88:	308d883a 	add	r6,r6,r2
   24a8c:	30800015 	stw	r2,0(r6)
   24a90:	003f7806 	br	24874 <__alt_data_end+0xfffe4874>

00024a94 <_fwalk>:
   24a94:	defff704 	addi	sp,sp,-36
   24a98:	dd000415 	stw	r20,16(sp)
   24a9c:	dfc00815 	stw	ra,32(sp)
   24aa0:	ddc00715 	stw	r23,28(sp)
   24aa4:	dd800615 	stw	r22,24(sp)
   24aa8:	dd400515 	stw	r21,20(sp)
   24aac:	dcc00315 	stw	r19,12(sp)
   24ab0:	dc800215 	stw	r18,8(sp)
   24ab4:	dc400115 	stw	r17,4(sp)
   24ab8:	dc000015 	stw	r16,0(sp)
   24abc:	2500b804 	addi	r20,r4,736
   24ac0:	a0002326 	beq	r20,zero,24b50 <_fwalk+0xbc>
   24ac4:	282b883a 	mov	r21,r5
   24ac8:	002f883a 	mov	r23,zero
   24acc:	05800044 	movi	r22,1
   24ad0:	04ffffc4 	movi	r19,-1
   24ad4:	a4400117 	ldw	r17,4(r20)
   24ad8:	a4800217 	ldw	r18,8(r20)
   24adc:	8c7fffc4 	addi	r17,r17,-1
   24ae0:	88000d16 	blt	r17,zero,24b18 <_fwalk+0x84>
   24ae4:	94000304 	addi	r16,r18,12
   24ae8:	94800384 	addi	r18,r18,14
   24aec:	8080000b 	ldhu	r2,0(r16)
   24af0:	8c7fffc4 	addi	r17,r17,-1
   24af4:	813ffd04 	addi	r4,r16,-12
   24af8:	b080042e 	bgeu	r22,r2,24b0c <_fwalk+0x78>
   24afc:	9080000f 	ldh	r2,0(r18)
   24b00:	14c00226 	beq	r2,r19,24b0c <_fwalk+0x78>
   24b04:	a83ee83a 	callr	r21
   24b08:	b8aeb03a 	or	r23,r23,r2
   24b0c:	84001a04 	addi	r16,r16,104
   24b10:	94801a04 	addi	r18,r18,104
   24b14:	8cfff51e 	bne	r17,r19,24aec <__alt_data_end+0xfffe4aec>
   24b18:	a5000017 	ldw	r20,0(r20)
   24b1c:	a03fed1e 	bne	r20,zero,24ad4 <__alt_data_end+0xfffe4ad4>
   24b20:	b805883a 	mov	r2,r23
   24b24:	dfc00817 	ldw	ra,32(sp)
   24b28:	ddc00717 	ldw	r23,28(sp)
   24b2c:	dd800617 	ldw	r22,24(sp)
   24b30:	dd400517 	ldw	r21,20(sp)
   24b34:	dd000417 	ldw	r20,16(sp)
   24b38:	dcc00317 	ldw	r19,12(sp)
   24b3c:	dc800217 	ldw	r18,8(sp)
   24b40:	dc400117 	ldw	r17,4(sp)
   24b44:	dc000017 	ldw	r16,0(sp)
   24b48:	dec00904 	addi	sp,sp,36
   24b4c:	f800283a 	ret
   24b50:	002f883a 	mov	r23,zero
   24b54:	003ff206 	br	24b20 <__alt_data_end+0xfffe4b20>

00024b58 <_fwalk_reent>:
   24b58:	defff704 	addi	sp,sp,-36
   24b5c:	dd000415 	stw	r20,16(sp)
   24b60:	dfc00815 	stw	ra,32(sp)
   24b64:	ddc00715 	stw	r23,28(sp)
   24b68:	dd800615 	stw	r22,24(sp)
   24b6c:	dd400515 	stw	r21,20(sp)
   24b70:	dcc00315 	stw	r19,12(sp)
   24b74:	dc800215 	stw	r18,8(sp)
   24b78:	dc400115 	stw	r17,4(sp)
   24b7c:	dc000015 	stw	r16,0(sp)
   24b80:	2500b804 	addi	r20,r4,736
   24b84:	a0002326 	beq	r20,zero,24c14 <_fwalk_reent+0xbc>
   24b88:	282b883a 	mov	r21,r5
   24b8c:	2027883a 	mov	r19,r4
   24b90:	002f883a 	mov	r23,zero
   24b94:	05800044 	movi	r22,1
   24b98:	04bfffc4 	movi	r18,-1
   24b9c:	a4400117 	ldw	r17,4(r20)
   24ba0:	a4000217 	ldw	r16,8(r20)
   24ba4:	8c7fffc4 	addi	r17,r17,-1
   24ba8:	88000c16 	blt	r17,zero,24bdc <_fwalk_reent+0x84>
   24bac:	84000304 	addi	r16,r16,12
   24bb0:	8080000b 	ldhu	r2,0(r16)
   24bb4:	8c7fffc4 	addi	r17,r17,-1
   24bb8:	817ffd04 	addi	r5,r16,-12
   24bbc:	b080052e 	bgeu	r22,r2,24bd4 <_fwalk_reent+0x7c>
   24bc0:	8080008f 	ldh	r2,2(r16)
   24bc4:	9809883a 	mov	r4,r19
   24bc8:	14800226 	beq	r2,r18,24bd4 <_fwalk_reent+0x7c>
   24bcc:	a83ee83a 	callr	r21
   24bd0:	b8aeb03a 	or	r23,r23,r2
   24bd4:	84001a04 	addi	r16,r16,104
   24bd8:	8cbff51e 	bne	r17,r18,24bb0 <__alt_data_end+0xfffe4bb0>
   24bdc:	a5000017 	ldw	r20,0(r20)
   24be0:	a03fee1e 	bne	r20,zero,24b9c <__alt_data_end+0xfffe4b9c>
   24be4:	b805883a 	mov	r2,r23
   24be8:	dfc00817 	ldw	ra,32(sp)
   24bec:	ddc00717 	ldw	r23,28(sp)
   24bf0:	dd800617 	ldw	r22,24(sp)
   24bf4:	dd400517 	ldw	r21,20(sp)
   24bf8:	dd000417 	ldw	r20,16(sp)
   24bfc:	dcc00317 	ldw	r19,12(sp)
   24c00:	dc800217 	ldw	r18,8(sp)
   24c04:	dc400117 	ldw	r17,4(sp)
   24c08:	dc000017 	ldw	r16,0(sp)
   24c0c:	dec00904 	addi	sp,sp,36
   24c10:	f800283a 	ret
   24c14:	002f883a 	mov	r23,zero
   24c18:	003ff206 	br	24be4 <__alt_data_end+0xfffe4be4>

00024c1c <_setlocale_r>:
   24c1c:	30001b26 	beq	r6,zero,24c8c <_setlocale_r+0x70>
   24c20:	014000f4 	movhi	r5,3
   24c24:	defffe04 	addi	sp,sp,-8
   24c28:	297c9b04 	addi	r5,r5,-3476
   24c2c:	3009883a 	mov	r4,r6
   24c30:	dc000015 	stw	r16,0(sp)
   24c34:	dfc00115 	stw	ra,4(sp)
   24c38:	3021883a 	mov	r16,r6
   24c3c:	0026c140 	call	26c14 <strcmp>
   24c40:	1000061e 	bne	r2,zero,24c5c <_setlocale_r+0x40>
   24c44:	008000f4 	movhi	r2,3
   24c48:	10bc9a04 	addi	r2,r2,-3480
   24c4c:	dfc00117 	ldw	ra,4(sp)
   24c50:	dc000017 	ldw	r16,0(sp)
   24c54:	dec00204 	addi	sp,sp,8
   24c58:	f800283a 	ret
   24c5c:	014000f4 	movhi	r5,3
   24c60:	297c9a04 	addi	r5,r5,-3480
   24c64:	8009883a 	mov	r4,r16
   24c68:	0026c140 	call	26c14 <strcmp>
   24c6c:	103ff526 	beq	r2,zero,24c44 <__alt_data_end+0xfffe4c44>
   24c70:	014000f4 	movhi	r5,3
   24c74:	297c8504 	addi	r5,r5,-3564
   24c78:	8009883a 	mov	r4,r16
   24c7c:	0026c140 	call	26c14 <strcmp>
   24c80:	103ff026 	beq	r2,zero,24c44 <__alt_data_end+0xfffe4c44>
   24c84:	0005883a 	mov	r2,zero
   24c88:	003ff006 	br	24c4c <__alt_data_end+0xfffe4c4c>
   24c8c:	008000f4 	movhi	r2,3
   24c90:	10bc9a04 	addi	r2,r2,-3480
   24c94:	f800283a 	ret

00024c98 <__locale_charset>:
   24c98:	008000f4 	movhi	r2,3
   24c9c:	10be4d04 	addi	r2,r2,-1740
   24ca0:	f800283a 	ret

00024ca4 <__locale_mb_cur_max>:
   24ca4:	008000f4 	movhi	r2,3
   24ca8:	1083e904 	addi	r2,r2,4004
   24cac:	10800017 	ldw	r2,0(r2)
   24cb0:	f800283a 	ret

00024cb4 <__locale_msgcharset>:
   24cb4:	008000f4 	movhi	r2,3
   24cb8:	10be4504 	addi	r2,r2,-1772
   24cbc:	f800283a 	ret

00024cc0 <__locale_cjk_lang>:
   24cc0:	0005883a 	mov	r2,zero
   24cc4:	f800283a 	ret

00024cc8 <_localeconv_r>:
   24cc8:	008000f4 	movhi	r2,3
   24ccc:	10be5504 	addi	r2,r2,-1708
   24cd0:	f800283a 	ret

00024cd4 <setlocale>:
   24cd4:	008000f4 	movhi	r2,3
   24cd8:	1083e804 	addi	r2,r2,4000
   24cdc:	280d883a 	mov	r6,r5
   24ce0:	200b883a 	mov	r5,r4
   24ce4:	11000017 	ldw	r4,0(r2)
   24ce8:	0024c1c1 	jmpi	24c1c <_setlocale_r>

00024cec <localeconv>:
   24cec:	008000f4 	movhi	r2,3
   24cf0:	10be5504 	addi	r2,r2,-1708
   24cf4:	f800283a 	ret

00024cf8 <__smakebuf_r>:
   24cf8:	2880030b 	ldhu	r2,12(r5)
   24cfc:	10c0008c 	andi	r3,r2,2
   24d00:	1800411e 	bne	r3,zero,24e08 <__smakebuf_r+0x110>
   24d04:	deffec04 	addi	sp,sp,-80
   24d08:	dc000f15 	stw	r16,60(sp)
   24d0c:	2821883a 	mov	r16,r5
   24d10:	2940038f 	ldh	r5,14(r5)
   24d14:	dc401015 	stw	r17,64(sp)
   24d18:	dfc01315 	stw	ra,76(sp)
   24d1c:	dcc01215 	stw	r19,72(sp)
   24d20:	dc801115 	stw	r18,68(sp)
   24d24:	2023883a 	mov	r17,r4
   24d28:	28001c16 	blt	r5,zero,24d9c <__smakebuf_r+0xa4>
   24d2c:	d80d883a 	mov	r6,sp
   24d30:	00288540 	call	28854 <_fstat_r>
   24d34:	10001816 	blt	r2,zero,24d98 <__smakebuf_r+0xa0>
   24d38:	d8800117 	ldw	r2,4(sp)
   24d3c:	00e00014 	movui	r3,32768
   24d40:	10bc000c 	andi	r2,r2,61440
   24d44:	14c80020 	cmpeqi	r19,r2,8192
   24d48:	10c03726 	beq	r2,r3,24e28 <__smakebuf_r+0x130>
   24d4c:	80c0030b 	ldhu	r3,12(r16)
   24d50:	18c20014 	ori	r3,r3,2048
   24d54:	80c0030d 	sth	r3,12(r16)
   24d58:	00c80004 	movi	r3,8192
   24d5c:	10c0521e 	bne	r2,r3,24ea8 <__smakebuf_r+0x1b0>
   24d60:	8140038f 	ldh	r5,14(r16)
   24d64:	8809883a 	mov	r4,r17
   24d68:	0028d6c0 	call	28d6c <_isatty_r>
   24d6c:	10004c26 	beq	r2,zero,24ea0 <__smakebuf_r+0x1a8>
   24d70:	8080030b 	ldhu	r2,12(r16)
   24d74:	80c010c4 	addi	r3,r16,67
   24d78:	80c00015 	stw	r3,0(r16)
   24d7c:	10800054 	ori	r2,r2,1
   24d80:	8080030d 	sth	r2,12(r16)
   24d84:	00800044 	movi	r2,1
   24d88:	80c00415 	stw	r3,16(r16)
   24d8c:	80800515 	stw	r2,20(r16)
   24d90:	04810004 	movi	r18,1024
   24d94:	00000706 	br	24db4 <__smakebuf_r+0xbc>
   24d98:	8080030b 	ldhu	r2,12(r16)
   24d9c:	10c0200c 	andi	r3,r2,128
   24da0:	18001f1e 	bne	r3,zero,24e20 <__smakebuf_r+0x128>
   24da4:	04810004 	movi	r18,1024
   24da8:	10820014 	ori	r2,r2,2048
   24dac:	8080030d 	sth	r2,12(r16)
   24db0:	0027883a 	mov	r19,zero
   24db4:	900b883a 	mov	r5,r18
   24db8:	8809883a 	mov	r4,r17
   24dbc:	0024eb40 	call	24eb4 <_malloc_r>
   24dc0:	10002c26 	beq	r2,zero,24e74 <__smakebuf_r+0x17c>
   24dc4:	80c0030b 	ldhu	r3,12(r16)
   24dc8:	010000b4 	movhi	r4,2
   24dcc:	2110b204 	addi	r4,r4,17096
   24dd0:	89000f15 	stw	r4,60(r17)
   24dd4:	18c02014 	ori	r3,r3,128
   24dd8:	80c0030d 	sth	r3,12(r16)
   24ddc:	80800015 	stw	r2,0(r16)
   24de0:	80800415 	stw	r2,16(r16)
   24de4:	84800515 	stw	r18,20(r16)
   24de8:	98001a1e 	bne	r19,zero,24e54 <__smakebuf_r+0x15c>
   24dec:	dfc01317 	ldw	ra,76(sp)
   24df0:	dcc01217 	ldw	r19,72(sp)
   24df4:	dc801117 	ldw	r18,68(sp)
   24df8:	dc401017 	ldw	r17,64(sp)
   24dfc:	dc000f17 	ldw	r16,60(sp)
   24e00:	dec01404 	addi	sp,sp,80
   24e04:	f800283a 	ret
   24e08:	288010c4 	addi	r2,r5,67
   24e0c:	28800015 	stw	r2,0(r5)
   24e10:	28800415 	stw	r2,16(r5)
   24e14:	00800044 	movi	r2,1
   24e18:	28800515 	stw	r2,20(r5)
   24e1c:	f800283a 	ret
   24e20:	04801004 	movi	r18,64
   24e24:	003fe006 	br	24da8 <__alt_data_end+0xfffe4da8>
   24e28:	81000a17 	ldw	r4,40(r16)
   24e2c:	00c000b4 	movhi	r3,2
   24e30:	18daec04 	addi	r3,r3,27568
   24e34:	20ffc51e 	bne	r4,r3,24d4c <__alt_data_end+0xfffe4d4c>
   24e38:	8080030b 	ldhu	r2,12(r16)
   24e3c:	04810004 	movi	r18,1024
   24e40:	84801315 	stw	r18,76(r16)
   24e44:	1484b03a 	or	r2,r2,r18
   24e48:	8080030d 	sth	r2,12(r16)
   24e4c:	0027883a 	mov	r19,zero
   24e50:	003fd806 	br	24db4 <__alt_data_end+0xfffe4db4>
   24e54:	8140038f 	ldh	r5,14(r16)
   24e58:	8809883a 	mov	r4,r17
   24e5c:	0028d6c0 	call	28d6c <_isatty_r>
   24e60:	103fe226 	beq	r2,zero,24dec <__alt_data_end+0xfffe4dec>
   24e64:	8080030b 	ldhu	r2,12(r16)
   24e68:	10800054 	ori	r2,r2,1
   24e6c:	8080030d 	sth	r2,12(r16)
   24e70:	003fde06 	br	24dec <__alt_data_end+0xfffe4dec>
   24e74:	8080030b 	ldhu	r2,12(r16)
   24e78:	10c0800c 	andi	r3,r2,512
   24e7c:	183fdb1e 	bne	r3,zero,24dec <__alt_data_end+0xfffe4dec>
   24e80:	10800094 	ori	r2,r2,2
   24e84:	80c010c4 	addi	r3,r16,67
   24e88:	8080030d 	sth	r2,12(r16)
   24e8c:	00800044 	movi	r2,1
   24e90:	80c00015 	stw	r3,0(r16)
   24e94:	80c00415 	stw	r3,16(r16)
   24e98:	80800515 	stw	r2,20(r16)
   24e9c:	003fd306 	br	24dec <__alt_data_end+0xfffe4dec>
   24ea0:	04810004 	movi	r18,1024
   24ea4:	003fc306 	br	24db4 <__alt_data_end+0xfffe4db4>
   24ea8:	0027883a 	mov	r19,zero
   24eac:	04810004 	movi	r18,1024
   24eb0:	003fc006 	br	24db4 <__alt_data_end+0xfffe4db4>

00024eb4 <_malloc_r>:
   24eb4:	defff504 	addi	sp,sp,-44
   24eb8:	dc800315 	stw	r18,12(sp)
   24ebc:	dfc00a15 	stw	ra,40(sp)
   24ec0:	df000915 	stw	fp,36(sp)
   24ec4:	ddc00815 	stw	r23,32(sp)
   24ec8:	dd800715 	stw	r22,28(sp)
   24ecc:	dd400615 	stw	r21,24(sp)
   24ed0:	dd000515 	stw	r20,20(sp)
   24ed4:	dcc00415 	stw	r19,16(sp)
   24ed8:	dc400215 	stw	r17,8(sp)
   24edc:	dc000115 	stw	r16,4(sp)
   24ee0:	288002c4 	addi	r2,r5,11
   24ee4:	00c00584 	movi	r3,22
   24ee8:	2025883a 	mov	r18,r4
   24eec:	18807f2e 	bgeu	r3,r2,250ec <_malloc_r+0x238>
   24ef0:	047ffe04 	movi	r17,-8
   24ef4:	1462703a 	and	r17,r2,r17
   24ef8:	8800a316 	blt	r17,zero,25188 <_malloc_r+0x2d4>
   24efc:	8940a236 	bltu	r17,r5,25188 <_malloc_r+0x2d4>
   24f00:	002d0c80 	call	2d0c8 <__malloc_lock>
   24f04:	00807dc4 	movi	r2,503
   24f08:	1441e92e 	bgeu	r2,r17,256b0 <_malloc_r+0x7fc>
   24f0c:	8804d27a 	srli	r2,r17,9
   24f10:	1000a126 	beq	r2,zero,25198 <_malloc_r+0x2e4>
   24f14:	00c00104 	movi	r3,4
   24f18:	18811e36 	bltu	r3,r2,25394 <_malloc_r+0x4e0>
   24f1c:	8804d1ba 	srli	r2,r17,6
   24f20:	12000e44 	addi	r8,r2,57
   24f24:	11c00e04 	addi	r7,r2,56
   24f28:	4209883a 	add	r4,r8,r8
   24f2c:	04c000f4 	movhi	r19,3
   24f30:	2109883a 	add	r4,r4,r4
   24f34:	9cfe6304 	addi	r19,r19,-1652
   24f38:	2109883a 	add	r4,r4,r4
   24f3c:	9909883a 	add	r4,r19,r4
   24f40:	24000117 	ldw	r16,4(r4)
   24f44:	213ffe04 	addi	r4,r4,-8
   24f48:	24009726 	beq	r4,r16,251a8 <_malloc_r+0x2f4>
   24f4c:	80800117 	ldw	r2,4(r16)
   24f50:	01bfff04 	movi	r6,-4
   24f54:	014003c4 	movi	r5,15
   24f58:	1184703a 	and	r2,r2,r6
   24f5c:	1447c83a 	sub	r3,r2,r17
   24f60:	28c00716 	blt	r5,r3,24f80 <_malloc_r+0xcc>
   24f64:	1800920e 	bge	r3,zero,251b0 <_malloc_r+0x2fc>
   24f68:	84000317 	ldw	r16,12(r16)
   24f6c:	24008e26 	beq	r4,r16,251a8 <_malloc_r+0x2f4>
   24f70:	80800117 	ldw	r2,4(r16)
   24f74:	1184703a 	and	r2,r2,r6
   24f78:	1447c83a 	sub	r3,r2,r17
   24f7c:	28fff90e 	bge	r5,r3,24f64 <__alt_data_end+0xfffe4f64>
   24f80:	3809883a 	mov	r4,r7
   24f84:	018000f4 	movhi	r6,3
   24f88:	9c000417 	ldw	r16,16(r19)
   24f8c:	31be6304 	addi	r6,r6,-1652
   24f90:	32000204 	addi	r8,r6,8
   24f94:	82013426 	beq	r16,r8,25468 <_malloc_r+0x5b4>
   24f98:	80c00117 	ldw	r3,4(r16)
   24f9c:	00bfff04 	movi	r2,-4
   24fa0:	188e703a 	and	r7,r3,r2
   24fa4:	3c45c83a 	sub	r2,r7,r17
   24fa8:	00c003c4 	movi	r3,15
   24fac:	18811f16 	blt	r3,r2,2542c <_malloc_r+0x578>
   24fb0:	32000515 	stw	r8,20(r6)
   24fb4:	32000415 	stw	r8,16(r6)
   24fb8:	10007f0e 	bge	r2,zero,251b8 <_malloc_r+0x304>
   24fbc:	00807fc4 	movi	r2,511
   24fc0:	11c0fd36 	bltu	r2,r7,253b8 <_malloc_r+0x504>
   24fc4:	3806d0fa 	srli	r3,r7,3
   24fc8:	01c00044 	movi	r7,1
   24fcc:	30800117 	ldw	r2,4(r6)
   24fd0:	19400044 	addi	r5,r3,1
   24fd4:	294b883a 	add	r5,r5,r5
   24fd8:	1807d0ba 	srai	r3,r3,2
   24fdc:	294b883a 	add	r5,r5,r5
   24fe0:	294b883a 	add	r5,r5,r5
   24fe4:	298b883a 	add	r5,r5,r6
   24fe8:	38c6983a 	sll	r3,r7,r3
   24fec:	29c00017 	ldw	r7,0(r5)
   24ff0:	2a7ffe04 	addi	r9,r5,-8
   24ff4:	1886b03a 	or	r3,r3,r2
   24ff8:	82400315 	stw	r9,12(r16)
   24ffc:	81c00215 	stw	r7,8(r16)
   25000:	30c00115 	stw	r3,4(r6)
   25004:	2c000015 	stw	r16,0(r5)
   25008:	3c000315 	stw	r16,12(r7)
   2500c:	2005d0ba 	srai	r2,r4,2
   25010:	01400044 	movi	r5,1
   25014:	288a983a 	sll	r5,r5,r2
   25018:	19406f36 	bltu	r3,r5,251d8 <_malloc_r+0x324>
   2501c:	28c4703a 	and	r2,r5,r3
   25020:	10000a1e 	bne	r2,zero,2504c <_malloc_r+0x198>
   25024:	00bfff04 	movi	r2,-4
   25028:	294b883a 	add	r5,r5,r5
   2502c:	2088703a 	and	r4,r4,r2
   25030:	28c4703a 	and	r2,r5,r3
   25034:	21000104 	addi	r4,r4,4
   25038:	1000041e 	bne	r2,zero,2504c <_malloc_r+0x198>
   2503c:	294b883a 	add	r5,r5,r5
   25040:	28c4703a 	and	r2,r5,r3
   25044:	21000104 	addi	r4,r4,4
   25048:	103ffc26 	beq	r2,zero,2503c <__alt_data_end+0xfffe503c>
   2504c:	02bfff04 	movi	r10,-4
   25050:	024003c4 	movi	r9,15
   25054:	21800044 	addi	r6,r4,1
   25058:	318d883a 	add	r6,r6,r6
   2505c:	318d883a 	add	r6,r6,r6
   25060:	318d883a 	add	r6,r6,r6
   25064:	998d883a 	add	r6,r19,r6
   25068:	333ffe04 	addi	r12,r6,-8
   2506c:	2017883a 	mov	r11,r4
   25070:	31800104 	addi	r6,r6,4
   25074:	34000017 	ldw	r16,0(r6)
   25078:	31fffd04 	addi	r7,r6,-12
   2507c:	81c0041e 	bne	r16,r7,25090 <_malloc_r+0x1dc>
   25080:	0000fb06 	br	25470 <_malloc_r+0x5bc>
   25084:	1801030e 	bge	r3,zero,25494 <_malloc_r+0x5e0>
   25088:	84000317 	ldw	r16,12(r16)
   2508c:	81c0f826 	beq	r16,r7,25470 <_malloc_r+0x5bc>
   25090:	80800117 	ldw	r2,4(r16)
   25094:	1284703a 	and	r2,r2,r10
   25098:	1447c83a 	sub	r3,r2,r17
   2509c:	48fff90e 	bge	r9,r3,25084 <__alt_data_end+0xfffe5084>
   250a0:	80800317 	ldw	r2,12(r16)
   250a4:	81000217 	ldw	r4,8(r16)
   250a8:	89400054 	ori	r5,r17,1
   250ac:	81400115 	stw	r5,4(r16)
   250b0:	20800315 	stw	r2,12(r4)
   250b4:	11000215 	stw	r4,8(r2)
   250b8:	8463883a 	add	r17,r16,r17
   250bc:	9c400515 	stw	r17,20(r19)
   250c0:	9c400415 	stw	r17,16(r19)
   250c4:	18800054 	ori	r2,r3,1
   250c8:	88800115 	stw	r2,4(r17)
   250cc:	8a000315 	stw	r8,12(r17)
   250d0:	8a000215 	stw	r8,8(r17)
   250d4:	88e3883a 	add	r17,r17,r3
   250d8:	88c00015 	stw	r3,0(r17)
   250dc:	9009883a 	mov	r4,r18
   250e0:	002d0ec0 	call	2d0ec <__malloc_unlock>
   250e4:	80800204 	addi	r2,r16,8
   250e8:	00001b06 	br	25158 <_malloc_r+0x2a4>
   250ec:	04400404 	movi	r17,16
   250f0:	89402536 	bltu	r17,r5,25188 <_malloc_r+0x2d4>
   250f4:	002d0c80 	call	2d0c8 <__malloc_lock>
   250f8:	00800184 	movi	r2,6
   250fc:	01000084 	movi	r4,2
   25100:	04c000f4 	movhi	r19,3
   25104:	1085883a 	add	r2,r2,r2
   25108:	9cfe6304 	addi	r19,r19,-1652
   2510c:	1085883a 	add	r2,r2,r2
   25110:	9885883a 	add	r2,r19,r2
   25114:	14000117 	ldw	r16,4(r2)
   25118:	10fffe04 	addi	r3,r2,-8
   2511c:	80c0d926 	beq	r16,r3,25484 <_malloc_r+0x5d0>
   25120:	80c00117 	ldw	r3,4(r16)
   25124:	81000317 	ldw	r4,12(r16)
   25128:	00bfff04 	movi	r2,-4
   2512c:	1884703a 	and	r2,r3,r2
   25130:	81400217 	ldw	r5,8(r16)
   25134:	8085883a 	add	r2,r16,r2
   25138:	10c00117 	ldw	r3,4(r2)
   2513c:	29000315 	stw	r4,12(r5)
   25140:	21400215 	stw	r5,8(r4)
   25144:	18c00054 	ori	r3,r3,1
   25148:	10c00115 	stw	r3,4(r2)
   2514c:	9009883a 	mov	r4,r18
   25150:	002d0ec0 	call	2d0ec <__malloc_unlock>
   25154:	80800204 	addi	r2,r16,8
   25158:	dfc00a17 	ldw	ra,40(sp)
   2515c:	df000917 	ldw	fp,36(sp)
   25160:	ddc00817 	ldw	r23,32(sp)
   25164:	dd800717 	ldw	r22,28(sp)
   25168:	dd400617 	ldw	r21,24(sp)
   2516c:	dd000517 	ldw	r20,20(sp)
   25170:	dcc00417 	ldw	r19,16(sp)
   25174:	dc800317 	ldw	r18,12(sp)
   25178:	dc400217 	ldw	r17,8(sp)
   2517c:	dc000117 	ldw	r16,4(sp)
   25180:	dec00b04 	addi	sp,sp,44
   25184:	f800283a 	ret
   25188:	00800304 	movi	r2,12
   2518c:	90800015 	stw	r2,0(r18)
   25190:	0005883a 	mov	r2,zero
   25194:	003ff006 	br	25158 <__alt_data_end+0xfffe5158>
   25198:	01002004 	movi	r4,128
   2519c:	02001004 	movi	r8,64
   251a0:	01c00fc4 	movi	r7,63
   251a4:	003f6106 	br	24f2c <__alt_data_end+0xfffe4f2c>
   251a8:	4009883a 	mov	r4,r8
   251ac:	003f7506 	br	24f84 <__alt_data_end+0xfffe4f84>
   251b0:	81000317 	ldw	r4,12(r16)
   251b4:	003fde06 	br	25130 <__alt_data_end+0xfffe5130>
   251b8:	81c5883a 	add	r2,r16,r7
   251bc:	11400117 	ldw	r5,4(r2)
   251c0:	9009883a 	mov	r4,r18
   251c4:	29400054 	ori	r5,r5,1
   251c8:	11400115 	stw	r5,4(r2)
   251cc:	002d0ec0 	call	2d0ec <__malloc_unlock>
   251d0:	80800204 	addi	r2,r16,8
   251d4:	003fe006 	br	25158 <__alt_data_end+0xfffe5158>
   251d8:	9c000217 	ldw	r16,8(r19)
   251dc:	00bfff04 	movi	r2,-4
   251e0:	85800117 	ldw	r22,4(r16)
   251e4:	b0ac703a 	and	r22,r22,r2
   251e8:	b4400336 	bltu	r22,r17,251f8 <_malloc_r+0x344>
   251ec:	b445c83a 	sub	r2,r22,r17
   251f0:	00c003c4 	movi	r3,15
   251f4:	18805d16 	blt	r3,r2,2536c <_malloc_r+0x4b8>
   251f8:	05c000f4 	movhi	r23,3
   251fc:	008000f4 	movhi	r2,3
   25200:	108ab704 	addi	r2,r2,10972
   25204:	bdc3ea04 	addi	r23,r23,4008
   25208:	15400017 	ldw	r21,0(r2)
   2520c:	b8c00017 	ldw	r3,0(r23)
   25210:	00bfffc4 	movi	r2,-1
   25214:	858d883a 	add	r6,r16,r22
   25218:	8d6b883a 	add	r21,r17,r21
   2521c:	1880ea26 	beq	r3,r2,255c8 <_malloc_r+0x714>
   25220:	ad4403c4 	addi	r21,r21,4111
   25224:	00bc0004 	movi	r2,-4096
   25228:	a8aa703a 	and	r21,r21,r2
   2522c:	a80b883a 	mov	r5,r21
   25230:	9009883a 	mov	r4,r18
   25234:	d9800015 	stw	r6,0(sp)
   25238:	0026a840 	call	26a84 <_sbrk_r>
   2523c:	1029883a 	mov	r20,r2
   25240:	00bfffc4 	movi	r2,-1
   25244:	d9800017 	ldw	r6,0(sp)
   25248:	a080e826 	beq	r20,r2,255ec <_malloc_r+0x738>
   2524c:	a180a636 	bltu	r20,r6,254e8 <_malloc_r+0x634>
   25250:	070000f4 	movhi	fp,3
   25254:	e70ac004 	addi	fp,fp,11008
   25258:	e0800017 	ldw	r2,0(fp)
   2525c:	a887883a 	add	r3,r21,r2
   25260:	e0c00015 	stw	r3,0(fp)
   25264:	3500e626 	beq	r6,r20,25600 <_malloc_r+0x74c>
   25268:	b9000017 	ldw	r4,0(r23)
   2526c:	00bfffc4 	movi	r2,-1
   25270:	2080ee26 	beq	r4,r2,2562c <_malloc_r+0x778>
   25274:	a185c83a 	sub	r2,r20,r6
   25278:	10c5883a 	add	r2,r2,r3
   2527c:	e0800015 	stw	r2,0(fp)
   25280:	a0c001cc 	andi	r3,r20,7
   25284:	1800bc26 	beq	r3,zero,25578 <_malloc_r+0x6c4>
   25288:	a0e9c83a 	sub	r20,r20,r3
   2528c:	00840204 	movi	r2,4104
   25290:	a5000204 	addi	r20,r20,8
   25294:	10c7c83a 	sub	r3,r2,r3
   25298:	a545883a 	add	r2,r20,r21
   2529c:	1083ffcc 	andi	r2,r2,4095
   252a0:	18abc83a 	sub	r21,r3,r2
   252a4:	a80b883a 	mov	r5,r21
   252a8:	9009883a 	mov	r4,r18
   252ac:	0026a840 	call	26a84 <_sbrk_r>
   252b0:	00ffffc4 	movi	r3,-1
   252b4:	10c0e126 	beq	r2,r3,2563c <_malloc_r+0x788>
   252b8:	1505c83a 	sub	r2,r2,r20
   252bc:	1545883a 	add	r2,r2,r21
   252c0:	10800054 	ori	r2,r2,1
   252c4:	e0c00017 	ldw	r3,0(fp)
   252c8:	9d000215 	stw	r20,8(r19)
   252cc:	a0800115 	stw	r2,4(r20)
   252d0:	a8c7883a 	add	r3,r21,r3
   252d4:	e0c00015 	stw	r3,0(fp)
   252d8:	84c00e26 	beq	r16,r19,25314 <_malloc_r+0x460>
   252dc:	018003c4 	movi	r6,15
   252e0:	3580a72e 	bgeu	r6,r22,25580 <_malloc_r+0x6cc>
   252e4:	81400117 	ldw	r5,4(r16)
   252e8:	013ffe04 	movi	r4,-8
   252ec:	b0bffd04 	addi	r2,r22,-12
   252f0:	1104703a 	and	r2,r2,r4
   252f4:	2900004c 	andi	r4,r5,1
   252f8:	2088b03a 	or	r4,r4,r2
   252fc:	81000115 	stw	r4,4(r16)
   25300:	01400144 	movi	r5,5
   25304:	8089883a 	add	r4,r16,r2
   25308:	21400115 	stw	r5,4(r4)
   2530c:	21400215 	stw	r5,8(r4)
   25310:	3080cd36 	bltu	r6,r2,25648 <_malloc_r+0x794>
   25314:	008000f4 	movhi	r2,3
   25318:	108ab604 	addi	r2,r2,10968
   2531c:	11000017 	ldw	r4,0(r2)
   25320:	20c0012e 	bgeu	r4,r3,25328 <_malloc_r+0x474>
   25324:	10c00015 	stw	r3,0(r2)
   25328:	008000f4 	movhi	r2,3
   2532c:	108ab504 	addi	r2,r2,10964
   25330:	11000017 	ldw	r4,0(r2)
   25334:	9c000217 	ldw	r16,8(r19)
   25338:	20c0012e 	bgeu	r4,r3,25340 <_malloc_r+0x48c>
   2533c:	10c00015 	stw	r3,0(r2)
   25340:	80c00117 	ldw	r3,4(r16)
   25344:	00bfff04 	movi	r2,-4
   25348:	1886703a 	and	r3,r3,r2
   2534c:	1c45c83a 	sub	r2,r3,r17
   25350:	1c400236 	bltu	r3,r17,2535c <_malloc_r+0x4a8>
   25354:	00c003c4 	movi	r3,15
   25358:	18800416 	blt	r3,r2,2536c <_malloc_r+0x4b8>
   2535c:	9009883a 	mov	r4,r18
   25360:	002d0ec0 	call	2d0ec <__malloc_unlock>
   25364:	0005883a 	mov	r2,zero
   25368:	003f7b06 	br	25158 <__alt_data_end+0xfffe5158>
   2536c:	88c00054 	ori	r3,r17,1
   25370:	80c00115 	stw	r3,4(r16)
   25374:	8463883a 	add	r17,r16,r17
   25378:	10800054 	ori	r2,r2,1
   2537c:	9c400215 	stw	r17,8(r19)
   25380:	88800115 	stw	r2,4(r17)
   25384:	9009883a 	mov	r4,r18
   25388:	002d0ec0 	call	2d0ec <__malloc_unlock>
   2538c:	80800204 	addi	r2,r16,8
   25390:	003f7106 	br	25158 <__alt_data_end+0xfffe5158>
   25394:	00c00504 	movi	r3,20
   25398:	18804a2e 	bgeu	r3,r2,254c4 <_malloc_r+0x610>
   2539c:	00c01504 	movi	r3,84
   253a0:	18806e36 	bltu	r3,r2,2555c <_malloc_r+0x6a8>
   253a4:	8804d33a 	srli	r2,r17,12
   253a8:	12001bc4 	addi	r8,r2,111
   253ac:	11c01b84 	addi	r7,r2,110
   253b0:	4209883a 	add	r4,r8,r8
   253b4:	003edd06 	br	24f2c <__alt_data_end+0xfffe4f2c>
   253b8:	3804d27a 	srli	r2,r7,9
   253bc:	00c00104 	movi	r3,4
   253c0:	1880442e 	bgeu	r3,r2,254d4 <_malloc_r+0x620>
   253c4:	00c00504 	movi	r3,20
   253c8:	18808136 	bltu	r3,r2,255d0 <_malloc_r+0x71c>
   253cc:	11401704 	addi	r5,r2,92
   253d0:	10c016c4 	addi	r3,r2,91
   253d4:	294b883a 	add	r5,r5,r5
   253d8:	294b883a 	add	r5,r5,r5
   253dc:	294b883a 	add	r5,r5,r5
   253e0:	994b883a 	add	r5,r19,r5
   253e4:	28800017 	ldw	r2,0(r5)
   253e8:	018000f4 	movhi	r6,3
   253ec:	297ffe04 	addi	r5,r5,-8
   253f0:	31be6304 	addi	r6,r6,-1652
   253f4:	28806526 	beq	r5,r2,2558c <_malloc_r+0x6d8>
   253f8:	01bfff04 	movi	r6,-4
   253fc:	10c00117 	ldw	r3,4(r2)
   25400:	1986703a 	and	r3,r3,r6
   25404:	38c0022e 	bgeu	r7,r3,25410 <_malloc_r+0x55c>
   25408:	10800217 	ldw	r2,8(r2)
   2540c:	28bffb1e 	bne	r5,r2,253fc <__alt_data_end+0xfffe53fc>
   25410:	11400317 	ldw	r5,12(r2)
   25414:	98c00117 	ldw	r3,4(r19)
   25418:	81400315 	stw	r5,12(r16)
   2541c:	80800215 	stw	r2,8(r16)
   25420:	2c000215 	stw	r16,8(r5)
   25424:	14000315 	stw	r16,12(r2)
   25428:	003ef806 	br	2500c <__alt_data_end+0xfffe500c>
   2542c:	88c00054 	ori	r3,r17,1
   25430:	80c00115 	stw	r3,4(r16)
   25434:	8463883a 	add	r17,r16,r17
   25438:	34400515 	stw	r17,20(r6)
   2543c:	34400415 	stw	r17,16(r6)
   25440:	10c00054 	ori	r3,r2,1
   25444:	8a000315 	stw	r8,12(r17)
   25448:	8a000215 	stw	r8,8(r17)
   2544c:	88c00115 	stw	r3,4(r17)
   25450:	88a3883a 	add	r17,r17,r2
   25454:	88800015 	stw	r2,0(r17)
   25458:	9009883a 	mov	r4,r18
   2545c:	002d0ec0 	call	2d0ec <__malloc_unlock>
   25460:	80800204 	addi	r2,r16,8
   25464:	003f3c06 	br	25158 <__alt_data_end+0xfffe5158>
   25468:	30c00117 	ldw	r3,4(r6)
   2546c:	003ee706 	br	2500c <__alt_data_end+0xfffe500c>
   25470:	5ac00044 	addi	r11,r11,1
   25474:	588000cc 	andi	r2,r11,3
   25478:	31800204 	addi	r6,r6,8
   2547c:	103efd1e 	bne	r2,zero,25074 <__alt_data_end+0xfffe5074>
   25480:	00002406 	br	25514 <_malloc_r+0x660>
   25484:	14000317 	ldw	r16,12(r2)
   25488:	143f251e 	bne	r2,r16,25120 <__alt_data_end+0xfffe5120>
   2548c:	21000084 	addi	r4,r4,2
   25490:	003ebc06 	br	24f84 <__alt_data_end+0xfffe4f84>
   25494:	8085883a 	add	r2,r16,r2
   25498:	10c00117 	ldw	r3,4(r2)
   2549c:	81000317 	ldw	r4,12(r16)
   254a0:	81400217 	ldw	r5,8(r16)
   254a4:	18c00054 	ori	r3,r3,1
   254a8:	10c00115 	stw	r3,4(r2)
   254ac:	29000315 	stw	r4,12(r5)
   254b0:	21400215 	stw	r5,8(r4)
   254b4:	9009883a 	mov	r4,r18
   254b8:	002d0ec0 	call	2d0ec <__malloc_unlock>
   254bc:	80800204 	addi	r2,r16,8
   254c0:	003f2506 	br	25158 <__alt_data_end+0xfffe5158>
   254c4:	12001704 	addi	r8,r2,92
   254c8:	11c016c4 	addi	r7,r2,91
   254cc:	4209883a 	add	r4,r8,r8
   254d0:	003e9606 	br	24f2c <__alt_data_end+0xfffe4f2c>
   254d4:	3804d1ba 	srli	r2,r7,6
   254d8:	11400e44 	addi	r5,r2,57
   254dc:	10c00e04 	addi	r3,r2,56
   254e0:	294b883a 	add	r5,r5,r5
   254e4:	003fbc06 	br	253d8 <__alt_data_end+0xfffe53d8>
   254e8:	84ff5926 	beq	r16,r19,25250 <__alt_data_end+0xfffe5250>
   254ec:	008000f4 	movhi	r2,3
   254f0:	10be6304 	addi	r2,r2,-1652
   254f4:	14000217 	ldw	r16,8(r2)
   254f8:	00bfff04 	movi	r2,-4
   254fc:	80c00117 	ldw	r3,4(r16)
   25500:	1886703a 	and	r3,r3,r2
   25504:	003f9106 	br	2534c <__alt_data_end+0xfffe534c>
   25508:	60800217 	ldw	r2,8(r12)
   2550c:	213fffc4 	addi	r4,r4,-1
   25510:	1300651e 	bne	r2,r12,256a8 <_malloc_r+0x7f4>
   25514:	208000cc 	andi	r2,r4,3
   25518:	633ffe04 	addi	r12,r12,-8
   2551c:	103ffa1e 	bne	r2,zero,25508 <__alt_data_end+0xfffe5508>
   25520:	98800117 	ldw	r2,4(r19)
   25524:	0146303a 	nor	r3,zero,r5
   25528:	1884703a 	and	r2,r3,r2
   2552c:	98800115 	stw	r2,4(r19)
   25530:	294b883a 	add	r5,r5,r5
   25534:	117f2836 	bltu	r2,r5,251d8 <__alt_data_end+0xfffe51d8>
   25538:	283f2726 	beq	r5,zero,251d8 <__alt_data_end+0xfffe51d8>
   2553c:	2886703a 	and	r3,r5,r2
   25540:	5809883a 	mov	r4,r11
   25544:	183ec31e 	bne	r3,zero,25054 <__alt_data_end+0xfffe5054>
   25548:	294b883a 	add	r5,r5,r5
   2554c:	2886703a 	and	r3,r5,r2
   25550:	21000104 	addi	r4,r4,4
   25554:	183ffc26 	beq	r3,zero,25548 <__alt_data_end+0xfffe5548>
   25558:	003ebe06 	br	25054 <__alt_data_end+0xfffe5054>
   2555c:	00c05504 	movi	r3,340
   25560:	18801236 	bltu	r3,r2,255ac <_malloc_r+0x6f8>
   25564:	8804d3fa 	srli	r2,r17,15
   25568:	12001e04 	addi	r8,r2,120
   2556c:	11c01dc4 	addi	r7,r2,119
   25570:	4209883a 	add	r4,r8,r8
   25574:	003e6d06 	br	24f2c <__alt_data_end+0xfffe4f2c>
   25578:	00c40004 	movi	r3,4096
   2557c:	003f4606 	br	25298 <__alt_data_end+0xfffe5298>
   25580:	00800044 	movi	r2,1
   25584:	a0800115 	stw	r2,4(r20)
   25588:	003f7406 	br	2535c <__alt_data_end+0xfffe535c>
   2558c:	1805d0ba 	srai	r2,r3,2
   25590:	01c00044 	movi	r7,1
   25594:	30c00117 	ldw	r3,4(r6)
   25598:	388e983a 	sll	r7,r7,r2
   2559c:	2805883a 	mov	r2,r5
   255a0:	38c6b03a 	or	r3,r7,r3
   255a4:	30c00115 	stw	r3,4(r6)
   255a8:	003f9b06 	br	25418 <__alt_data_end+0xfffe5418>
   255ac:	00c15504 	movi	r3,1364
   255b0:	18801a36 	bltu	r3,r2,2561c <_malloc_r+0x768>
   255b4:	8804d4ba 	srli	r2,r17,18
   255b8:	12001f44 	addi	r8,r2,125
   255bc:	11c01f04 	addi	r7,r2,124
   255c0:	4209883a 	add	r4,r8,r8
   255c4:	003e5906 	br	24f2c <__alt_data_end+0xfffe4f2c>
   255c8:	ad400404 	addi	r21,r21,16
   255cc:	003f1706 	br	2522c <__alt_data_end+0xfffe522c>
   255d0:	00c01504 	movi	r3,84
   255d4:	18802336 	bltu	r3,r2,25664 <_malloc_r+0x7b0>
   255d8:	3804d33a 	srli	r2,r7,12
   255dc:	11401bc4 	addi	r5,r2,111
   255e0:	10c01b84 	addi	r3,r2,110
   255e4:	294b883a 	add	r5,r5,r5
   255e8:	003f7b06 	br	253d8 <__alt_data_end+0xfffe53d8>
   255ec:	9c000217 	ldw	r16,8(r19)
   255f0:	00bfff04 	movi	r2,-4
   255f4:	80c00117 	ldw	r3,4(r16)
   255f8:	1886703a 	and	r3,r3,r2
   255fc:	003f5306 	br	2534c <__alt_data_end+0xfffe534c>
   25600:	3083ffcc 	andi	r2,r6,4095
   25604:	103f181e 	bne	r2,zero,25268 <__alt_data_end+0xfffe5268>
   25608:	99000217 	ldw	r4,8(r19)
   2560c:	b545883a 	add	r2,r22,r21
   25610:	10800054 	ori	r2,r2,1
   25614:	20800115 	stw	r2,4(r4)
   25618:	003f3e06 	br	25314 <__alt_data_end+0xfffe5314>
   2561c:	01003f84 	movi	r4,254
   25620:	02001fc4 	movi	r8,127
   25624:	01c01f84 	movi	r7,126
   25628:	003e4006 	br	24f2c <__alt_data_end+0xfffe4f2c>
   2562c:	008000f4 	movhi	r2,3
   25630:	1083ea04 	addi	r2,r2,4008
   25634:	15000015 	stw	r20,0(r2)
   25638:	003f1106 	br	25280 <__alt_data_end+0xfffe5280>
   2563c:	00800044 	movi	r2,1
   25640:	002b883a 	mov	r21,zero
   25644:	003f1f06 	br	252c4 <__alt_data_end+0xfffe52c4>
   25648:	81400204 	addi	r5,r16,8
   2564c:	9009883a 	mov	r4,r18
   25650:	00247840 	call	24784 <_free_r>
   25654:	008000f4 	movhi	r2,3
   25658:	108ac004 	addi	r2,r2,11008
   2565c:	10c00017 	ldw	r3,0(r2)
   25660:	003f2c06 	br	25314 <__alt_data_end+0xfffe5314>
   25664:	00c05504 	movi	r3,340
   25668:	18800536 	bltu	r3,r2,25680 <_malloc_r+0x7cc>
   2566c:	3804d3fa 	srli	r2,r7,15
   25670:	11401e04 	addi	r5,r2,120
   25674:	10c01dc4 	addi	r3,r2,119
   25678:	294b883a 	add	r5,r5,r5
   2567c:	003f5606 	br	253d8 <__alt_data_end+0xfffe53d8>
   25680:	00c15504 	movi	r3,1364
   25684:	18800536 	bltu	r3,r2,2569c <_malloc_r+0x7e8>
   25688:	3804d4ba 	srli	r2,r7,18
   2568c:	11401f44 	addi	r5,r2,125
   25690:	10c01f04 	addi	r3,r2,124
   25694:	294b883a 	add	r5,r5,r5
   25698:	003f4f06 	br	253d8 <__alt_data_end+0xfffe53d8>
   2569c:	01403f84 	movi	r5,254
   256a0:	00c01f84 	movi	r3,126
   256a4:	003f4c06 	br	253d8 <__alt_data_end+0xfffe53d8>
   256a8:	98800117 	ldw	r2,4(r19)
   256ac:	003fa006 	br	25530 <__alt_data_end+0xfffe5530>
   256b0:	8808d0fa 	srli	r4,r17,3
   256b4:	20800044 	addi	r2,r4,1
   256b8:	1085883a 	add	r2,r2,r2
   256bc:	003e9006 	br	25100 <__alt_data_end+0xfffe5100>

000256c0 <memchr>:
   256c0:	208000cc 	andi	r2,r4,3
   256c4:	280f883a 	mov	r7,r5
   256c8:	10003426 	beq	r2,zero,2579c <memchr+0xdc>
   256cc:	30bfffc4 	addi	r2,r6,-1
   256d0:	30001a26 	beq	r6,zero,2573c <memchr+0x7c>
   256d4:	20c00003 	ldbu	r3,0(r4)
   256d8:	29803fcc 	andi	r6,r5,255
   256dc:	30c0051e 	bne	r6,r3,256f4 <memchr+0x34>
   256e0:	00001806 	br	25744 <memchr+0x84>
   256e4:	10001526 	beq	r2,zero,2573c <memchr+0x7c>
   256e8:	20c00003 	ldbu	r3,0(r4)
   256ec:	10bfffc4 	addi	r2,r2,-1
   256f0:	30c01426 	beq	r6,r3,25744 <memchr+0x84>
   256f4:	21000044 	addi	r4,r4,1
   256f8:	20c000cc 	andi	r3,r4,3
   256fc:	183ff91e 	bne	r3,zero,256e4 <__alt_data_end+0xfffe56e4>
   25700:	020000c4 	movi	r8,3
   25704:	40801136 	bltu	r8,r2,2574c <memchr+0x8c>
   25708:	10000c26 	beq	r2,zero,2573c <memchr+0x7c>
   2570c:	20c00003 	ldbu	r3,0(r4)
   25710:	29403fcc 	andi	r5,r5,255
   25714:	28c00b26 	beq	r5,r3,25744 <memchr+0x84>
   25718:	20c00044 	addi	r3,r4,1
   2571c:	39803fcc 	andi	r6,r7,255
   25720:	2089883a 	add	r4,r4,r2
   25724:	00000306 	br	25734 <memchr+0x74>
   25728:	18c00044 	addi	r3,r3,1
   2572c:	197fffc3 	ldbu	r5,-1(r3)
   25730:	31400526 	beq	r6,r5,25748 <memchr+0x88>
   25734:	1805883a 	mov	r2,r3
   25738:	20fffb1e 	bne	r4,r3,25728 <__alt_data_end+0xfffe5728>
   2573c:	0005883a 	mov	r2,zero
   25740:	f800283a 	ret
   25744:	2005883a 	mov	r2,r4
   25748:	f800283a 	ret
   2574c:	28c03fcc 	andi	r3,r5,255
   25750:	1812923a 	slli	r9,r3,8
   25754:	02ffbff4 	movhi	r11,65279
   25758:	02a02074 	movhi	r10,32897
   2575c:	48d2b03a 	or	r9,r9,r3
   25760:	4806943a 	slli	r3,r9,16
   25764:	5affbfc4 	addi	r11,r11,-257
   25768:	52a02004 	addi	r10,r10,-32640
   2576c:	48d2b03a 	or	r9,r9,r3
   25770:	20c00017 	ldw	r3,0(r4)
   25774:	48c6f03a 	xor	r3,r9,r3
   25778:	1acd883a 	add	r6,r3,r11
   2577c:	00c6303a 	nor	r3,zero,r3
   25780:	30c6703a 	and	r3,r6,r3
   25784:	1a86703a 	and	r3,r3,r10
   25788:	183fe01e 	bne	r3,zero,2570c <__alt_data_end+0xfffe570c>
   2578c:	10bfff04 	addi	r2,r2,-4
   25790:	21000104 	addi	r4,r4,4
   25794:	40bff636 	bltu	r8,r2,25770 <__alt_data_end+0xfffe5770>
   25798:	003fdb06 	br	25708 <__alt_data_end+0xfffe5708>
   2579c:	3005883a 	mov	r2,r6
   257a0:	003fd706 	br	25700 <__alt_data_end+0xfffe5700>

000257a4 <memcpy>:
   257a4:	defffd04 	addi	sp,sp,-12
   257a8:	dfc00215 	stw	ra,8(sp)
   257ac:	dc400115 	stw	r17,4(sp)
   257b0:	dc000015 	stw	r16,0(sp)
   257b4:	00c003c4 	movi	r3,15
   257b8:	2005883a 	mov	r2,r4
   257bc:	1980452e 	bgeu	r3,r6,258d4 <memcpy+0x130>
   257c0:	2906b03a 	or	r3,r5,r4
   257c4:	18c000cc 	andi	r3,r3,3
   257c8:	1800441e 	bne	r3,zero,258dc <memcpy+0x138>
   257cc:	347ffc04 	addi	r17,r6,-16
   257d0:	8822d13a 	srli	r17,r17,4
   257d4:	28c00104 	addi	r3,r5,4
   257d8:	23400104 	addi	r13,r4,4
   257dc:	8820913a 	slli	r16,r17,4
   257e0:	2b000204 	addi	r12,r5,8
   257e4:	22c00204 	addi	r11,r4,8
   257e8:	84000504 	addi	r16,r16,20
   257ec:	2a800304 	addi	r10,r5,12
   257f0:	22400304 	addi	r9,r4,12
   257f4:	2c21883a 	add	r16,r5,r16
   257f8:	2811883a 	mov	r8,r5
   257fc:	200f883a 	mov	r7,r4
   25800:	41000017 	ldw	r4,0(r8)
   25804:	1fc00017 	ldw	ra,0(r3)
   25808:	63c00017 	ldw	r15,0(r12)
   2580c:	39000015 	stw	r4,0(r7)
   25810:	53800017 	ldw	r14,0(r10)
   25814:	6fc00015 	stw	ra,0(r13)
   25818:	5bc00015 	stw	r15,0(r11)
   2581c:	4b800015 	stw	r14,0(r9)
   25820:	18c00404 	addi	r3,r3,16
   25824:	39c00404 	addi	r7,r7,16
   25828:	42000404 	addi	r8,r8,16
   2582c:	6b400404 	addi	r13,r13,16
   25830:	63000404 	addi	r12,r12,16
   25834:	5ac00404 	addi	r11,r11,16
   25838:	52800404 	addi	r10,r10,16
   2583c:	4a400404 	addi	r9,r9,16
   25840:	1c3fef1e 	bne	r3,r16,25800 <__alt_data_end+0xfffe5800>
   25844:	89c00044 	addi	r7,r17,1
   25848:	380e913a 	slli	r7,r7,4
   2584c:	310003cc 	andi	r4,r6,15
   25850:	02c000c4 	movi	r11,3
   25854:	11c7883a 	add	r3,r2,r7
   25858:	29cb883a 	add	r5,r5,r7
   2585c:	5900212e 	bgeu	r11,r4,258e4 <memcpy+0x140>
   25860:	1813883a 	mov	r9,r3
   25864:	2811883a 	mov	r8,r5
   25868:	200f883a 	mov	r7,r4
   2586c:	42800017 	ldw	r10,0(r8)
   25870:	4a400104 	addi	r9,r9,4
   25874:	39ffff04 	addi	r7,r7,-4
   25878:	4abfff15 	stw	r10,-4(r9)
   2587c:	42000104 	addi	r8,r8,4
   25880:	59fffa36 	bltu	r11,r7,2586c <__alt_data_end+0xfffe586c>
   25884:	213fff04 	addi	r4,r4,-4
   25888:	2008d0ba 	srli	r4,r4,2
   2588c:	318000cc 	andi	r6,r6,3
   25890:	21000044 	addi	r4,r4,1
   25894:	2109883a 	add	r4,r4,r4
   25898:	2109883a 	add	r4,r4,r4
   2589c:	1907883a 	add	r3,r3,r4
   258a0:	290b883a 	add	r5,r5,r4
   258a4:	30000626 	beq	r6,zero,258c0 <memcpy+0x11c>
   258a8:	198d883a 	add	r6,r3,r6
   258ac:	29c00003 	ldbu	r7,0(r5)
   258b0:	18c00044 	addi	r3,r3,1
   258b4:	29400044 	addi	r5,r5,1
   258b8:	19ffffc5 	stb	r7,-1(r3)
   258bc:	19bffb1e 	bne	r3,r6,258ac <__alt_data_end+0xfffe58ac>
   258c0:	dfc00217 	ldw	ra,8(sp)
   258c4:	dc400117 	ldw	r17,4(sp)
   258c8:	dc000017 	ldw	r16,0(sp)
   258cc:	dec00304 	addi	sp,sp,12
   258d0:	f800283a 	ret
   258d4:	2007883a 	mov	r3,r4
   258d8:	003ff206 	br	258a4 <__alt_data_end+0xfffe58a4>
   258dc:	2007883a 	mov	r3,r4
   258e0:	003ff106 	br	258a8 <__alt_data_end+0xfffe58a8>
   258e4:	200d883a 	mov	r6,r4
   258e8:	003fee06 	br	258a4 <__alt_data_end+0xfffe58a4>

000258ec <memset>:
   258ec:	20c000cc 	andi	r3,r4,3
   258f0:	2005883a 	mov	r2,r4
   258f4:	18004426 	beq	r3,zero,25a08 <memset+0x11c>
   258f8:	31ffffc4 	addi	r7,r6,-1
   258fc:	30004026 	beq	r6,zero,25a00 <memset+0x114>
   25900:	2813883a 	mov	r9,r5
   25904:	200d883a 	mov	r6,r4
   25908:	2007883a 	mov	r3,r4
   2590c:	00000406 	br	25920 <memset+0x34>
   25910:	3a3fffc4 	addi	r8,r7,-1
   25914:	31800044 	addi	r6,r6,1
   25918:	38003926 	beq	r7,zero,25a00 <memset+0x114>
   2591c:	400f883a 	mov	r7,r8
   25920:	18c00044 	addi	r3,r3,1
   25924:	32400005 	stb	r9,0(r6)
   25928:	1a0000cc 	andi	r8,r3,3
   2592c:	403ff81e 	bne	r8,zero,25910 <__alt_data_end+0xfffe5910>
   25930:	010000c4 	movi	r4,3
   25934:	21c02d2e 	bgeu	r4,r7,259ec <memset+0x100>
   25938:	29003fcc 	andi	r4,r5,255
   2593c:	200c923a 	slli	r6,r4,8
   25940:	3108b03a 	or	r4,r6,r4
   25944:	200c943a 	slli	r6,r4,16
   25948:	218cb03a 	or	r6,r4,r6
   2594c:	010003c4 	movi	r4,15
   25950:	21c0182e 	bgeu	r4,r7,259b4 <memset+0xc8>
   25954:	3b3ffc04 	addi	r12,r7,-16
   25958:	6018d13a 	srli	r12,r12,4
   2595c:	1a000104 	addi	r8,r3,4
   25960:	1ac00204 	addi	r11,r3,8
   25964:	6008913a 	slli	r4,r12,4
   25968:	1a800304 	addi	r10,r3,12
   2596c:	1813883a 	mov	r9,r3
   25970:	21000504 	addi	r4,r4,20
   25974:	1909883a 	add	r4,r3,r4
   25978:	49800015 	stw	r6,0(r9)
   2597c:	41800015 	stw	r6,0(r8)
   25980:	59800015 	stw	r6,0(r11)
   25984:	51800015 	stw	r6,0(r10)
   25988:	42000404 	addi	r8,r8,16
   2598c:	4a400404 	addi	r9,r9,16
   25990:	5ac00404 	addi	r11,r11,16
   25994:	52800404 	addi	r10,r10,16
   25998:	413ff71e 	bne	r8,r4,25978 <__alt_data_end+0xfffe5978>
   2599c:	63000044 	addi	r12,r12,1
   259a0:	6018913a 	slli	r12,r12,4
   259a4:	39c003cc 	andi	r7,r7,15
   259a8:	010000c4 	movi	r4,3
   259ac:	1b07883a 	add	r3,r3,r12
   259b0:	21c00e2e 	bgeu	r4,r7,259ec <memset+0x100>
   259b4:	1813883a 	mov	r9,r3
   259b8:	3811883a 	mov	r8,r7
   259bc:	010000c4 	movi	r4,3
   259c0:	49800015 	stw	r6,0(r9)
   259c4:	423fff04 	addi	r8,r8,-4
   259c8:	4a400104 	addi	r9,r9,4
   259cc:	223ffc36 	bltu	r4,r8,259c0 <__alt_data_end+0xfffe59c0>
   259d0:	393fff04 	addi	r4,r7,-4
   259d4:	2008d0ba 	srli	r4,r4,2
   259d8:	39c000cc 	andi	r7,r7,3
   259dc:	21000044 	addi	r4,r4,1
   259e0:	2109883a 	add	r4,r4,r4
   259e4:	2109883a 	add	r4,r4,r4
   259e8:	1907883a 	add	r3,r3,r4
   259ec:	38000526 	beq	r7,zero,25a04 <memset+0x118>
   259f0:	19cf883a 	add	r7,r3,r7
   259f4:	19400005 	stb	r5,0(r3)
   259f8:	18c00044 	addi	r3,r3,1
   259fc:	38fffd1e 	bne	r7,r3,259f4 <__alt_data_end+0xfffe59f4>
   25a00:	f800283a 	ret
   25a04:	f800283a 	ret
   25a08:	2007883a 	mov	r3,r4
   25a0c:	300f883a 	mov	r7,r6
   25a10:	003fc706 	br	25930 <__alt_data_end+0xfffe5930>

00025a14 <_Balloc>:
   25a14:	20801317 	ldw	r2,76(r4)
   25a18:	defffc04 	addi	sp,sp,-16
   25a1c:	dc400115 	stw	r17,4(sp)
   25a20:	dc000015 	stw	r16,0(sp)
   25a24:	dfc00315 	stw	ra,12(sp)
   25a28:	dc800215 	stw	r18,8(sp)
   25a2c:	2023883a 	mov	r17,r4
   25a30:	2821883a 	mov	r16,r5
   25a34:	10000f26 	beq	r2,zero,25a74 <_Balloc+0x60>
   25a38:	8407883a 	add	r3,r16,r16
   25a3c:	18c7883a 	add	r3,r3,r3
   25a40:	10c7883a 	add	r3,r2,r3
   25a44:	18800017 	ldw	r2,0(r3)
   25a48:	10001126 	beq	r2,zero,25a90 <_Balloc+0x7c>
   25a4c:	11000017 	ldw	r4,0(r2)
   25a50:	19000015 	stw	r4,0(r3)
   25a54:	10000415 	stw	zero,16(r2)
   25a58:	10000315 	stw	zero,12(r2)
   25a5c:	dfc00317 	ldw	ra,12(sp)
   25a60:	dc800217 	ldw	r18,8(sp)
   25a64:	dc400117 	ldw	r17,4(sp)
   25a68:	dc000017 	ldw	r16,0(sp)
   25a6c:	dec00404 	addi	sp,sp,16
   25a70:	f800283a 	ret
   25a74:	01800844 	movi	r6,33
   25a78:	01400104 	movi	r5,4
   25a7c:	00284840 	call	28484 <_calloc_r>
   25a80:	88801315 	stw	r2,76(r17)
   25a84:	103fec1e 	bne	r2,zero,25a38 <__alt_data_end+0xfffe5a38>
   25a88:	0005883a 	mov	r2,zero
   25a8c:	003ff306 	br	25a5c <__alt_data_end+0xfffe5a5c>
   25a90:	01400044 	movi	r5,1
   25a94:	2c24983a 	sll	r18,r5,r16
   25a98:	8809883a 	mov	r4,r17
   25a9c:	91800144 	addi	r6,r18,5
   25aa0:	318d883a 	add	r6,r6,r6
   25aa4:	318d883a 	add	r6,r6,r6
   25aa8:	00284840 	call	28484 <_calloc_r>
   25aac:	103ff626 	beq	r2,zero,25a88 <__alt_data_end+0xfffe5a88>
   25ab0:	14000115 	stw	r16,4(r2)
   25ab4:	14800215 	stw	r18,8(r2)
   25ab8:	003fe606 	br	25a54 <__alt_data_end+0xfffe5a54>

00025abc <_Bfree>:
   25abc:	28000826 	beq	r5,zero,25ae0 <_Bfree+0x24>
   25ac0:	28c00117 	ldw	r3,4(r5)
   25ac4:	20801317 	ldw	r2,76(r4)
   25ac8:	18c7883a 	add	r3,r3,r3
   25acc:	18c7883a 	add	r3,r3,r3
   25ad0:	10c5883a 	add	r2,r2,r3
   25ad4:	10c00017 	ldw	r3,0(r2)
   25ad8:	28c00015 	stw	r3,0(r5)
   25adc:	11400015 	stw	r5,0(r2)
   25ae0:	f800283a 	ret

00025ae4 <__multadd>:
   25ae4:	defffa04 	addi	sp,sp,-24
   25ae8:	dc800315 	stw	r18,12(sp)
   25aec:	dc400215 	stw	r17,8(sp)
   25af0:	dc000115 	stw	r16,4(sp)
   25af4:	2823883a 	mov	r17,r5
   25af8:	2c000417 	ldw	r16,16(r5)
   25afc:	dfc00515 	stw	ra,20(sp)
   25b00:	dcc00415 	stw	r19,16(sp)
   25b04:	2025883a 	mov	r18,r4
   25b08:	29400504 	addi	r5,r5,20
   25b0c:	0011883a 	mov	r8,zero
   25b10:	28c00017 	ldw	r3,0(r5)
   25b14:	29400104 	addi	r5,r5,4
   25b18:	42000044 	addi	r8,r8,1
   25b1c:	18bfffcc 	andi	r2,r3,65535
   25b20:	1185383a 	mul	r2,r2,r6
   25b24:	1806d43a 	srli	r3,r3,16
   25b28:	11cf883a 	add	r7,r2,r7
   25b2c:	3808d43a 	srli	r4,r7,16
   25b30:	1987383a 	mul	r3,r3,r6
   25b34:	38bfffcc 	andi	r2,r7,65535
   25b38:	1907883a 	add	r3,r3,r4
   25b3c:	1808943a 	slli	r4,r3,16
   25b40:	180ed43a 	srli	r7,r3,16
   25b44:	2085883a 	add	r2,r4,r2
   25b48:	28bfff15 	stw	r2,-4(r5)
   25b4c:	443ff016 	blt	r8,r16,25b10 <__alt_data_end+0xfffe5b10>
   25b50:	38000926 	beq	r7,zero,25b78 <__multadd+0x94>
   25b54:	88800217 	ldw	r2,8(r17)
   25b58:	80800f0e 	bge	r16,r2,25b98 <__multadd+0xb4>
   25b5c:	80800144 	addi	r2,r16,5
   25b60:	1085883a 	add	r2,r2,r2
   25b64:	1085883a 	add	r2,r2,r2
   25b68:	8885883a 	add	r2,r17,r2
   25b6c:	11c00015 	stw	r7,0(r2)
   25b70:	84000044 	addi	r16,r16,1
   25b74:	8c000415 	stw	r16,16(r17)
   25b78:	8805883a 	mov	r2,r17
   25b7c:	dfc00517 	ldw	ra,20(sp)
   25b80:	dcc00417 	ldw	r19,16(sp)
   25b84:	dc800317 	ldw	r18,12(sp)
   25b88:	dc400217 	ldw	r17,8(sp)
   25b8c:	dc000117 	ldw	r16,4(sp)
   25b90:	dec00604 	addi	sp,sp,24
   25b94:	f800283a 	ret
   25b98:	89400117 	ldw	r5,4(r17)
   25b9c:	9009883a 	mov	r4,r18
   25ba0:	d9c00015 	stw	r7,0(sp)
   25ba4:	29400044 	addi	r5,r5,1
   25ba8:	0025a140 	call	25a14 <_Balloc>
   25bac:	89800417 	ldw	r6,16(r17)
   25bb0:	89400304 	addi	r5,r17,12
   25bb4:	11000304 	addi	r4,r2,12
   25bb8:	31800084 	addi	r6,r6,2
   25bbc:	318d883a 	add	r6,r6,r6
   25bc0:	318d883a 	add	r6,r6,r6
   25bc4:	1027883a 	mov	r19,r2
   25bc8:	00257a40 	call	257a4 <memcpy>
   25bcc:	d9c00017 	ldw	r7,0(sp)
   25bd0:	88000a26 	beq	r17,zero,25bfc <__multadd+0x118>
   25bd4:	88c00117 	ldw	r3,4(r17)
   25bd8:	90801317 	ldw	r2,76(r18)
   25bdc:	18c7883a 	add	r3,r3,r3
   25be0:	18c7883a 	add	r3,r3,r3
   25be4:	10c5883a 	add	r2,r2,r3
   25be8:	10c00017 	ldw	r3,0(r2)
   25bec:	88c00015 	stw	r3,0(r17)
   25bf0:	14400015 	stw	r17,0(r2)
   25bf4:	9823883a 	mov	r17,r19
   25bf8:	003fd806 	br	25b5c <__alt_data_end+0xfffe5b5c>
   25bfc:	9823883a 	mov	r17,r19
   25c00:	003fd606 	br	25b5c <__alt_data_end+0xfffe5b5c>

00025c04 <__s2b>:
   25c04:	defff904 	addi	sp,sp,-28
   25c08:	dc400115 	stw	r17,4(sp)
   25c0c:	dc000015 	stw	r16,0(sp)
   25c10:	2023883a 	mov	r17,r4
   25c14:	2821883a 	mov	r16,r5
   25c18:	39000204 	addi	r4,r7,8
   25c1c:	01400244 	movi	r5,9
   25c20:	dcc00315 	stw	r19,12(sp)
   25c24:	dc800215 	stw	r18,8(sp)
   25c28:	dfc00615 	stw	ra,24(sp)
   25c2c:	dd400515 	stw	r21,20(sp)
   25c30:	dd000415 	stw	r20,16(sp)
   25c34:	3825883a 	mov	r18,r7
   25c38:	3027883a 	mov	r19,r6
   25c3c:	002a3300 	call	2a330 <__divsi3>
   25c40:	00c00044 	movi	r3,1
   25c44:	000b883a 	mov	r5,zero
   25c48:	1880030e 	bge	r3,r2,25c58 <__s2b+0x54>
   25c4c:	18c7883a 	add	r3,r3,r3
   25c50:	29400044 	addi	r5,r5,1
   25c54:	18bffd16 	blt	r3,r2,25c4c <__alt_data_end+0xfffe5c4c>
   25c58:	8809883a 	mov	r4,r17
   25c5c:	0025a140 	call	25a14 <_Balloc>
   25c60:	d8c00717 	ldw	r3,28(sp)
   25c64:	10c00515 	stw	r3,20(r2)
   25c68:	00c00044 	movi	r3,1
   25c6c:	10c00415 	stw	r3,16(r2)
   25c70:	00c00244 	movi	r3,9
   25c74:	1cc0210e 	bge	r3,r19,25cfc <__s2b+0xf8>
   25c78:	80eb883a 	add	r21,r16,r3
   25c7c:	a829883a 	mov	r20,r21
   25c80:	84e1883a 	add	r16,r16,r19
   25c84:	a1c00007 	ldb	r7,0(r20)
   25c88:	01800284 	movi	r6,10
   25c8c:	a5000044 	addi	r20,r20,1
   25c90:	100b883a 	mov	r5,r2
   25c94:	39fff404 	addi	r7,r7,-48
   25c98:	8809883a 	mov	r4,r17
   25c9c:	0025ae40 	call	25ae4 <__multadd>
   25ca0:	a43ff81e 	bne	r20,r16,25c84 <__alt_data_end+0xfffe5c84>
   25ca4:	ace1883a 	add	r16,r21,r19
   25ca8:	843ffe04 	addi	r16,r16,-8
   25cac:	9c800a0e 	bge	r19,r18,25cd8 <__s2b+0xd4>
   25cb0:	94e5c83a 	sub	r18,r18,r19
   25cb4:	84a5883a 	add	r18,r16,r18
   25cb8:	81c00007 	ldb	r7,0(r16)
   25cbc:	01800284 	movi	r6,10
   25cc0:	84000044 	addi	r16,r16,1
   25cc4:	100b883a 	mov	r5,r2
   25cc8:	39fff404 	addi	r7,r7,-48
   25ccc:	8809883a 	mov	r4,r17
   25cd0:	0025ae40 	call	25ae4 <__multadd>
   25cd4:	84bff81e 	bne	r16,r18,25cb8 <__alt_data_end+0xfffe5cb8>
   25cd8:	dfc00617 	ldw	ra,24(sp)
   25cdc:	dd400517 	ldw	r21,20(sp)
   25ce0:	dd000417 	ldw	r20,16(sp)
   25ce4:	dcc00317 	ldw	r19,12(sp)
   25ce8:	dc800217 	ldw	r18,8(sp)
   25cec:	dc400117 	ldw	r17,4(sp)
   25cf0:	dc000017 	ldw	r16,0(sp)
   25cf4:	dec00704 	addi	sp,sp,28
   25cf8:	f800283a 	ret
   25cfc:	84000284 	addi	r16,r16,10
   25d00:	1827883a 	mov	r19,r3
   25d04:	003fe906 	br	25cac <__alt_data_end+0xfffe5cac>

00025d08 <__hi0bits>:
   25d08:	20bfffec 	andhi	r2,r4,65535
   25d0c:	1000141e 	bne	r2,zero,25d60 <__hi0bits+0x58>
   25d10:	2008943a 	slli	r4,r4,16
   25d14:	00800404 	movi	r2,16
   25d18:	20ffc02c 	andhi	r3,r4,65280
   25d1c:	1800021e 	bne	r3,zero,25d28 <__hi0bits+0x20>
   25d20:	2008923a 	slli	r4,r4,8
   25d24:	10800204 	addi	r2,r2,8
   25d28:	20fc002c 	andhi	r3,r4,61440
   25d2c:	1800021e 	bne	r3,zero,25d38 <__hi0bits+0x30>
   25d30:	2008913a 	slli	r4,r4,4
   25d34:	10800104 	addi	r2,r2,4
   25d38:	20f0002c 	andhi	r3,r4,49152
   25d3c:	1800031e 	bne	r3,zero,25d4c <__hi0bits+0x44>
   25d40:	2109883a 	add	r4,r4,r4
   25d44:	10800084 	addi	r2,r2,2
   25d48:	2109883a 	add	r4,r4,r4
   25d4c:	20000316 	blt	r4,zero,25d5c <__hi0bits+0x54>
   25d50:	2110002c 	andhi	r4,r4,16384
   25d54:	2000041e 	bne	r4,zero,25d68 <__hi0bits+0x60>
   25d58:	00800804 	movi	r2,32
   25d5c:	f800283a 	ret
   25d60:	0005883a 	mov	r2,zero
   25d64:	003fec06 	br	25d18 <__alt_data_end+0xfffe5d18>
   25d68:	10800044 	addi	r2,r2,1
   25d6c:	f800283a 	ret

00025d70 <__lo0bits>:
   25d70:	20c00017 	ldw	r3,0(r4)
   25d74:	188001cc 	andi	r2,r3,7
   25d78:	10000826 	beq	r2,zero,25d9c <__lo0bits+0x2c>
   25d7c:	1880004c 	andi	r2,r3,1
   25d80:	1000211e 	bne	r2,zero,25e08 <__lo0bits+0x98>
   25d84:	1880008c 	andi	r2,r3,2
   25d88:	1000211e 	bne	r2,zero,25e10 <__lo0bits+0xa0>
   25d8c:	1806d0ba 	srli	r3,r3,2
   25d90:	00800084 	movi	r2,2
   25d94:	20c00015 	stw	r3,0(r4)
   25d98:	f800283a 	ret
   25d9c:	18bfffcc 	andi	r2,r3,65535
   25da0:	10001326 	beq	r2,zero,25df0 <__lo0bits+0x80>
   25da4:	0005883a 	mov	r2,zero
   25da8:	19403fcc 	andi	r5,r3,255
   25dac:	2800021e 	bne	r5,zero,25db8 <__lo0bits+0x48>
   25db0:	1806d23a 	srli	r3,r3,8
   25db4:	10800204 	addi	r2,r2,8
   25db8:	194003cc 	andi	r5,r3,15
   25dbc:	2800021e 	bne	r5,zero,25dc8 <__lo0bits+0x58>
   25dc0:	1806d13a 	srli	r3,r3,4
   25dc4:	10800104 	addi	r2,r2,4
   25dc8:	194000cc 	andi	r5,r3,3
   25dcc:	2800021e 	bne	r5,zero,25dd8 <__lo0bits+0x68>
   25dd0:	1806d0ba 	srli	r3,r3,2
   25dd4:	10800084 	addi	r2,r2,2
   25dd8:	1940004c 	andi	r5,r3,1
   25ddc:	2800081e 	bne	r5,zero,25e00 <__lo0bits+0x90>
   25de0:	1806d07a 	srli	r3,r3,1
   25de4:	1800051e 	bne	r3,zero,25dfc <__lo0bits+0x8c>
   25de8:	00800804 	movi	r2,32
   25dec:	f800283a 	ret
   25df0:	1806d43a 	srli	r3,r3,16
   25df4:	00800404 	movi	r2,16
   25df8:	003feb06 	br	25da8 <__alt_data_end+0xfffe5da8>
   25dfc:	10800044 	addi	r2,r2,1
   25e00:	20c00015 	stw	r3,0(r4)
   25e04:	f800283a 	ret
   25e08:	0005883a 	mov	r2,zero
   25e0c:	f800283a 	ret
   25e10:	1806d07a 	srli	r3,r3,1
   25e14:	00800044 	movi	r2,1
   25e18:	20c00015 	stw	r3,0(r4)
   25e1c:	f800283a 	ret

00025e20 <__i2b>:
   25e20:	defffd04 	addi	sp,sp,-12
   25e24:	dc000015 	stw	r16,0(sp)
   25e28:	04000044 	movi	r16,1
   25e2c:	dc400115 	stw	r17,4(sp)
   25e30:	2823883a 	mov	r17,r5
   25e34:	800b883a 	mov	r5,r16
   25e38:	dfc00215 	stw	ra,8(sp)
   25e3c:	0025a140 	call	25a14 <_Balloc>
   25e40:	14400515 	stw	r17,20(r2)
   25e44:	14000415 	stw	r16,16(r2)
   25e48:	dfc00217 	ldw	ra,8(sp)
   25e4c:	dc400117 	ldw	r17,4(sp)
   25e50:	dc000017 	ldw	r16,0(sp)
   25e54:	dec00304 	addi	sp,sp,12
   25e58:	f800283a 	ret

00025e5c <__multiply>:
   25e5c:	defffa04 	addi	sp,sp,-24
   25e60:	dcc00315 	stw	r19,12(sp)
   25e64:	dc800215 	stw	r18,8(sp)
   25e68:	34c00417 	ldw	r19,16(r6)
   25e6c:	2c800417 	ldw	r18,16(r5)
   25e70:	dd000415 	stw	r20,16(sp)
   25e74:	dc400115 	stw	r17,4(sp)
   25e78:	dfc00515 	stw	ra,20(sp)
   25e7c:	dc000015 	stw	r16,0(sp)
   25e80:	2829883a 	mov	r20,r5
   25e84:	3023883a 	mov	r17,r6
   25e88:	94c0050e 	bge	r18,r19,25ea0 <__multiply+0x44>
   25e8c:	9007883a 	mov	r3,r18
   25e90:	3029883a 	mov	r20,r6
   25e94:	9825883a 	mov	r18,r19
   25e98:	2823883a 	mov	r17,r5
   25e9c:	1827883a 	mov	r19,r3
   25ea0:	a0800217 	ldw	r2,8(r20)
   25ea4:	94e1883a 	add	r16,r18,r19
   25ea8:	a1400117 	ldw	r5,4(r20)
   25eac:	1400010e 	bge	r2,r16,25eb4 <__multiply+0x58>
   25eb0:	29400044 	addi	r5,r5,1
   25eb4:	0025a140 	call	25a14 <_Balloc>
   25eb8:	8415883a 	add	r10,r16,r16
   25ebc:	12c00504 	addi	r11,r2,20
   25ec0:	5295883a 	add	r10,r10,r10
   25ec4:	5a95883a 	add	r10,r11,r10
   25ec8:	5807883a 	mov	r3,r11
   25ecc:	5a80032e 	bgeu	r11,r10,25edc <__multiply+0x80>
   25ed0:	18000015 	stw	zero,0(r3)
   25ed4:	18c00104 	addi	r3,r3,4
   25ed8:	1abffd36 	bltu	r3,r10,25ed0 <__alt_data_end+0xfffe5ed0>
   25edc:	9ce7883a 	add	r19,r19,r19
   25ee0:	94a5883a 	add	r18,r18,r18
   25ee4:	89800504 	addi	r6,r17,20
   25ee8:	9ce7883a 	add	r19,r19,r19
   25eec:	a3400504 	addi	r13,r20,20
   25ef0:	94a5883a 	add	r18,r18,r18
   25ef4:	34d9883a 	add	r12,r6,r19
   25ef8:	6c93883a 	add	r9,r13,r18
   25efc:	3300422e 	bgeu	r6,r12,26008 <__multiply+0x1ac>
   25f00:	37c00017 	ldw	ra,0(r6)
   25f04:	fbffffcc 	andi	r15,ra,65535
   25f08:	78001b26 	beq	r15,zero,25f78 <__multiply+0x11c>
   25f0c:	5811883a 	mov	r8,r11
   25f10:	681d883a 	mov	r14,r13
   25f14:	000f883a 	mov	r7,zero
   25f18:	71000017 	ldw	r4,0(r14)
   25f1c:	40c00017 	ldw	r3,0(r8)
   25f20:	73800104 	addi	r14,r14,4
   25f24:	217fffcc 	andi	r5,r4,65535
   25f28:	2bcb383a 	mul	r5,r5,r15
   25f2c:	2008d43a 	srli	r4,r4,16
   25f30:	1c7fffcc 	andi	r17,r3,65535
   25f34:	2c4b883a 	add	r5,r5,r17
   25f38:	29cb883a 	add	r5,r5,r7
   25f3c:	23c9383a 	mul	r4,r4,r15
   25f40:	1806d43a 	srli	r3,r3,16
   25f44:	280ed43a 	srli	r7,r5,16
   25f48:	297fffcc 	andi	r5,r5,65535
   25f4c:	20c7883a 	add	r3,r4,r3
   25f50:	19c7883a 	add	r3,r3,r7
   25f54:	1808943a 	slli	r4,r3,16
   25f58:	4023883a 	mov	r17,r8
   25f5c:	180ed43a 	srli	r7,r3,16
   25f60:	214ab03a 	or	r5,r4,r5
   25f64:	41400015 	stw	r5,0(r8)
   25f68:	42000104 	addi	r8,r8,4
   25f6c:	727fea36 	bltu	r14,r9,25f18 <__alt_data_end+0xfffe5f18>
   25f70:	89c00115 	stw	r7,4(r17)
   25f74:	37c00017 	ldw	ra,0(r6)
   25f78:	f83ed43a 	srli	ra,ra,16
   25f7c:	f8001f26 	beq	ra,zero,25ffc <__multiply+0x1a0>
   25f80:	58c00017 	ldw	r3,0(r11)
   25f84:	681d883a 	mov	r14,r13
   25f88:	581f883a 	mov	r15,r11
   25f8c:	1811883a 	mov	r8,r3
   25f90:	5825883a 	mov	r18,r11
   25f94:	000f883a 	mov	r7,zero
   25f98:	00000106 	br	25fa0 <__multiply+0x144>
   25f9c:	8825883a 	mov	r18,r17
   25fa0:	7140000b 	ldhu	r5,0(r14)
   25fa4:	4010d43a 	srli	r8,r8,16
   25fa8:	193fffcc 	andi	r4,r3,65535
   25fac:	2fcb383a 	mul	r5,r5,ra
   25fb0:	7bc00104 	addi	r15,r15,4
   25fb4:	73800104 	addi	r14,r14,4
   25fb8:	2a0b883a 	add	r5,r5,r8
   25fbc:	29cb883a 	add	r5,r5,r7
   25fc0:	2806943a 	slli	r3,r5,16
   25fc4:	94400104 	addi	r17,r18,4
   25fc8:	280ad43a 	srli	r5,r5,16
   25fcc:	1908b03a 	or	r4,r3,r4
   25fd0:	793fff15 	stw	r4,-4(r15)
   25fd4:	70ffff17 	ldw	r3,-4(r14)
   25fd8:	8a000017 	ldw	r8,0(r17)
   25fdc:	1806d43a 	srli	r3,r3,16
   25fe0:	413fffcc 	andi	r4,r8,65535
   25fe4:	1fc7383a 	mul	r3,r3,ra
   25fe8:	1907883a 	add	r3,r3,r4
   25fec:	1947883a 	add	r3,r3,r5
   25ff0:	180ed43a 	srli	r7,r3,16
   25ff4:	727fe936 	bltu	r14,r9,25f9c <__alt_data_end+0xfffe5f9c>
   25ff8:	90c00115 	stw	r3,4(r18)
   25ffc:	31800104 	addi	r6,r6,4
   26000:	5ac00104 	addi	r11,r11,4
   26004:	333fbe36 	bltu	r6,r12,25f00 <__alt_data_end+0xfffe5f00>
   26008:	0400090e 	bge	zero,r16,26030 <__multiply+0x1d4>
   2600c:	50ffff17 	ldw	r3,-4(r10)
   26010:	52bfff04 	addi	r10,r10,-4
   26014:	18000326 	beq	r3,zero,26024 <__multiply+0x1c8>
   26018:	00000506 	br	26030 <__multiply+0x1d4>
   2601c:	50c00017 	ldw	r3,0(r10)
   26020:	1800031e 	bne	r3,zero,26030 <__multiply+0x1d4>
   26024:	843fffc4 	addi	r16,r16,-1
   26028:	52bfff04 	addi	r10,r10,-4
   2602c:	803ffb1e 	bne	r16,zero,2601c <__alt_data_end+0xfffe601c>
   26030:	14000415 	stw	r16,16(r2)
   26034:	dfc00517 	ldw	ra,20(sp)
   26038:	dd000417 	ldw	r20,16(sp)
   2603c:	dcc00317 	ldw	r19,12(sp)
   26040:	dc800217 	ldw	r18,8(sp)
   26044:	dc400117 	ldw	r17,4(sp)
   26048:	dc000017 	ldw	r16,0(sp)
   2604c:	dec00604 	addi	sp,sp,24
   26050:	f800283a 	ret

00026054 <__pow5mult>:
   26054:	defffa04 	addi	sp,sp,-24
   26058:	dcc00315 	stw	r19,12(sp)
   2605c:	dc000015 	stw	r16,0(sp)
   26060:	dfc00515 	stw	ra,20(sp)
   26064:	dd000415 	stw	r20,16(sp)
   26068:	dc800215 	stw	r18,8(sp)
   2606c:	dc400115 	stw	r17,4(sp)
   26070:	308000cc 	andi	r2,r6,3
   26074:	3021883a 	mov	r16,r6
   26078:	2027883a 	mov	r19,r4
   2607c:	10002f1e 	bne	r2,zero,2613c <__pow5mult+0xe8>
   26080:	2825883a 	mov	r18,r5
   26084:	8021d0ba 	srai	r16,r16,2
   26088:	80001a26 	beq	r16,zero,260f4 <__pow5mult+0xa0>
   2608c:	9c401217 	ldw	r17,72(r19)
   26090:	8800061e 	bne	r17,zero,260ac <__pow5mult+0x58>
   26094:	00003406 	br	26168 <__pow5mult+0x114>
   26098:	8021d07a 	srai	r16,r16,1
   2609c:	80001526 	beq	r16,zero,260f4 <__pow5mult+0xa0>
   260a0:	88800017 	ldw	r2,0(r17)
   260a4:	10001c26 	beq	r2,zero,26118 <__pow5mult+0xc4>
   260a8:	1023883a 	mov	r17,r2
   260ac:	8080004c 	andi	r2,r16,1
   260b0:	103ff926 	beq	r2,zero,26098 <__alt_data_end+0xfffe6098>
   260b4:	880d883a 	mov	r6,r17
   260b8:	900b883a 	mov	r5,r18
   260bc:	9809883a 	mov	r4,r19
   260c0:	0025e5c0 	call	25e5c <__multiply>
   260c4:	90001b26 	beq	r18,zero,26134 <__pow5mult+0xe0>
   260c8:	91000117 	ldw	r4,4(r18)
   260cc:	98c01317 	ldw	r3,76(r19)
   260d0:	8021d07a 	srai	r16,r16,1
   260d4:	2109883a 	add	r4,r4,r4
   260d8:	2109883a 	add	r4,r4,r4
   260dc:	1907883a 	add	r3,r3,r4
   260e0:	19000017 	ldw	r4,0(r3)
   260e4:	91000015 	stw	r4,0(r18)
   260e8:	1c800015 	stw	r18,0(r3)
   260ec:	1025883a 	mov	r18,r2
   260f0:	803feb1e 	bne	r16,zero,260a0 <__alt_data_end+0xfffe60a0>
   260f4:	9005883a 	mov	r2,r18
   260f8:	dfc00517 	ldw	ra,20(sp)
   260fc:	dd000417 	ldw	r20,16(sp)
   26100:	dcc00317 	ldw	r19,12(sp)
   26104:	dc800217 	ldw	r18,8(sp)
   26108:	dc400117 	ldw	r17,4(sp)
   2610c:	dc000017 	ldw	r16,0(sp)
   26110:	dec00604 	addi	sp,sp,24
   26114:	f800283a 	ret
   26118:	880d883a 	mov	r6,r17
   2611c:	880b883a 	mov	r5,r17
   26120:	9809883a 	mov	r4,r19
   26124:	0025e5c0 	call	25e5c <__multiply>
   26128:	88800015 	stw	r2,0(r17)
   2612c:	10000015 	stw	zero,0(r2)
   26130:	003fdd06 	br	260a8 <__alt_data_end+0xfffe60a8>
   26134:	1025883a 	mov	r18,r2
   26138:	003fd706 	br	26098 <__alt_data_end+0xfffe6098>
   2613c:	10bfffc4 	addi	r2,r2,-1
   26140:	1085883a 	add	r2,r2,r2
   26144:	00c000f4 	movhi	r3,3
   26148:	18fc9e04 	addi	r3,r3,-3464
   2614c:	1085883a 	add	r2,r2,r2
   26150:	1885883a 	add	r2,r3,r2
   26154:	11800017 	ldw	r6,0(r2)
   26158:	000f883a 	mov	r7,zero
   2615c:	0025ae40 	call	25ae4 <__multadd>
   26160:	1025883a 	mov	r18,r2
   26164:	003fc706 	br	26084 <__alt_data_end+0xfffe6084>
   26168:	05000044 	movi	r20,1
   2616c:	a00b883a 	mov	r5,r20
   26170:	9809883a 	mov	r4,r19
   26174:	0025a140 	call	25a14 <_Balloc>
   26178:	1023883a 	mov	r17,r2
   2617c:	00809c44 	movi	r2,625
   26180:	88800515 	stw	r2,20(r17)
   26184:	8d000415 	stw	r20,16(r17)
   26188:	9c401215 	stw	r17,72(r19)
   2618c:	88000015 	stw	zero,0(r17)
   26190:	003fc606 	br	260ac <__alt_data_end+0xfffe60ac>

00026194 <__lshift>:
   26194:	defff904 	addi	sp,sp,-28
   26198:	dd400515 	stw	r21,20(sp)
   2619c:	dcc00315 	stw	r19,12(sp)
   261a0:	302bd17a 	srai	r21,r6,5
   261a4:	2cc00417 	ldw	r19,16(r5)
   261a8:	28800217 	ldw	r2,8(r5)
   261ac:	dd000415 	stw	r20,16(sp)
   261b0:	ace7883a 	add	r19,r21,r19
   261b4:	dc800215 	stw	r18,8(sp)
   261b8:	dc400115 	stw	r17,4(sp)
   261bc:	dc000015 	stw	r16,0(sp)
   261c0:	dfc00615 	stw	ra,24(sp)
   261c4:	9c000044 	addi	r16,r19,1
   261c8:	2823883a 	mov	r17,r5
   261cc:	3029883a 	mov	r20,r6
   261d0:	2025883a 	mov	r18,r4
   261d4:	29400117 	ldw	r5,4(r5)
   261d8:	1400030e 	bge	r2,r16,261e8 <__lshift+0x54>
   261dc:	1085883a 	add	r2,r2,r2
   261e0:	29400044 	addi	r5,r5,1
   261e4:	143ffd16 	blt	r2,r16,261dc <__alt_data_end+0xfffe61dc>
   261e8:	9009883a 	mov	r4,r18
   261ec:	0025a140 	call	25a14 <_Balloc>
   261f0:	10c00504 	addi	r3,r2,20
   261f4:	0540070e 	bge	zero,r21,26214 <__lshift+0x80>
   261f8:	ad6b883a 	add	r21,r21,r21
   261fc:	ad6b883a 	add	r21,r21,r21
   26200:	1809883a 	mov	r4,r3
   26204:	1d47883a 	add	r3,r3,r21
   26208:	20000015 	stw	zero,0(r4)
   2620c:	21000104 	addi	r4,r4,4
   26210:	193ffd1e 	bne	r3,r4,26208 <__alt_data_end+0xfffe6208>
   26214:	8a000417 	ldw	r8,16(r17)
   26218:	89000504 	addi	r4,r17,20
   2621c:	a18007cc 	andi	r6,r20,31
   26220:	4211883a 	add	r8,r8,r8
   26224:	4211883a 	add	r8,r8,r8
   26228:	2211883a 	add	r8,r4,r8
   2622c:	30002326 	beq	r6,zero,262bc <__lshift+0x128>
   26230:	02400804 	movi	r9,32
   26234:	4993c83a 	sub	r9,r9,r6
   26238:	000b883a 	mov	r5,zero
   2623c:	21c00017 	ldw	r7,0(r4)
   26240:	1815883a 	mov	r10,r3
   26244:	18c00104 	addi	r3,r3,4
   26248:	398e983a 	sll	r7,r7,r6
   2624c:	21000104 	addi	r4,r4,4
   26250:	394ab03a 	or	r5,r7,r5
   26254:	197fff15 	stw	r5,-4(r3)
   26258:	217fff17 	ldw	r5,-4(r4)
   2625c:	2a4ad83a 	srl	r5,r5,r9
   26260:	223ff636 	bltu	r4,r8,2623c <__alt_data_end+0xfffe623c>
   26264:	51400115 	stw	r5,4(r10)
   26268:	28001a1e 	bne	r5,zero,262d4 <__lshift+0x140>
   2626c:	843fffc4 	addi	r16,r16,-1
   26270:	14000415 	stw	r16,16(r2)
   26274:	88000826 	beq	r17,zero,26298 <__lshift+0x104>
   26278:	89000117 	ldw	r4,4(r17)
   2627c:	90c01317 	ldw	r3,76(r18)
   26280:	2109883a 	add	r4,r4,r4
   26284:	2109883a 	add	r4,r4,r4
   26288:	1907883a 	add	r3,r3,r4
   2628c:	19000017 	ldw	r4,0(r3)
   26290:	89000015 	stw	r4,0(r17)
   26294:	1c400015 	stw	r17,0(r3)
   26298:	dfc00617 	ldw	ra,24(sp)
   2629c:	dd400517 	ldw	r21,20(sp)
   262a0:	dd000417 	ldw	r20,16(sp)
   262a4:	dcc00317 	ldw	r19,12(sp)
   262a8:	dc800217 	ldw	r18,8(sp)
   262ac:	dc400117 	ldw	r17,4(sp)
   262b0:	dc000017 	ldw	r16,0(sp)
   262b4:	dec00704 	addi	sp,sp,28
   262b8:	f800283a 	ret
   262bc:	21400017 	ldw	r5,0(r4)
   262c0:	18c00104 	addi	r3,r3,4
   262c4:	21000104 	addi	r4,r4,4
   262c8:	197fff15 	stw	r5,-4(r3)
   262cc:	223ffb36 	bltu	r4,r8,262bc <__alt_data_end+0xfffe62bc>
   262d0:	003fe606 	br	2626c <__alt_data_end+0xfffe626c>
   262d4:	9c000084 	addi	r16,r19,2
   262d8:	003fe406 	br	2626c <__alt_data_end+0xfffe626c>

000262dc <__mcmp>:
   262dc:	20800417 	ldw	r2,16(r4)
   262e0:	28c00417 	ldw	r3,16(r5)
   262e4:	10c5c83a 	sub	r2,r2,r3
   262e8:	1000111e 	bne	r2,zero,26330 <__mcmp+0x54>
   262ec:	18c7883a 	add	r3,r3,r3
   262f0:	18c7883a 	add	r3,r3,r3
   262f4:	21000504 	addi	r4,r4,20
   262f8:	29400504 	addi	r5,r5,20
   262fc:	20c5883a 	add	r2,r4,r3
   26300:	28cb883a 	add	r5,r5,r3
   26304:	00000106 	br	2630c <__mcmp+0x30>
   26308:	20800a2e 	bgeu	r4,r2,26334 <__mcmp+0x58>
   2630c:	10bfff04 	addi	r2,r2,-4
   26310:	297fff04 	addi	r5,r5,-4
   26314:	11800017 	ldw	r6,0(r2)
   26318:	28c00017 	ldw	r3,0(r5)
   2631c:	30fffa26 	beq	r6,r3,26308 <__alt_data_end+0xfffe6308>
   26320:	30c00236 	bltu	r6,r3,2632c <__mcmp+0x50>
   26324:	00800044 	movi	r2,1
   26328:	f800283a 	ret
   2632c:	00bfffc4 	movi	r2,-1
   26330:	f800283a 	ret
   26334:	0005883a 	mov	r2,zero
   26338:	f800283a 	ret

0002633c <__mdiff>:
   2633c:	28c00417 	ldw	r3,16(r5)
   26340:	30800417 	ldw	r2,16(r6)
   26344:	defffa04 	addi	sp,sp,-24
   26348:	dcc00315 	stw	r19,12(sp)
   2634c:	dc800215 	stw	r18,8(sp)
   26350:	dfc00515 	stw	ra,20(sp)
   26354:	dd000415 	stw	r20,16(sp)
   26358:	dc400115 	stw	r17,4(sp)
   2635c:	dc000015 	stw	r16,0(sp)
   26360:	1887c83a 	sub	r3,r3,r2
   26364:	2825883a 	mov	r18,r5
   26368:	3027883a 	mov	r19,r6
   2636c:	1800141e 	bne	r3,zero,263c0 <__mdiff+0x84>
   26370:	1085883a 	add	r2,r2,r2
   26374:	1085883a 	add	r2,r2,r2
   26378:	2a000504 	addi	r8,r5,20
   2637c:	34000504 	addi	r16,r6,20
   26380:	4087883a 	add	r3,r8,r2
   26384:	8085883a 	add	r2,r16,r2
   26388:	00000106 	br	26390 <__mdiff+0x54>
   2638c:	40c0592e 	bgeu	r8,r3,264f4 <__mdiff+0x1b8>
   26390:	18ffff04 	addi	r3,r3,-4
   26394:	10bfff04 	addi	r2,r2,-4
   26398:	19c00017 	ldw	r7,0(r3)
   2639c:	11400017 	ldw	r5,0(r2)
   263a0:	397ffa26 	beq	r7,r5,2638c <__alt_data_end+0xfffe638c>
   263a4:	3940592e 	bgeu	r7,r5,2650c <__mdiff+0x1d0>
   263a8:	9005883a 	mov	r2,r18
   263ac:	4023883a 	mov	r17,r8
   263b0:	9825883a 	mov	r18,r19
   263b4:	05000044 	movi	r20,1
   263b8:	1027883a 	mov	r19,r2
   263bc:	00000406 	br	263d0 <__mdiff+0x94>
   263c0:	18005616 	blt	r3,zero,2651c <__mdiff+0x1e0>
   263c4:	34400504 	addi	r17,r6,20
   263c8:	2c000504 	addi	r16,r5,20
   263cc:	0029883a 	mov	r20,zero
   263d0:	91400117 	ldw	r5,4(r18)
   263d4:	0025a140 	call	25a14 <_Balloc>
   263d8:	92400417 	ldw	r9,16(r18)
   263dc:	9b000417 	ldw	r12,16(r19)
   263e0:	12c00504 	addi	r11,r2,20
   263e4:	4a51883a 	add	r8,r9,r9
   263e8:	6319883a 	add	r12,r12,r12
   263ec:	4211883a 	add	r8,r8,r8
   263f0:	6319883a 	add	r12,r12,r12
   263f4:	15000315 	stw	r20,12(r2)
   263f8:	8211883a 	add	r8,r16,r8
   263fc:	8b19883a 	add	r12,r17,r12
   26400:	0007883a 	mov	r3,zero
   26404:	81400017 	ldw	r5,0(r16)
   26408:	89c00017 	ldw	r7,0(r17)
   2640c:	59800104 	addi	r6,r11,4
   26410:	293fffcc 	andi	r4,r5,65535
   26414:	20c7883a 	add	r3,r4,r3
   26418:	393fffcc 	andi	r4,r7,65535
   2641c:	1909c83a 	sub	r4,r3,r4
   26420:	280ad43a 	srli	r5,r5,16
   26424:	380ed43a 	srli	r7,r7,16
   26428:	2007d43a 	srai	r3,r4,16
   2642c:	213fffcc 	andi	r4,r4,65535
   26430:	29cbc83a 	sub	r5,r5,r7
   26434:	28c7883a 	add	r3,r5,r3
   26438:	180a943a 	slli	r5,r3,16
   2643c:	8c400104 	addi	r17,r17,4
   26440:	84000104 	addi	r16,r16,4
   26444:	2908b03a 	or	r4,r5,r4
   26448:	59000015 	stw	r4,0(r11)
   2644c:	1807d43a 	srai	r3,r3,16
   26450:	3015883a 	mov	r10,r6
   26454:	3017883a 	mov	r11,r6
   26458:	8b3fea36 	bltu	r17,r12,26404 <__alt_data_end+0xfffe6404>
   2645c:	8200162e 	bgeu	r16,r8,264b8 <__mdiff+0x17c>
   26460:	8017883a 	mov	r11,r16
   26464:	59400017 	ldw	r5,0(r11)
   26468:	31800104 	addi	r6,r6,4
   2646c:	5ac00104 	addi	r11,r11,4
   26470:	293fffcc 	andi	r4,r5,65535
   26474:	20c7883a 	add	r3,r4,r3
   26478:	280ed43a 	srli	r7,r5,16
   2647c:	180bd43a 	srai	r5,r3,16
   26480:	193fffcc 	andi	r4,r3,65535
   26484:	3947883a 	add	r3,r7,r5
   26488:	180a943a 	slli	r5,r3,16
   2648c:	1807d43a 	srai	r3,r3,16
   26490:	2908b03a 	or	r4,r5,r4
   26494:	313fff15 	stw	r4,-4(r6)
   26498:	5a3ff236 	bltu	r11,r8,26464 <__alt_data_end+0xfffe6464>
   2649c:	0406303a 	nor	r3,zero,r16
   264a0:	1a07883a 	add	r3,r3,r8
   264a4:	1806d0ba 	srli	r3,r3,2
   264a8:	18c00044 	addi	r3,r3,1
   264ac:	18c7883a 	add	r3,r3,r3
   264b0:	18c7883a 	add	r3,r3,r3
   264b4:	50d5883a 	add	r10,r10,r3
   264b8:	50ffff04 	addi	r3,r10,-4
   264bc:	2000041e 	bne	r4,zero,264d0 <__mdiff+0x194>
   264c0:	18ffff04 	addi	r3,r3,-4
   264c4:	19000017 	ldw	r4,0(r3)
   264c8:	4a7fffc4 	addi	r9,r9,-1
   264cc:	203ffc26 	beq	r4,zero,264c0 <__alt_data_end+0xfffe64c0>
   264d0:	12400415 	stw	r9,16(r2)
   264d4:	dfc00517 	ldw	ra,20(sp)
   264d8:	dd000417 	ldw	r20,16(sp)
   264dc:	dcc00317 	ldw	r19,12(sp)
   264e0:	dc800217 	ldw	r18,8(sp)
   264e4:	dc400117 	ldw	r17,4(sp)
   264e8:	dc000017 	ldw	r16,0(sp)
   264ec:	dec00604 	addi	sp,sp,24
   264f0:	f800283a 	ret
   264f4:	000b883a 	mov	r5,zero
   264f8:	0025a140 	call	25a14 <_Balloc>
   264fc:	00c00044 	movi	r3,1
   26500:	10c00415 	stw	r3,16(r2)
   26504:	10000515 	stw	zero,20(r2)
   26508:	003ff206 	br	264d4 <__alt_data_end+0xfffe64d4>
   2650c:	8023883a 	mov	r17,r16
   26510:	0029883a 	mov	r20,zero
   26514:	4021883a 	mov	r16,r8
   26518:	003fad06 	br	263d0 <__alt_data_end+0xfffe63d0>
   2651c:	9005883a 	mov	r2,r18
   26520:	94400504 	addi	r17,r18,20
   26524:	9c000504 	addi	r16,r19,20
   26528:	9825883a 	mov	r18,r19
   2652c:	05000044 	movi	r20,1
   26530:	1027883a 	mov	r19,r2
   26534:	003fa606 	br	263d0 <__alt_data_end+0xfffe63d0>

00026538 <__ulp>:
   26538:	295ffc2c 	andhi	r5,r5,32752
   2653c:	00bf3034 	movhi	r2,64704
   26540:	2887883a 	add	r3,r5,r2
   26544:	00c0020e 	bge	zero,r3,26550 <__ulp+0x18>
   26548:	0005883a 	mov	r2,zero
   2654c:	f800283a 	ret
   26550:	00c7c83a 	sub	r3,zero,r3
   26554:	1807d53a 	srai	r3,r3,20
   26558:	008004c4 	movi	r2,19
   2655c:	10c00b0e 	bge	r2,r3,2658c <__ulp+0x54>
   26560:	18bffb04 	addi	r2,r3,-20
   26564:	01000784 	movi	r4,30
   26568:	0007883a 	mov	r3,zero
   2656c:	20800516 	blt	r4,r2,26584 <__ulp+0x4c>
   26570:	010007c4 	movi	r4,31
   26574:	2089c83a 	sub	r4,r4,r2
   26578:	00800044 	movi	r2,1
   2657c:	1104983a 	sll	r2,r2,r4
   26580:	f800283a 	ret
   26584:	00800044 	movi	r2,1
   26588:	f800283a 	ret
   2658c:	01400234 	movhi	r5,8
   26590:	28c7d83a 	sra	r3,r5,r3
   26594:	0005883a 	mov	r2,zero
   26598:	f800283a 	ret

0002659c <__b2d>:
   2659c:	defffa04 	addi	sp,sp,-24
   265a0:	dc000015 	stw	r16,0(sp)
   265a4:	24000417 	ldw	r16,16(r4)
   265a8:	dc400115 	stw	r17,4(sp)
   265ac:	24400504 	addi	r17,r4,20
   265b0:	8421883a 	add	r16,r16,r16
   265b4:	8421883a 	add	r16,r16,r16
   265b8:	8c21883a 	add	r16,r17,r16
   265bc:	dc800215 	stw	r18,8(sp)
   265c0:	84bfff17 	ldw	r18,-4(r16)
   265c4:	dd000415 	stw	r20,16(sp)
   265c8:	dcc00315 	stw	r19,12(sp)
   265cc:	9009883a 	mov	r4,r18
   265d0:	2829883a 	mov	r20,r5
   265d4:	dfc00515 	stw	ra,20(sp)
   265d8:	0025d080 	call	25d08 <__hi0bits>
   265dc:	00c00804 	movi	r3,32
   265e0:	1889c83a 	sub	r4,r3,r2
   265e4:	a1000015 	stw	r4,0(r20)
   265e8:	01000284 	movi	r4,10
   265ec:	84ffff04 	addi	r19,r16,-4
   265f0:	20801216 	blt	r4,r2,2663c <__b2d+0xa0>
   265f4:	018002c4 	movi	r6,11
   265f8:	308dc83a 	sub	r6,r6,r2
   265fc:	9186d83a 	srl	r3,r18,r6
   26600:	18cffc34 	orhi	r3,r3,16368
   26604:	8cc0212e 	bgeu	r17,r19,2668c <__b2d+0xf0>
   26608:	813ffe17 	ldw	r4,-8(r16)
   2660c:	218cd83a 	srl	r6,r4,r6
   26610:	10800544 	addi	r2,r2,21
   26614:	9084983a 	sll	r2,r18,r2
   26618:	1184b03a 	or	r2,r2,r6
   2661c:	dfc00517 	ldw	ra,20(sp)
   26620:	dd000417 	ldw	r20,16(sp)
   26624:	dcc00317 	ldw	r19,12(sp)
   26628:	dc800217 	ldw	r18,8(sp)
   2662c:	dc400117 	ldw	r17,4(sp)
   26630:	dc000017 	ldw	r16,0(sp)
   26634:	dec00604 	addi	sp,sp,24
   26638:	f800283a 	ret
   2663c:	8cc00f2e 	bgeu	r17,r19,2667c <__b2d+0xe0>
   26640:	117ffd44 	addi	r5,r2,-11
   26644:	80bffe17 	ldw	r2,-8(r16)
   26648:	28000e26 	beq	r5,zero,26684 <__b2d+0xe8>
   2664c:	1949c83a 	sub	r4,r3,r5
   26650:	9164983a 	sll	r18,r18,r5
   26654:	1106d83a 	srl	r3,r2,r4
   26658:	81bffe04 	addi	r6,r16,-8
   2665c:	948ffc34 	orhi	r18,r18,16368
   26660:	90c6b03a 	or	r3,r18,r3
   26664:	89800e2e 	bgeu	r17,r6,266a0 <__b2d+0x104>
   26668:	81bffd17 	ldw	r6,-12(r16)
   2666c:	1144983a 	sll	r2,r2,r5
   26670:	310ad83a 	srl	r5,r6,r4
   26674:	2884b03a 	or	r2,r5,r2
   26678:	003fe806 	br	2661c <__alt_data_end+0xfffe661c>
   2667c:	10bffd44 	addi	r2,r2,-11
   26680:	1000041e 	bne	r2,zero,26694 <__b2d+0xf8>
   26684:	90cffc34 	orhi	r3,r18,16368
   26688:	003fe406 	br	2661c <__alt_data_end+0xfffe661c>
   2668c:	000d883a 	mov	r6,zero
   26690:	003fdf06 	br	26610 <__alt_data_end+0xfffe6610>
   26694:	90a4983a 	sll	r18,r18,r2
   26698:	0005883a 	mov	r2,zero
   2669c:	003ff906 	br	26684 <__alt_data_end+0xfffe6684>
   266a0:	1144983a 	sll	r2,r2,r5
   266a4:	003fdd06 	br	2661c <__alt_data_end+0xfffe661c>

000266a8 <__d2b>:
   266a8:	defff804 	addi	sp,sp,-32
   266ac:	dc000215 	stw	r16,8(sp)
   266b0:	3021883a 	mov	r16,r6
   266b4:	dc400315 	stw	r17,12(sp)
   266b8:	8022907a 	slli	r17,r16,1
   266bc:	dd000615 	stw	r20,24(sp)
   266c0:	2829883a 	mov	r20,r5
   266c4:	01400044 	movi	r5,1
   266c8:	dcc00515 	stw	r19,20(sp)
   266cc:	dc800415 	stw	r18,16(sp)
   266d0:	dfc00715 	stw	ra,28(sp)
   266d4:	3825883a 	mov	r18,r7
   266d8:	8822d57a 	srli	r17,r17,21
   266dc:	0025a140 	call	25a14 <_Balloc>
   266e0:	1027883a 	mov	r19,r2
   266e4:	00800434 	movhi	r2,16
   266e8:	10bfffc4 	addi	r2,r2,-1
   266ec:	808c703a 	and	r6,r16,r2
   266f0:	88000126 	beq	r17,zero,266f8 <__d2b+0x50>
   266f4:	31800434 	orhi	r6,r6,16
   266f8:	d9800015 	stw	r6,0(sp)
   266fc:	a0002426 	beq	r20,zero,26790 <__d2b+0xe8>
   26700:	d9000104 	addi	r4,sp,4
   26704:	dd000115 	stw	r20,4(sp)
   26708:	0025d700 	call	25d70 <__lo0bits>
   2670c:	d8c00017 	ldw	r3,0(sp)
   26710:	10002f1e 	bne	r2,zero,267d0 <__d2b+0x128>
   26714:	d9000117 	ldw	r4,4(sp)
   26718:	99000515 	stw	r4,20(r19)
   2671c:	1821003a 	cmpeq	r16,r3,zero
   26720:	01000084 	movi	r4,2
   26724:	2421c83a 	sub	r16,r4,r16
   26728:	98c00615 	stw	r3,24(r19)
   2672c:	9c000415 	stw	r16,16(r19)
   26730:	88001f1e 	bne	r17,zero,267b0 <__d2b+0x108>
   26734:	10bef384 	addi	r2,r2,-1074
   26738:	90800015 	stw	r2,0(r18)
   2673c:	00900034 	movhi	r2,16384
   26740:	10bfffc4 	addi	r2,r2,-1
   26744:	8085883a 	add	r2,r16,r2
   26748:	1085883a 	add	r2,r2,r2
   2674c:	1085883a 	add	r2,r2,r2
   26750:	9885883a 	add	r2,r19,r2
   26754:	11000517 	ldw	r4,20(r2)
   26758:	8020917a 	slli	r16,r16,5
   2675c:	0025d080 	call	25d08 <__hi0bits>
   26760:	d8c00817 	ldw	r3,32(sp)
   26764:	8085c83a 	sub	r2,r16,r2
   26768:	18800015 	stw	r2,0(r3)
   2676c:	9805883a 	mov	r2,r19
   26770:	dfc00717 	ldw	ra,28(sp)
   26774:	dd000617 	ldw	r20,24(sp)
   26778:	dcc00517 	ldw	r19,20(sp)
   2677c:	dc800417 	ldw	r18,16(sp)
   26780:	dc400317 	ldw	r17,12(sp)
   26784:	dc000217 	ldw	r16,8(sp)
   26788:	dec00804 	addi	sp,sp,32
   2678c:	f800283a 	ret
   26790:	d809883a 	mov	r4,sp
   26794:	0025d700 	call	25d70 <__lo0bits>
   26798:	d8c00017 	ldw	r3,0(sp)
   2679c:	04000044 	movi	r16,1
   267a0:	9c000415 	stw	r16,16(r19)
   267a4:	98c00515 	stw	r3,20(r19)
   267a8:	10800804 	addi	r2,r2,32
   267ac:	883fe126 	beq	r17,zero,26734 <__alt_data_end+0xfffe6734>
   267b0:	00c00d44 	movi	r3,53
   267b4:	8c7ef344 	addi	r17,r17,-1075
   267b8:	88a3883a 	add	r17,r17,r2
   267bc:	1885c83a 	sub	r2,r3,r2
   267c0:	d8c00817 	ldw	r3,32(sp)
   267c4:	94400015 	stw	r17,0(r18)
   267c8:	18800015 	stw	r2,0(r3)
   267cc:	003fe706 	br	2676c <__alt_data_end+0xfffe676c>
   267d0:	01000804 	movi	r4,32
   267d4:	2089c83a 	sub	r4,r4,r2
   267d8:	1908983a 	sll	r4,r3,r4
   267dc:	d9400117 	ldw	r5,4(sp)
   267e0:	1886d83a 	srl	r3,r3,r2
   267e4:	2148b03a 	or	r4,r4,r5
   267e8:	99000515 	stw	r4,20(r19)
   267ec:	d8c00015 	stw	r3,0(sp)
   267f0:	003fca06 	br	2671c <__alt_data_end+0xfffe671c>

000267f4 <__ratio>:
   267f4:	defff904 	addi	sp,sp,-28
   267f8:	dc400315 	stw	r17,12(sp)
   267fc:	2823883a 	mov	r17,r5
   26800:	d9400104 	addi	r5,sp,4
   26804:	dfc00615 	stw	ra,24(sp)
   26808:	dcc00515 	stw	r19,20(sp)
   2680c:	dc800415 	stw	r18,16(sp)
   26810:	2027883a 	mov	r19,r4
   26814:	dc000215 	stw	r16,8(sp)
   26818:	002659c0 	call	2659c <__b2d>
   2681c:	d80b883a 	mov	r5,sp
   26820:	8809883a 	mov	r4,r17
   26824:	1025883a 	mov	r18,r2
   26828:	1821883a 	mov	r16,r3
   2682c:	002659c0 	call	2659c <__b2d>
   26830:	8a000417 	ldw	r8,16(r17)
   26834:	99000417 	ldw	r4,16(r19)
   26838:	d9400117 	ldw	r5,4(sp)
   2683c:	2209c83a 	sub	r4,r4,r8
   26840:	2010917a 	slli	r8,r4,5
   26844:	d9000017 	ldw	r4,0(sp)
   26848:	2909c83a 	sub	r4,r5,r4
   2684c:	4109883a 	add	r4,r8,r4
   26850:	01000e0e 	bge	zero,r4,2688c <__ratio+0x98>
   26854:	2008953a 	slli	r4,r4,20
   26858:	2421883a 	add	r16,r4,r16
   2685c:	100d883a 	mov	r6,r2
   26860:	180f883a 	mov	r7,r3
   26864:	9009883a 	mov	r4,r18
   26868:	800b883a 	mov	r5,r16
   2686c:	002ad900 	call	2ad90 <__divdf3>
   26870:	dfc00617 	ldw	ra,24(sp)
   26874:	dcc00517 	ldw	r19,20(sp)
   26878:	dc800417 	ldw	r18,16(sp)
   2687c:	dc400317 	ldw	r17,12(sp)
   26880:	dc000217 	ldw	r16,8(sp)
   26884:	dec00704 	addi	sp,sp,28
   26888:	f800283a 	ret
   2688c:	2008953a 	slli	r4,r4,20
   26890:	1907c83a 	sub	r3,r3,r4
   26894:	003ff106 	br	2685c <__alt_data_end+0xfffe685c>

00026898 <_mprec_log10>:
   26898:	defffe04 	addi	sp,sp,-8
   2689c:	dc000015 	stw	r16,0(sp)
   268a0:	dfc00115 	stw	ra,4(sp)
   268a4:	008005c4 	movi	r2,23
   268a8:	2021883a 	mov	r16,r4
   268ac:	11000d0e 	bge	r2,r4,268e4 <_mprec_log10+0x4c>
   268b0:	0005883a 	mov	r2,zero
   268b4:	00cffc34 	movhi	r3,16368
   268b8:	843fffc4 	addi	r16,r16,-1
   268bc:	000d883a 	mov	r6,zero
   268c0:	01d00934 	movhi	r7,16420
   268c4:	1009883a 	mov	r4,r2
   268c8:	180b883a 	mov	r5,r3
   268cc:	002b8d00 	call	2b8d0 <__muldf3>
   268d0:	803ff91e 	bne	r16,zero,268b8 <__alt_data_end+0xfffe68b8>
   268d4:	dfc00117 	ldw	ra,4(sp)
   268d8:	dc000017 	ldw	r16,0(sp)
   268dc:	dec00204 	addi	sp,sp,8
   268e0:	f800283a 	ret
   268e4:	202090fa 	slli	r16,r4,3
   268e8:	008000f4 	movhi	r2,3
   268ec:	10bcb504 	addi	r2,r2,-3372
   268f0:	1421883a 	add	r16,r2,r16
   268f4:	80800017 	ldw	r2,0(r16)
   268f8:	80c00117 	ldw	r3,4(r16)
   268fc:	dfc00117 	ldw	ra,4(sp)
   26900:	dc000017 	ldw	r16,0(sp)
   26904:	dec00204 	addi	sp,sp,8
   26908:	f800283a 	ret

0002690c <__copybits>:
   2690c:	297fffc4 	addi	r5,r5,-1
   26910:	280fd17a 	srai	r7,r5,5
   26914:	30c00417 	ldw	r3,16(r6)
   26918:	30800504 	addi	r2,r6,20
   2691c:	39c00044 	addi	r7,r7,1
   26920:	18c7883a 	add	r3,r3,r3
   26924:	39cf883a 	add	r7,r7,r7
   26928:	18c7883a 	add	r3,r3,r3
   2692c:	39cf883a 	add	r7,r7,r7
   26930:	10c7883a 	add	r3,r2,r3
   26934:	21cf883a 	add	r7,r4,r7
   26938:	10c00d2e 	bgeu	r2,r3,26970 <__copybits+0x64>
   2693c:	200b883a 	mov	r5,r4
   26940:	12000017 	ldw	r8,0(r2)
   26944:	29400104 	addi	r5,r5,4
   26948:	10800104 	addi	r2,r2,4
   2694c:	2a3fff15 	stw	r8,-4(r5)
   26950:	10fffb36 	bltu	r2,r3,26940 <__alt_data_end+0xfffe6940>
   26954:	1985c83a 	sub	r2,r3,r6
   26958:	10bffac4 	addi	r2,r2,-21
   2695c:	1004d0ba 	srli	r2,r2,2
   26960:	10800044 	addi	r2,r2,1
   26964:	1085883a 	add	r2,r2,r2
   26968:	1085883a 	add	r2,r2,r2
   2696c:	2089883a 	add	r4,r4,r2
   26970:	21c0032e 	bgeu	r4,r7,26980 <__copybits+0x74>
   26974:	20000015 	stw	zero,0(r4)
   26978:	21000104 	addi	r4,r4,4
   2697c:	21fffd36 	bltu	r4,r7,26974 <__alt_data_end+0xfffe6974>
   26980:	f800283a 	ret

00026984 <__any_on>:
   26984:	20c00417 	ldw	r3,16(r4)
   26988:	2805d17a 	srai	r2,r5,5
   2698c:	21000504 	addi	r4,r4,20
   26990:	18800d0e 	bge	r3,r2,269c8 <__any_on+0x44>
   26994:	18c7883a 	add	r3,r3,r3
   26998:	18c7883a 	add	r3,r3,r3
   2699c:	20c7883a 	add	r3,r4,r3
   269a0:	20c0192e 	bgeu	r4,r3,26a08 <__any_on+0x84>
   269a4:	18bfff17 	ldw	r2,-4(r3)
   269a8:	18ffff04 	addi	r3,r3,-4
   269ac:	1000041e 	bne	r2,zero,269c0 <__any_on+0x3c>
   269b0:	20c0142e 	bgeu	r4,r3,26a04 <__any_on+0x80>
   269b4:	18ffff04 	addi	r3,r3,-4
   269b8:	19400017 	ldw	r5,0(r3)
   269bc:	283ffc26 	beq	r5,zero,269b0 <__alt_data_end+0xfffe69b0>
   269c0:	00800044 	movi	r2,1
   269c4:	f800283a 	ret
   269c8:	10c00a0e 	bge	r2,r3,269f4 <__any_on+0x70>
   269cc:	1085883a 	add	r2,r2,r2
   269d0:	1085883a 	add	r2,r2,r2
   269d4:	294007cc 	andi	r5,r5,31
   269d8:	2087883a 	add	r3,r4,r2
   269dc:	283ff026 	beq	r5,zero,269a0 <__alt_data_end+0xfffe69a0>
   269e0:	19800017 	ldw	r6,0(r3)
   269e4:	3144d83a 	srl	r2,r6,r5
   269e8:	114a983a 	sll	r5,r2,r5
   269ec:	317ff41e 	bne	r6,r5,269c0 <__alt_data_end+0xfffe69c0>
   269f0:	003feb06 	br	269a0 <__alt_data_end+0xfffe69a0>
   269f4:	1085883a 	add	r2,r2,r2
   269f8:	1085883a 	add	r2,r2,r2
   269fc:	2087883a 	add	r3,r4,r2
   26a00:	003fe706 	br	269a0 <__alt_data_end+0xfffe69a0>
   26a04:	f800283a 	ret
   26a08:	0005883a 	mov	r2,zero
   26a0c:	f800283a 	ret

00026a10 <__fpclassifyd>:
   26a10:	00a00034 	movhi	r2,32768
   26a14:	10bfffc4 	addi	r2,r2,-1
   26a18:	2884703a 	and	r2,r5,r2
   26a1c:	10000726 	beq	r2,zero,26a3c <__fpclassifyd+0x2c>
   26a20:	00fffc34 	movhi	r3,65520
   26a24:	019ff834 	movhi	r6,32736
   26a28:	28c7883a 	add	r3,r5,r3
   26a2c:	31bfffc4 	addi	r6,r6,-1
   26a30:	30c00536 	bltu	r6,r3,26a48 <__fpclassifyd+0x38>
   26a34:	00800104 	movi	r2,4
   26a38:	f800283a 	ret
   26a3c:	2000021e 	bne	r4,zero,26a48 <__fpclassifyd+0x38>
   26a40:	00800084 	movi	r2,2
   26a44:	f800283a 	ret
   26a48:	00dffc34 	movhi	r3,32752
   26a4c:	019ff834 	movhi	r6,32736
   26a50:	28cb883a 	add	r5,r5,r3
   26a54:	31bfffc4 	addi	r6,r6,-1
   26a58:	317ff62e 	bgeu	r6,r5,26a34 <__alt_data_end+0xfffe6a34>
   26a5c:	01400434 	movhi	r5,16
   26a60:	297fffc4 	addi	r5,r5,-1
   26a64:	28800236 	bltu	r5,r2,26a70 <__fpclassifyd+0x60>
   26a68:	008000c4 	movi	r2,3
   26a6c:	f800283a 	ret
   26a70:	10c00226 	beq	r2,r3,26a7c <__fpclassifyd+0x6c>
   26a74:	0005883a 	mov	r2,zero
   26a78:	f800283a 	ret
   26a7c:	2005003a 	cmpeq	r2,r4,zero
   26a80:	f800283a 	ret

00026a84 <_sbrk_r>:
   26a84:	defffd04 	addi	sp,sp,-12
   26a88:	dc000015 	stw	r16,0(sp)
   26a8c:	040000f4 	movhi	r16,3
   26a90:	dc400115 	stw	r17,4(sp)
   26a94:	840ab804 	addi	r16,r16,10976
   26a98:	2023883a 	mov	r17,r4
   26a9c:	2809883a 	mov	r4,r5
   26aa0:	dfc00215 	stw	ra,8(sp)
   26aa4:	80000015 	stw	zero,0(r16)
   26aa8:	002d2ac0 	call	2d2ac <sbrk>
   26aac:	00ffffc4 	movi	r3,-1
   26ab0:	10c00526 	beq	r2,r3,26ac8 <_sbrk_r+0x44>
   26ab4:	dfc00217 	ldw	ra,8(sp)
   26ab8:	dc400117 	ldw	r17,4(sp)
   26abc:	dc000017 	ldw	r16,0(sp)
   26ac0:	dec00304 	addi	sp,sp,12
   26ac4:	f800283a 	ret
   26ac8:	80c00017 	ldw	r3,0(r16)
   26acc:	183ff926 	beq	r3,zero,26ab4 <__alt_data_end+0xfffe6ab4>
   26ad0:	88c00015 	stw	r3,0(r17)
   26ad4:	003ff706 	br	26ab4 <__alt_data_end+0xfffe6ab4>

00026ad8 <__sread>:
   26ad8:	defffe04 	addi	sp,sp,-8
   26adc:	dc000015 	stw	r16,0(sp)
   26ae0:	2821883a 	mov	r16,r5
   26ae4:	2940038f 	ldh	r5,14(r5)
   26ae8:	dfc00115 	stw	ra,4(sp)
   26aec:	0028f7c0 	call	28f7c <_read_r>
   26af0:	10000716 	blt	r2,zero,26b10 <__sread+0x38>
   26af4:	80c01417 	ldw	r3,80(r16)
   26af8:	1887883a 	add	r3,r3,r2
   26afc:	80c01415 	stw	r3,80(r16)
   26b00:	dfc00117 	ldw	ra,4(sp)
   26b04:	dc000017 	ldw	r16,0(sp)
   26b08:	dec00204 	addi	sp,sp,8
   26b0c:	f800283a 	ret
   26b10:	80c0030b 	ldhu	r3,12(r16)
   26b14:	18fbffcc 	andi	r3,r3,61439
   26b18:	80c0030d 	sth	r3,12(r16)
   26b1c:	dfc00117 	ldw	ra,4(sp)
   26b20:	dc000017 	ldw	r16,0(sp)
   26b24:	dec00204 	addi	sp,sp,8
   26b28:	f800283a 	ret

00026b2c <__seofread>:
   26b2c:	0005883a 	mov	r2,zero
   26b30:	f800283a 	ret

00026b34 <__swrite>:
   26b34:	2880030b 	ldhu	r2,12(r5)
   26b38:	defffb04 	addi	sp,sp,-20
   26b3c:	dcc00315 	stw	r19,12(sp)
   26b40:	dc800215 	stw	r18,8(sp)
   26b44:	dc400115 	stw	r17,4(sp)
   26b48:	dc000015 	stw	r16,0(sp)
   26b4c:	dfc00415 	stw	ra,16(sp)
   26b50:	10c0400c 	andi	r3,r2,256
   26b54:	2821883a 	mov	r16,r5
   26b58:	2023883a 	mov	r17,r4
   26b5c:	3025883a 	mov	r18,r6
   26b60:	3827883a 	mov	r19,r7
   26b64:	18000526 	beq	r3,zero,26b7c <__swrite+0x48>
   26b68:	2940038f 	ldh	r5,14(r5)
   26b6c:	01c00084 	movi	r7,2
   26b70:	000d883a 	mov	r6,zero
   26b74:	0028dc00 	call	28dc0 <_lseek_r>
   26b78:	8080030b 	ldhu	r2,12(r16)
   26b7c:	8140038f 	ldh	r5,14(r16)
   26b80:	10bbffcc 	andi	r2,r2,61439
   26b84:	980f883a 	mov	r7,r19
   26b88:	900d883a 	mov	r6,r18
   26b8c:	8809883a 	mov	r4,r17
   26b90:	8080030d 	sth	r2,12(r16)
   26b94:	dfc00417 	ldw	ra,16(sp)
   26b98:	dcc00317 	ldw	r19,12(sp)
   26b9c:	dc800217 	ldw	r18,8(sp)
   26ba0:	dc400117 	ldw	r17,4(sp)
   26ba4:	dc000017 	ldw	r16,0(sp)
   26ba8:	dec00504 	addi	sp,sp,20
   26bac:	00283d01 	jmpi	283d0 <_write_r>

00026bb0 <__sseek>:
   26bb0:	defffe04 	addi	sp,sp,-8
   26bb4:	dc000015 	stw	r16,0(sp)
   26bb8:	2821883a 	mov	r16,r5
   26bbc:	2940038f 	ldh	r5,14(r5)
   26bc0:	dfc00115 	stw	ra,4(sp)
   26bc4:	0028dc00 	call	28dc0 <_lseek_r>
   26bc8:	00ffffc4 	movi	r3,-1
   26bcc:	10c00826 	beq	r2,r3,26bf0 <__sseek+0x40>
   26bd0:	80c0030b 	ldhu	r3,12(r16)
   26bd4:	80801415 	stw	r2,80(r16)
   26bd8:	18c40014 	ori	r3,r3,4096
   26bdc:	80c0030d 	sth	r3,12(r16)
   26be0:	dfc00117 	ldw	ra,4(sp)
   26be4:	dc000017 	ldw	r16,0(sp)
   26be8:	dec00204 	addi	sp,sp,8
   26bec:	f800283a 	ret
   26bf0:	80c0030b 	ldhu	r3,12(r16)
   26bf4:	18fbffcc 	andi	r3,r3,61439
   26bf8:	80c0030d 	sth	r3,12(r16)
   26bfc:	dfc00117 	ldw	ra,4(sp)
   26c00:	dc000017 	ldw	r16,0(sp)
   26c04:	dec00204 	addi	sp,sp,8
   26c08:	f800283a 	ret

00026c0c <__sclose>:
   26c0c:	2940038f 	ldh	r5,14(r5)
   26c10:	00284301 	jmpi	28430 <_close_r>

00026c14 <strcmp>:
   26c14:	2144b03a 	or	r2,r4,r5
   26c18:	108000cc 	andi	r2,r2,3
   26c1c:	1000171e 	bne	r2,zero,26c7c <strcmp+0x68>
   26c20:	20800017 	ldw	r2,0(r4)
   26c24:	28c00017 	ldw	r3,0(r5)
   26c28:	10c0141e 	bne	r2,r3,26c7c <strcmp+0x68>
   26c2c:	027fbff4 	movhi	r9,65279
   26c30:	4a7fbfc4 	addi	r9,r9,-257
   26c34:	0086303a 	nor	r3,zero,r2
   26c38:	02202074 	movhi	r8,32897
   26c3c:	1245883a 	add	r2,r2,r9
   26c40:	42202004 	addi	r8,r8,-32640
   26c44:	10c4703a 	and	r2,r2,r3
   26c48:	1204703a 	and	r2,r2,r8
   26c4c:	10000226 	beq	r2,zero,26c58 <strcmp+0x44>
   26c50:	00002306 	br	26ce0 <strcmp+0xcc>
   26c54:	1000221e 	bne	r2,zero,26ce0 <strcmp+0xcc>
   26c58:	21000104 	addi	r4,r4,4
   26c5c:	20c00017 	ldw	r3,0(r4)
   26c60:	29400104 	addi	r5,r5,4
   26c64:	29800017 	ldw	r6,0(r5)
   26c68:	1a4f883a 	add	r7,r3,r9
   26c6c:	00c4303a 	nor	r2,zero,r3
   26c70:	3884703a 	and	r2,r7,r2
   26c74:	1204703a 	and	r2,r2,r8
   26c78:	19bff626 	beq	r3,r6,26c54 <__alt_data_end+0xfffe6c54>
   26c7c:	20800003 	ldbu	r2,0(r4)
   26c80:	10c03fcc 	andi	r3,r2,255
   26c84:	18c0201c 	xori	r3,r3,128
   26c88:	18ffe004 	addi	r3,r3,-128
   26c8c:	18000c26 	beq	r3,zero,26cc0 <strcmp+0xac>
   26c90:	29800007 	ldb	r6,0(r5)
   26c94:	19800326 	beq	r3,r6,26ca4 <strcmp+0x90>
   26c98:	00001306 	br	26ce8 <strcmp+0xd4>
   26c9c:	29800007 	ldb	r6,0(r5)
   26ca0:	11800b1e 	bne	r2,r6,26cd0 <strcmp+0xbc>
   26ca4:	21000044 	addi	r4,r4,1
   26ca8:	20c00003 	ldbu	r3,0(r4)
   26cac:	29400044 	addi	r5,r5,1
   26cb0:	18803fcc 	andi	r2,r3,255
   26cb4:	1080201c 	xori	r2,r2,128
   26cb8:	10bfe004 	addi	r2,r2,-128
   26cbc:	103ff71e 	bne	r2,zero,26c9c <__alt_data_end+0xfffe6c9c>
   26cc0:	0007883a 	mov	r3,zero
   26cc4:	28800003 	ldbu	r2,0(r5)
   26cc8:	1885c83a 	sub	r2,r3,r2
   26ccc:	f800283a 	ret
   26cd0:	28800003 	ldbu	r2,0(r5)
   26cd4:	18c03fcc 	andi	r3,r3,255
   26cd8:	1885c83a 	sub	r2,r3,r2
   26cdc:	f800283a 	ret
   26ce0:	0005883a 	mov	r2,zero
   26ce4:	f800283a 	ret
   26ce8:	10c03fcc 	andi	r3,r2,255
   26cec:	003ff506 	br	26cc4 <__alt_data_end+0xfffe6cc4>

00026cf0 <strlen>:
   26cf0:	208000cc 	andi	r2,r4,3
   26cf4:	10002026 	beq	r2,zero,26d78 <strlen+0x88>
   26cf8:	20800007 	ldb	r2,0(r4)
   26cfc:	10002026 	beq	r2,zero,26d80 <strlen+0x90>
   26d00:	2005883a 	mov	r2,r4
   26d04:	00000206 	br	26d10 <strlen+0x20>
   26d08:	10c00007 	ldb	r3,0(r2)
   26d0c:	18001826 	beq	r3,zero,26d70 <strlen+0x80>
   26d10:	10800044 	addi	r2,r2,1
   26d14:	10c000cc 	andi	r3,r2,3
   26d18:	183ffb1e 	bne	r3,zero,26d08 <__alt_data_end+0xfffe6d08>
   26d1c:	10c00017 	ldw	r3,0(r2)
   26d20:	01ffbff4 	movhi	r7,65279
   26d24:	39ffbfc4 	addi	r7,r7,-257
   26d28:	00ca303a 	nor	r5,zero,r3
   26d2c:	01a02074 	movhi	r6,32897
   26d30:	19c7883a 	add	r3,r3,r7
   26d34:	31a02004 	addi	r6,r6,-32640
   26d38:	1946703a 	and	r3,r3,r5
   26d3c:	1986703a 	and	r3,r3,r6
   26d40:	1800091e 	bne	r3,zero,26d68 <strlen+0x78>
   26d44:	10800104 	addi	r2,r2,4
   26d48:	10c00017 	ldw	r3,0(r2)
   26d4c:	19cb883a 	add	r5,r3,r7
   26d50:	00c6303a 	nor	r3,zero,r3
   26d54:	28c6703a 	and	r3,r5,r3
   26d58:	1986703a 	and	r3,r3,r6
   26d5c:	183ff926 	beq	r3,zero,26d44 <__alt_data_end+0xfffe6d44>
   26d60:	00000106 	br	26d68 <strlen+0x78>
   26d64:	10800044 	addi	r2,r2,1
   26d68:	10c00007 	ldb	r3,0(r2)
   26d6c:	183ffd1e 	bne	r3,zero,26d64 <__alt_data_end+0xfffe6d64>
   26d70:	1105c83a 	sub	r2,r2,r4
   26d74:	f800283a 	ret
   26d78:	2005883a 	mov	r2,r4
   26d7c:	003fe706 	br	26d1c <__alt_data_end+0xfffe6d1c>
   26d80:	0005883a 	mov	r2,zero
   26d84:	f800283a 	ret

00026d88 <__sprint_r.part.0>:
   26d88:	28801917 	ldw	r2,100(r5)
   26d8c:	defff604 	addi	sp,sp,-40
   26d90:	dd400515 	stw	r21,20(sp)
   26d94:	dfc00915 	stw	ra,36(sp)
   26d98:	df000815 	stw	fp,32(sp)
   26d9c:	ddc00715 	stw	r23,28(sp)
   26da0:	dd800615 	stw	r22,24(sp)
   26da4:	dd000415 	stw	r20,16(sp)
   26da8:	dcc00315 	stw	r19,12(sp)
   26dac:	dc800215 	stw	r18,8(sp)
   26db0:	dc400115 	stw	r17,4(sp)
   26db4:	dc000015 	stw	r16,0(sp)
   26db8:	1088000c 	andi	r2,r2,8192
   26dbc:	302b883a 	mov	r21,r6
   26dc0:	10002e26 	beq	r2,zero,26e7c <__sprint_r.part.0+0xf4>
   26dc4:	30800217 	ldw	r2,8(r6)
   26dc8:	35800017 	ldw	r22,0(r6)
   26dcc:	10002926 	beq	r2,zero,26e74 <__sprint_r.part.0+0xec>
   26dd0:	2827883a 	mov	r19,r5
   26dd4:	2029883a 	mov	r20,r4
   26dd8:	b5c00104 	addi	r23,r22,4
   26ddc:	04bfffc4 	movi	r18,-1
   26de0:	bc400017 	ldw	r17,0(r23)
   26de4:	b4000017 	ldw	r16,0(r22)
   26de8:	0039883a 	mov	fp,zero
   26dec:	8822d0ba 	srli	r17,r17,2
   26df0:	8800031e 	bne	r17,zero,26e00 <__sprint_r.part.0+0x78>
   26df4:	00001806 	br	26e58 <__sprint_r.part.0+0xd0>
   26df8:	84000104 	addi	r16,r16,4
   26dfc:	8f001526 	beq	r17,fp,26e54 <__sprint_r.part.0+0xcc>
   26e00:	81400017 	ldw	r5,0(r16)
   26e04:	980d883a 	mov	r6,r19
   26e08:	a009883a 	mov	r4,r20
   26e0c:	00287b00 	call	287b0 <_fputwc_r>
   26e10:	e7000044 	addi	fp,fp,1
   26e14:	14bff81e 	bne	r2,r18,26df8 <__alt_data_end+0xfffe6df8>
   26e18:	9005883a 	mov	r2,r18
   26e1c:	a8000215 	stw	zero,8(r21)
   26e20:	a8000115 	stw	zero,4(r21)
   26e24:	dfc00917 	ldw	ra,36(sp)
   26e28:	df000817 	ldw	fp,32(sp)
   26e2c:	ddc00717 	ldw	r23,28(sp)
   26e30:	dd800617 	ldw	r22,24(sp)
   26e34:	dd400517 	ldw	r21,20(sp)
   26e38:	dd000417 	ldw	r20,16(sp)
   26e3c:	dcc00317 	ldw	r19,12(sp)
   26e40:	dc800217 	ldw	r18,8(sp)
   26e44:	dc400117 	ldw	r17,4(sp)
   26e48:	dc000017 	ldw	r16,0(sp)
   26e4c:	dec00a04 	addi	sp,sp,40
   26e50:	f800283a 	ret
   26e54:	a8800217 	ldw	r2,8(r21)
   26e58:	8c63883a 	add	r17,r17,r17
   26e5c:	8c63883a 	add	r17,r17,r17
   26e60:	1445c83a 	sub	r2,r2,r17
   26e64:	a8800215 	stw	r2,8(r21)
   26e68:	b5800204 	addi	r22,r22,8
   26e6c:	bdc00204 	addi	r23,r23,8
   26e70:	103fdb1e 	bne	r2,zero,26de0 <__alt_data_end+0xfffe6de0>
   26e74:	0005883a 	mov	r2,zero
   26e78:	003fe806 	br	26e1c <__alt_data_end+0xfffe6e1c>
   26e7c:	00288b00 	call	288b0 <__sfvwrite_r>
   26e80:	003fe606 	br	26e1c <__alt_data_end+0xfffe6e1c>

00026e84 <__sprint_r>:
   26e84:	30c00217 	ldw	r3,8(r6)
   26e88:	18000126 	beq	r3,zero,26e90 <__sprint_r+0xc>
   26e8c:	0026d881 	jmpi	26d88 <__sprint_r.part.0>
   26e90:	30000115 	stw	zero,4(r6)
   26e94:	0005883a 	mov	r2,zero
   26e98:	f800283a 	ret

00026e9c <___vfiprintf_internal_r>:
   26e9c:	deffc904 	addi	sp,sp,-220
   26ea0:	df003515 	stw	fp,212(sp)
   26ea4:	dd003115 	stw	r20,196(sp)
   26ea8:	dfc03615 	stw	ra,216(sp)
   26eac:	ddc03415 	stw	r23,208(sp)
   26eb0:	dd803315 	stw	r22,204(sp)
   26eb4:	dd403215 	stw	r21,200(sp)
   26eb8:	dcc03015 	stw	r19,192(sp)
   26ebc:	dc802f15 	stw	r18,188(sp)
   26ec0:	dc402e15 	stw	r17,184(sp)
   26ec4:	dc002d15 	stw	r16,180(sp)
   26ec8:	d9002015 	stw	r4,128(sp)
   26ecc:	d9c02215 	stw	r7,136(sp)
   26ed0:	2829883a 	mov	r20,r5
   26ed4:	3039883a 	mov	fp,r6
   26ed8:	20000226 	beq	r4,zero,26ee4 <___vfiprintf_internal_r+0x48>
   26edc:	20800e17 	ldw	r2,56(r4)
   26ee0:	1000cf26 	beq	r2,zero,27220 <___vfiprintf_internal_r+0x384>
   26ee4:	a080030b 	ldhu	r2,12(r20)
   26ee8:	10c8000c 	andi	r3,r2,8192
   26eec:	1800061e 	bne	r3,zero,26f08 <___vfiprintf_internal_r+0x6c>
   26ef0:	a1001917 	ldw	r4,100(r20)
   26ef4:	00f7ffc4 	movi	r3,-8193
   26ef8:	10880014 	ori	r2,r2,8192
   26efc:	20c6703a 	and	r3,r4,r3
   26f00:	a080030d 	sth	r2,12(r20)
   26f04:	a0c01915 	stw	r3,100(r20)
   26f08:	10c0020c 	andi	r3,r2,8
   26f0c:	1800a926 	beq	r3,zero,271b4 <___vfiprintf_internal_r+0x318>
   26f10:	a0c00417 	ldw	r3,16(r20)
   26f14:	1800a726 	beq	r3,zero,271b4 <___vfiprintf_internal_r+0x318>
   26f18:	1080068c 	andi	r2,r2,26
   26f1c:	00c00284 	movi	r3,10
   26f20:	10c0ac26 	beq	r2,r3,271d4 <___vfiprintf_internal_r+0x338>
   26f24:	da801a04 	addi	r10,sp,104
   26f28:	da801e15 	stw	r10,120(sp)
   26f2c:	d8801e17 	ldw	r2,120(sp)
   26f30:	da8019c4 	addi	r10,sp,103
   26f34:	058000f4 	movhi	r22,3
   26f38:	05c000f4 	movhi	r23,3
   26f3c:	da801f15 	stw	r10,124(sp)
   26f40:	1295c83a 	sub	r10,r2,r10
   26f44:	b5bceb04 	addi	r22,r22,-3156
   26f48:	bdfce704 	addi	r23,r23,-3172
   26f4c:	dec01a15 	stw	sp,104(sp)
   26f50:	d8001c15 	stw	zero,112(sp)
   26f54:	d8001b15 	stw	zero,108(sp)
   26f58:	d8002615 	stw	zero,152(sp)
   26f5c:	d8002315 	stw	zero,140(sp)
   26f60:	da802715 	stw	r10,156(sp)
   26f64:	d811883a 	mov	r8,sp
   26f68:	dd002115 	stw	r20,132(sp)
   26f6c:	e021883a 	mov	r16,fp
   26f70:	80800007 	ldb	r2,0(r16)
   26f74:	1003ea26 	beq	r2,zero,27f20 <___vfiprintf_internal_r+0x1084>
   26f78:	00c00944 	movi	r3,37
   26f7c:	8025883a 	mov	r18,r16
   26f80:	10c0021e 	bne	r2,r3,26f8c <___vfiprintf_internal_r+0xf0>
   26f84:	00001606 	br	26fe0 <___vfiprintf_internal_r+0x144>
   26f88:	10c00326 	beq	r2,r3,26f98 <___vfiprintf_internal_r+0xfc>
   26f8c:	94800044 	addi	r18,r18,1
   26f90:	90800007 	ldb	r2,0(r18)
   26f94:	103ffc1e 	bne	r2,zero,26f88 <__alt_data_end+0xfffe6f88>
   26f98:	9423c83a 	sub	r17,r18,r16
   26f9c:	88001026 	beq	r17,zero,26fe0 <___vfiprintf_internal_r+0x144>
   26fa0:	d8c01c17 	ldw	r3,112(sp)
   26fa4:	d8801b17 	ldw	r2,108(sp)
   26fa8:	44000015 	stw	r16,0(r8)
   26fac:	88c7883a 	add	r3,r17,r3
   26fb0:	10800044 	addi	r2,r2,1
   26fb4:	44400115 	stw	r17,4(r8)
   26fb8:	d8c01c15 	stw	r3,112(sp)
   26fbc:	d8801b15 	stw	r2,108(sp)
   26fc0:	010001c4 	movi	r4,7
   26fc4:	2080760e 	bge	r4,r2,271a0 <___vfiprintf_internal_r+0x304>
   26fc8:	1803821e 	bne	r3,zero,27dd4 <___vfiprintf_internal_r+0xf38>
   26fcc:	da802317 	ldw	r10,140(sp)
   26fd0:	d8001b15 	stw	zero,108(sp)
   26fd4:	d811883a 	mov	r8,sp
   26fd8:	5455883a 	add	r10,r10,r17
   26fdc:	da802315 	stw	r10,140(sp)
   26fe0:	90800007 	ldb	r2,0(r18)
   26fe4:	10044626 	beq	r2,zero,28100 <___vfiprintf_internal_r+0x1264>
   26fe8:	90c00047 	ldb	r3,1(r18)
   26fec:	94000044 	addi	r16,r18,1
   26ff0:	d8001d85 	stb	zero,118(sp)
   26ff4:	0009883a 	mov	r4,zero
   26ff8:	000f883a 	mov	r7,zero
   26ffc:	027fffc4 	movi	r9,-1
   27000:	0023883a 	mov	r17,zero
   27004:	0029883a 	mov	r20,zero
   27008:	01401604 	movi	r5,88
   2700c:	01800244 	movi	r6,9
   27010:	03400a84 	movi	r13,42
   27014:	03001b04 	movi	r12,108
   27018:	84000044 	addi	r16,r16,1
   2701c:	18bff804 	addi	r2,r3,-32
   27020:	28827336 	bltu	r5,r2,279f0 <___vfiprintf_internal_r+0xb54>
   27024:	100490ba 	slli	r2,r2,2
   27028:	028000b4 	movhi	r10,2
   2702c:	529c0f04 	addi	r10,r10,28732
   27030:	1285883a 	add	r2,r2,r10
   27034:	10800017 	ldw	r2,0(r2)
   27038:	1000683a 	jmp	r2
   2703c:	00027724 	muli	zero,zero,2524
   27040:	000279f0 	cmpltui	zero,zero,2535
   27044:	000279f0 	cmpltui	zero,zero,2535
   27048:	00027744 	movi	zero,2525
   2704c:	000279f0 	cmpltui	zero,zero,2535
   27050:	000279f0 	cmpltui	zero,zero,2535
   27054:	000279f0 	cmpltui	zero,zero,2535
   27058:	000279f0 	cmpltui	zero,zero,2535
   2705c:	000279f0 	cmpltui	zero,zero,2535
   27060:	000279f0 	cmpltui	zero,zero,2535
   27064:	0002792c 	andhi	zero,zero,2532
   27068:	00027948 	cmpgei	zero,zero,2533
   2706c:	000279f0 	cmpltui	zero,zero,2535
   27070:	00027230 	cmpltui	zero,zero,2504
   27074:	00027958 	cmpnei	zero,zero,2533
   27078:	000279f0 	cmpltui	zero,zero,2535
   2707c:	00027750 	cmplti	zero,zero,2525
   27080:	0002775c 	xori	zero,zero,2525
   27084:	0002775c 	xori	zero,zero,2525
   27088:	0002775c 	xori	zero,zero,2525
   2708c:	0002775c 	xori	zero,zero,2525
   27090:	0002775c 	xori	zero,zero,2525
   27094:	0002775c 	xori	zero,zero,2525
   27098:	0002775c 	xori	zero,zero,2525
   2709c:	0002775c 	xori	zero,zero,2525
   270a0:	0002775c 	xori	zero,zero,2525
   270a4:	000279f0 	cmpltui	zero,zero,2535
   270a8:	000279f0 	cmpltui	zero,zero,2535
   270ac:	000279f0 	cmpltui	zero,zero,2535
   270b0:	000279f0 	cmpltui	zero,zero,2535
   270b4:	000279f0 	cmpltui	zero,zero,2535
   270b8:	000279f0 	cmpltui	zero,zero,2535
   270bc:	000279f0 	cmpltui	zero,zero,2535
   270c0:	000279f0 	cmpltui	zero,zero,2535
   270c4:	000279f0 	cmpltui	zero,zero,2535
   270c8:	000279f0 	cmpltui	zero,zero,2535
   270cc:	00027788 	cmpgei	zero,zero,2526
   270d0:	000279f0 	cmpltui	zero,zero,2535
   270d4:	000279f0 	cmpltui	zero,zero,2535
   270d8:	000279f0 	cmpltui	zero,zero,2535
   270dc:	000279f0 	cmpltui	zero,zero,2535
   270e0:	000279f0 	cmpltui	zero,zero,2535
   270e4:	000279f0 	cmpltui	zero,zero,2535
   270e8:	000279f0 	cmpltui	zero,zero,2535
   270ec:	000279f0 	cmpltui	zero,zero,2535
   270f0:	000279f0 	cmpltui	zero,zero,2535
   270f4:	000279f0 	cmpltui	zero,zero,2535
   270f8:	000277c0 	call	277c <__alt_mem_onchip_memory2_0-0x1d884>
   270fc:	000279f0 	cmpltui	zero,zero,2535
   27100:	000279f0 	cmpltui	zero,zero,2535
   27104:	000279f0 	cmpltui	zero,zero,2535
   27108:	000279f0 	cmpltui	zero,zero,2535
   2710c:	000279f0 	cmpltui	zero,zero,2535
   27110:	00027818 	cmpnei	zero,zero,2528
   27114:	000279f0 	cmpltui	zero,zero,2535
   27118:	000279f0 	cmpltui	zero,zero,2535
   2711c:	00027888 	cmpgei	zero,zero,2530
   27120:	000279f0 	cmpltui	zero,zero,2535
   27124:	000279f0 	cmpltui	zero,zero,2535
   27128:	000279f0 	cmpltui	zero,zero,2535
   2712c:	000279f0 	cmpltui	zero,zero,2535
   27130:	000279f0 	cmpltui	zero,zero,2535
   27134:	000279f0 	cmpltui	zero,zero,2535
   27138:	000279f0 	cmpltui	zero,zero,2535
   2713c:	000279f0 	cmpltui	zero,zero,2535
   27140:	000279f0 	cmpltui	zero,zero,2535
   27144:	000279f0 	cmpltui	zero,zero,2535
   27148:	00027634 	movhi	zero,2520
   2714c:	00027660 	cmpeqi	zero,zero,2521
   27150:	000279f0 	cmpltui	zero,zero,2535
   27154:	000279f0 	cmpltui	zero,zero,2535
   27158:	000279f0 	cmpltui	zero,zero,2535
   2715c:	00027998 	cmpnei	zero,zero,2534
   27160:	00027660 	cmpeqi	zero,zero,2521
   27164:	000279f0 	cmpltui	zero,zero,2535
   27168:	000279f0 	cmpltui	zero,zero,2535
   2716c:	000274f4 	movhi	zero,2515
   27170:	000279f0 	cmpltui	zero,zero,2535
   27174:	00027504 	movi	zero,2516
   27178:	00027540 	call	2754 <__alt_mem_onchip_memory2_0-0x1d8ac>
   2717c:	0002723c 	xorhi	zero,zero,2504
   27180:	000274e8 	cmpgeui	zero,zero,2515
   27184:	000279f0 	cmpltui	zero,zero,2535
   27188:	000278c4 	movi	zero,2531
   2718c:	000279f0 	cmpltui	zero,zero,2535
   27190:	0002791c 	xori	zero,zero,2532
   27194:	000279f0 	cmpltui	zero,zero,2535
   27198:	000279f0 	cmpltui	zero,zero,2535
   2719c:	000275e0 	cmpeqi	zero,zero,2519
   271a0:	42000204 	addi	r8,r8,8
   271a4:	da802317 	ldw	r10,140(sp)
   271a8:	5455883a 	add	r10,r10,r17
   271ac:	da802315 	stw	r10,140(sp)
   271b0:	003f8b06 	br	26fe0 <__alt_data_end+0xfffe6fe0>
   271b4:	d9002017 	ldw	r4,128(sp)
   271b8:	a00b883a 	mov	r5,r20
   271bc:	002263c0 	call	2263c <__swsetup_r>
   271c0:	1003b11e 	bne	r2,zero,28088 <___vfiprintf_internal_r+0x11ec>
   271c4:	a080030b 	ldhu	r2,12(r20)
   271c8:	00c00284 	movi	r3,10
   271cc:	1080068c 	andi	r2,r2,26
   271d0:	10ff541e 	bne	r2,r3,26f24 <__alt_data_end+0xfffe6f24>
   271d4:	a080038f 	ldh	r2,14(r20)
   271d8:	103f5216 	blt	r2,zero,26f24 <__alt_data_end+0xfffe6f24>
   271dc:	d9c02217 	ldw	r7,136(sp)
   271e0:	d9002017 	ldw	r4,128(sp)
   271e4:	e00d883a 	mov	r6,fp
   271e8:	a00b883a 	mov	r5,r20
   271ec:	00283140 	call	28314 <__sbprintf>
   271f0:	dfc03617 	ldw	ra,216(sp)
   271f4:	df003517 	ldw	fp,212(sp)
   271f8:	ddc03417 	ldw	r23,208(sp)
   271fc:	dd803317 	ldw	r22,204(sp)
   27200:	dd403217 	ldw	r21,200(sp)
   27204:	dd003117 	ldw	r20,196(sp)
   27208:	dcc03017 	ldw	r19,192(sp)
   2720c:	dc802f17 	ldw	r18,188(sp)
   27210:	dc402e17 	ldw	r17,184(sp)
   27214:	dc002d17 	ldw	r16,180(sp)
   27218:	dec03704 	addi	sp,sp,220
   2721c:	f800283a 	ret
   27220:	00246100 	call	24610 <__sinit>
   27224:	003f2f06 	br	26ee4 <__alt_data_end+0xfffe6ee4>
   27228:	0463c83a 	sub	r17,zero,r17
   2722c:	d8802215 	stw	r2,136(sp)
   27230:	a5000114 	ori	r20,r20,4
   27234:	80c00007 	ldb	r3,0(r16)
   27238:	003f7706 	br	27018 <__alt_data_end+0xfffe7018>
   2723c:	00800c04 	movi	r2,48
   27240:	da802217 	ldw	r10,136(sp)
   27244:	d8801d05 	stb	r2,116(sp)
   27248:	00801e04 	movi	r2,120
   2724c:	d8801d45 	stb	r2,117(sp)
   27250:	d8001d85 	stb	zero,118(sp)
   27254:	50c00104 	addi	r3,r10,4
   27258:	54800017 	ldw	r18,0(r10)
   2725c:	0027883a 	mov	r19,zero
   27260:	a0800094 	ori	r2,r20,2
   27264:	48030b16 	blt	r9,zero,27e94 <___vfiprintf_internal_r+0xff8>
   27268:	00bfdfc4 	movi	r2,-129
   2726c:	a096703a 	and	r11,r20,r2
   27270:	d8c02215 	stw	r3,136(sp)
   27274:	5d000094 	ori	r20,r11,2
   27278:	90032b1e 	bne	r18,zero,27f28 <___vfiprintf_internal_r+0x108c>
   2727c:	008000f4 	movhi	r2,3
   27280:	10bc8604 	addi	r2,r2,-3560
   27284:	d8802615 	stw	r2,152(sp)
   27288:	0039883a 	mov	fp,zero
   2728c:	48017b1e 	bne	r9,zero,2787c <___vfiprintf_internal_r+0x9e0>
   27290:	0013883a 	mov	r9,zero
   27294:	0027883a 	mov	r19,zero
   27298:	dd401a04 	addi	r21,sp,104
   2729c:	4825883a 	mov	r18,r9
   272a0:	4cc0010e 	bge	r9,r19,272a8 <___vfiprintf_internal_r+0x40c>
   272a4:	9825883a 	mov	r18,r19
   272a8:	e7003fcc 	andi	fp,fp,255
   272ac:	e700201c 	xori	fp,fp,128
   272b0:	e73fe004 	addi	fp,fp,-128
   272b4:	e0000126 	beq	fp,zero,272bc <___vfiprintf_internal_r+0x420>
   272b8:	94800044 	addi	r18,r18,1
   272bc:	a380008c 	andi	r14,r20,2
   272c0:	70000126 	beq	r14,zero,272c8 <___vfiprintf_internal_r+0x42c>
   272c4:	94800084 	addi	r18,r18,2
   272c8:	a700210c 	andi	fp,r20,132
   272cc:	e001df1e 	bne	fp,zero,27a4c <___vfiprintf_internal_r+0xbb0>
   272d0:	8c87c83a 	sub	r3,r17,r18
   272d4:	00c1dd0e 	bge	zero,r3,27a4c <___vfiprintf_internal_r+0xbb0>
   272d8:	01c00404 	movi	r7,16
   272dc:	d8801c17 	ldw	r2,112(sp)
   272e0:	38c3ad0e 	bge	r7,r3,28198 <___vfiprintf_internal_r+0x12fc>
   272e4:	028000f4 	movhi	r10,3
   272e8:	52bceb04 	addi	r10,r10,-3156
   272ec:	dc002915 	stw	r16,164(sp)
   272f0:	d9801b17 	ldw	r6,108(sp)
   272f4:	da802415 	stw	r10,144(sp)
   272f8:	03c001c4 	movi	r15,7
   272fc:	da402515 	stw	r9,148(sp)
   27300:	db802815 	stw	r14,160(sp)
   27304:	1821883a 	mov	r16,r3
   27308:	00000506 	br	27320 <___vfiprintf_internal_r+0x484>
   2730c:	31400084 	addi	r5,r6,2
   27310:	42000204 	addi	r8,r8,8
   27314:	200d883a 	mov	r6,r4
   27318:	843ffc04 	addi	r16,r16,-16
   2731c:	3c000d0e 	bge	r7,r16,27354 <___vfiprintf_internal_r+0x4b8>
   27320:	10800404 	addi	r2,r2,16
   27324:	31000044 	addi	r4,r6,1
   27328:	45800015 	stw	r22,0(r8)
   2732c:	41c00115 	stw	r7,4(r8)
   27330:	d8801c15 	stw	r2,112(sp)
   27334:	d9001b15 	stw	r4,108(sp)
   27338:	793ff40e 	bge	r15,r4,2730c <__alt_data_end+0xfffe730c>
   2733c:	1001b51e 	bne	r2,zero,27a14 <___vfiprintf_internal_r+0xb78>
   27340:	843ffc04 	addi	r16,r16,-16
   27344:	000d883a 	mov	r6,zero
   27348:	01400044 	movi	r5,1
   2734c:	d811883a 	mov	r8,sp
   27350:	3c3ff316 	blt	r7,r16,27320 <__alt_data_end+0xfffe7320>
   27354:	8007883a 	mov	r3,r16
   27358:	da402517 	ldw	r9,148(sp)
   2735c:	db802817 	ldw	r14,160(sp)
   27360:	dc002917 	ldw	r16,164(sp)
   27364:	da802417 	ldw	r10,144(sp)
   27368:	1885883a 	add	r2,r3,r2
   2736c:	40c00115 	stw	r3,4(r8)
   27370:	42800015 	stw	r10,0(r8)
   27374:	d8801c15 	stw	r2,112(sp)
   27378:	d9401b15 	stw	r5,108(sp)
   2737c:	00c001c4 	movi	r3,7
   27380:	19426016 	blt	r3,r5,27d04 <___vfiprintf_internal_r+0xe68>
   27384:	d8c01d87 	ldb	r3,118(sp)
   27388:	42000204 	addi	r8,r8,8
   2738c:	29000044 	addi	r4,r5,1
   27390:	1801b31e 	bne	r3,zero,27a60 <___vfiprintf_internal_r+0xbc4>
   27394:	7001c026 	beq	r14,zero,27a98 <___vfiprintf_internal_r+0xbfc>
   27398:	d8c01d04 	addi	r3,sp,116
   2739c:	10800084 	addi	r2,r2,2
   273a0:	40c00015 	stw	r3,0(r8)
   273a4:	00c00084 	movi	r3,2
   273a8:	40c00115 	stw	r3,4(r8)
   273ac:	d8801c15 	stw	r2,112(sp)
   273b0:	d9001b15 	stw	r4,108(sp)
   273b4:	00c001c4 	movi	r3,7
   273b8:	1902650e 	bge	r3,r4,27d50 <___vfiprintf_internal_r+0xeb4>
   273bc:	10029a1e 	bne	r2,zero,27e28 <___vfiprintf_internal_r+0xf8c>
   273c0:	00c02004 	movi	r3,128
   273c4:	01000044 	movi	r4,1
   273c8:	000b883a 	mov	r5,zero
   273cc:	d811883a 	mov	r8,sp
   273d0:	e0c1b31e 	bne	fp,r3,27aa0 <___vfiprintf_internal_r+0xc04>
   273d4:	8cb9c83a 	sub	fp,r17,r18
   273d8:	0701b10e 	bge	zero,fp,27aa0 <___vfiprintf_internal_r+0xc04>
   273dc:	01c00404 	movi	r7,16
   273e0:	3f03890e 	bge	r7,fp,28208 <___vfiprintf_internal_r+0x136c>
   273e4:	00c000f4 	movhi	r3,3
   273e8:	18fce704 	addi	r3,r3,-3172
   273ec:	d8c02415 	stw	r3,144(sp)
   273f0:	8007883a 	mov	r3,r16
   273f4:	034001c4 	movi	r13,7
   273f8:	e021883a 	mov	r16,fp
   273fc:	da402515 	stw	r9,148(sp)
   27400:	1839883a 	mov	fp,r3
   27404:	00000506 	br	2741c <___vfiprintf_internal_r+0x580>
   27408:	29800084 	addi	r6,r5,2
   2740c:	42000204 	addi	r8,r8,8
   27410:	180b883a 	mov	r5,r3
   27414:	843ffc04 	addi	r16,r16,-16
   27418:	3c000d0e 	bge	r7,r16,27450 <___vfiprintf_internal_r+0x5b4>
   2741c:	10800404 	addi	r2,r2,16
   27420:	28c00044 	addi	r3,r5,1
   27424:	45c00015 	stw	r23,0(r8)
   27428:	41c00115 	stw	r7,4(r8)
   2742c:	d8801c15 	stw	r2,112(sp)
   27430:	d8c01b15 	stw	r3,108(sp)
   27434:	68fff40e 	bge	r13,r3,27408 <__alt_data_end+0xfffe7408>
   27438:	1002241e 	bne	r2,zero,27ccc <___vfiprintf_internal_r+0xe30>
   2743c:	843ffc04 	addi	r16,r16,-16
   27440:	01800044 	movi	r6,1
   27444:	000b883a 	mov	r5,zero
   27448:	d811883a 	mov	r8,sp
   2744c:	3c3ff316 	blt	r7,r16,2741c <__alt_data_end+0xfffe741c>
   27450:	da402517 	ldw	r9,148(sp)
   27454:	e007883a 	mov	r3,fp
   27458:	8039883a 	mov	fp,r16
   2745c:	1821883a 	mov	r16,r3
   27460:	d8c02417 	ldw	r3,144(sp)
   27464:	1705883a 	add	r2,r2,fp
   27468:	47000115 	stw	fp,4(r8)
   2746c:	40c00015 	stw	r3,0(r8)
   27470:	d8801c15 	stw	r2,112(sp)
   27474:	d9801b15 	stw	r6,108(sp)
   27478:	00c001c4 	movi	r3,7
   2747c:	19827616 	blt	r3,r6,27e58 <___vfiprintf_internal_r+0xfbc>
   27480:	4cf9c83a 	sub	fp,r9,r19
   27484:	42000204 	addi	r8,r8,8
   27488:	31000044 	addi	r4,r6,1
   2748c:	300b883a 	mov	r5,r6
   27490:	07018516 	blt	zero,fp,27aa8 <___vfiprintf_internal_r+0xc0c>
   27494:	9885883a 	add	r2,r19,r2
   27498:	45400015 	stw	r21,0(r8)
   2749c:	44c00115 	stw	r19,4(r8)
   274a0:	d8801c15 	stw	r2,112(sp)
   274a4:	d9001b15 	stw	r4,108(sp)
   274a8:	00c001c4 	movi	r3,7
   274ac:	1901dd0e 	bge	r3,r4,27c24 <___vfiprintf_internal_r+0xd88>
   274b0:	1002401e 	bne	r2,zero,27db4 <___vfiprintf_internal_r+0xf18>
   274b4:	d8001b15 	stw	zero,108(sp)
   274b8:	a2c0010c 	andi	r11,r20,4
   274bc:	58000226 	beq	r11,zero,274c8 <___vfiprintf_internal_r+0x62c>
   274c0:	8ca7c83a 	sub	r19,r17,r18
   274c4:	04c2f216 	blt	zero,r19,28090 <___vfiprintf_internal_r+0x11f4>
   274c8:	8c80010e 	bge	r17,r18,274d0 <___vfiprintf_internal_r+0x634>
   274cc:	9023883a 	mov	r17,r18
   274d0:	da802317 	ldw	r10,140(sp)
   274d4:	5455883a 	add	r10,r10,r17
   274d8:	da802315 	stw	r10,140(sp)
   274dc:	d8001b15 	stw	zero,108(sp)
   274e0:	d811883a 	mov	r8,sp
   274e4:	003ea206 	br	26f70 <__alt_data_end+0xfffe6f70>
   274e8:	a5000814 	ori	r20,r20,32
   274ec:	80c00007 	ldb	r3,0(r16)
   274f0:	003ec906 	br	27018 <__alt_data_end+0xfffe7018>
   274f4:	80c00007 	ldb	r3,0(r16)
   274f8:	1b030926 	beq	r3,r12,28120 <___vfiprintf_internal_r+0x1284>
   274fc:	a5000414 	ori	r20,r20,16
   27500:	003ec506 	br	27018 <__alt_data_end+0xfffe7018>
   27504:	21003fcc 	andi	r4,r4,255
   27508:	20035e1e 	bne	r4,zero,28284 <___vfiprintf_internal_r+0x13e8>
   2750c:	a080080c 	andi	r2,r20,32
   27510:	1002a526 	beq	r2,zero,27fa8 <___vfiprintf_internal_r+0x110c>
   27514:	da802217 	ldw	r10,136(sp)
   27518:	50800017 	ldw	r2,0(r10)
   2751c:	da802317 	ldw	r10,140(sp)
   27520:	5007d7fa 	srai	r3,r10,31
   27524:	da802217 	ldw	r10,136(sp)
   27528:	10c00115 	stw	r3,4(r2)
   2752c:	52800104 	addi	r10,r10,4
   27530:	da802215 	stw	r10,136(sp)
   27534:	da802317 	ldw	r10,140(sp)
   27538:	12800015 	stw	r10,0(r2)
   2753c:	003e8c06 	br	26f70 <__alt_data_end+0xfffe6f70>
   27540:	21003fcc 	andi	r4,r4,255
   27544:	2003511e 	bne	r4,zero,2828c <___vfiprintf_internal_r+0x13f0>
   27548:	a080080c 	andi	r2,r20,32
   2754c:	1000a126 	beq	r2,zero,277d4 <___vfiprintf_internal_r+0x938>
   27550:	da802217 	ldw	r10,136(sp)
   27554:	d8001d85 	stb	zero,118(sp)
   27558:	50800204 	addi	r2,r10,8
   2755c:	54800017 	ldw	r18,0(r10)
   27560:	54c00117 	ldw	r19,4(r10)
   27564:	4802b416 	blt	r9,zero,28038 <___vfiprintf_internal_r+0x119c>
   27568:	013fdfc4 	movi	r4,-129
   2756c:	94c6b03a 	or	r3,r18,r19
   27570:	d8802215 	stw	r2,136(sp)
   27574:	a128703a 	and	r20,r20,r4
   27578:	1800a226 	beq	r3,zero,27804 <___vfiprintf_internal_r+0x968>
   2757c:	0039883a 	mov	fp,zero
   27580:	dd401a04 	addi	r21,sp,104
   27584:	9006d0fa 	srli	r3,r18,3
   27588:	9808977a 	slli	r4,r19,29
   2758c:	9826d0fa 	srli	r19,r19,3
   27590:	948001cc 	andi	r18,r18,7
   27594:	90800c04 	addi	r2,r18,48
   27598:	ad7fffc4 	addi	r21,r21,-1
   2759c:	20e4b03a 	or	r18,r4,r3
   275a0:	a8800005 	stb	r2,0(r21)
   275a4:	94c6b03a 	or	r3,r18,r19
   275a8:	183ff61e 	bne	r3,zero,27584 <__alt_data_end+0xfffe7584>
   275ac:	a0c0004c 	andi	r3,r20,1
   275b0:	18005926 	beq	r3,zero,27718 <___vfiprintf_internal_r+0x87c>
   275b4:	10803fcc 	andi	r2,r2,255
   275b8:	1080201c 	xori	r2,r2,128
   275bc:	10bfe004 	addi	r2,r2,-128
   275c0:	00c00c04 	movi	r3,48
   275c4:	10c05426 	beq	r2,r3,27718 <___vfiprintf_internal_r+0x87c>
   275c8:	da801e17 	ldw	r10,120(sp)
   275cc:	a8bfffc4 	addi	r2,r21,-1
   275d0:	a8ffffc5 	stb	r3,-1(r21)
   275d4:	50a7c83a 	sub	r19,r10,r2
   275d8:	102b883a 	mov	r21,r2
   275dc:	003f2f06 	br	2729c <__alt_data_end+0xfffe729c>
   275e0:	21003fcc 	andi	r4,r4,255
   275e4:	2003421e 	bne	r4,zero,282f0 <___vfiprintf_internal_r+0x1454>
   275e8:	008000f4 	movhi	r2,3
   275ec:	10bc8604 	addi	r2,r2,-3560
   275f0:	d8802615 	stw	r2,152(sp)
   275f4:	a080080c 	andi	r2,r20,32
   275f8:	1000aa26 	beq	r2,zero,278a4 <___vfiprintf_internal_r+0xa08>
   275fc:	da802217 	ldw	r10,136(sp)
   27600:	54800017 	ldw	r18,0(r10)
   27604:	54c00117 	ldw	r19,4(r10)
   27608:	52800204 	addi	r10,r10,8
   2760c:	da802215 	stw	r10,136(sp)
   27610:	a080004c 	andi	r2,r20,1
   27614:	1001d226 	beq	r2,zero,27d60 <___vfiprintf_internal_r+0xec4>
   27618:	94c4b03a 	or	r2,r18,r19
   2761c:	1002351e 	bne	r2,zero,27ef4 <___vfiprintf_internal_r+0x1058>
   27620:	d8001d85 	stb	zero,118(sp)
   27624:	48022216 	blt	r9,zero,27eb0 <___vfiprintf_internal_r+0x1014>
   27628:	00bfdfc4 	movi	r2,-129
   2762c:	a0a8703a 	and	r20,r20,r2
   27630:	003f1506 	br	27288 <__alt_data_end+0xfffe7288>
   27634:	da802217 	ldw	r10,136(sp)
   27638:	04800044 	movi	r18,1
   2763c:	d8001d85 	stb	zero,118(sp)
   27640:	50800017 	ldw	r2,0(r10)
   27644:	52800104 	addi	r10,r10,4
   27648:	da802215 	stw	r10,136(sp)
   2764c:	d8801005 	stb	r2,64(sp)
   27650:	9027883a 	mov	r19,r18
   27654:	dd401004 	addi	r21,sp,64
   27658:	0013883a 	mov	r9,zero
   2765c:	003f1706 	br	272bc <__alt_data_end+0xfffe72bc>
   27660:	21003fcc 	andi	r4,r4,255
   27664:	2003201e 	bne	r4,zero,282e8 <___vfiprintf_internal_r+0x144c>
   27668:	a080080c 	andi	r2,r20,32
   2766c:	10004b26 	beq	r2,zero,2779c <___vfiprintf_internal_r+0x900>
   27670:	da802217 	ldw	r10,136(sp)
   27674:	50800117 	ldw	r2,4(r10)
   27678:	54800017 	ldw	r18,0(r10)
   2767c:	52800204 	addi	r10,r10,8
   27680:	da802215 	stw	r10,136(sp)
   27684:	1027883a 	mov	r19,r2
   27688:	10022c16 	blt	r2,zero,27f3c <___vfiprintf_internal_r+0x10a0>
   2768c:	df001d83 	ldbu	fp,118(sp)
   27690:	48007216 	blt	r9,zero,2785c <___vfiprintf_internal_r+0x9c0>
   27694:	00ffdfc4 	movi	r3,-129
   27698:	94c4b03a 	or	r2,r18,r19
   2769c:	a0e8703a 	and	r20,r20,r3
   276a0:	1000cc26 	beq	r2,zero,279d4 <___vfiprintf_internal_r+0xb38>
   276a4:	98021026 	beq	r19,zero,27ee8 <___vfiprintf_internal_r+0x104c>
   276a8:	dc402415 	stw	r17,144(sp)
   276ac:	dc002515 	stw	r16,148(sp)
   276b0:	9823883a 	mov	r17,r19
   276b4:	9021883a 	mov	r16,r18
   276b8:	dd401a04 	addi	r21,sp,104
   276bc:	4825883a 	mov	r18,r9
   276c0:	4027883a 	mov	r19,r8
   276c4:	8009883a 	mov	r4,r16
   276c8:	880b883a 	mov	r5,r17
   276cc:	01800284 	movi	r6,10
   276d0:	000f883a 	mov	r7,zero
   276d4:	0029df80 	call	29df8 <__umoddi3>
   276d8:	10800c04 	addi	r2,r2,48
   276dc:	ad7fffc4 	addi	r21,r21,-1
   276e0:	8009883a 	mov	r4,r16
   276e4:	880b883a 	mov	r5,r17
   276e8:	a8800005 	stb	r2,0(r21)
   276ec:	01800284 	movi	r6,10
   276f0:	000f883a 	mov	r7,zero
   276f4:	00298800 	call	29880 <__udivdi3>
   276f8:	1021883a 	mov	r16,r2
   276fc:	10c4b03a 	or	r2,r2,r3
   27700:	1823883a 	mov	r17,r3
   27704:	103fef1e 	bne	r2,zero,276c4 <__alt_data_end+0xfffe76c4>
   27708:	dc402417 	ldw	r17,144(sp)
   2770c:	dc002517 	ldw	r16,148(sp)
   27710:	9013883a 	mov	r9,r18
   27714:	9811883a 	mov	r8,r19
   27718:	da801e17 	ldw	r10,120(sp)
   2771c:	5567c83a 	sub	r19,r10,r21
   27720:	003ede06 	br	2729c <__alt_data_end+0xfffe729c>
   27724:	38803fcc 	andi	r2,r7,255
   27728:	1080201c 	xori	r2,r2,128
   2772c:	10bfe004 	addi	r2,r2,-128
   27730:	1002371e 	bne	r2,zero,28010 <___vfiprintf_internal_r+0x1174>
   27734:	01000044 	movi	r4,1
   27738:	01c00804 	movi	r7,32
   2773c:	80c00007 	ldb	r3,0(r16)
   27740:	003e3506 	br	27018 <__alt_data_end+0xfffe7018>
   27744:	a5000054 	ori	r20,r20,1
   27748:	80c00007 	ldb	r3,0(r16)
   2774c:	003e3206 	br	27018 <__alt_data_end+0xfffe7018>
   27750:	a5002014 	ori	r20,r20,128
   27754:	80c00007 	ldb	r3,0(r16)
   27758:	003e2f06 	br	27018 <__alt_data_end+0xfffe7018>
   2775c:	8015883a 	mov	r10,r16
   27760:	0023883a 	mov	r17,zero
   27764:	18bff404 	addi	r2,r3,-48
   27768:	50c00007 	ldb	r3,0(r10)
   2776c:	8c4002a4 	muli	r17,r17,10
   27770:	84000044 	addi	r16,r16,1
   27774:	8015883a 	mov	r10,r16
   27778:	1463883a 	add	r17,r2,r17
   2777c:	18bff404 	addi	r2,r3,-48
   27780:	30bff92e 	bgeu	r6,r2,27768 <__alt_data_end+0xfffe7768>
   27784:	003e2506 	br	2701c <__alt_data_end+0xfffe701c>
   27788:	21003fcc 	andi	r4,r4,255
   2778c:	2002d41e 	bne	r4,zero,282e0 <___vfiprintf_internal_r+0x1444>
   27790:	a5000414 	ori	r20,r20,16
   27794:	a080080c 	andi	r2,r20,32
   27798:	103fb51e 	bne	r2,zero,27670 <__alt_data_end+0xfffe7670>
   2779c:	a080040c 	andi	r2,r20,16
   277a0:	1001f826 	beq	r2,zero,27f84 <___vfiprintf_internal_r+0x10e8>
   277a4:	da802217 	ldw	r10,136(sp)
   277a8:	54800017 	ldw	r18,0(r10)
   277ac:	52800104 	addi	r10,r10,4
   277b0:	da802215 	stw	r10,136(sp)
   277b4:	9027d7fa 	srai	r19,r18,31
   277b8:	9805883a 	mov	r2,r19
   277bc:	003fb206 	br	27688 <__alt_data_end+0xfffe7688>
   277c0:	21003fcc 	andi	r4,r4,255
   277c4:	2002c41e 	bne	r4,zero,282d8 <___vfiprintf_internal_r+0x143c>
   277c8:	a5000414 	ori	r20,r20,16
   277cc:	a080080c 	andi	r2,r20,32
   277d0:	103f5f1e 	bne	r2,zero,27550 <__alt_data_end+0xfffe7550>
   277d4:	a080040c 	andi	r2,r20,16
   277d8:	10020f26 	beq	r2,zero,28018 <___vfiprintf_internal_r+0x117c>
   277dc:	da802217 	ldw	r10,136(sp)
   277e0:	d8001d85 	stb	zero,118(sp)
   277e4:	0027883a 	mov	r19,zero
   277e8:	50800104 	addi	r2,r10,4
   277ec:	54800017 	ldw	r18,0(r10)
   277f0:	48021116 	blt	r9,zero,28038 <___vfiprintf_internal_r+0x119c>
   277f4:	00ffdfc4 	movi	r3,-129
   277f8:	d8802215 	stw	r2,136(sp)
   277fc:	a0e8703a 	and	r20,r20,r3
   27800:	903f5e1e 	bne	r18,zero,2757c <__alt_data_end+0xfffe757c>
   27804:	0039883a 	mov	fp,zero
   27808:	4802a626 	beq	r9,zero,282a4 <___vfiprintf_internal_r+0x1408>
   2780c:	0025883a 	mov	r18,zero
   27810:	0027883a 	mov	r19,zero
   27814:	003f5a06 	br	27580 <__alt_data_end+0xfffe7580>
   27818:	21003fcc 	andi	r4,r4,255
   2781c:	20029f1e 	bne	r4,zero,2829c <___vfiprintf_internal_r+0x1400>
   27820:	a5000414 	ori	r20,r20,16
   27824:	a080080c 	andi	r2,r20,32
   27828:	10005e1e 	bne	r2,zero,279a4 <___vfiprintf_internal_r+0xb08>
   2782c:	a080040c 	andi	r2,r20,16
   27830:	1001a21e 	bne	r2,zero,27ebc <___vfiprintf_internal_r+0x1020>
   27834:	a080100c 	andi	r2,r20,64
   27838:	d8001d85 	stb	zero,118(sp)
   2783c:	da802217 	ldw	r10,136(sp)
   27840:	1002231e 	bne	r2,zero,280d0 <___vfiprintf_internal_r+0x1234>
   27844:	50800104 	addi	r2,r10,4
   27848:	54800017 	ldw	r18,0(r10)
   2784c:	0027883a 	mov	r19,zero
   27850:	4801a00e 	bge	r9,zero,27ed4 <___vfiprintf_internal_r+0x1038>
   27854:	d8802215 	stw	r2,136(sp)
   27858:	0039883a 	mov	fp,zero
   2785c:	94c4b03a 	or	r2,r18,r19
   27860:	103f901e 	bne	r2,zero,276a4 <__alt_data_end+0xfffe76a4>
   27864:	00800044 	movi	r2,1
   27868:	10803fcc 	andi	r2,r2,255
   2786c:	00c00044 	movi	r3,1
   27870:	10c05926 	beq	r2,r3,279d8 <___vfiprintf_internal_r+0xb3c>
   27874:	00c00084 	movi	r3,2
   27878:	10ffe41e 	bne	r2,r3,2780c <__alt_data_end+0xfffe780c>
   2787c:	0025883a 	mov	r18,zero
   27880:	0027883a 	mov	r19,zero
   27884:	00013d06 	br	27d7c <___vfiprintf_internal_r+0xee0>
   27888:	21003fcc 	andi	r4,r4,255
   2788c:	2002811e 	bne	r4,zero,28294 <___vfiprintf_internal_r+0x13f8>
   27890:	008000f4 	movhi	r2,3
   27894:	10bc8104 	addi	r2,r2,-3580
   27898:	d8802615 	stw	r2,152(sp)
   2789c:	a080080c 	andi	r2,r20,32
   278a0:	103f561e 	bne	r2,zero,275fc <__alt_data_end+0xfffe75fc>
   278a4:	a080040c 	andi	r2,r20,16
   278a8:	1001d126 	beq	r2,zero,27ff0 <___vfiprintf_internal_r+0x1154>
   278ac:	da802217 	ldw	r10,136(sp)
   278b0:	0027883a 	mov	r19,zero
   278b4:	54800017 	ldw	r18,0(r10)
   278b8:	52800104 	addi	r10,r10,4
   278bc:	da802215 	stw	r10,136(sp)
   278c0:	003f5306 	br	27610 <__alt_data_end+0xfffe7610>
   278c4:	da802217 	ldw	r10,136(sp)
   278c8:	d8001d85 	stb	zero,118(sp)
   278cc:	55400017 	ldw	r21,0(r10)
   278d0:	50c00104 	addi	r3,r10,4
   278d4:	a8024226 	beq	r21,zero,281e0 <___vfiprintf_internal_r+0x1344>
   278d8:	48021816 	blt	r9,zero,2813c <___vfiprintf_internal_r+0x12a0>
   278dc:	480d883a 	mov	r6,r9
   278e0:	000b883a 	mov	r5,zero
   278e4:	a809883a 	mov	r4,r21
   278e8:	d8c02a15 	stw	r3,168(sp)
   278ec:	da002b15 	stw	r8,172(sp)
   278f0:	da402c15 	stw	r9,176(sp)
   278f4:	00256c00 	call	256c0 <memchr>
   278f8:	d8c02a17 	ldw	r3,168(sp)
   278fc:	da002b17 	ldw	r8,172(sp)
   27900:	da402c17 	ldw	r9,176(sp)
   27904:	10024826 	beq	r2,zero,28228 <___vfiprintf_internal_r+0x138c>
   27908:	1567c83a 	sub	r19,r2,r21
   2790c:	df001d83 	ldbu	fp,118(sp)
   27910:	d8c02215 	stw	r3,136(sp)
   27914:	0013883a 	mov	r9,zero
   27918:	003e6006 	br	2729c <__alt_data_end+0xfffe729c>
   2791c:	21003fcc 	andi	r4,r4,255
   27920:	203fc026 	beq	r4,zero,27824 <__alt_data_end+0xfffe7824>
   27924:	d9c01d85 	stb	r7,118(sp)
   27928:	003fbe06 	br	27824 <__alt_data_end+0xfffe7824>
   2792c:	da802217 	ldw	r10,136(sp)
   27930:	54400017 	ldw	r17,0(r10)
   27934:	50800104 	addi	r2,r10,4
   27938:	883e3b16 	blt	r17,zero,27228 <__alt_data_end+0xfffe7228>
   2793c:	d8802215 	stw	r2,136(sp)
   27940:	80c00007 	ldb	r3,0(r16)
   27944:	003db406 	br	27018 <__alt_data_end+0xfffe7018>
   27948:	01000044 	movi	r4,1
   2794c:	01c00ac4 	movi	r7,43
   27950:	80c00007 	ldb	r3,0(r16)
   27954:	003db006 	br	27018 <__alt_data_end+0xfffe7018>
   27958:	80c00007 	ldb	r3,0(r16)
   2795c:	82800044 	addi	r10,r16,1
   27960:	1b423c26 	beq	r3,r13,28254 <___vfiprintf_internal_r+0x13b8>
   27964:	18bff404 	addi	r2,r3,-48
   27968:	0013883a 	mov	r9,zero
   2796c:	30822b36 	bltu	r6,r2,2821c <___vfiprintf_internal_r+0x1380>
   27970:	50c00007 	ldb	r3,0(r10)
   27974:	4a4002a4 	muli	r9,r9,10
   27978:	54000044 	addi	r16,r10,1
   2797c:	8015883a 	mov	r10,r16
   27980:	4893883a 	add	r9,r9,r2
   27984:	18bff404 	addi	r2,r3,-48
   27988:	30bff92e 	bgeu	r6,r2,27970 <__alt_data_end+0xfffe7970>
   2798c:	483da30e 	bge	r9,zero,2701c <__alt_data_end+0xfffe701c>
   27990:	027fffc4 	movi	r9,-1
   27994:	003da106 	br	2701c <__alt_data_end+0xfffe701c>
   27998:	a5001014 	ori	r20,r20,64
   2799c:	80c00007 	ldb	r3,0(r16)
   279a0:	003d9d06 	br	27018 <__alt_data_end+0xfffe7018>
   279a4:	da802217 	ldw	r10,136(sp)
   279a8:	d8001d85 	stb	zero,118(sp)
   279ac:	50c00204 	addi	r3,r10,8
   279b0:	54800017 	ldw	r18,0(r10)
   279b4:	54c00117 	ldw	r19,4(r10)
   279b8:	4801ca16 	blt	r9,zero,280e4 <___vfiprintf_internal_r+0x1248>
   279bc:	013fdfc4 	movi	r4,-129
   279c0:	94c4b03a 	or	r2,r18,r19
   279c4:	d8c02215 	stw	r3,136(sp)
   279c8:	a128703a 	and	r20,r20,r4
   279cc:	0039883a 	mov	fp,zero
   279d0:	103f341e 	bne	r2,zero,276a4 <__alt_data_end+0xfffe76a4>
   279d4:	483e2e26 	beq	r9,zero,27290 <__alt_data_end+0xfffe7290>
   279d8:	0025883a 	mov	r18,zero
   279dc:	94800c04 	addi	r18,r18,48
   279e0:	dc8019c5 	stb	r18,103(sp)
   279e4:	dcc02717 	ldw	r19,156(sp)
   279e8:	dd4019c4 	addi	r21,sp,103
   279ec:	003e2b06 	br	2729c <__alt_data_end+0xfffe729c>
   279f0:	21003fcc 	andi	r4,r4,255
   279f4:	2002361e 	bne	r4,zero,282d0 <___vfiprintf_internal_r+0x1434>
   279f8:	1801c126 	beq	r3,zero,28100 <___vfiprintf_internal_r+0x1264>
   279fc:	04800044 	movi	r18,1
   27a00:	d8c01005 	stb	r3,64(sp)
   27a04:	d8001d85 	stb	zero,118(sp)
   27a08:	9027883a 	mov	r19,r18
   27a0c:	dd401004 	addi	r21,sp,64
   27a10:	003f1106 	br	27658 <__alt_data_end+0xfffe7658>
   27a14:	d9402117 	ldw	r5,132(sp)
   27a18:	d9002017 	ldw	r4,128(sp)
   27a1c:	d9801a04 	addi	r6,sp,104
   27a20:	d9c02b15 	stw	r7,172(sp)
   27a24:	dbc02a15 	stw	r15,168(sp)
   27a28:	0026d880 	call	26d88 <__sprint_r.part.0>
   27a2c:	d9c02b17 	ldw	r7,172(sp)
   27a30:	dbc02a17 	ldw	r15,168(sp)
   27a34:	10006d1e 	bne	r2,zero,27bec <___vfiprintf_internal_r+0xd50>
   27a38:	d9801b17 	ldw	r6,108(sp)
   27a3c:	d8801c17 	ldw	r2,112(sp)
   27a40:	d811883a 	mov	r8,sp
   27a44:	31400044 	addi	r5,r6,1
   27a48:	003e3306 	br	27318 <__alt_data_end+0xfffe7318>
   27a4c:	d9401b17 	ldw	r5,108(sp)
   27a50:	d8801c17 	ldw	r2,112(sp)
   27a54:	29000044 	addi	r4,r5,1
   27a58:	d8c01d87 	ldb	r3,118(sp)
   27a5c:	183e4d26 	beq	r3,zero,27394 <__alt_data_end+0xfffe7394>
   27a60:	00c00044 	movi	r3,1
   27a64:	d9401d84 	addi	r5,sp,118
   27a68:	10c5883a 	add	r2,r2,r3
   27a6c:	41400015 	stw	r5,0(r8)
   27a70:	40c00115 	stw	r3,4(r8)
   27a74:	d8801c15 	stw	r2,112(sp)
   27a78:	d9001b15 	stw	r4,108(sp)
   27a7c:	014001c4 	movi	r5,7
   27a80:	2900a90e 	bge	r5,r4,27d28 <___vfiprintf_internal_r+0xe8c>
   27a84:	1000da1e 	bne	r2,zero,27df0 <___vfiprintf_internal_r+0xf54>
   27a88:	7000ab1e 	bne	r14,zero,27d38 <___vfiprintf_internal_r+0xe9c>
   27a8c:	000b883a 	mov	r5,zero
   27a90:	1809883a 	mov	r4,r3
   27a94:	d811883a 	mov	r8,sp
   27a98:	00c02004 	movi	r3,128
   27a9c:	e0fe4d26 	beq	fp,r3,273d4 <__alt_data_end+0xfffe73d4>
   27aa0:	4cf9c83a 	sub	fp,r9,r19
   27aa4:	073e7b0e 	bge	zero,fp,27494 <__alt_data_end+0xfffe7494>
   27aa8:	01c00404 	movi	r7,16
   27aac:	3f01900e 	bge	r7,fp,280f0 <___vfiprintf_internal_r+0x1254>
   27ab0:	00c000f4 	movhi	r3,3
   27ab4:	18fce704 	addi	r3,r3,-3172
   27ab8:	d8c02415 	stw	r3,144(sp)
   27abc:	034001c4 	movi	r13,7
   27ac0:	00000506 	br	27ad8 <___vfiprintf_internal_r+0xc3c>
   27ac4:	29000084 	addi	r4,r5,2
   27ac8:	42000204 	addi	r8,r8,8
   27acc:	180b883a 	mov	r5,r3
   27ad0:	e73ffc04 	addi	fp,fp,-16
   27ad4:	3f000d0e 	bge	r7,fp,27b0c <___vfiprintf_internal_r+0xc70>
   27ad8:	10800404 	addi	r2,r2,16
   27adc:	28c00044 	addi	r3,r5,1
   27ae0:	45c00015 	stw	r23,0(r8)
   27ae4:	41c00115 	stw	r7,4(r8)
   27ae8:	d8801c15 	stw	r2,112(sp)
   27aec:	d8c01b15 	stw	r3,108(sp)
   27af0:	68fff40e 	bge	r13,r3,27ac4 <__alt_data_end+0xfffe7ac4>
   27af4:	1000101e 	bne	r2,zero,27b38 <___vfiprintf_internal_r+0xc9c>
   27af8:	e73ffc04 	addi	fp,fp,-16
   27afc:	01000044 	movi	r4,1
   27b00:	000b883a 	mov	r5,zero
   27b04:	d811883a 	mov	r8,sp
   27b08:	3f3ff316 	blt	r7,fp,27ad8 <__alt_data_end+0xfffe7ad8>
   27b0c:	da802417 	ldw	r10,144(sp)
   27b10:	1705883a 	add	r2,r2,fp
   27b14:	47000115 	stw	fp,4(r8)
   27b18:	42800015 	stw	r10,0(r8)
   27b1c:	d8801c15 	stw	r2,112(sp)
   27b20:	d9001b15 	stw	r4,108(sp)
   27b24:	00c001c4 	movi	r3,7
   27b28:	19003616 	blt	r3,r4,27c04 <___vfiprintf_internal_r+0xd68>
   27b2c:	42000204 	addi	r8,r8,8
   27b30:	21000044 	addi	r4,r4,1
   27b34:	003e5706 	br	27494 <__alt_data_end+0xfffe7494>
   27b38:	d9402117 	ldw	r5,132(sp)
   27b3c:	d9002017 	ldw	r4,128(sp)
   27b40:	d9801a04 	addi	r6,sp,104
   27b44:	d9c02b15 	stw	r7,172(sp)
   27b48:	db402a15 	stw	r13,168(sp)
   27b4c:	0026d880 	call	26d88 <__sprint_r.part.0>
   27b50:	d9c02b17 	ldw	r7,172(sp)
   27b54:	db402a17 	ldw	r13,168(sp)
   27b58:	1000241e 	bne	r2,zero,27bec <___vfiprintf_internal_r+0xd50>
   27b5c:	d9401b17 	ldw	r5,108(sp)
   27b60:	d8801c17 	ldw	r2,112(sp)
   27b64:	d811883a 	mov	r8,sp
   27b68:	29000044 	addi	r4,r5,1
   27b6c:	003fd806 	br	27ad0 <__alt_data_end+0xfffe7ad0>
   27b70:	d9401b17 	ldw	r5,108(sp)
   27b74:	00c000f4 	movhi	r3,3
   27b78:	18fceb04 	addi	r3,r3,-3156
   27b7c:	d8c02415 	stw	r3,144(sp)
   27b80:	29400044 	addi	r5,r5,1
   27b84:	d8c02417 	ldw	r3,144(sp)
   27b88:	14c5883a 	add	r2,r2,r19
   27b8c:	44c00115 	stw	r19,4(r8)
   27b90:	40c00015 	stw	r3,0(r8)
   27b94:	d8801c15 	stw	r2,112(sp)
   27b98:	d9401b15 	stw	r5,108(sp)
   27b9c:	00c001c4 	movi	r3,7
   27ba0:	1940070e 	bge	r3,r5,27bc0 <___vfiprintf_internal_r+0xd24>
   27ba4:	103e4826 	beq	r2,zero,274c8 <__alt_data_end+0xfffe74c8>
   27ba8:	d9402117 	ldw	r5,132(sp)
   27bac:	d9002017 	ldw	r4,128(sp)
   27bb0:	d9801a04 	addi	r6,sp,104
   27bb4:	0026d880 	call	26d88 <__sprint_r.part.0>
   27bb8:	10000c1e 	bne	r2,zero,27bec <___vfiprintf_internal_r+0xd50>
   27bbc:	d8801c17 	ldw	r2,112(sp)
   27bc0:	8c80010e 	bge	r17,r18,27bc8 <___vfiprintf_internal_r+0xd2c>
   27bc4:	9023883a 	mov	r17,r18
   27bc8:	da802317 	ldw	r10,140(sp)
   27bcc:	5455883a 	add	r10,r10,r17
   27bd0:	da802315 	stw	r10,140(sp)
   27bd4:	103e4126 	beq	r2,zero,274dc <__alt_data_end+0xfffe74dc>
   27bd8:	d9402117 	ldw	r5,132(sp)
   27bdc:	d9002017 	ldw	r4,128(sp)
   27be0:	d9801a04 	addi	r6,sp,104
   27be4:	0026d880 	call	26d88 <__sprint_r.part.0>
   27be8:	103e3c26 	beq	r2,zero,274dc <__alt_data_end+0xfffe74dc>
   27bec:	dd002117 	ldw	r20,132(sp)
   27bf0:	a080030b 	ldhu	r2,12(r20)
   27bf4:	1080100c 	andi	r2,r2,64
   27bf8:	1001231e 	bne	r2,zero,28088 <___vfiprintf_internal_r+0x11ec>
   27bfc:	d8802317 	ldw	r2,140(sp)
   27c00:	003d7b06 	br	271f0 <__alt_data_end+0xfffe71f0>
   27c04:	1000991e 	bne	r2,zero,27e6c <___vfiprintf_internal_r+0xfd0>
   27c08:	00c00044 	movi	r3,1
   27c0c:	9805883a 	mov	r2,r19
   27c10:	dd400015 	stw	r21,0(sp)
   27c14:	dcc00115 	stw	r19,4(sp)
   27c18:	dcc01c15 	stw	r19,112(sp)
   27c1c:	d8c01b15 	stw	r3,108(sp)
   27c20:	d811883a 	mov	r8,sp
   27c24:	42000204 	addi	r8,r8,8
   27c28:	a2c0010c 	andi	r11,r20,4
   27c2c:	583fe426 	beq	r11,zero,27bc0 <__alt_data_end+0xfffe7bc0>
   27c30:	8ca7c83a 	sub	r19,r17,r18
   27c34:	04ffe20e 	bge	zero,r19,27bc0 <__alt_data_end+0xfffe7bc0>
   27c38:	01c00404 	movi	r7,16
   27c3c:	3cffcc0e 	bge	r7,r19,27b70 <__alt_data_end+0xfffe7b70>
   27c40:	028000f4 	movhi	r10,3
   27c44:	52bceb04 	addi	r10,r10,-3156
   27c48:	d9001b17 	ldw	r4,108(sp)
   27c4c:	da802415 	stw	r10,144(sp)
   27c50:	382b883a 	mov	r21,r7
   27c54:	050001c4 	movi	r20,7
   27c58:	df002017 	ldw	fp,128(sp)
   27c5c:	00000506 	br	27c74 <___vfiprintf_internal_r+0xdd8>
   27c60:	21400084 	addi	r5,r4,2
   27c64:	42000204 	addi	r8,r8,8
   27c68:	1809883a 	mov	r4,r3
   27c6c:	9cfffc04 	addi	r19,r19,-16
   27c70:	acffc40e 	bge	r21,r19,27b84 <__alt_data_end+0xfffe7b84>
   27c74:	10800404 	addi	r2,r2,16
   27c78:	20c00044 	addi	r3,r4,1
   27c7c:	45800015 	stw	r22,0(r8)
   27c80:	45400115 	stw	r21,4(r8)
   27c84:	d8801c15 	stw	r2,112(sp)
   27c88:	d8c01b15 	stw	r3,108(sp)
   27c8c:	a0fff40e 	bge	r20,r3,27c60 <__alt_data_end+0xfffe7c60>
   27c90:	1000041e 	bne	r2,zero,27ca4 <___vfiprintf_internal_r+0xe08>
   27c94:	01400044 	movi	r5,1
   27c98:	0009883a 	mov	r4,zero
   27c9c:	d811883a 	mov	r8,sp
   27ca0:	003ff206 	br	27c6c <__alt_data_end+0xfffe7c6c>
   27ca4:	d9402117 	ldw	r5,132(sp)
   27ca8:	d9801a04 	addi	r6,sp,104
   27cac:	e009883a 	mov	r4,fp
   27cb0:	0026d880 	call	26d88 <__sprint_r.part.0>
   27cb4:	103fcd1e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   27cb8:	d9001b17 	ldw	r4,108(sp)
   27cbc:	d8801c17 	ldw	r2,112(sp)
   27cc0:	d811883a 	mov	r8,sp
   27cc4:	21400044 	addi	r5,r4,1
   27cc8:	003fe806 	br	27c6c <__alt_data_end+0xfffe7c6c>
   27ccc:	d9402117 	ldw	r5,132(sp)
   27cd0:	d9002017 	ldw	r4,128(sp)
   27cd4:	d9801a04 	addi	r6,sp,104
   27cd8:	d9c02b15 	stw	r7,172(sp)
   27cdc:	db402a15 	stw	r13,168(sp)
   27ce0:	0026d880 	call	26d88 <__sprint_r.part.0>
   27ce4:	d9c02b17 	ldw	r7,172(sp)
   27ce8:	db402a17 	ldw	r13,168(sp)
   27cec:	103fbf1e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   27cf0:	d9401b17 	ldw	r5,108(sp)
   27cf4:	d8801c17 	ldw	r2,112(sp)
   27cf8:	d811883a 	mov	r8,sp
   27cfc:	29800044 	addi	r6,r5,1
   27d00:	003dc406 	br	27414 <__alt_data_end+0xfffe7414>
   27d04:	1000d21e 	bne	r2,zero,28050 <___vfiprintf_internal_r+0x11b4>
   27d08:	d8c01d87 	ldb	r3,118(sp)
   27d0c:	18009526 	beq	r3,zero,27f64 <___vfiprintf_internal_r+0x10c8>
   27d10:	00800044 	movi	r2,1
   27d14:	d8c01d84 	addi	r3,sp,118
   27d18:	1009883a 	mov	r4,r2
   27d1c:	d8c00015 	stw	r3,0(sp)
   27d20:	d8800115 	stw	r2,4(sp)
   27d24:	d811883a 	mov	r8,sp
   27d28:	200b883a 	mov	r5,r4
   27d2c:	42000204 	addi	r8,r8,8
   27d30:	21000044 	addi	r4,r4,1
   27d34:	003d9706 	br	27394 <__alt_data_end+0xfffe7394>
   27d38:	d9001d04 	addi	r4,sp,116
   27d3c:	00800084 	movi	r2,2
   27d40:	d9000015 	stw	r4,0(sp)
   27d44:	d8800115 	stw	r2,4(sp)
   27d48:	1809883a 	mov	r4,r3
   27d4c:	d811883a 	mov	r8,sp
   27d50:	200b883a 	mov	r5,r4
   27d54:	42000204 	addi	r8,r8,8
   27d58:	21000044 	addi	r4,r4,1
   27d5c:	003f4e06 	br	27a98 <__alt_data_end+0xfffe7a98>
   27d60:	d8001d85 	stb	zero,118(sp)
   27d64:	48005016 	blt	r9,zero,27ea8 <___vfiprintf_internal_r+0x100c>
   27d68:	00ffdfc4 	movi	r3,-129
   27d6c:	94c4b03a 	or	r2,r18,r19
   27d70:	a0e8703a 	and	r20,r20,r3
   27d74:	103d4426 	beq	r2,zero,27288 <__alt_data_end+0xfffe7288>
   27d78:	0039883a 	mov	fp,zero
   27d7c:	d9002617 	ldw	r4,152(sp)
   27d80:	dd401a04 	addi	r21,sp,104
   27d84:	908003cc 	andi	r2,r18,15
   27d88:	9806973a 	slli	r3,r19,28
   27d8c:	2085883a 	add	r2,r4,r2
   27d90:	9024d13a 	srli	r18,r18,4
   27d94:	10800003 	ldbu	r2,0(r2)
   27d98:	9826d13a 	srli	r19,r19,4
   27d9c:	ad7fffc4 	addi	r21,r21,-1
   27da0:	1ca4b03a 	or	r18,r3,r18
   27da4:	a8800005 	stb	r2,0(r21)
   27da8:	94c4b03a 	or	r2,r18,r19
   27dac:	103ff51e 	bne	r2,zero,27d84 <__alt_data_end+0xfffe7d84>
   27db0:	003e5906 	br	27718 <__alt_data_end+0xfffe7718>
   27db4:	d9402117 	ldw	r5,132(sp)
   27db8:	d9002017 	ldw	r4,128(sp)
   27dbc:	d9801a04 	addi	r6,sp,104
   27dc0:	0026d880 	call	26d88 <__sprint_r.part.0>
   27dc4:	103f891e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   27dc8:	d8801c17 	ldw	r2,112(sp)
   27dcc:	d811883a 	mov	r8,sp
   27dd0:	003f9506 	br	27c28 <__alt_data_end+0xfffe7c28>
   27dd4:	d9402117 	ldw	r5,132(sp)
   27dd8:	d9002017 	ldw	r4,128(sp)
   27ddc:	d9801a04 	addi	r6,sp,104
   27de0:	0026d880 	call	26d88 <__sprint_r.part.0>
   27de4:	103f811e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   27de8:	d811883a 	mov	r8,sp
   27dec:	003ced06 	br	271a4 <__alt_data_end+0xfffe71a4>
   27df0:	d9402117 	ldw	r5,132(sp)
   27df4:	d9002017 	ldw	r4,128(sp)
   27df8:	d9801a04 	addi	r6,sp,104
   27dfc:	da402c15 	stw	r9,176(sp)
   27e00:	db802a15 	stw	r14,168(sp)
   27e04:	0026d880 	call	26d88 <__sprint_r.part.0>
   27e08:	da402c17 	ldw	r9,176(sp)
   27e0c:	db802a17 	ldw	r14,168(sp)
   27e10:	103f761e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   27e14:	d9401b17 	ldw	r5,108(sp)
   27e18:	d8801c17 	ldw	r2,112(sp)
   27e1c:	d811883a 	mov	r8,sp
   27e20:	29000044 	addi	r4,r5,1
   27e24:	003d5b06 	br	27394 <__alt_data_end+0xfffe7394>
   27e28:	d9402117 	ldw	r5,132(sp)
   27e2c:	d9002017 	ldw	r4,128(sp)
   27e30:	d9801a04 	addi	r6,sp,104
   27e34:	da402c15 	stw	r9,176(sp)
   27e38:	0026d880 	call	26d88 <__sprint_r.part.0>
   27e3c:	da402c17 	ldw	r9,176(sp)
   27e40:	103f6a1e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   27e44:	d9401b17 	ldw	r5,108(sp)
   27e48:	d8801c17 	ldw	r2,112(sp)
   27e4c:	d811883a 	mov	r8,sp
   27e50:	29000044 	addi	r4,r5,1
   27e54:	003f1006 	br	27a98 <__alt_data_end+0xfffe7a98>
   27e58:	1000c31e 	bne	r2,zero,28168 <___vfiprintf_internal_r+0x12cc>
   27e5c:	01000044 	movi	r4,1
   27e60:	000b883a 	mov	r5,zero
   27e64:	d811883a 	mov	r8,sp
   27e68:	003f0d06 	br	27aa0 <__alt_data_end+0xfffe7aa0>
   27e6c:	d9402117 	ldw	r5,132(sp)
   27e70:	d9002017 	ldw	r4,128(sp)
   27e74:	d9801a04 	addi	r6,sp,104
   27e78:	0026d880 	call	26d88 <__sprint_r.part.0>
   27e7c:	103f5b1e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   27e80:	d9001b17 	ldw	r4,108(sp)
   27e84:	d8801c17 	ldw	r2,112(sp)
   27e88:	d811883a 	mov	r8,sp
   27e8c:	21000044 	addi	r4,r4,1
   27e90:	003d8006 	br	27494 <__alt_data_end+0xfffe7494>
   27e94:	010000f4 	movhi	r4,3
   27e98:	213c8604 	addi	r4,r4,-3560
   27e9c:	d9002615 	stw	r4,152(sp)
   27ea0:	d8c02215 	stw	r3,136(sp)
   27ea4:	1029883a 	mov	r20,r2
   27ea8:	94c4b03a 	or	r2,r18,r19
   27eac:	103fb21e 	bne	r2,zero,27d78 <__alt_data_end+0xfffe7d78>
   27eb0:	0039883a 	mov	fp,zero
   27eb4:	00800084 	movi	r2,2
   27eb8:	003e6b06 	br	27868 <__alt_data_end+0xfffe7868>
   27ebc:	da802217 	ldw	r10,136(sp)
   27ec0:	d8001d85 	stb	zero,118(sp)
   27ec4:	0027883a 	mov	r19,zero
   27ec8:	50800104 	addi	r2,r10,4
   27ecc:	54800017 	ldw	r18,0(r10)
   27ed0:	483e6016 	blt	r9,zero,27854 <__alt_data_end+0xfffe7854>
   27ed4:	00ffdfc4 	movi	r3,-129
   27ed8:	d8802215 	stw	r2,136(sp)
   27edc:	a0e8703a 	and	r20,r20,r3
   27ee0:	0039883a 	mov	fp,zero
   27ee4:	903ebb26 	beq	r18,zero,279d4 <__alt_data_end+0xfffe79d4>
   27ee8:	00800244 	movi	r2,9
   27eec:	14bdee36 	bltu	r2,r18,276a8 <__alt_data_end+0xfffe76a8>
   27ef0:	003eba06 	br	279dc <__alt_data_end+0xfffe79dc>
   27ef4:	00800c04 	movi	r2,48
   27ef8:	d8c01d45 	stb	r3,117(sp)
   27efc:	d8801d05 	stb	r2,116(sp)
   27f00:	d8001d85 	stb	zero,118(sp)
   27f04:	a0c00094 	ori	r3,r20,2
   27f08:	4800a916 	blt	r9,zero,281b0 <___vfiprintf_internal_r+0x1314>
   27f0c:	00bfdfc4 	movi	r2,-129
   27f10:	a096703a 	and	r11,r20,r2
   27f14:	5d000094 	ori	r20,r11,2
   27f18:	0039883a 	mov	fp,zero
   27f1c:	003f9706 	br	27d7c <__alt_data_end+0xfffe7d7c>
   27f20:	8025883a 	mov	r18,r16
   27f24:	003c2e06 	br	26fe0 <__alt_data_end+0xfffe6fe0>
   27f28:	008000f4 	movhi	r2,3
   27f2c:	10bc8604 	addi	r2,r2,-3560
   27f30:	0039883a 	mov	fp,zero
   27f34:	d8802615 	stw	r2,152(sp)
   27f38:	003f9006 	br	27d7c <__alt_data_end+0xfffe7d7c>
   27f3c:	04a5c83a 	sub	r18,zero,r18
   27f40:	07000b44 	movi	fp,45
   27f44:	9004c03a 	cmpne	r2,r18,zero
   27f48:	04e7c83a 	sub	r19,zero,r19
   27f4c:	df001d85 	stb	fp,118(sp)
   27f50:	98a7c83a 	sub	r19,r19,r2
   27f54:	48009f16 	blt	r9,zero,281d4 <___vfiprintf_internal_r+0x1338>
   27f58:	00bfdfc4 	movi	r2,-129
   27f5c:	a0a8703a 	and	r20,r20,r2
   27f60:	003dd006 	br	276a4 <__alt_data_end+0xfffe76a4>
   27f64:	70004c26 	beq	r14,zero,28098 <___vfiprintf_internal_r+0x11fc>
   27f68:	00800084 	movi	r2,2
   27f6c:	d8c01d04 	addi	r3,sp,116
   27f70:	d8c00015 	stw	r3,0(sp)
   27f74:	d8800115 	stw	r2,4(sp)
   27f78:	01000044 	movi	r4,1
   27f7c:	d811883a 	mov	r8,sp
   27f80:	003f7306 	br	27d50 <__alt_data_end+0xfffe7d50>
   27f84:	a080100c 	andi	r2,r20,64
   27f88:	da802217 	ldw	r10,136(sp)
   27f8c:	103e0626 	beq	r2,zero,277a8 <__alt_data_end+0xfffe77a8>
   27f90:	5480000f 	ldh	r18,0(r10)
   27f94:	52800104 	addi	r10,r10,4
   27f98:	da802215 	stw	r10,136(sp)
   27f9c:	9027d7fa 	srai	r19,r18,31
   27fa0:	9805883a 	mov	r2,r19
   27fa4:	003db806 	br	27688 <__alt_data_end+0xfffe7688>
   27fa8:	a080040c 	andi	r2,r20,16
   27fac:	1000091e 	bne	r2,zero,27fd4 <___vfiprintf_internal_r+0x1138>
   27fb0:	a2c0100c 	andi	r11,r20,64
   27fb4:	58000726 	beq	r11,zero,27fd4 <___vfiprintf_internal_r+0x1138>
   27fb8:	da802217 	ldw	r10,136(sp)
   27fbc:	50800017 	ldw	r2,0(r10)
   27fc0:	52800104 	addi	r10,r10,4
   27fc4:	da802215 	stw	r10,136(sp)
   27fc8:	da802317 	ldw	r10,140(sp)
   27fcc:	1280000d 	sth	r10,0(r2)
   27fd0:	003be706 	br	26f70 <__alt_data_end+0xfffe6f70>
   27fd4:	da802217 	ldw	r10,136(sp)
   27fd8:	50800017 	ldw	r2,0(r10)
   27fdc:	52800104 	addi	r10,r10,4
   27fe0:	da802215 	stw	r10,136(sp)
   27fe4:	da802317 	ldw	r10,140(sp)
   27fe8:	12800015 	stw	r10,0(r2)
   27fec:	003be006 	br	26f70 <__alt_data_end+0xfffe6f70>
   27ff0:	a080100c 	andi	r2,r20,64
   27ff4:	da802217 	ldw	r10,136(sp)
   27ff8:	10003026 	beq	r2,zero,280bc <___vfiprintf_internal_r+0x1220>
   27ffc:	5480000b 	ldhu	r18,0(r10)
   28000:	52800104 	addi	r10,r10,4
   28004:	0027883a 	mov	r19,zero
   28008:	da802215 	stw	r10,136(sp)
   2800c:	003d8006 	br	27610 <__alt_data_end+0xfffe7610>
   28010:	80c00007 	ldb	r3,0(r16)
   28014:	003c0006 	br	27018 <__alt_data_end+0xfffe7018>
   28018:	a080100c 	andi	r2,r20,64
   2801c:	d8001d85 	stb	zero,118(sp)
   28020:	da802217 	ldw	r10,136(sp)
   28024:	1000201e 	bne	r2,zero,280a8 <___vfiprintf_internal_r+0x120c>
   28028:	50800104 	addi	r2,r10,4
   2802c:	54800017 	ldw	r18,0(r10)
   28030:	0027883a 	mov	r19,zero
   28034:	483def0e 	bge	r9,zero,277f4 <__alt_data_end+0xfffe77f4>
   28038:	94c6b03a 	or	r3,r18,r19
   2803c:	d8802215 	stw	r2,136(sp)
   28040:	183d4e1e 	bne	r3,zero,2757c <__alt_data_end+0xfffe757c>
   28044:	0039883a 	mov	fp,zero
   28048:	0005883a 	mov	r2,zero
   2804c:	003e0606 	br	27868 <__alt_data_end+0xfffe7868>
   28050:	d9402117 	ldw	r5,132(sp)
   28054:	d9002017 	ldw	r4,128(sp)
   28058:	d9801a04 	addi	r6,sp,104
   2805c:	da402c15 	stw	r9,176(sp)
   28060:	db802a15 	stw	r14,168(sp)
   28064:	0026d880 	call	26d88 <__sprint_r.part.0>
   28068:	da402c17 	ldw	r9,176(sp)
   2806c:	db802a17 	ldw	r14,168(sp)
   28070:	103ede1e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   28074:	d9401b17 	ldw	r5,108(sp)
   28078:	d8801c17 	ldw	r2,112(sp)
   2807c:	d811883a 	mov	r8,sp
   28080:	29000044 	addi	r4,r5,1
   28084:	003e7406 	br	27a58 <__alt_data_end+0xfffe7a58>
   28088:	00bfffc4 	movi	r2,-1
   2808c:	003c5806 	br	271f0 <__alt_data_end+0xfffe71f0>
   28090:	d811883a 	mov	r8,sp
   28094:	003ee806 	br	27c38 <__alt_data_end+0xfffe7c38>
   28098:	000b883a 	mov	r5,zero
   2809c:	01000044 	movi	r4,1
   280a0:	d811883a 	mov	r8,sp
   280a4:	003e7c06 	br	27a98 <__alt_data_end+0xfffe7a98>
   280a8:	50800104 	addi	r2,r10,4
   280ac:	5480000b 	ldhu	r18,0(r10)
   280b0:	0027883a 	mov	r19,zero
   280b4:	483dcf0e 	bge	r9,zero,277f4 <__alt_data_end+0xfffe77f4>
   280b8:	003fdf06 	br	28038 <__alt_data_end+0xfffe8038>
   280bc:	54800017 	ldw	r18,0(r10)
   280c0:	52800104 	addi	r10,r10,4
   280c4:	0027883a 	mov	r19,zero
   280c8:	da802215 	stw	r10,136(sp)
   280cc:	003d5006 	br	27610 <__alt_data_end+0xfffe7610>
   280d0:	50800104 	addi	r2,r10,4
   280d4:	5480000b 	ldhu	r18,0(r10)
   280d8:	0027883a 	mov	r19,zero
   280dc:	483f7d0e 	bge	r9,zero,27ed4 <__alt_data_end+0xfffe7ed4>
   280e0:	003ddc06 	br	27854 <__alt_data_end+0xfffe7854>
   280e4:	d8c02215 	stw	r3,136(sp)
   280e8:	0039883a 	mov	fp,zero
   280ec:	003ddb06 	br	2785c <__alt_data_end+0xfffe785c>
   280f0:	028000f4 	movhi	r10,3
   280f4:	52bce704 	addi	r10,r10,-3172
   280f8:	da802415 	stw	r10,144(sp)
   280fc:	003e8306 	br	27b0c <__alt_data_end+0xfffe7b0c>
   28100:	d8801c17 	ldw	r2,112(sp)
   28104:	dd002117 	ldw	r20,132(sp)
   28108:	103eb926 	beq	r2,zero,27bf0 <__alt_data_end+0xfffe7bf0>
   2810c:	d9002017 	ldw	r4,128(sp)
   28110:	d9801a04 	addi	r6,sp,104
   28114:	a00b883a 	mov	r5,r20
   28118:	0026d880 	call	26d88 <__sprint_r.part.0>
   2811c:	003eb406 	br	27bf0 <__alt_data_end+0xfffe7bf0>
   28120:	80c00043 	ldbu	r3,1(r16)
   28124:	a5000814 	ori	r20,r20,32
   28128:	84000044 	addi	r16,r16,1
   2812c:	18c03fcc 	andi	r3,r3,255
   28130:	18c0201c 	xori	r3,r3,128
   28134:	18ffe004 	addi	r3,r3,-128
   28138:	003bb706 	br	27018 <__alt_data_end+0xfffe7018>
   2813c:	a809883a 	mov	r4,r21
   28140:	d8c02a15 	stw	r3,168(sp)
   28144:	da002b15 	stw	r8,172(sp)
   28148:	0026cf00 	call	26cf0 <strlen>
   2814c:	d8c02a17 	ldw	r3,168(sp)
   28150:	1027883a 	mov	r19,r2
   28154:	df001d83 	ldbu	fp,118(sp)
   28158:	d8c02215 	stw	r3,136(sp)
   2815c:	0013883a 	mov	r9,zero
   28160:	da002b17 	ldw	r8,172(sp)
   28164:	003c4d06 	br	2729c <__alt_data_end+0xfffe729c>
   28168:	d9402117 	ldw	r5,132(sp)
   2816c:	d9002017 	ldw	r4,128(sp)
   28170:	d9801a04 	addi	r6,sp,104
   28174:	da402c15 	stw	r9,176(sp)
   28178:	0026d880 	call	26d88 <__sprint_r.part.0>
   2817c:	da402c17 	ldw	r9,176(sp)
   28180:	103e9a1e 	bne	r2,zero,27bec <__alt_data_end+0xfffe7bec>
   28184:	d9401b17 	ldw	r5,108(sp)
   28188:	d8801c17 	ldw	r2,112(sp)
   2818c:	d811883a 	mov	r8,sp
   28190:	29000044 	addi	r4,r5,1
   28194:	003e4206 	br	27aa0 <__alt_data_end+0xfffe7aa0>
   28198:	d9401b17 	ldw	r5,108(sp)
   2819c:	010000f4 	movhi	r4,3
   281a0:	213ceb04 	addi	r4,r4,-3156
   281a4:	d9002415 	stw	r4,144(sp)
   281a8:	29400044 	addi	r5,r5,1
   281ac:	003c6d06 	br	27364 <__alt_data_end+0xfffe7364>
   281b0:	0039883a 	mov	fp,zero
   281b4:	00800084 	movi	r2,2
   281b8:	10803fcc 	andi	r2,r2,255
   281bc:	01000044 	movi	r4,1
   281c0:	11001e26 	beq	r2,r4,2823c <___vfiprintf_internal_r+0x13a0>
   281c4:	01000084 	movi	r4,2
   281c8:	11001e1e 	bne	r2,r4,28244 <___vfiprintf_internal_r+0x13a8>
   281cc:	1829883a 	mov	r20,r3
   281d0:	003eea06 	br	27d7c <__alt_data_end+0xfffe7d7c>
   281d4:	a007883a 	mov	r3,r20
   281d8:	00800044 	movi	r2,1
   281dc:	003ff606 	br	281b8 <__alt_data_end+0xfffe81b8>
   281e0:	00800184 	movi	r2,6
   281e4:	1240012e 	bgeu	r2,r9,281ec <___vfiprintf_internal_r+0x1350>
   281e8:	1013883a 	mov	r9,r2
   281ec:	4827883a 	mov	r19,r9
   281f0:	4825883a 	mov	r18,r9
   281f4:	48001516 	blt	r9,zero,2824c <___vfiprintf_internal_r+0x13b0>
   281f8:	054000f4 	movhi	r21,3
   281fc:	d8c02215 	stw	r3,136(sp)
   28200:	ad7c8b04 	addi	r21,r21,-3540
   28204:	003d1406 	br	27658 <__alt_data_end+0xfffe7658>
   28208:	028000f4 	movhi	r10,3
   2820c:	52bce704 	addi	r10,r10,-3172
   28210:	da802415 	stw	r10,144(sp)
   28214:	200d883a 	mov	r6,r4
   28218:	003c9106 	br	27460 <__alt_data_end+0xfffe7460>
   2821c:	5021883a 	mov	r16,r10
   28220:	0013883a 	mov	r9,zero
   28224:	003b7d06 	br	2701c <__alt_data_end+0xfffe701c>
   28228:	4827883a 	mov	r19,r9
   2822c:	df001d83 	ldbu	fp,118(sp)
   28230:	d8c02215 	stw	r3,136(sp)
   28234:	0013883a 	mov	r9,zero
   28238:	003c1806 	br	2729c <__alt_data_end+0xfffe729c>
   2823c:	1829883a 	mov	r20,r3
   28240:	003d1806 	br	276a4 <__alt_data_end+0xfffe76a4>
   28244:	1829883a 	mov	r20,r3
   28248:	003ccd06 	br	27580 <__alt_data_end+0xfffe7580>
   2824c:	0025883a 	mov	r18,zero
   28250:	003fe906 	br	281f8 <__alt_data_end+0xfffe81f8>
   28254:	d8802217 	ldw	r2,136(sp)
   28258:	80c00043 	ldbu	r3,1(r16)
   2825c:	5021883a 	mov	r16,r10
   28260:	12400017 	ldw	r9,0(r2)
   28264:	10800104 	addi	r2,r2,4
   28268:	d8802215 	stw	r2,136(sp)
   2826c:	483faf0e 	bge	r9,zero,2812c <__alt_data_end+0xfffe812c>
   28270:	18c03fcc 	andi	r3,r3,255
   28274:	18c0201c 	xori	r3,r3,128
   28278:	027fffc4 	movi	r9,-1
   2827c:	18ffe004 	addi	r3,r3,-128
   28280:	003b6506 	br	27018 <__alt_data_end+0xfffe7018>
   28284:	d9c01d85 	stb	r7,118(sp)
   28288:	003ca006 	br	2750c <__alt_data_end+0xfffe750c>
   2828c:	d9c01d85 	stb	r7,118(sp)
   28290:	003cad06 	br	27548 <__alt_data_end+0xfffe7548>
   28294:	d9c01d85 	stb	r7,118(sp)
   28298:	003d7d06 	br	27890 <__alt_data_end+0xfffe7890>
   2829c:	d9c01d85 	stb	r7,118(sp)
   282a0:	003d5f06 	br	27820 <__alt_data_end+0xfffe7820>
   282a4:	a080004c 	andi	r2,r20,1
   282a8:	0039883a 	mov	fp,zero
   282ac:	10000526 	beq	r2,zero,282c4 <___vfiprintf_internal_r+0x1428>
   282b0:	00800c04 	movi	r2,48
   282b4:	d88019c5 	stb	r2,103(sp)
   282b8:	dcc02717 	ldw	r19,156(sp)
   282bc:	dd4019c4 	addi	r21,sp,103
   282c0:	003bf606 	br	2729c <__alt_data_end+0xfffe729c>
   282c4:	0027883a 	mov	r19,zero
   282c8:	dd401a04 	addi	r21,sp,104
   282cc:	003bf306 	br	2729c <__alt_data_end+0xfffe729c>
   282d0:	d9c01d85 	stb	r7,118(sp)
   282d4:	003dc806 	br	279f8 <__alt_data_end+0xfffe79f8>
   282d8:	d9c01d85 	stb	r7,118(sp)
   282dc:	003d3a06 	br	277c8 <__alt_data_end+0xfffe77c8>
   282e0:	d9c01d85 	stb	r7,118(sp)
   282e4:	003d2a06 	br	27790 <__alt_data_end+0xfffe7790>
   282e8:	d9c01d85 	stb	r7,118(sp)
   282ec:	003cde06 	br	27668 <__alt_data_end+0xfffe7668>
   282f0:	d9c01d85 	stb	r7,118(sp)
   282f4:	003cbc06 	br	275e8 <__alt_data_end+0xfffe75e8>

000282f8 <__vfiprintf_internal>:
   282f8:	008000f4 	movhi	r2,3
   282fc:	1083e804 	addi	r2,r2,4000
   28300:	300f883a 	mov	r7,r6
   28304:	280d883a 	mov	r6,r5
   28308:	200b883a 	mov	r5,r4
   2830c:	11000017 	ldw	r4,0(r2)
   28310:	0026e9c1 	jmpi	26e9c <___vfiprintf_internal_r>

00028314 <__sbprintf>:
   28314:	2880030b 	ldhu	r2,12(r5)
   28318:	2ac01917 	ldw	r11,100(r5)
   2831c:	2a80038b 	ldhu	r10,14(r5)
   28320:	2a400717 	ldw	r9,28(r5)
   28324:	2a000917 	ldw	r8,36(r5)
   28328:	defee204 	addi	sp,sp,-1144
   2832c:	00c10004 	movi	r3,1024
   28330:	dc011a15 	stw	r16,1128(sp)
   28334:	10bfff4c 	andi	r2,r2,65533
   28338:	2821883a 	mov	r16,r5
   2833c:	d8cb883a 	add	r5,sp,r3
   28340:	dc811c15 	stw	r18,1136(sp)
   28344:	dc411b15 	stw	r17,1132(sp)
   28348:	dfc11d15 	stw	ra,1140(sp)
   2834c:	2025883a 	mov	r18,r4
   28350:	d881030d 	sth	r2,1036(sp)
   28354:	dac11915 	stw	r11,1124(sp)
   28358:	da81038d 	sth	r10,1038(sp)
   2835c:	da410715 	stw	r9,1052(sp)
   28360:	da010915 	stw	r8,1060(sp)
   28364:	dec10015 	stw	sp,1024(sp)
   28368:	dec10415 	stw	sp,1040(sp)
   2836c:	d8c10215 	stw	r3,1032(sp)
   28370:	d8c10515 	stw	r3,1044(sp)
   28374:	d8010615 	stw	zero,1048(sp)
   28378:	0026e9c0 	call	26e9c <___vfiprintf_internal_r>
   2837c:	1023883a 	mov	r17,r2
   28380:	10000416 	blt	r2,zero,28394 <__sbprintf+0x80>
   28384:	d9410004 	addi	r5,sp,1024
   28388:	9009883a 	mov	r4,r18
   2838c:	00242340 	call	24234 <_fflush_r>
   28390:	10000d1e 	bne	r2,zero,283c8 <__sbprintf+0xb4>
   28394:	d881030b 	ldhu	r2,1036(sp)
   28398:	1080100c 	andi	r2,r2,64
   2839c:	10000326 	beq	r2,zero,283ac <__sbprintf+0x98>
   283a0:	8080030b 	ldhu	r2,12(r16)
   283a4:	10801014 	ori	r2,r2,64
   283a8:	8080030d 	sth	r2,12(r16)
   283ac:	8805883a 	mov	r2,r17
   283b0:	dfc11d17 	ldw	ra,1140(sp)
   283b4:	dc811c17 	ldw	r18,1136(sp)
   283b8:	dc411b17 	ldw	r17,1132(sp)
   283bc:	dc011a17 	ldw	r16,1128(sp)
   283c0:	dec11e04 	addi	sp,sp,1144
   283c4:	f800283a 	ret
   283c8:	047fffc4 	movi	r17,-1
   283cc:	003ff106 	br	28394 <__alt_data_end+0xfffe8394>

000283d0 <_write_r>:
   283d0:	defffd04 	addi	sp,sp,-12
   283d4:	2805883a 	mov	r2,r5
   283d8:	dc000015 	stw	r16,0(sp)
   283dc:	040000f4 	movhi	r16,3
   283e0:	dc400115 	stw	r17,4(sp)
   283e4:	300b883a 	mov	r5,r6
   283e8:	840ab804 	addi	r16,r16,10976
   283ec:	2023883a 	mov	r17,r4
   283f0:	380d883a 	mov	r6,r7
   283f4:	1009883a 	mov	r4,r2
   283f8:	dfc00215 	stw	ra,8(sp)
   283fc:	80000015 	stw	zero,0(r16)
   28400:	002d3980 	call	2d398 <write>
   28404:	00ffffc4 	movi	r3,-1
   28408:	10c00526 	beq	r2,r3,28420 <_write_r+0x50>
   2840c:	dfc00217 	ldw	ra,8(sp)
   28410:	dc400117 	ldw	r17,4(sp)
   28414:	dc000017 	ldw	r16,0(sp)
   28418:	dec00304 	addi	sp,sp,12
   2841c:	f800283a 	ret
   28420:	80c00017 	ldw	r3,0(r16)
   28424:	183ff926 	beq	r3,zero,2840c <__alt_data_end+0xfffe840c>
   28428:	88c00015 	stw	r3,0(r17)
   2842c:	003ff706 	br	2840c <__alt_data_end+0xfffe840c>

00028430 <_close_r>:
   28430:	defffd04 	addi	sp,sp,-12
   28434:	dc000015 	stw	r16,0(sp)
   28438:	040000f4 	movhi	r16,3
   2843c:	dc400115 	stw	r17,4(sp)
   28440:	840ab804 	addi	r16,r16,10976
   28444:	2023883a 	mov	r17,r4
   28448:	2809883a 	mov	r4,r5
   2844c:	dfc00215 	stw	ra,8(sp)
   28450:	80000015 	stw	zero,0(r16)
   28454:	002cb880 	call	2cb88 <close>
   28458:	00ffffc4 	movi	r3,-1
   2845c:	10c00526 	beq	r2,r3,28474 <_close_r+0x44>
   28460:	dfc00217 	ldw	ra,8(sp)
   28464:	dc400117 	ldw	r17,4(sp)
   28468:	dc000017 	ldw	r16,0(sp)
   2846c:	dec00304 	addi	sp,sp,12
   28470:	f800283a 	ret
   28474:	80c00017 	ldw	r3,0(r16)
   28478:	183ff926 	beq	r3,zero,28460 <__alt_data_end+0xfffe8460>
   2847c:	88c00015 	stw	r3,0(r17)
   28480:	003ff706 	br	28460 <__alt_data_end+0xfffe8460>

00028484 <_calloc_r>:
   28484:	298b383a 	mul	r5,r5,r6
   28488:	defffe04 	addi	sp,sp,-8
   2848c:	dfc00115 	stw	ra,4(sp)
   28490:	dc000015 	stw	r16,0(sp)
   28494:	0024eb40 	call	24eb4 <_malloc_r>
   28498:	10002926 	beq	r2,zero,28540 <_calloc_r+0xbc>
   2849c:	11bfff17 	ldw	r6,-4(r2)
   284a0:	1021883a 	mov	r16,r2
   284a4:	00bfff04 	movi	r2,-4
   284a8:	308c703a 	and	r6,r6,r2
   284ac:	00c00904 	movi	r3,36
   284b0:	308d883a 	add	r6,r6,r2
   284b4:	19801636 	bltu	r3,r6,28510 <_calloc_r+0x8c>
   284b8:	008004c4 	movi	r2,19
   284bc:	11800b2e 	bgeu	r2,r6,284ec <_calloc_r+0x68>
   284c0:	80000015 	stw	zero,0(r16)
   284c4:	80000115 	stw	zero,4(r16)
   284c8:	008006c4 	movi	r2,27
   284cc:	11801a2e 	bgeu	r2,r6,28538 <_calloc_r+0xb4>
   284d0:	80000215 	stw	zero,8(r16)
   284d4:	80000315 	stw	zero,12(r16)
   284d8:	30c0151e 	bne	r6,r3,28530 <_calloc_r+0xac>
   284dc:	80000415 	stw	zero,16(r16)
   284e0:	80800604 	addi	r2,r16,24
   284e4:	80000515 	stw	zero,20(r16)
   284e8:	00000106 	br	284f0 <_calloc_r+0x6c>
   284ec:	8005883a 	mov	r2,r16
   284f0:	10000015 	stw	zero,0(r2)
   284f4:	10000115 	stw	zero,4(r2)
   284f8:	10000215 	stw	zero,8(r2)
   284fc:	8005883a 	mov	r2,r16
   28500:	dfc00117 	ldw	ra,4(sp)
   28504:	dc000017 	ldw	r16,0(sp)
   28508:	dec00204 	addi	sp,sp,8
   2850c:	f800283a 	ret
   28510:	000b883a 	mov	r5,zero
   28514:	8009883a 	mov	r4,r16
   28518:	00258ec0 	call	258ec <memset>
   2851c:	8005883a 	mov	r2,r16
   28520:	dfc00117 	ldw	ra,4(sp)
   28524:	dc000017 	ldw	r16,0(sp)
   28528:	dec00204 	addi	sp,sp,8
   2852c:	f800283a 	ret
   28530:	80800404 	addi	r2,r16,16
   28534:	003fee06 	br	284f0 <__alt_data_end+0xfffe84f0>
   28538:	80800204 	addi	r2,r16,8
   2853c:	003fec06 	br	284f0 <__alt_data_end+0xfffe84f0>
   28540:	0005883a 	mov	r2,zero
   28544:	003fee06 	br	28500 <__alt_data_end+0xfffe8500>

00028548 <_fclose_r>:
   28548:	28003926 	beq	r5,zero,28630 <_fclose_r+0xe8>
   2854c:	defffc04 	addi	sp,sp,-16
   28550:	dc400115 	stw	r17,4(sp)
   28554:	dc000015 	stw	r16,0(sp)
   28558:	dfc00315 	stw	ra,12(sp)
   2855c:	dc800215 	stw	r18,8(sp)
   28560:	2023883a 	mov	r17,r4
   28564:	2821883a 	mov	r16,r5
   28568:	20000226 	beq	r4,zero,28574 <_fclose_r+0x2c>
   2856c:	20800e17 	ldw	r2,56(r4)
   28570:	10002726 	beq	r2,zero,28610 <_fclose_r+0xc8>
   28574:	8080030f 	ldh	r2,12(r16)
   28578:	1000071e 	bne	r2,zero,28598 <_fclose_r+0x50>
   2857c:	0005883a 	mov	r2,zero
   28580:	dfc00317 	ldw	ra,12(sp)
   28584:	dc800217 	ldw	r18,8(sp)
   28588:	dc400117 	ldw	r17,4(sp)
   2858c:	dc000017 	ldw	r16,0(sp)
   28590:	dec00404 	addi	sp,sp,16
   28594:	f800283a 	ret
   28598:	800b883a 	mov	r5,r16
   2859c:	8809883a 	mov	r4,r17
   285a0:	00240180 	call	24018 <__sflush_r>
   285a4:	1025883a 	mov	r18,r2
   285a8:	80800b17 	ldw	r2,44(r16)
   285ac:	10000426 	beq	r2,zero,285c0 <_fclose_r+0x78>
   285b0:	81400717 	ldw	r5,28(r16)
   285b4:	8809883a 	mov	r4,r17
   285b8:	103ee83a 	callr	r2
   285bc:	10001616 	blt	r2,zero,28618 <_fclose_r+0xd0>
   285c0:	8080030b 	ldhu	r2,12(r16)
   285c4:	1080200c 	andi	r2,r2,128
   285c8:	1000151e 	bne	r2,zero,28620 <_fclose_r+0xd8>
   285cc:	81400c17 	ldw	r5,48(r16)
   285d0:	28000526 	beq	r5,zero,285e8 <_fclose_r+0xa0>
   285d4:	80801004 	addi	r2,r16,64
   285d8:	28800226 	beq	r5,r2,285e4 <_fclose_r+0x9c>
   285dc:	8809883a 	mov	r4,r17
   285e0:	00247840 	call	24784 <_free_r>
   285e4:	80000c15 	stw	zero,48(r16)
   285e8:	81401117 	ldw	r5,68(r16)
   285ec:	28000326 	beq	r5,zero,285fc <_fclose_r+0xb4>
   285f0:	8809883a 	mov	r4,r17
   285f4:	00247840 	call	24784 <_free_r>
   285f8:	80001115 	stw	zero,68(r16)
   285fc:	00246200 	call	24620 <__sfp_lock_acquire>
   28600:	8000030d 	sth	zero,12(r16)
   28604:	00246240 	call	24624 <__sfp_lock_release>
   28608:	9005883a 	mov	r2,r18
   2860c:	003fdc06 	br	28580 <__alt_data_end+0xfffe8580>
   28610:	00246100 	call	24610 <__sinit>
   28614:	003fd706 	br	28574 <__alt_data_end+0xfffe8574>
   28618:	04bfffc4 	movi	r18,-1
   2861c:	003fe806 	br	285c0 <__alt_data_end+0xfffe85c0>
   28620:	81400417 	ldw	r5,16(r16)
   28624:	8809883a 	mov	r4,r17
   28628:	00247840 	call	24784 <_free_r>
   2862c:	003fe706 	br	285cc <__alt_data_end+0xfffe85cc>
   28630:	0005883a 	mov	r2,zero
   28634:	f800283a 	ret

00028638 <fclose>:
   28638:	008000f4 	movhi	r2,3
   2863c:	1083e804 	addi	r2,r2,4000
   28640:	200b883a 	mov	r5,r4
   28644:	11000017 	ldw	r4,0(r2)
   28648:	00285481 	jmpi	28548 <_fclose_r>

0002864c <__fputwc>:
   2864c:	defff804 	addi	sp,sp,-32
   28650:	dcc00415 	stw	r19,16(sp)
   28654:	dc800315 	stw	r18,12(sp)
   28658:	dc000115 	stw	r16,4(sp)
   2865c:	dfc00715 	stw	ra,28(sp)
   28660:	dd400615 	stw	r21,24(sp)
   28664:	dd000515 	stw	r20,20(sp)
   28668:	dc400215 	stw	r17,8(sp)
   2866c:	2027883a 	mov	r19,r4
   28670:	2825883a 	mov	r18,r5
   28674:	3021883a 	mov	r16,r6
   28678:	0024ca40 	call	24ca4 <__locale_mb_cur_max>
   2867c:	00c00044 	movi	r3,1
   28680:	10c03e26 	beq	r2,r3,2877c <__fputwc+0x130>
   28684:	81c01704 	addi	r7,r16,92
   28688:	900d883a 	mov	r6,r18
   2868c:	d80b883a 	mov	r5,sp
   28690:	9809883a 	mov	r4,r19
   28694:	00296980 	call	29698 <_wcrtomb_r>
   28698:	1029883a 	mov	r20,r2
   2869c:	00bfffc4 	movi	r2,-1
   286a0:	a0802026 	beq	r20,r2,28724 <__fputwc+0xd8>
   286a4:	d9400003 	ldbu	r5,0(sp)
   286a8:	a0001c26 	beq	r20,zero,2871c <__fputwc+0xd0>
   286ac:	0023883a 	mov	r17,zero
   286b0:	05400284 	movi	r21,10
   286b4:	00000906 	br	286dc <__fputwc+0x90>
   286b8:	80800017 	ldw	r2,0(r16)
   286bc:	11400005 	stb	r5,0(r2)
   286c0:	80c00017 	ldw	r3,0(r16)
   286c4:	18c00044 	addi	r3,r3,1
   286c8:	80c00015 	stw	r3,0(r16)
   286cc:	8c400044 	addi	r17,r17,1
   286d0:	dc45883a 	add	r2,sp,r17
   286d4:	8d00112e 	bgeu	r17,r20,2871c <__fputwc+0xd0>
   286d8:	11400003 	ldbu	r5,0(r2)
   286dc:	80c00217 	ldw	r3,8(r16)
   286e0:	18ffffc4 	addi	r3,r3,-1
   286e4:	80c00215 	stw	r3,8(r16)
   286e8:	183ff30e 	bge	r3,zero,286b8 <__alt_data_end+0xfffe86b8>
   286ec:	80800617 	ldw	r2,24(r16)
   286f0:	18801916 	blt	r3,r2,28758 <__fputwc+0x10c>
   286f4:	80800017 	ldw	r2,0(r16)
   286f8:	11400005 	stb	r5,0(r2)
   286fc:	80800017 	ldw	r2,0(r16)
   28700:	10c00003 	ldbu	r3,0(r2)
   28704:	10800044 	addi	r2,r2,1
   28708:	1d402326 	beq	r3,r21,28798 <__fputwc+0x14c>
   2870c:	80800015 	stw	r2,0(r16)
   28710:	8c400044 	addi	r17,r17,1
   28714:	dc45883a 	add	r2,sp,r17
   28718:	8d3fef36 	bltu	r17,r20,286d8 <__alt_data_end+0xfffe86d8>
   2871c:	9005883a 	mov	r2,r18
   28720:	00000406 	br	28734 <__fputwc+0xe8>
   28724:	80c0030b 	ldhu	r3,12(r16)
   28728:	a005883a 	mov	r2,r20
   2872c:	18c01014 	ori	r3,r3,64
   28730:	80c0030d 	sth	r3,12(r16)
   28734:	dfc00717 	ldw	ra,28(sp)
   28738:	dd400617 	ldw	r21,24(sp)
   2873c:	dd000517 	ldw	r20,20(sp)
   28740:	dcc00417 	ldw	r19,16(sp)
   28744:	dc800317 	ldw	r18,12(sp)
   28748:	dc400217 	ldw	r17,8(sp)
   2874c:	dc000117 	ldw	r16,4(sp)
   28750:	dec00804 	addi	sp,sp,32
   28754:	f800283a 	ret
   28758:	800d883a 	mov	r6,r16
   2875c:	29403fcc 	andi	r5,r5,255
   28760:	9809883a 	mov	r4,r19
   28764:	00295400 	call	29540 <__swbuf_r>
   28768:	10bfffe0 	cmpeqi	r2,r2,-1
   2876c:	10803fcc 	andi	r2,r2,255
   28770:	103fd626 	beq	r2,zero,286cc <__alt_data_end+0xfffe86cc>
   28774:	00bfffc4 	movi	r2,-1
   28778:	003fee06 	br	28734 <__alt_data_end+0xfffe8734>
   2877c:	90ffffc4 	addi	r3,r18,-1
   28780:	01003f84 	movi	r4,254
   28784:	20ffbf36 	bltu	r4,r3,28684 <__alt_data_end+0xfffe8684>
   28788:	900b883a 	mov	r5,r18
   2878c:	dc800005 	stb	r18,0(sp)
   28790:	1029883a 	mov	r20,r2
   28794:	003fc506 	br	286ac <__alt_data_end+0xfffe86ac>
   28798:	800d883a 	mov	r6,r16
   2879c:	a80b883a 	mov	r5,r21
   287a0:	9809883a 	mov	r4,r19
   287a4:	00295400 	call	29540 <__swbuf_r>
   287a8:	10bfffe0 	cmpeqi	r2,r2,-1
   287ac:	003fef06 	br	2876c <__alt_data_end+0xfffe876c>

000287b0 <_fputwc_r>:
   287b0:	3080030b 	ldhu	r2,12(r6)
   287b4:	10c8000c 	andi	r3,r2,8192
   287b8:	1800051e 	bne	r3,zero,287d0 <_fputwc_r+0x20>
   287bc:	30c01917 	ldw	r3,100(r6)
   287c0:	10880014 	ori	r2,r2,8192
   287c4:	3080030d 	sth	r2,12(r6)
   287c8:	18880014 	ori	r2,r3,8192
   287cc:	30801915 	stw	r2,100(r6)
   287d0:	002864c1 	jmpi	2864c <__fputwc>

000287d4 <fputwc>:
   287d4:	008000f4 	movhi	r2,3
   287d8:	defffc04 	addi	sp,sp,-16
   287dc:	1083e804 	addi	r2,r2,4000
   287e0:	dc000115 	stw	r16,4(sp)
   287e4:	14000017 	ldw	r16,0(r2)
   287e8:	dc400215 	stw	r17,8(sp)
   287ec:	dfc00315 	stw	ra,12(sp)
   287f0:	2023883a 	mov	r17,r4
   287f4:	80000226 	beq	r16,zero,28800 <fputwc+0x2c>
   287f8:	80800e17 	ldw	r2,56(r16)
   287fc:	10001026 	beq	r2,zero,28840 <fputwc+0x6c>
   28800:	2880030b 	ldhu	r2,12(r5)
   28804:	10c8000c 	andi	r3,r2,8192
   28808:	1800051e 	bne	r3,zero,28820 <fputwc+0x4c>
   2880c:	28c01917 	ldw	r3,100(r5)
   28810:	10880014 	ori	r2,r2,8192
   28814:	2880030d 	sth	r2,12(r5)
   28818:	18880014 	ori	r2,r3,8192
   2881c:	28801915 	stw	r2,100(r5)
   28820:	280d883a 	mov	r6,r5
   28824:	8009883a 	mov	r4,r16
   28828:	880b883a 	mov	r5,r17
   2882c:	dfc00317 	ldw	ra,12(sp)
   28830:	dc400217 	ldw	r17,8(sp)
   28834:	dc000117 	ldw	r16,4(sp)
   28838:	dec00404 	addi	sp,sp,16
   2883c:	002864c1 	jmpi	2864c <__fputwc>
   28840:	8009883a 	mov	r4,r16
   28844:	d9400015 	stw	r5,0(sp)
   28848:	00246100 	call	24610 <__sinit>
   2884c:	d9400017 	ldw	r5,0(sp)
   28850:	003feb06 	br	28800 <__alt_data_end+0xfffe8800>

00028854 <_fstat_r>:
   28854:	defffd04 	addi	sp,sp,-12
   28858:	2805883a 	mov	r2,r5
   2885c:	dc000015 	stw	r16,0(sp)
   28860:	040000f4 	movhi	r16,3
   28864:	dc400115 	stw	r17,4(sp)
   28868:	840ab804 	addi	r16,r16,10976
   2886c:	2023883a 	mov	r17,r4
   28870:	300b883a 	mov	r5,r6
   28874:	1009883a 	mov	r4,r2
   28878:	dfc00215 	stw	ra,8(sp)
   2887c:	80000015 	stw	zero,0(r16)
   28880:	002ccc00 	call	2ccc0 <fstat>
   28884:	00ffffc4 	movi	r3,-1
   28888:	10c00526 	beq	r2,r3,288a0 <_fstat_r+0x4c>
   2888c:	dfc00217 	ldw	ra,8(sp)
   28890:	dc400117 	ldw	r17,4(sp)
   28894:	dc000017 	ldw	r16,0(sp)
   28898:	dec00304 	addi	sp,sp,12
   2889c:	f800283a 	ret
   288a0:	80c00017 	ldw	r3,0(r16)
   288a4:	183ff926 	beq	r3,zero,2888c <__alt_data_end+0xfffe888c>
   288a8:	88c00015 	stw	r3,0(r17)
   288ac:	003ff706 	br	2888c <__alt_data_end+0xfffe888c>

000288b0 <__sfvwrite_r>:
   288b0:	30800217 	ldw	r2,8(r6)
   288b4:	10006726 	beq	r2,zero,28a54 <__sfvwrite_r+0x1a4>
   288b8:	28c0030b 	ldhu	r3,12(r5)
   288bc:	defff404 	addi	sp,sp,-48
   288c0:	dd400715 	stw	r21,28(sp)
   288c4:	dd000615 	stw	r20,24(sp)
   288c8:	dc000215 	stw	r16,8(sp)
   288cc:	dfc00b15 	stw	ra,44(sp)
   288d0:	df000a15 	stw	fp,40(sp)
   288d4:	ddc00915 	stw	r23,36(sp)
   288d8:	dd800815 	stw	r22,32(sp)
   288dc:	dcc00515 	stw	r19,20(sp)
   288e0:	dc800415 	stw	r18,16(sp)
   288e4:	dc400315 	stw	r17,12(sp)
   288e8:	1880020c 	andi	r2,r3,8
   288ec:	2821883a 	mov	r16,r5
   288f0:	202b883a 	mov	r21,r4
   288f4:	3029883a 	mov	r20,r6
   288f8:	10002726 	beq	r2,zero,28998 <__sfvwrite_r+0xe8>
   288fc:	28800417 	ldw	r2,16(r5)
   28900:	10002526 	beq	r2,zero,28998 <__sfvwrite_r+0xe8>
   28904:	1880008c 	andi	r2,r3,2
   28908:	a4400017 	ldw	r17,0(r20)
   2890c:	10002a26 	beq	r2,zero,289b8 <__sfvwrite_r+0x108>
   28910:	05a00034 	movhi	r22,32768
   28914:	0027883a 	mov	r19,zero
   28918:	0025883a 	mov	r18,zero
   2891c:	b5bf0004 	addi	r22,r22,-1024
   28920:	980d883a 	mov	r6,r19
   28924:	a809883a 	mov	r4,r21
   28928:	90004626 	beq	r18,zero,28a44 <__sfvwrite_r+0x194>
   2892c:	900f883a 	mov	r7,r18
   28930:	b480022e 	bgeu	r22,r18,2893c <__sfvwrite_r+0x8c>
   28934:	01e00034 	movhi	r7,32768
   28938:	39ff0004 	addi	r7,r7,-1024
   2893c:	80800917 	ldw	r2,36(r16)
   28940:	81400717 	ldw	r5,28(r16)
   28944:	103ee83a 	callr	r2
   28948:	0080570e 	bge	zero,r2,28aa8 <__sfvwrite_r+0x1f8>
   2894c:	a0c00217 	ldw	r3,8(r20)
   28950:	98a7883a 	add	r19,r19,r2
   28954:	90a5c83a 	sub	r18,r18,r2
   28958:	1885c83a 	sub	r2,r3,r2
   2895c:	a0800215 	stw	r2,8(r20)
   28960:	103fef1e 	bne	r2,zero,28920 <__alt_data_end+0xfffe8920>
   28964:	0005883a 	mov	r2,zero
   28968:	dfc00b17 	ldw	ra,44(sp)
   2896c:	df000a17 	ldw	fp,40(sp)
   28970:	ddc00917 	ldw	r23,36(sp)
   28974:	dd800817 	ldw	r22,32(sp)
   28978:	dd400717 	ldw	r21,28(sp)
   2897c:	dd000617 	ldw	r20,24(sp)
   28980:	dcc00517 	ldw	r19,20(sp)
   28984:	dc800417 	ldw	r18,16(sp)
   28988:	dc400317 	ldw	r17,12(sp)
   2898c:	dc000217 	ldw	r16,8(sp)
   28990:	dec00c04 	addi	sp,sp,48
   28994:	f800283a 	ret
   28998:	800b883a 	mov	r5,r16
   2899c:	a809883a 	mov	r4,r21
   289a0:	002263c0 	call	2263c <__swsetup_r>
   289a4:	1000eb1e 	bne	r2,zero,28d54 <__sfvwrite_r+0x4a4>
   289a8:	80c0030b 	ldhu	r3,12(r16)
   289ac:	a4400017 	ldw	r17,0(r20)
   289b0:	1880008c 	andi	r2,r3,2
   289b4:	103fd61e 	bne	r2,zero,28910 <__alt_data_end+0xfffe8910>
   289b8:	1880004c 	andi	r2,r3,1
   289bc:	10003f1e 	bne	r2,zero,28abc <__sfvwrite_r+0x20c>
   289c0:	0039883a 	mov	fp,zero
   289c4:	0025883a 	mov	r18,zero
   289c8:	90001a26 	beq	r18,zero,28a34 <__sfvwrite_r+0x184>
   289cc:	1880800c 	andi	r2,r3,512
   289d0:	84c00217 	ldw	r19,8(r16)
   289d4:	10002126 	beq	r2,zero,28a5c <__sfvwrite_r+0x1ac>
   289d8:	982f883a 	mov	r23,r19
   289dc:	94c09336 	bltu	r18,r19,28c2c <__sfvwrite_r+0x37c>
   289e0:	1881200c 	andi	r2,r3,1152
   289e4:	10009e1e 	bne	r2,zero,28c60 <__sfvwrite_r+0x3b0>
   289e8:	81000017 	ldw	r4,0(r16)
   289ec:	b80d883a 	mov	r6,r23
   289f0:	e00b883a 	mov	r5,fp
   289f4:	0028e200 	call	28e20 <memmove>
   289f8:	80c00217 	ldw	r3,8(r16)
   289fc:	81000017 	ldw	r4,0(r16)
   28a00:	9005883a 	mov	r2,r18
   28a04:	1ce7c83a 	sub	r19,r3,r19
   28a08:	25cf883a 	add	r7,r4,r23
   28a0c:	84c00215 	stw	r19,8(r16)
   28a10:	81c00015 	stw	r7,0(r16)
   28a14:	a0c00217 	ldw	r3,8(r20)
   28a18:	e0b9883a 	add	fp,fp,r2
   28a1c:	90a5c83a 	sub	r18,r18,r2
   28a20:	18a7c83a 	sub	r19,r3,r2
   28a24:	a4c00215 	stw	r19,8(r20)
   28a28:	983fce26 	beq	r19,zero,28964 <__alt_data_end+0xfffe8964>
   28a2c:	80c0030b 	ldhu	r3,12(r16)
   28a30:	903fe61e 	bne	r18,zero,289cc <__alt_data_end+0xfffe89cc>
   28a34:	8f000017 	ldw	fp,0(r17)
   28a38:	8c800117 	ldw	r18,4(r17)
   28a3c:	8c400204 	addi	r17,r17,8
   28a40:	003fe106 	br	289c8 <__alt_data_end+0xfffe89c8>
   28a44:	8cc00017 	ldw	r19,0(r17)
   28a48:	8c800117 	ldw	r18,4(r17)
   28a4c:	8c400204 	addi	r17,r17,8
   28a50:	003fb306 	br	28920 <__alt_data_end+0xfffe8920>
   28a54:	0005883a 	mov	r2,zero
   28a58:	f800283a 	ret
   28a5c:	81000017 	ldw	r4,0(r16)
   28a60:	80800417 	ldw	r2,16(r16)
   28a64:	11005736 	bltu	r2,r4,28bc4 <__sfvwrite_r+0x314>
   28a68:	85c00517 	ldw	r23,20(r16)
   28a6c:	95c05536 	bltu	r18,r23,28bc4 <__sfvwrite_r+0x314>
   28a70:	00a00034 	movhi	r2,32768
   28a74:	10bfffc4 	addi	r2,r2,-1
   28a78:	9009883a 	mov	r4,r18
   28a7c:	1480012e 	bgeu	r2,r18,28a84 <__sfvwrite_r+0x1d4>
   28a80:	1009883a 	mov	r4,r2
   28a84:	b80b883a 	mov	r5,r23
   28a88:	002a3300 	call	2a330 <__divsi3>
   28a8c:	15cf383a 	mul	r7,r2,r23
   28a90:	81400717 	ldw	r5,28(r16)
   28a94:	80800917 	ldw	r2,36(r16)
   28a98:	e00d883a 	mov	r6,fp
   28a9c:	a809883a 	mov	r4,r21
   28aa0:	103ee83a 	callr	r2
   28aa4:	00bfdb16 	blt	zero,r2,28a14 <__alt_data_end+0xfffe8a14>
   28aa8:	8080030b 	ldhu	r2,12(r16)
   28aac:	10801014 	ori	r2,r2,64
   28ab0:	8080030d 	sth	r2,12(r16)
   28ab4:	00bfffc4 	movi	r2,-1
   28ab8:	003fab06 	br	28968 <__alt_data_end+0xfffe8968>
   28abc:	0027883a 	mov	r19,zero
   28ac0:	0011883a 	mov	r8,zero
   28ac4:	0039883a 	mov	fp,zero
   28ac8:	0025883a 	mov	r18,zero
   28acc:	90001f26 	beq	r18,zero,28b4c <__sfvwrite_r+0x29c>
   28ad0:	40005a26 	beq	r8,zero,28c3c <__sfvwrite_r+0x38c>
   28ad4:	982d883a 	mov	r22,r19
   28ad8:	94c0012e 	bgeu	r18,r19,28ae0 <__sfvwrite_r+0x230>
   28adc:	902d883a 	mov	r22,r18
   28ae0:	81000017 	ldw	r4,0(r16)
   28ae4:	80800417 	ldw	r2,16(r16)
   28ae8:	b02f883a 	mov	r23,r22
   28aec:	81c00517 	ldw	r7,20(r16)
   28af0:	1100032e 	bgeu	r2,r4,28b00 <__sfvwrite_r+0x250>
   28af4:	80c00217 	ldw	r3,8(r16)
   28af8:	38c7883a 	add	r3,r7,r3
   28afc:	1d801816 	blt	r3,r22,28b60 <__sfvwrite_r+0x2b0>
   28b00:	b1c03e16 	blt	r22,r7,28bfc <__sfvwrite_r+0x34c>
   28b04:	80800917 	ldw	r2,36(r16)
   28b08:	81400717 	ldw	r5,28(r16)
   28b0c:	e00d883a 	mov	r6,fp
   28b10:	da000115 	stw	r8,4(sp)
   28b14:	a809883a 	mov	r4,r21
   28b18:	103ee83a 	callr	r2
   28b1c:	102f883a 	mov	r23,r2
   28b20:	da000117 	ldw	r8,4(sp)
   28b24:	00bfe00e 	bge	zero,r2,28aa8 <__alt_data_end+0xfffe8aa8>
   28b28:	9de7c83a 	sub	r19,r19,r23
   28b2c:	98001f26 	beq	r19,zero,28bac <__sfvwrite_r+0x2fc>
   28b30:	a0800217 	ldw	r2,8(r20)
   28b34:	e5f9883a 	add	fp,fp,r23
   28b38:	95e5c83a 	sub	r18,r18,r23
   28b3c:	15efc83a 	sub	r23,r2,r23
   28b40:	a5c00215 	stw	r23,8(r20)
   28b44:	b83f8726 	beq	r23,zero,28964 <__alt_data_end+0xfffe8964>
   28b48:	903fe11e 	bne	r18,zero,28ad0 <__alt_data_end+0xfffe8ad0>
   28b4c:	8f000017 	ldw	fp,0(r17)
   28b50:	8c800117 	ldw	r18,4(r17)
   28b54:	0011883a 	mov	r8,zero
   28b58:	8c400204 	addi	r17,r17,8
   28b5c:	003fdb06 	br	28acc <__alt_data_end+0xfffe8acc>
   28b60:	180d883a 	mov	r6,r3
   28b64:	e00b883a 	mov	r5,fp
   28b68:	da000115 	stw	r8,4(sp)
   28b6c:	d8c00015 	stw	r3,0(sp)
   28b70:	0028e200 	call	28e20 <memmove>
   28b74:	d8c00017 	ldw	r3,0(sp)
   28b78:	80800017 	ldw	r2,0(r16)
   28b7c:	800b883a 	mov	r5,r16
   28b80:	a809883a 	mov	r4,r21
   28b84:	10c5883a 	add	r2,r2,r3
   28b88:	80800015 	stw	r2,0(r16)
   28b8c:	d8c00015 	stw	r3,0(sp)
   28b90:	00242340 	call	24234 <_fflush_r>
   28b94:	d8c00017 	ldw	r3,0(sp)
   28b98:	da000117 	ldw	r8,4(sp)
   28b9c:	103fc21e 	bne	r2,zero,28aa8 <__alt_data_end+0xfffe8aa8>
   28ba0:	182f883a 	mov	r23,r3
   28ba4:	9de7c83a 	sub	r19,r19,r23
   28ba8:	983fe11e 	bne	r19,zero,28b30 <__alt_data_end+0xfffe8b30>
   28bac:	800b883a 	mov	r5,r16
   28bb0:	a809883a 	mov	r4,r21
   28bb4:	00242340 	call	24234 <_fflush_r>
   28bb8:	103fbb1e 	bne	r2,zero,28aa8 <__alt_data_end+0xfffe8aa8>
   28bbc:	0011883a 	mov	r8,zero
   28bc0:	003fdb06 	br	28b30 <__alt_data_end+0xfffe8b30>
   28bc4:	94c0012e 	bgeu	r18,r19,28bcc <__sfvwrite_r+0x31c>
   28bc8:	9027883a 	mov	r19,r18
   28bcc:	980d883a 	mov	r6,r19
   28bd0:	e00b883a 	mov	r5,fp
   28bd4:	0028e200 	call	28e20 <memmove>
   28bd8:	80800217 	ldw	r2,8(r16)
   28bdc:	80c00017 	ldw	r3,0(r16)
   28be0:	14c5c83a 	sub	r2,r2,r19
   28be4:	1cc7883a 	add	r3,r3,r19
   28be8:	80800215 	stw	r2,8(r16)
   28bec:	80c00015 	stw	r3,0(r16)
   28bf0:	10004326 	beq	r2,zero,28d00 <__sfvwrite_r+0x450>
   28bf4:	9805883a 	mov	r2,r19
   28bf8:	003f8606 	br	28a14 <__alt_data_end+0xfffe8a14>
   28bfc:	b00d883a 	mov	r6,r22
   28c00:	e00b883a 	mov	r5,fp
   28c04:	da000115 	stw	r8,4(sp)
   28c08:	0028e200 	call	28e20 <memmove>
   28c0c:	80800217 	ldw	r2,8(r16)
   28c10:	80c00017 	ldw	r3,0(r16)
   28c14:	da000117 	ldw	r8,4(sp)
   28c18:	1585c83a 	sub	r2,r2,r22
   28c1c:	1dad883a 	add	r22,r3,r22
   28c20:	80800215 	stw	r2,8(r16)
   28c24:	85800015 	stw	r22,0(r16)
   28c28:	003fbf06 	br	28b28 <__alt_data_end+0xfffe8b28>
   28c2c:	81000017 	ldw	r4,0(r16)
   28c30:	9027883a 	mov	r19,r18
   28c34:	902f883a 	mov	r23,r18
   28c38:	003f6c06 	br	289ec <__alt_data_end+0xfffe89ec>
   28c3c:	900d883a 	mov	r6,r18
   28c40:	01400284 	movi	r5,10
   28c44:	e009883a 	mov	r4,fp
   28c48:	00256c00 	call	256c0 <memchr>
   28c4c:	10003e26 	beq	r2,zero,28d48 <__sfvwrite_r+0x498>
   28c50:	10800044 	addi	r2,r2,1
   28c54:	1727c83a 	sub	r19,r2,fp
   28c58:	02000044 	movi	r8,1
   28c5c:	003f9d06 	br	28ad4 <__alt_data_end+0xfffe8ad4>
   28c60:	80800517 	ldw	r2,20(r16)
   28c64:	81400417 	ldw	r5,16(r16)
   28c68:	81c00017 	ldw	r7,0(r16)
   28c6c:	10a7883a 	add	r19,r2,r2
   28c70:	9885883a 	add	r2,r19,r2
   28c74:	1026d7fa 	srli	r19,r2,31
   28c78:	396dc83a 	sub	r22,r7,r5
   28c7c:	b1000044 	addi	r4,r22,1
   28c80:	9885883a 	add	r2,r19,r2
   28c84:	1027d07a 	srai	r19,r2,1
   28c88:	2485883a 	add	r2,r4,r18
   28c8c:	980d883a 	mov	r6,r19
   28c90:	9880022e 	bgeu	r19,r2,28c9c <__sfvwrite_r+0x3ec>
   28c94:	1027883a 	mov	r19,r2
   28c98:	100d883a 	mov	r6,r2
   28c9c:	18c1000c 	andi	r3,r3,1024
   28ca0:	18001c26 	beq	r3,zero,28d14 <__sfvwrite_r+0x464>
   28ca4:	300b883a 	mov	r5,r6
   28ca8:	a809883a 	mov	r4,r21
   28cac:	0024eb40 	call	24eb4 <_malloc_r>
   28cb0:	102f883a 	mov	r23,r2
   28cb4:	10002926 	beq	r2,zero,28d5c <__sfvwrite_r+0x4ac>
   28cb8:	81400417 	ldw	r5,16(r16)
   28cbc:	b00d883a 	mov	r6,r22
   28cc0:	1009883a 	mov	r4,r2
   28cc4:	00257a40 	call	257a4 <memcpy>
   28cc8:	8080030b 	ldhu	r2,12(r16)
   28ccc:	00fedfc4 	movi	r3,-1153
   28cd0:	10c4703a 	and	r2,r2,r3
   28cd4:	10802014 	ori	r2,r2,128
   28cd8:	8080030d 	sth	r2,12(r16)
   28cdc:	bd89883a 	add	r4,r23,r22
   28ce0:	9d8fc83a 	sub	r7,r19,r22
   28ce4:	85c00415 	stw	r23,16(r16)
   28ce8:	84c00515 	stw	r19,20(r16)
   28cec:	81000015 	stw	r4,0(r16)
   28cf0:	9027883a 	mov	r19,r18
   28cf4:	81c00215 	stw	r7,8(r16)
   28cf8:	902f883a 	mov	r23,r18
   28cfc:	003f3b06 	br	289ec <__alt_data_end+0xfffe89ec>
   28d00:	800b883a 	mov	r5,r16
   28d04:	a809883a 	mov	r4,r21
   28d08:	00242340 	call	24234 <_fflush_r>
   28d0c:	103fb926 	beq	r2,zero,28bf4 <__alt_data_end+0xfffe8bf4>
   28d10:	003f6506 	br	28aa8 <__alt_data_end+0xfffe8aa8>
   28d14:	a809883a 	mov	r4,r21
   28d18:	0028fdc0 	call	28fdc <_realloc_r>
   28d1c:	102f883a 	mov	r23,r2
   28d20:	103fee1e 	bne	r2,zero,28cdc <__alt_data_end+0xfffe8cdc>
   28d24:	81400417 	ldw	r5,16(r16)
   28d28:	a809883a 	mov	r4,r21
   28d2c:	00247840 	call	24784 <_free_r>
   28d30:	8080030b 	ldhu	r2,12(r16)
   28d34:	00ffdfc4 	movi	r3,-129
   28d38:	1884703a 	and	r2,r3,r2
   28d3c:	00c00304 	movi	r3,12
   28d40:	a8c00015 	stw	r3,0(r21)
   28d44:	003f5906 	br	28aac <__alt_data_end+0xfffe8aac>
   28d48:	94c00044 	addi	r19,r18,1
   28d4c:	02000044 	movi	r8,1
   28d50:	003f6006 	br	28ad4 <__alt_data_end+0xfffe8ad4>
   28d54:	00bfffc4 	movi	r2,-1
   28d58:	003f0306 	br	28968 <__alt_data_end+0xfffe8968>
   28d5c:	00800304 	movi	r2,12
   28d60:	a8800015 	stw	r2,0(r21)
   28d64:	8080030b 	ldhu	r2,12(r16)
   28d68:	003f5006 	br	28aac <__alt_data_end+0xfffe8aac>

00028d6c <_isatty_r>:
   28d6c:	defffd04 	addi	sp,sp,-12
   28d70:	dc000015 	stw	r16,0(sp)
   28d74:	040000f4 	movhi	r16,3
   28d78:	dc400115 	stw	r17,4(sp)
   28d7c:	840ab804 	addi	r16,r16,10976
   28d80:	2023883a 	mov	r17,r4
   28d84:	2809883a 	mov	r4,r5
   28d88:	dfc00215 	stw	ra,8(sp)
   28d8c:	80000015 	stw	zero,0(r16)
   28d90:	002cdac0 	call	2cdac <isatty>
   28d94:	00ffffc4 	movi	r3,-1
   28d98:	10c00526 	beq	r2,r3,28db0 <_isatty_r+0x44>
   28d9c:	dfc00217 	ldw	ra,8(sp)
   28da0:	dc400117 	ldw	r17,4(sp)
   28da4:	dc000017 	ldw	r16,0(sp)
   28da8:	dec00304 	addi	sp,sp,12
   28dac:	f800283a 	ret
   28db0:	80c00017 	ldw	r3,0(r16)
   28db4:	183ff926 	beq	r3,zero,28d9c <__alt_data_end+0xfffe8d9c>
   28db8:	88c00015 	stw	r3,0(r17)
   28dbc:	003ff706 	br	28d9c <__alt_data_end+0xfffe8d9c>

00028dc0 <_lseek_r>:
   28dc0:	defffd04 	addi	sp,sp,-12
   28dc4:	2805883a 	mov	r2,r5
   28dc8:	dc000015 	stw	r16,0(sp)
   28dcc:	040000f4 	movhi	r16,3
   28dd0:	dc400115 	stw	r17,4(sp)
   28dd4:	300b883a 	mov	r5,r6
   28dd8:	840ab804 	addi	r16,r16,10976
   28ddc:	2023883a 	mov	r17,r4
   28de0:	380d883a 	mov	r6,r7
   28de4:	1009883a 	mov	r4,r2
   28de8:	dfc00215 	stw	ra,8(sp)
   28dec:	80000015 	stw	zero,0(r16)
   28df0:	002cf780 	call	2cf78 <lseek>
   28df4:	00ffffc4 	movi	r3,-1
   28df8:	10c00526 	beq	r2,r3,28e10 <_lseek_r+0x50>
   28dfc:	dfc00217 	ldw	ra,8(sp)
   28e00:	dc400117 	ldw	r17,4(sp)
   28e04:	dc000017 	ldw	r16,0(sp)
   28e08:	dec00304 	addi	sp,sp,12
   28e0c:	f800283a 	ret
   28e10:	80c00017 	ldw	r3,0(r16)
   28e14:	183ff926 	beq	r3,zero,28dfc <__alt_data_end+0xfffe8dfc>
   28e18:	88c00015 	stw	r3,0(r17)
   28e1c:	003ff706 	br	28dfc <__alt_data_end+0xfffe8dfc>

00028e20 <memmove>:
   28e20:	2005883a 	mov	r2,r4
   28e24:	29000b2e 	bgeu	r5,r4,28e54 <memmove+0x34>
   28e28:	298f883a 	add	r7,r5,r6
   28e2c:	21c0092e 	bgeu	r4,r7,28e54 <memmove+0x34>
   28e30:	2187883a 	add	r3,r4,r6
   28e34:	198bc83a 	sub	r5,r3,r6
   28e38:	30004826 	beq	r6,zero,28f5c <memmove+0x13c>
   28e3c:	39ffffc4 	addi	r7,r7,-1
   28e40:	39000003 	ldbu	r4,0(r7)
   28e44:	18ffffc4 	addi	r3,r3,-1
   28e48:	19000005 	stb	r4,0(r3)
   28e4c:	28fffb1e 	bne	r5,r3,28e3c <__alt_data_end+0xfffe8e3c>
   28e50:	f800283a 	ret
   28e54:	00c003c4 	movi	r3,15
   28e58:	1980412e 	bgeu	r3,r6,28f60 <memmove+0x140>
   28e5c:	2886b03a 	or	r3,r5,r2
   28e60:	18c000cc 	andi	r3,r3,3
   28e64:	1800401e 	bne	r3,zero,28f68 <memmove+0x148>
   28e68:	33fffc04 	addi	r15,r6,-16
   28e6c:	781ed13a 	srli	r15,r15,4
   28e70:	28c00104 	addi	r3,r5,4
   28e74:	13400104 	addi	r13,r2,4
   28e78:	781c913a 	slli	r14,r15,4
   28e7c:	2b000204 	addi	r12,r5,8
   28e80:	12c00204 	addi	r11,r2,8
   28e84:	73800504 	addi	r14,r14,20
   28e88:	2a800304 	addi	r10,r5,12
   28e8c:	12400304 	addi	r9,r2,12
   28e90:	2b9d883a 	add	r14,r5,r14
   28e94:	2811883a 	mov	r8,r5
   28e98:	100f883a 	mov	r7,r2
   28e9c:	41000017 	ldw	r4,0(r8)
   28ea0:	39c00404 	addi	r7,r7,16
   28ea4:	18c00404 	addi	r3,r3,16
   28ea8:	393ffc15 	stw	r4,-16(r7)
   28eac:	193ffc17 	ldw	r4,-16(r3)
   28eb0:	6b400404 	addi	r13,r13,16
   28eb4:	5ac00404 	addi	r11,r11,16
   28eb8:	693ffc15 	stw	r4,-16(r13)
   28ebc:	61000017 	ldw	r4,0(r12)
   28ec0:	4a400404 	addi	r9,r9,16
   28ec4:	42000404 	addi	r8,r8,16
   28ec8:	593ffc15 	stw	r4,-16(r11)
   28ecc:	51000017 	ldw	r4,0(r10)
   28ed0:	63000404 	addi	r12,r12,16
   28ed4:	52800404 	addi	r10,r10,16
   28ed8:	493ffc15 	stw	r4,-16(r9)
   28edc:	1bbfef1e 	bne	r3,r14,28e9c <__alt_data_end+0xfffe8e9c>
   28ee0:	79000044 	addi	r4,r15,1
   28ee4:	2008913a 	slli	r4,r4,4
   28ee8:	328003cc 	andi	r10,r6,15
   28eec:	02c000c4 	movi	r11,3
   28ef0:	1107883a 	add	r3,r2,r4
   28ef4:	290b883a 	add	r5,r5,r4
   28ef8:	5a801e2e 	bgeu	r11,r10,28f74 <memmove+0x154>
   28efc:	1813883a 	mov	r9,r3
   28f00:	2811883a 	mov	r8,r5
   28f04:	500f883a 	mov	r7,r10
   28f08:	41000017 	ldw	r4,0(r8)
   28f0c:	4a400104 	addi	r9,r9,4
   28f10:	39ffff04 	addi	r7,r7,-4
   28f14:	493fff15 	stw	r4,-4(r9)
   28f18:	42000104 	addi	r8,r8,4
   28f1c:	59fffa36 	bltu	r11,r7,28f08 <__alt_data_end+0xfffe8f08>
   28f20:	513fff04 	addi	r4,r10,-4
   28f24:	2008d0ba 	srli	r4,r4,2
   28f28:	318000cc 	andi	r6,r6,3
   28f2c:	21000044 	addi	r4,r4,1
   28f30:	2109883a 	add	r4,r4,r4
   28f34:	2109883a 	add	r4,r4,r4
   28f38:	1907883a 	add	r3,r3,r4
   28f3c:	290b883a 	add	r5,r5,r4
   28f40:	30000b26 	beq	r6,zero,28f70 <memmove+0x150>
   28f44:	198d883a 	add	r6,r3,r6
   28f48:	29c00003 	ldbu	r7,0(r5)
   28f4c:	18c00044 	addi	r3,r3,1
   28f50:	29400044 	addi	r5,r5,1
   28f54:	19ffffc5 	stb	r7,-1(r3)
   28f58:	19bffb1e 	bne	r3,r6,28f48 <__alt_data_end+0xfffe8f48>
   28f5c:	f800283a 	ret
   28f60:	1007883a 	mov	r3,r2
   28f64:	003ff606 	br	28f40 <__alt_data_end+0xfffe8f40>
   28f68:	1007883a 	mov	r3,r2
   28f6c:	003ff506 	br	28f44 <__alt_data_end+0xfffe8f44>
   28f70:	f800283a 	ret
   28f74:	500d883a 	mov	r6,r10
   28f78:	003ff106 	br	28f40 <__alt_data_end+0xfffe8f40>

00028f7c <_read_r>:
   28f7c:	defffd04 	addi	sp,sp,-12
   28f80:	2805883a 	mov	r2,r5
   28f84:	dc000015 	stw	r16,0(sp)
   28f88:	040000f4 	movhi	r16,3
   28f8c:	dc400115 	stw	r17,4(sp)
   28f90:	300b883a 	mov	r5,r6
   28f94:	840ab804 	addi	r16,r16,10976
   28f98:	2023883a 	mov	r17,r4
   28f9c:	380d883a 	mov	r6,r7
   28fa0:	1009883a 	mov	r4,r2
   28fa4:	dfc00215 	stw	ra,8(sp)
   28fa8:	80000015 	stw	zero,0(r16)
   28fac:	002d14c0 	call	2d14c <read>
   28fb0:	00ffffc4 	movi	r3,-1
   28fb4:	10c00526 	beq	r2,r3,28fcc <_read_r+0x50>
   28fb8:	dfc00217 	ldw	ra,8(sp)
   28fbc:	dc400117 	ldw	r17,4(sp)
   28fc0:	dc000017 	ldw	r16,0(sp)
   28fc4:	dec00304 	addi	sp,sp,12
   28fc8:	f800283a 	ret
   28fcc:	80c00017 	ldw	r3,0(r16)
   28fd0:	183ff926 	beq	r3,zero,28fb8 <__alt_data_end+0xfffe8fb8>
   28fd4:	88c00015 	stw	r3,0(r17)
   28fd8:	003ff706 	br	28fb8 <__alt_data_end+0xfffe8fb8>

00028fdc <_realloc_r>:
   28fdc:	defff604 	addi	sp,sp,-40
   28fe0:	dc800215 	stw	r18,8(sp)
   28fe4:	dfc00915 	stw	ra,36(sp)
   28fe8:	df000815 	stw	fp,32(sp)
   28fec:	ddc00715 	stw	r23,28(sp)
   28ff0:	dd800615 	stw	r22,24(sp)
   28ff4:	dd400515 	stw	r21,20(sp)
   28ff8:	dd000415 	stw	r20,16(sp)
   28ffc:	dcc00315 	stw	r19,12(sp)
   29000:	dc400115 	stw	r17,4(sp)
   29004:	dc000015 	stw	r16,0(sp)
   29008:	3025883a 	mov	r18,r6
   2900c:	2800b726 	beq	r5,zero,292ec <_realloc_r+0x310>
   29010:	282b883a 	mov	r21,r5
   29014:	2029883a 	mov	r20,r4
   29018:	002d0c80 	call	2d0c8 <__malloc_lock>
   2901c:	a8bfff17 	ldw	r2,-4(r21)
   29020:	043fff04 	movi	r16,-4
   29024:	90c002c4 	addi	r3,r18,11
   29028:	01000584 	movi	r4,22
   2902c:	acfffe04 	addi	r19,r21,-8
   29030:	1420703a 	and	r16,r2,r16
   29034:	20c0332e 	bgeu	r4,r3,29104 <_realloc_r+0x128>
   29038:	047ffe04 	movi	r17,-8
   2903c:	1c62703a 	and	r17,r3,r17
   29040:	8807883a 	mov	r3,r17
   29044:	88005816 	blt	r17,zero,291a8 <_realloc_r+0x1cc>
   29048:	8c805736 	bltu	r17,r18,291a8 <_realloc_r+0x1cc>
   2904c:	80c0300e 	bge	r16,r3,29110 <_realloc_r+0x134>
   29050:	070000f4 	movhi	fp,3
   29054:	e73e6304 	addi	fp,fp,-1652
   29058:	e1c00217 	ldw	r7,8(fp)
   2905c:	9c09883a 	add	r4,r19,r16
   29060:	22000117 	ldw	r8,4(r4)
   29064:	21c06326 	beq	r4,r7,291f4 <_realloc_r+0x218>
   29068:	017fff84 	movi	r5,-2
   2906c:	414a703a 	and	r5,r8,r5
   29070:	214b883a 	add	r5,r4,r5
   29074:	29800117 	ldw	r6,4(r5)
   29078:	3180004c 	andi	r6,r6,1
   2907c:	30003f26 	beq	r6,zero,2917c <_realloc_r+0x1a0>
   29080:	1080004c 	andi	r2,r2,1
   29084:	10008326 	beq	r2,zero,29294 <_realloc_r+0x2b8>
   29088:	900b883a 	mov	r5,r18
   2908c:	a009883a 	mov	r4,r20
   29090:	0024eb40 	call	24eb4 <_malloc_r>
   29094:	1025883a 	mov	r18,r2
   29098:	10011e26 	beq	r2,zero,29514 <_realloc_r+0x538>
   2909c:	a93fff17 	ldw	r4,-4(r21)
   290a0:	10fffe04 	addi	r3,r2,-8
   290a4:	00bfff84 	movi	r2,-2
   290a8:	2084703a 	and	r2,r4,r2
   290ac:	9885883a 	add	r2,r19,r2
   290b0:	1880ee26 	beq	r3,r2,2946c <_realloc_r+0x490>
   290b4:	81bfff04 	addi	r6,r16,-4
   290b8:	00800904 	movi	r2,36
   290bc:	1180b836 	bltu	r2,r6,293a0 <_realloc_r+0x3c4>
   290c0:	00c004c4 	movi	r3,19
   290c4:	19809636 	bltu	r3,r6,29320 <_realloc_r+0x344>
   290c8:	9005883a 	mov	r2,r18
   290cc:	a807883a 	mov	r3,r21
   290d0:	19000017 	ldw	r4,0(r3)
   290d4:	11000015 	stw	r4,0(r2)
   290d8:	19000117 	ldw	r4,4(r3)
   290dc:	11000115 	stw	r4,4(r2)
   290e0:	18c00217 	ldw	r3,8(r3)
   290e4:	10c00215 	stw	r3,8(r2)
   290e8:	a80b883a 	mov	r5,r21
   290ec:	a009883a 	mov	r4,r20
   290f0:	00247840 	call	24784 <_free_r>
   290f4:	a009883a 	mov	r4,r20
   290f8:	002d0ec0 	call	2d0ec <__malloc_unlock>
   290fc:	9005883a 	mov	r2,r18
   29100:	00001206 	br	2914c <_realloc_r+0x170>
   29104:	00c00404 	movi	r3,16
   29108:	1823883a 	mov	r17,r3
   2910c:	003fce06 	br	29048 <__alt_data_end+0xfffe9048>
   29110:	a825883a 	mov	r18,r21
   29114:	8445c83a 	sub	r2,r16,r17
   29118:	00c003c4 	movi	r3,15
   2911c:	18802636 	bltu	r3,r2,291b8 <_realloc_r+0x1dc>
   29120:	99800117 	ldw	r6,4(r19)
   29124:	9c07883a 	add	r3,r19,r16
   29128:	3180004c 	andi	r6,r6,1
   2912c:	3420b03a 	or	r16,r6,r16
   29130:	9c000115 	stw	r16,4(r19)
   29134:	18800117 	ldw	r2,4(r3)
   29138:	10800054 	ori	r2,r2,1
   2913c:	18800115 	stw	r2,4(r3)
   29140:	a009883a 	mov	r4,r20
   29144:	002d0ec0 	call	2d0ec <__malloc_unlock>
   29148:	9005883a 	mov	r2,r18
   2914c:	dfc00917 	ldw	ra,36(sp)
   29150:	df000817 	ldw	fp,32(sp)
   29154:	ddc00717 	ldw	r23,28(sp)
   29158:	dd800617 	ldw	r22,24(sp)
   2915c:	dd400517 	ldw	r21,20(sp)
   29160:	dd000417 	ldw	r20,16(sp)
   29164:	dcc00317 	ldw	r19,12(sp)
   29168:	dc800217 	ldw	r18,8(sp)
   2916c:	dc400117 	ldw	r17,4(sp)
   29170:	dc000017 	ldw	r16,0(sp)
   29174:	dec00a04 	addi	sp,sp,40
   29178:	f800283a 	ret
   2917c:	017fff04 	movi	r5,-4
   29180:	414a703a 	and	r5,r8,r5
   29184:	814d883a 	add	r6,r16,r5
   29188:	30c01f16 	blt	r6,r3,29208 <_realloc_r+0x22c>
   2918c:	20800317 	ldw	r2,12(r4)
   29190:	20c00217 	ldw	r3,8(r4)
   29194:	a825883a 	mov	r18,r21
   29198:	3021883a 	mov	r16,r6
   2919c:	18800315 	stw	r2,12(r3)
   291a0:	10c00215 	stw	r3,8(r2)
   291a4:	003fdb06 	br	29114 <__alt_data_end+0xfffe9114>
   291a8:	00800304 	movi	r2,12
   291ac:	a0800015 	stw	r2,0(r20)
   291b0:	0005883a 	mov	r2,zero
   291b4:	003fe506 	br	2914c <__alt_data_end+0xfffe914c>
   291b8:	98c00117 	ldw	r3,4(r19)
   291bc:	9c4b883a 	add	r5,r19,r17
   291c0:	11000054 	ori	r4,r2,1
   291c4:	18c0004c 	andi	r3,r3,1
   291c8:	1c62b03a 	or	r17,r3,r17
   291cc:	9c400115 	stw	r17,4(r19)
   291d0:	29000115 	stw	r4,4(r5)
   291d4:	2885883a 	add	r2,r5,r2
   291d8:	10c00117 	ldw	r3,4(r2)
   291dc:	29400204 	addi	r5,r5,8
   291e0:	a009883a 	mov	r4,r20
   291e4:	18c00054 	ori	r3,r3,1
   291e8:	10c00115 	stw	r3,4(r2)
   291ec:	00247840 	call	24784 <_free_r>
   291f0:	003fd306 	br	29140 <__alt_data_end+0xfffe9140>
   291f4:	017fff04 	movi	r5,-4
   291f8:	414a703a 	and	r5,r8,r5
   291fc:	89800404 	addi	r6,r17,16
   29200:	8151883a 	add	r8,r16,r5
   29204:	4180590e 	bge	r8,r6,2936c <_realloc_r+0x390>
   29208:	1080004c 	andi	r2,r2,1
   2920c:	103f9e1e 	bne	r2,zero,29088 <__alt_data_end+0xfffe9088>
   29210:	adbffe17 	ldw	r22,-8(r21)
   29214:	00bfff04 	movi	r2,-4
   29218:	9dadc83a 	sub	r22,r19,r22
   2921c:	b1800117 	ldw	r6,4(r22)
   29220:	3084703a 	and	r2,r6,r2
   29224:	20002026 	beq	r4,zero,292a8 <_realloc_r+0x2cc>
   29228:	80af883a 	add	r23,r16,r2
   2922c:	b96f883a 	add	r23,r23,r5
   29230:	21c05f26 	beq	r4,r7,293b0 <_realloc_r+0x3d4>
   29234:	b8c01c16 	blt	r23,r3,292a8 <_realloc_r+0x2cc>
   29238:	20800317 	ldw	r2,12(r4)
   2923c:	20c00217 	ldw	r3,8(r4)
   29240:	81bfff04 	addi	r6,r16,-4
   29244:	01000904 	movi	r4,36
   29248:	18800315 	stw	r2,12(r3)
   2924c:	10c00215 	stw	r3,8(r2)
   29250:	b0c00217 	ldw	r3,8(r22)
   29254:	b0800317 	ldw	r2,12(r22)
   29258:	b4800204 	addi	r18,r22,8
   2925c:	18800315 	stw	r2,12(r3)
   29260:	10c00215 	stw	r3,8(r2)
   29264:	21801b36 	bltu	r4,r6,292d4 <_realloc_r+0x2f8>
   29268:	008004c4 	movi	r2,19
   2926c:	1180352e 	bgeu	r2,r6,29344 <_realloc_r+0x368>
   29270:	a8800017 	ldw	r2,0(r21)
   29274:	b0800215 	stw	r2,8(r22)
   29278:	a8800117 	ldw	r2,4(r21)
   2927c:	b0800315 	stw	r2,12(r22)
   29280:	008006c4 	movi	r2,27
   29284:	11807f36 	bltu	r2,r6,29484 <_realloc_r+0x4a8>
   29288:	b0800404 	addi	r2,r22,16
   2928c:	ad400204 	addi	r21,r21,8
   29290:	00002d06 	br	29348 <_realloc_r+0x36c>
   29294:	adbffe17 	ldw	r22,-8(r21)
   29298:	00bfff04 	movi	r2,-4
   2929c:	9dadc83a 	sub	r22,r19,r22
   292a0:	b1000117 	ldw	r4,4(r22)
   292a4:	2084703a 	and	r2,r4,r2
   292a8:	b03f7726 	beq	r22,zero,29088 <__alt_data_end+0xfffe9088>
   292ac:	80af883a 	add	r23,r16,r2
   292b0:	b8ff7516 	blt	r23,r3,29088 <__alt_data_end+0xfffe9088>
   292b4:	b0800317 	ldw	r2,12(r22)
   292b8:	b0c00217 	ldw	r3,8(r22)
   292bc:	81bfff04 	addi	r6,r16,-4
   292c0:	01000904 	movi	r4,36
   292c4:	18800315 	stw	r2,12(r3)
   292c8:	10c00215 	stw	r3,8(r2)
   292cc:	b4800204 	addi	r18,r22,8
   292d0:	21bfe52e 	bgeu	r4,r6,29268 <__alt_data_end+0xfffe9268>
   292d4:	a80b883a 	mov	r5,r21
   292d8:	9009883a 	mov	r4,r18
   292dc:	0028e200 	call	28e20 <memmove>
   292e0:	b821883a 	mov	r16,r23
   292e4:	b027883a 	mov	r19,r22
   292e8:	003f8a06 	br	29114 <__alt_data_end+0xfffe9114>
   292ec:	300b883a 	mov	r5,r6
   292f0:	dfc00917 	ldw	ra,36(sp)
   292f4:	df000817 	ldw	fp,32(sp)
   292f8:	ddc00717 	ldw	r23,28(sp)
   292fc:	dd800617 	ldw	r22,24(sp)
   29300:	dd400517 	ldw	r21,20(sp)
   29304:	dd000417 	ldw	r20,16(sp)
   29308:	dcc00317 	ldw	r19,12(sp)
   2930c:	dc800217 	ldw	r18,8(sp)
   29310:	dc400117 	ldw	r17,4(sp)
   29314:	dc000017 	ldw	r16,0(sp)
   29318:	dec00a04 	addi	sp,sp,40
   2931c:	0024eb41 	jmpi	24eb4 <_malloc_r>
   29320:	a8c00017 	ldw	r3,0(r21)
   29324:	90c00015 	stw	r3,0(r18)
   29328:	a8c00117 	ldw	r3,4(r21)
   2932c:	90c00115 	stw	r3,4(r18)
   29330:	00c006c4 	movi	r3,27
   29334:	19804536 	bltu	r3,r6,2944c <_realloc_r+0x470>
   29338:	90800204 	addi	r2,r18,8
   2933c:	a8c00204 	addi	r3,r21,8
   29340:	003f6306 	br	290d0 <__alt_data_end+0xfffe90d0>
   29344:	9005883a 	mov	r2,r18
   29348:	a8c00017 	ldw	r3,0(r21)
   2934c:	b821883a 	mov	r16,r23
   29350:	b027883a 	mov	r19,r22
   29354:	10c00015 	stw	r3,0(r2)
   29358:	a8c00117 	ldw	r3,4(r21)
   2935c:	10c00115 	stw	r3,4(r2)
   29360:	a8c00217 	ldw	r3,8(r21)
   29364:	10c00215 	stw	r3,8(r2)
   29368:	003f6a06 	br	29114 <__alt_data_end+0xfffe9114>
   2936c:	9c67883a 	add	r19,r19,r17
   29370:	4445c83a 	sub	r2,r8,r17
   29374:	e4c00215 	stw	r19,8(fp)
   29378:	10800054 	ori	r2,r2,1
   2937c:	98800115 	stw	r2,4(r19)
   29380:	a8bfff17 	ldw	r2,-4(r21)
   29384:	a009883a 	mov	r4,r20
   29388:	1080004c 	andi	r2,r2,1
   2938c:	1462b03a 	or	r17,r2,r17
   29390:	ac7fff15 	stw	r17,-4(r21)
   29394:	002d0ec0 	call	2d0ec <__malloc_unlock>
   29398:	a805883a 	mov	r2,r21
   2939c:	003f6b06 	br	2914c <__alt_data_end+0xfffe914c>
   293a0:	a80b883a 	mov	r5,r21
   293a4:	9009883a 	mov	r4,r18
   293a8:	0028e200 	call	28e20 <memmove>
   293ac:	003f4e06 	br	290e8 <__alt_data_end+0xfffe90e8>
   293b0:	89000404 	addi	r4,r17,16
   293b4:	b93fbc16 	blt	r23,r4,292a8 <__alt_data_end+0xfffe92a8>
   293b8:	b0800317 	ldw	r2,12(r22)
   293bc:	b0c00217 	ldw	r3,8(r22)
   293c0:	81bfff04 	addi	r6,r16,-4
   293c4:	01000904 	movi	r4,36
   293c8:	18800315 	stw	r2,12(r3)
   293cc:	10c00215 	stw	r3,8(r2)
   293d0:	b4800204 	addi	r18,r22,8
   293d4:	21804336 	bltu	r4,r6,294e4 <_realloc_r+0x508>
   293d8:	008004c4 	movi	r2,19
   293dc:	11803f2e 	bgeu	r2,r6,294dc <_realloc_r+0x500>
   293e0:	a8800017 	ldw	r2,0(r21)
   293e4:	b0800215 	stw	r2,8(r22)
   293e8:	a8800117 	ldw	r2,4(r21)
   293ec:	b0800315 	stw	r2,12(r22)
   293f0:	008006c4 	movi	r2,27
   293f4:	11803f36 	bltu	r2,r6,294f4 <_realloc_r+0x518>
   293f8:	b0800404 	addi	r2,r22,16
   293fc:	ad400204 	addi	r21,r21,8
   29400:	a8c00017 	ldw	r3,0(r21)
   29404:	10c00015 	stw	r3,0(r2)
   29408:	a8c00117 	ldw	r3,4(r21)
   2940c:	10c00115 	stw	r3,4(r2)
   29410:	a8c00217 	ldw	r3,8(r21)
   29414:	10c00215 	stw	r3,8(r2)
   29418:	b447883a 	add	r3,r22,r17
   2941c:	bc45c83a 	sub	r2,r23,r17
   29420:	e0c00215 	stw	r3,8(fp)
   29424:	10800054 	ori	r2,r2,1
   29428:	18800115 	stw	r2,4(r3)
   2942c:	b0800117 	ldw	r2,4(r22)
   29430:	a009883a 	mov	r4,r20
   29434:	1080004c 	andi	r2,r2,1
   29438:	1462b03a 	or	r17,r2,r17
   2943c:	b4400115 	stw	r17,4(r22)
   29440:	002d0ec0 	call	2d0ec <__malloc_unlock>
   29444:	9005883a 	mov	r2,r18
   29448:	003f4006 	br	2914c <__alt_data_end+0xfffe914c>
   2944c:	a8c00217 	ldw	r3,8(r21)
   29450:	90c00215 	stw	r3,8(r18)
   29454:	a8c00317 	ldw	r3,12(r21)
   29458:	90c00315 	stw	r3,12(r18)
   2945c:	30801126 	beq	r6,r2,294a4 <_realloc_r+0x4c8>
   29460:	90800404 	addi	r2,r18,16
   29464:	a8c00404 	addi	r3,r21,16
   29468:	003f1906 	br	290d0 <__alt_data_end+0xfffe90d0>
   2946c:	90ffff17 	ldw	r3,-4(r18)
   29470:	00bfff04 	movi	r2,-4
   29474:	a825883a 	mov	r18,r21
   29478:	1884703a 	and	r2,r3,r2
   2947c:	80a1883a 	add	r16,r16,r2
   29480:	003f2406 	br	29114 <__alt_data_end+0xfffe9114>
   29484:	a8800217 	ldw	r2,8(r21)
   29488:	b0800415 	stw	r2,16(r22)
   2948c:	a8800317 	ldw	r2,12(r21)
   29490:	b0800515 	stw	r2,20(r22)
   29494:	31000a26 	beq	r6,r4,294c0 <_realloc_r+0x4e4>
   29498:	b0800604 	addi	r2,r22,24
   2949c:	ad400404 	addi	r21,r21,16
   294a0:	003fa906 	br	29348 <__alt_data_end+0xfffe9348>
   294a4:	a9000417 	ldw	r4,16(r21)
   294a8:	90800604 	addi	r2,r18,24
   294ac:	a8c00604 	addi	r3,r21,24
   294b0:	91000415 	stw	r4,16(r18)
   294b4:	a9000517 	ldw	r4,20(r21)
   294b8:	91000515 	stw	r4,20(r18)
   294bc:	003f0406 	br	290d0 <__alt_data_end+0xfffe90d0>
   294c0:	a8c00417 	ldw	r3,16(r21)
   294c4:	ad400604 	addi	r21,r21,24
   294c8:	b0800804 	addi	r2,r22,32
   294cc:	b0c00615 	stw	r3,24(r22)
   294d0:	a8ffff17 	ldw	r3,-4(r21)
   294d4:	b0c00715 	stw	r3,28(r22)
   294d8:	003f9b06 	br	29348 <__alt_data_end+0xfffe9348>
   294dc:	9005883a 	mov	r2,r18
   294e0:	003fc706 	br	29400 <__alt_data_end+0xfffe9400>
   294e4:	a80b883a 	mov	r5,r21
   294e8:	9009883a 	mov	r4,r18
   294ec:	0028e200 	call	28e20 <memmove>
   294f0:	003fc906 	br	29418 <__alt_data_end+0xfffe9418>
   294f4:	a8800217 	ldw	r2,8(r21)
   294f8:	b0800415 	stw	r2,16(r22)
   294fc:	a8800317 	ldw	r2,12(r21)
   29500:	b0800515 	stw	r2,20(r22)
   29504:	31000726 	beq	r6,r4,29524 <_realloc_r+0x548>
   29508:	b0800604 	addi	r2,r22,24
   2950c:	ad400404 	addi	r21,r21,16
   29510:	003fbb06 	br	29400 <__alt_data_end+0xfffe9400>
   29514:	a009883a 	mov	r4,r20
   29518:	002d0ec0 	call	2d0ec <__malloc_unlock>
   2951c:	0005883a 	mov	r2,zero
   29520:	003f0a06 	br	2914c <__alt_data_end+0xfffe914c>
   29524:	a8c00417 	ldw	r3,16(r21)
   29528:	ad400604 	addi	r21,r21,24
   2952c:	b0800804 	addi	r2,r22,32
   29530:	b0c00615 	stw	r3,24(r22)
   29534:	a8ffff17 	ldw	r3,-4(r21)
   29538:	b0c00715 	stw	r3,28(r22)
   2953c:	003fb006 	br	29400 <__alt_data_end+0xfffe9400>

00029540 <__swbuf_r>:
   29540:	defffb04 	addi	sp,sp,-20
   29544:	dcc00315 	stw	r19,12(sp)
   29548:	dc800215 	stw	r18,8(sp)
   2954c:	dc000015 	stw	r16,0(sp)
   29550:	dfc00415 	stw	ra,16(sp)
   29554:	dc400115 	stw	r17,4(sp)
   29558:	2025883a 	mov	r18,r4
   2955c:	2827883a 	mov	r19,r5
   29560:	3021883a 	mov	r16,r6
   29564:	20000226 	beq	r4,zero,29570 <__swbuf_r+0x30>
   29568:	20800e17 	ldw	r2,56(r4)
   2956c:	10004226 	beq	r2,zero,29678 <__swbuf_r+0x138>
   29570:	80800617 	ldw	r2,24(r16)
   29574:	8100030b 	ldhu	r4,12(r16)
   29578:	80800215 	stw	r2,8(r16)
   2957c:	2080020c 	andi	r2,r4,8
   29580:	10003626 	beq	r2,zero,2965c <__swbuf_r+0x11c>
   29584:	80c00417 	ldw	r3,16(r16)
   29588:	18003426 	beq	r3,zero,2965c <__swbuf_r+0x11c>
   2958c:	2088000c 	andi	r2,r4,8192
   29590:	9c403fcc 	andi	r17,r19,255
   29594:	10001a26 	beq	r2,zero,29600 <__swbuf_r+0xc0>
   29598:	80800017 	ldw	r2,0(r16)
   2959c:	81000517 	ldw	r4,20(r16)
   295a0:	10c7c83a 	sub	r3,r2,r3
   295a4:	1900200e 	bge	r3,r4,29628 <__swbuf_r+0xe8>
   295a8:	18c00044 	addi	r3,r3,1
   295ac:	81000217 	ldw	r4,8(r16)
   295b0:	11400044 	addi	r5,r2,1
   295b4:	81400015 	stw	r5,0(r16)
   295b8:	213fffc4 	addi	r4,r4,-1
   295bc:	81000215 	stw	r4,8(r16)
   295c0:	14c00005 	stb	r19,0(r2)
   295c4:	80800517 	ldw	r2,20(r16)
   295c8:	10c01e26 	beq	r2,r3,29644 <__swbuf_r+0x104>
   295cc:	8080030b 	ldhu	r2,12(r16)
   295d0:	1080004c 	andi	r2,r2,1
   295d4:	10000226 	beq	r2,zero,295e0 <__swbuf_r+0xa0>
   295d8:	00800284 	movi	r2,10
   295dc:	88801926 	beq	r17,r2,29644 <__swbuf_r+0x104>
   295e0:	8805883a 	mov	r2,r17
   295e4:	dfc00417 	ldw	ra,16(sp)
   295e8:	dcc00317 	ldw	r19,12(sp)
   295ec:	dc800217 	ldw	r18,8(sp)
   295f0:	dc400117 	ldw	r17,4(sp)
   295f4:	dc000017 	ldw	r16,0(sp)
   295f8:	dec00504 	addi	sp,sp,20
   295fc:	f800283a 	ret
   29600:	81401917 	ldw	r5,100(r16)
   29604:	00b7ffc4 	movi	r2,-8193
   29608:	21080014 	ori	r4,r4,8192
   2960c:	2884703a 	and	r2,r5,r2
   29610:	80801915 	stw	r2,100(r16)
   29614:	80800017 	ldw	r2,0(r16)
   29618:	8100030d 	sth	r4,12(r16)
   2961c:	81000517 	ldw	r4,20(r16)
   29620:	10c7c83a 	sub	r3,r2,r3
   29624:	193fe016 	blt	r3,r4,295a8 <__alt_data_end+0xfffe95a8>
   29628:	800b883a 	mov	r5,r16
   2962c:	9009883a 	mov	r4,r18
   29630:	00242340 	call	24234 <_fflush_r>
   29634:	1000071e 	bne	r2,zero,29654 <__swbuf_r+0x114>
   29638:	80800017 	ldw	r2,0(r16)
   2963c:	00c00044 	movi	r3,1
   29640:	003fda06 	br	295ac <__alt_data_end+0xfffe95ac>
   29644:	800b883a 	mov	r5,r16
   29648:	9009883a 	mov	r4,r18
   2964c:	00242340 	call	24234 <_fflush_r>
   29650:	103fe326 	beq	r2,zero,295e0 <__alt_data_end+0xfffe95e0>
   29654:	00bfffc4 	movi	r2,-1
   29658:	003fe206 	br	295e4 <__alt_data_end+0xfffe95e4>
   2965c:	800b883a 	mov	r5,r16
   29660:	9009883a 	mov	r4,r18
   29664:	002263c0 	call	2263c <__swsetup_r>
   29668:	103ffa1e 	bne	r2,zero,29654 <__alt_data_end+0xfffe9654>
   2966c:	8100030b 	ldhu	r4,12(r16)
   29670:	80c00417 	ldw	r3,16(r16)
   29674:	003fc506 	br	2958c <__alt_data_end+0xfffe958c>
   29678:	00246100 	call	24610 <__sinit>
   2967c:	003fbc06 	br	29570 <__alt_data_end+0xfffe9570>

00029680 <__swbuf>:
   29680:	008000f4 	movhi	r2,3
   29684:	1083e804 	addi	r2,r2,4000
   29688:	280d883a 	mov	r6,r5
   2968c:	200b883a 	mov	r5,r4
   29690:	11000017 	ldw	r4,0(r2)
   29694:	00295401 	jmpi	29540 <__swbuf_r>

00029698 <_wcrtomb_r>:
   29698:	defff604 	addi	sp,sp,-40
   2969c:	008000f4 	movhi	r2,3
   296a0:	dc800815 	stw	r18,32(sp)
   296a4:	dc400715 	stw	r17,28(sp)
   296a8:	dc000615 	stw	r16,24(sp)
   296ac:	1083ec04 	addi	r2,r2,4016
   296b0:	dfc00915 	stw	ra,36(sp)
   296b4:	2021883a 	mov	r16,r4
   296b8:	3823883a 	mov	r17,r7
   296bc:	14800017 	ldw	r18,0(r2)
   296c0:	28001426 	beq	r5,zero,29714 <_wcrtomb_r+0x7c>
   296c4:	d9400415 	stw	r5,16(sp)
   296c8:	d9800515 	stw	r6,20(sp)
   296cc:	0024c980 	call	24c98 <__locale_charset>
   296d0:	d9800517 	ldw	r6,20(sp)
   296d4:	d9400417 	ldw	r5,16(sp)
   296d8:	100f883a 	mov	r7,r2
   296dc:	dc400015 	stw	r17,0(sp)
   296e0:	8009883a 	mov	r4,r16
   296e4:	903ee83a 	callr	r18
   296e8:	00ffffc4 	movi	r3,-1
   296ec:	10c0031e 	bne	r2,r3,296fc <_wcrtomb_r+0x64>
   296f0:	88000015 	stw	zero,0(r17)
   296f4:	00c02284 	movi	r3,138
   296f8:	80c00015 	stw	r3,0(r16)
   296fc:	dfc00917 	ldw	ra,36(sp)
   29700:	dc800817 	ldw	r18,32(sp)
   29704:	dc400717 	ldw	r17,28(sp)
   29708:	dc000617 	ldw	r16,24(sp)
   2970c:	dec00a04 	addi	sp,sp,40
   29710:	f800283a 	ret
   29714:	0024c980 	call	24c98 <__locale_charset>
   29718:	100f883a 	mov	r7,r2
   2971c:	dc400015 	stw	r17,0(sp)
   29720:	000d883a 	mov	r6,zero
   29724:	d9400104 	addi	r5,sp,4
   29728:	8009883a 	mov	r4,r16
   2972c:	903ee83a 	callr	r18
   29730:	003fed06 	br	296e8 <__alt_data_end+0xfffe96e8>

00029734 <wcrtomb>:
   29734:	defff604 	addi	sp,sp,-40
   29738:	008000f4 	movhi	r2,3
   2973c:	dc800615 	stw	r18,24(sp)
   29740:	dc400515 	stw	r17,20(sp)
   29744:	1083e804 	addi	r2,r2,4000
   29748:	dfc00915 	stw	ra,36(sp)
   2974c:	dd000815 	stw	r20,32(sp)
   29750:	dcc00715 	stw	r19,28(sp)
   29754:	dc000415 	stw	r16,16(sp)
   29758:	3025883a 	mov	r18,r6
   2975c:	14400017 	ldw	r17,0(r2)
   29760:	20001926 	beq	r4,zero,297c8 <wcrtomb+0x94>
   29764:	008000f4 	movhi	r2,3
   29768:	1083ec04 	addi	r2,r2,4016
   2976c:	15000017 	ldw	r20,0(r2)
   29770:	2021883a 	mov	r16,r4
   29774:	2827883a 	mov	r19,r5
   29778:	0024c980 	call	24c98 <__locale_charset>
   2977c:	100f883a 	mov	r7,r2
   29780:	dc800015 	stw	r18,0(sp)
   29784:	980d883a 	mov	r6,r19
   29788:	800b883a 	mov	r5,r16
   2978c:	8809883a 	mov	r4,r17
   29790:	a03ee83a 	callr	r20
   29794:	00ffffc4 	movi	r3,-1
   29798:	10c0031e 	bne	r2,r3,297a8 <wcrtomb+0x74>
   2979c:	90000015 	stw	zero,0(r18)
   297a0:	00c02284 	movi	r3,138
   297a4:	88c00015 	stw	r3,0(r17)
   297a8:	dfc00917 	ldw	ra,36(sp)
   297ac:	dd000817 	ldw	r20,32(sp)
   297b0:	dcc00717 	ldw	r19,28(sp)
   297b4:	dc800617 	ldw	r18,24(sp)
   297b8:	dc400517 	ldw	r17,20(sp)
   297bc:	dc000417 	ldw	r16,16(sp)
   297c0:	dec00a04 	addi	sp,sp,40
   297c4:	f800283a 	ret
   297c8:	008000f4 	movhi	r2,3
   297cc:	1083ec04 	addi	r2,r2,4016
   297d0:	14000017 	ldw	r16,0(r2)
   297d4:	0024c980 	call	24c98 <__locale_charset>
   297d8:	100f883a 	mov	r7,r2
   297dc:	dc800015 	stw	r18,0(sp)
   297e0:	000d883a 	mov	r6,zero
   297e4:	d9400104 	addi	r5,sp,4
   297e8:	8809883a 	mov	r4,r17
   297ec:	803ee83a 	callr	r16
   297f0:	003fe806 	br	29794 <__alt_data_end+0xfffe9794>

000297f4 <__ascii_wctomb>:
   297f4:	28000526 	beq	r5,zero,2980c <__ascii_wctomb+0x18>
   297f8:	00803fc4 	movi	r2,255
   297fc:	11800536 	bltu	r2,r6,29814 <__ascii_wctomb+0x20>
   29800:	29800005 	stb	r6,0(r5)
   29804:	00800044 	movi	r2,1
   29808:	f800283a 	ret
   2980c:	0005883a 	mov	r2,zero
   29810:	f800283a 	ret
   29814:	00802284 	movi	r2,138
   29818:	20800015 	stw	r2,0(r4)
   2981c:	00bfffc4 	movi	r2,-1
   29820:	f800283a 	ret

00029824 <_wctomb_r>:
   29824:	008000f4 	movhi	r2,3
   29828:	defff904 	addi	sp,sp,-28
   2982c:	1083ec04 	addi	r2,r2,4016
   29830:	dfc00615 	stw	ra,24(sp)
   29834:	dc400515 	stw	r17,20(sp)
   29838:	dc000415 	stw	r16,16(sp)
   2983c:	3823883a 	mov	r17,r7
   29840:	14000017 	ldw	r16,0(r2)
   29844:	d9000115 	stw	r4,4(sp)
   29848:	d9400215 	stw	r5,8(sp)
   2984c:	d9800315 	stw	r6,12(sp)
   29850:	0024c980 	call	24c98 <__locale_charset>
   29854:	d9800317 	ldw	r6,12(sp)
   29858:	d9400217 	ldw	r5,8(sp)
   2985c:	d9000117 	ldw	r4,4(sp)
   29860:	100f883a 	mov	r7,r2
   29864:	dc400015 	stw	r17,0(sp)
   29868:	803ee83a 	callr	r16
   2986c:	dfc00617 	ldw	ra,24(sp)
   29870:	dc400517 	ldw	r17,20(sp)
   29874:	dc000417 	ldw	r16,16(sp)
   29878:	dec00704 	addi	sp,sp,28
   2987c:	f800283a 	ret

00029880 <__udivdi3>:
   29880:	defff504 	addi	sp,sp,-44
   29884:	dcc00415 	stw	r19,16(sp)
   29888:	dc000115 	stw	r16,4(sp)
   2988c:	dfc00a15 	stw	ra,40(sp)
   29890:	df000915 	stw	fp,36(sp)
   29894:	ddc00815 	stw	r23,32(sp)
   29898:	dd800715 	stw	r22,28(sp)
   2989c:	dd400615 	stw	r21,24(sp)
   298a0:	dd000515 	stw	r20,20(sp)
   298a4:	dc800315 	stw	r18,12(sp)
   298a8:	dc400215 	stw	r17,8(sp)
   298ac:	2027883a 	mov	r19,r4
   298b0:	2821883a 	mov	r16,r5
   298b4:	3800411e 	bne	r7,zero,299bc <__udivdi3+0x13c>
   298b8:	3023883a 	mov	r17,r6
   298bc:	2025883a 	mov	r18,r4
   298c0:	2980522e 	bgeu	r5,r6,29a0c <__udivdi3+0x18c>
   298c4:	00bfffd4 	movui	r2,65535
   298c8:	282d883a 	mov	r22,r5
   298cc:	1180a836 	bltu	r2,r6,29b70 <__udivdi3+0x2f0>
   298d0:	00803fc4 	movi	r2,255
   298d4:	1185803a 	cmpltu	r2,r2,r6
   298d8:	100490fa 	slli	r2,r2,3
   298dc:	3086d83a 	srl	r3,r6,r2
   298e0:	010000f4 	movhi	r4,3
   298e4:	213cef04 	addi	r4,r4,-3140
   298e8:	20c7883a 	add	r3,r4,r3
   298ec:	18c00003 	ldbu	r3,0(r3)
   298f0:	1885883a 	add	r2,r3,r2
   298f4:	00c00804 	movi	r3,32
   298f8:	1887c83a 	sub	r3,r3,r2
   298fc:	18000526 	beq	r3,zero,29914 <__udivdi3+0x94>
   29900:	80e0983a 	sll	r16,r16,r3
   29904:	9884d83a 	srl	r2,r19,r2
   29908:	30e2983a 	sll	r17,r6,r3
   2990c:	98e4983a 	sll	r18,r19,r3
   29910:	142cb03a 	or	r22,r2,r16
   29914:	882ad43a 	srli	r21,r17,16
   29918:	b009883a 	mov	r4,r22
   2991c:	8d3fffcc 	andi	r20,r17,65535
   29920:	a80b883a 	mov	r5,r21
   29924:	002a48c0 	call	2a48c <__umodsi3>
   29928:	b009883a 	mov	r4,r22
   2992c:	a80b883a 	mov	r5,r21
   29930:	1027883a 	mov	r19,r2
   29934:	002a4280 	call	2a428 <__udivsi3>
   29938:	102d883a 	mov	r22,r2
   2993c:	9826943a 	slli	r19,r19,16
   29940:	9004d43a 	srli	r2,r18,16
   29944:	a5a1383a 	mul	r16,r20,r22
   29948:	14c4b03a 	or	r2,r2,r19
   2994c:	1400052e 	bgeu	r2,r16,29964 <__udivdi3+0xe4>
   29950:	1445883a 	add	r2,r2,r17
   29954:	b0ffffc4 	addi	r3,r22,-1
   29958:	14400136 	bltu	r2,r17,29960 <__udivdi3+0xe0>
   2995c:	14012336 	bltu	r2,r16,29dec <__udivdi3+0x56c>
   29960:	182d883a 	mov	r22,r3
   29964:	1421c83a 	sub	r16,r2,r16
   29968:	a80b883a 	mov	r5,r21
   2996c:	8009883a 	mov	r4,r16
   29970:	002a48c0 	call	2a48c <__umodsi3>
   29974:	1027883a 	mov	r19,r2
   29978:	a80b883a 	mov	r5,r21
   2997c:	8009883a 	mov	r4,r16
   29980:	002a4280 	call	2a428 <__udivsi3>
   29984:	9826943a 	slli	r19,r19,16
   29988:	a0a9383a 	mul	r20,r20,r2
   2998c:	94bfffcc 	andi	r18,r18,65535
   29990:	94e4b03a 	or	r18,r18,r19
   29994:	9500052e 	bgeu	r18,r20,299ac <__udivdi3+0x12c>
   29998:	8ca5883a 	add	r18,r17,r18
   2999c:	10ffffc4 	addi	r3,r2,-1
   299a0:	9440f136 	bltu	r18,r17,29d68 <__udivdi3+0x4e8>
   299a4:	9500f02e 	bgeu	r18,r20,29d68 <__udivdi3+0x4e8>
   299a8:	10bfff84 	addi	r2,r2,-2
   299ac:	b00c943a 	slli	r6,r22,16
   299b0:	0007883a 	mov	r3,zero
   299b4:	3084b03a 	or	r2,r6,r2
   299b8:	00005906 	br	29b20 <__udivdi3+0x2a0>
   299bc:	29c05636 	bltu	r5,r7,29b18 <__udivdi3+0x298>
   299c0:	00bfffd4 	movui	r2,65535
   299c4:	11c0622e 	bgeu	r2,r7,29b50 <__udivdi3+0x2d0>
   299c8:	00804034 	movhi	r2,256
   299cc:	10bfffc4 	addi	r2,r2,-1
   299d0:	11c0ee36 	bltu	r2,r7,29d8c <__udivdi3+0x50c>
   299d4:	00800404 	movi	r2,16
   299d8:	3886d83a 	srl	r3,r7,r2
   299dc:	010000f4 	movhi	r4,3
   299e0:	213cef04 	addi	r4,r4,-3140
   299e4:	20c7883a 	add	r3,r4,r3
   299e8:	18c00003 	ldbu	r3,0(r3)
   299ec:	05400804 	movi	r21,32
   299f0:	1885883a 	add	r2,r3,r2
   299f4:	a8abc83a 	sub	r21,r21,r2
   299f8:	a800621e 	bne	r21,zero,29b84 <__udivdi3+0x304>
   299fc:	3c00e936 	bltu	r7,r16,29da4 <__udivdi3+0x524>
   29a00:	9985403a 	cmpgeu	r2,r19,r6
   29a04:	0007883a 	mov	r3,zero
   29a08:	00004506 	br	29b20 <__udivdi3+0x2a0>
   29a0c:	3000041e 	bne	r6,zero,29a20 <__udivdi3+0x1a0>
   29a10:	000b883a 	mov	r5,zero
   29a14:	01000044 	movi	r4,1
   29a18:	002a4280 	call	2a428 <__udivsi3>
   29a1c:	1023883a 	mov	r17,r2
   29a20:	00bfffd4 	movui	r2,65535
   29a24:	14404e2e 	bgeu	r2,r17,29b60 <__udivdi3+0x2e0>
   29a28:	00804034 	movhi	r2,256
   29a2c:	10bfffc4 	addi	r2,r2,-1
   29a30:	1440d836 	bltu	r2,r17,29d94 <__udivdi3+0x514>
   29a34:	00800404 	movi	r2,16
   29a38:	8886d83a 	srl	r3,r17,r2
   29a3c:	010000f4 	movhi	r4,3
   29a40:	213cef04 	addi	r4,r4,-3140
   29a44:	20c7883a 	add	r3,r4,r3
   29a48:	18c00003 	ldbu	r3,0(r3)
   29a4c:	1885883a 	add	r2,r3,r2
   29a50:	00c00804 	movi	r3,32
   29a54:	1887c83a 	sub	r3,r3,r2
   29a58:	18008f1e 	bne	r3,zero,29c98 <__udivdi3+0x418>
   29a5c:	882ad43a 	srli	r21,r17,16
   29a60:	8461c83a 	sub	r16,r16,r17
   29a64:	8d3fffcc 	andi	r20,r17,65535
   29a68:	00c00044 	movi	r3,1
   29a6c:	8009883a 	mov	r4,r16
   29a70:	a80b883a 	mov	r5,r21
   29a74:	d8c00015 	stw	r3,0(sp)
   29a78:	002a48c0 	call	2a48c <__umodsi3>
   29a7c:	8009883a 	mov	r4,r16
   29a80:	a80b883a 	mov	r5,r21
   29a84:	1027883a 	mov	r19,r2
   29a88:	002a4280 	call	2a428 <__udivsi3>
   29a8c:	9826943a 	slli	r19,r19,16
   29a90:	9008d43a 	srli	r4,r18,16
   29a94:	1521383a 	mul	r16,r2,r20
   29a98:	102d883a 	mov	r22,r2
   29a9c:	24c8b03a 	or	r4,r4,r19
   29aa0:	d8c00017 	ldw	r3,0(sp)
   29aa4:	2400052e 	bgeu	r4,r16,29abc <__udivdi3+0x23c>
   29aa8:	2449883a 	add	r4,r4,r17
   29aac:	b0bfffc4 	addi	r2,r22,-1
   29ab0:	24400136 	bltu	r4,r17,29ab8 <__udivdi3+0x238>
   29ab4:	2400ca36 	bltu	r4,r16,29de0 <__udivdi3+0x560>
   29ab8:	102d883a 	mov	r22,r2
   29abc:	2421c83a 	sub	r16,r4,r16
   29ac0:	a80b883a 	mov	r5,r21
   29ac4:	8009883a 	mov	r4,r16
   29ac8:	d8c00015 	stw	r3,0(sp)
   29acc:	002a48c0 	call	2a48c <__umodsi3>
   29ad0:	1027883a 	mov	r19,r2
   29ad4:	a80b883a 	mov	r5,r21
   29ad8:	8009883a 	mov	r4,r16
   29adc:	002a4280 	call	2a428 <__udivsi3>
   29ae0:	9826943a 	slli	r19,r19,16
   29ae4:	1529383a 	mul	r20,r2,r20
   29ae8:	94bfffcc 	andi	r18,r18,65535
   29aec:	94e4b03a 	or	r18,r18,r19
   29af0:	d8c00017 	ldw	r3,0(sp)
   29af4:	9500052e 	bgeu	r18,r20,29b0c <__udivdi3+0x28c>
   29af8:	8ca5883a 	add	r18,r17,r18
   29afc:	113fffc4 	addi	r4,r2,-1
   29b00:	94409736 	bltu	r18,r17,29d60 <__udivdi3+0x4e0>
   29b04:	9500962e 	bgeu	r18,r20,29d60 <__udivdi3+0x4e0>
   29b08:	10bfff84 	addi	r2,r2,-2
   29b0c:	b00c943a 	slli	r6,r22,16
   29b10:	3084b03a 	or	r2,r6,r2
   29b14:	00000206 	br	29b20 <__udivdi3+0x2a0>
   29b18:	0007883a 	mov	r3,zero
   29b1c:	0005883a 	mov	r2,zero
   29b20:	dfc00a17 	ldw	ra,40(sp)
   29b24:	df000917 	ldw	fp,36(sp)
   29b28:	ddc00817 	ldw	r23,32(sp)
   29b2c:	dd800717 	ldw	r22,28(sp)
   29b30:	dd400617 	ldw	r21,24(sp)
   29b34:	dd000517 	ldw	r20,20(sp)
   29b38:	dcc00417 	ldw	r19,16(sp)
   29b3c:	dc800317 	ldw	r18,12(sp)
   29b40:	dc400217 	ldw	r17,8(sp)
   29b44:	dc000117 	ldw	r16,4(sp)
   29b48:	dec00b04 	addi	sp,sp,44
   29b4c:	f800283a 	ret
   29b50:	00803fc4 	movi	r2,255
   29b54:	11c5803a 	cmpltu	r2,r2,r7
   29b58:	100490fa 	slli	r2,r2,3
   29b5c:	003f9e06 	br	299d8 <__alt_data_end+0xfffe99d8>
   29b60:	00803fc4 	movi	r2,255
   29b64:	1445803a 	cmpltu	r2,r2,r17
   29b68:	100490fa 	slli	r2,r2,3
   29b6c:	003fb206 	br	29a38 <__alt_data_end+0xfffe9a38>
   29b70:	00804034 	movhi	r2,256
   29b74:	10bfffc4 	addi	r2,r2,-1
   29b78:	11808836 	bltu	r2,r6,29d9c <__udivdi3+0x51c>
   29b7c:	00800404 	movi	r2,16
   29b80:	003f5606 	br	298dc <__alt_data_end+0xfffe98dc>
   29b84:	30aed83a 	srl	r23,r6,r2
   29b88:	3d4e983a 	sll	r7,r7,r21
   29b8c:	80acd83a 	srl	r22,r16,r2
   29b90:	9884d83a 	srl	r2,r19,r2
   29b94:	3deeb03a 	or	r23,r7,r23
   29b98:	b824d43a 	srli	r18,r23,16
   29b9c:	8560983a 	sll	r16,r16,r21
   29ba0:	b009883a 	mov	r4,r22
   29ba4:	900b883a 	mov	r5,r18
   29ba8:	3568983a 	sll	r20,r6,r21
   29bac:	1420b03a 	or	r16,r2,r16
   29bb0:	002a48c0 	call	2a48c <__umodsi3>
   29bb4:	b009883a 	mov	r4,r22
   29bb8:	900b883a 	mov	r5,r18
   29bbc:	1023883a 	mov	r17,r2
   29bc0:	002a4280 	call	2a428 <__udivsi3>
   29bc4:	8808943a 	slli	r4,r17,16
   29bc8:	bf3fffcc 	andi	fp,r23,65535
   29bcc:	8006d43a 	srli	r3,r16,16
   29bd0:	e0a3383a 	mul	r17,fp,r2
   29bd4:	100d883a 	mov	r6,r2
   29bd8:	1906b03a 	or	r3,r3,r4
   29bdc:	1c40042e 	bgeu	r3,r17,29bf0 <__udivdi3+0x370>
   29be0:	1dc7883a 	add	r3,r3,r23
   29be4:	10bfffc4 	addi	r2,r2,-1
   29be8:	1dc0752e 	bgeu	r3,r23,29dc0 <__udivdi3+0x540>
   29bec:	100d883a 	mov	r6,r2
   29bf0:	1c63c83a 	sub	r17,r3,r17
   29bf4:	900b883a 	mov	r5,r18
   29bf8:	8809883a 	mov	r4,r17
   29bfc:	d9800015 	stw	r6,0(sp)
   29c00:	002a48c0 	call	2a48c <__umodsi3>
   29c04:	102d883a 	mov	r22,r2
   29c08:	8809883a 	mov	r4,r17
   29c0c:	900b883a 	mov	r5,r18
   29c10:	002a4280 	call	2a428 <__udivsi3>
   29c14:	b02c943a 	slli	r22,r22,16
   29c18:	e089383a 	mul	r4,fp,r2
   29c1c:	843fffcc 	andi	r16,r16,65535
   29c20:	85a0b03a 	or	r16,r16,r22
   29c24:	d9800017 	ldw	r6,0(sp)
   29c28:	8100042e 	bgeu	r16,r4,29c3c <__udivdi3+0x3bc>
   29c2c:	85e1883a 	add	r16,r16,r23
   29c30:	10ffffc4 	addi	r3,r2,-1
   29c34:	85c05e2e 	bgeu	r16,r23,29db0 <__udivdi3+0x530>
   29c38:	1805883a 	mov	r2,r3
   29c3c:	300c943a 	slli	r6,r6,16
   29c40:	a17fffcc 	andi	r5,r20,65535
   29c44:	a028d43a 	srli	r20,r20,16
   29c48:	3084b03a 	or	r2,r6,r2
   29c4c:	10ffffcc 	andi	r3,r2,65535
   29c50:	100cd43a 	srli	r6,r2,16
   29c54:	194f383a 	mul	r7,r3,r5
   29c58:	1d07383a 	mul	r3,r3,r20
   29c5c:	314b383a 	mul	r5,r6,r5
   29c60:	3810d43a 	srli	r8,r7,16
   29c64:	8121c83a 	sub	r16,r16,r4
   29c68:	1947883a 	add	r3,r3,r5
   29c6c:	40c7883a 	add	r3,r8,r3
   29c70:	350d383a 	mul	r6,r6,r20
   29c74:	1940022e 	bgeu	r3,r5,29c80 <__udivdi3+0x400>
   29c78:	01000074 	movhi	r4,1
   29c7c:	310d883a 	add	r6,r6,r4
   29c80:	1828d43a 	srli	r20,r3,16
   29c84:	a18d883a 	add	r6,r20,r6
   29c88:	81803e36 	bltu	r16,r6,29d84 <__udivdi3+0x504>
   29c8c:	81803826 	beq	r16,r6,29d70 <__udivdi3+0x4f0>
   29c90:	0007883a 	mov	r3,zero
   29c94:	003fa206 	br	29b20 <__alt_data_end+0xfffe9b20>
   29c98:	88e2983a 	sll	r17,r17,r3
   29c9c:	80a8d83a 	srl	r20,r16,r2
   29ca0:	80e0983a 	sll	r16,r16,r3
   29ca4:	882ad43a 	srli	r21,r17,16
   29ca8:	9884d83a 	srl	r2,r19,r2
   29cac:	a009883a 	mov	r4,r20
   29cb0:	a80b883a 	mov	r5,r21
   29cb4:	142eb03a 	or	r23,r2,r16
   29cb8:	98e4983a 	sll	r18,r19,r3
   29cbc:	002a48c0 	call	2a48c <__umodsi3>
   29cc0:	a009883a 	mov	r4,r20
   29cc4:	a80b883a 	mov	r5,r21
   29cc8:	1021883a 	mov	r16,r2
   29ccc:	002a4280 	call	2a428 <__udivsi3>
   29cd0:	1039883a 	mov	fp,r2
   29cd4:	8d3fffcc 	andi	r20,r17,65535
   29cd8:	8020943a 	slli	r16,r16,16
   29cdc:	b804d43a 	srli	r2,r23,16
   29ce0:	a72d383a 	mul	r22,r20,fp
   29ce4:	1404b03a 	or	r2,r2,r16
   29ce8:	1580062e 	bgeu	r2,r22,29d04 <__udivdi3+0x484>
   29cec:	1445883a 	add	r2,r2,r17
   29cf0:	e0ffffc4 	addi	r3,fp,-1
   29cf4:	14403836 	bltu	r2,r17,29dd8 <__udivdi3+0x558>
   29cf8:	1580372e 	bgeu	r2,r22,29dd8 <__udivdi3+0x558>
   29cfc:	e73fff84 	addi	fp,fp,-2
   29d00:	1445883a 	add	r2,r2,r17
   29d04:	15adc83a 	sub	r22,r2,r22
   29d08:	a80b883a 	mov	r5,r21
   29d0c:	b009883a 	mov	r4,r22
   29d10:	002a48c0 	call	2a48c <__umodsi3>
   29d14:	1027883a 	mov	r19,r2
   29d18:	b009883a 	mov	r4,r22
   29d1c:	a80b883a 	mov	r5,r21
   29d20:	002a4280 	call	2a428 <__udivsi3>
   29d24:	9826943a 	slli	r19,r19,16
   29d28:	a0a1383a 	mul	r16,r20,r2
   29d2c:	b93fffcc 	andi	r4,r23,65535
   29d30:	24c8b03a 	or	r4,r4,r19
   29d34:	2400062e 	bgeu	r4,r16,29d50 <__udivdi3+0x4d0>
   29d38:	2449883a 	add	r4,r4,r17
   29d3c:	10ffffc4 	addi	r3,r2,-1
   29d40:	24402336 	bltu	r4,r17,29dd0 <__udivdi3+0x550>
   29d44:	2400222e 	bgeu	r4,r16,29dd0 <__udivdi3+0x550>
   29d48:	10bfff84 	addi	r2,r2,-2
   29d4c:	2449883a 	add	r4,r4,r17
   29d50:	e038943a 	slli	fp,fp,16
   29d54:	2421c83a 	sub	r16,r4,r16
   29d58:	e086b03a 	or	r3,fp,r2
   29d5c:	003f4306 	br	29a6c <__alt_data_end+0xfffe9a6c>
   29d60:	2005883a 	mov	r2,r4
   29d64:	003f6906 	br	29b0c <__alt_data_end+0xfffe9b0c>
   29d68:	1805883a 	mov	r2,r3
   29d6c:	003f0f06 	br	299ac <__alt_data_end+0xfffe99ac>
   29d70:	1806943a 	slli	r3,r3,16
   29d74:	9d66983a 	sll	r19,r19,r21
   29d78:	39ffffcc 	andi	r7,r7,65535
   29d7c:	19c7883a 	add	r3,r3,r7
   29d80:	98ffc32e 	bgeu	r19,r3,29c90 <__alt_data_end+0xfffe9c90>
   29d84:	10bfffc4 	addi	r2,r2,-1
   29d88:	003fc106 	br	29c90 <__alt_data_end+0xfffe9c90>
   29d8c:	00800604 	movi	r2,24
   29d90:	003f1106 	br	299d8 <__alt_data_end+0xfffe99d8>
   29d94:	00800604 	movi	r2,24
   29d98:	003f2706 	br	29a38 <__alt_data_end+0xfffe9a38>
   29d9c:	00800604 	movi	r2,24
   29da0:	003ece06 	br	298dc <__alt_data_end+0xfffe98dc>
   29da4:	0007883a 	mov	r3,zero
   29da8:	00800044 	movi	r2,1
   29dac:	003f5c06 	br	29b20 <__alt_data_end+0xfffe9b20>
   29db0:	813fa12e 	bgeu	r16,r4,29c38 <__alt_data_end+0xfffe9c38>
   29db4:	10bfff84 	addi	r2,r2,-2
   29db8:	85e1883a 	add	r16,r16,r23
   29dbc:	003f9f06 	br	29c3c <__alt_data_end+0xfffe9c3c>
   29dc0:	1c7f8a2e 	bgeu	r3,r17,29bec <__alt_data_end+0xfffe9bec>
   29dc4:	31bfff84 	addi	r6,r6,-2
   29dc8:	1dc7883a 	add	r3,r3,r23
   29dcc:	003f8806 	br	29bf0 <__alt_data_end+0xfffe9bf0>
   29dd0:	1805883a 	mov	r2,r3
   29dd4:	003fde06 	br	29d50 <__alt_data_end+0xfffe9d50>
   29dd8:	1839883a 	mov	fp,r3
   29ddc:	003fc906 	br	29d04 <__alt_data_end+0xfffe9d04>
   29de0:	b5bfff84 	addi	r22,r22,-2
   29de4:	2449883a 	add	r4,r4,r17
   29de8:	003f3406 	br	29abc <__alt_data_end+0xfffe9abc>
   29dec:	b5bfff84 	addi	r22,r22,-2
   29df0:	1445883a 	add	r2,r2,r17
   29df4:	003edb06 	br	29964 <__alt_data_end+0xfffe9964>

00029df8 <__umoddi3>:
   29df8:	defff404 	addi	sp,sp,-48
   29dfc:	df000a15 	stw	fp,40(sp)
   29e00:	dc400315 	stw	r17,12(sp)
   29e04:	dc000215 	stw	r16,8(sp)
   29e08:	dfc00b15 	stw	ra,44(sp)
   29e0c:	ddc00915 	stw	r23,36(sp)
   29e10:	dd800815 	stw	r22,32(sp)
   29e14:	dd400715 	stw	r21,28(sp)
   29e18:	dd000615 	stw	r20,24(sp)
   29e1c:	dcc00515 	stw	r19,20(sp)
   29e20:	dc800415 	stw	r18,16(sp)
   29e24:	2021883a 	mov	r16,r4
   29e28:	2823883a 	mov	r17,r5
   29e2c:	2839883a 	mov	fp,r5
   29e30:	38003c1e 	bne	r7,zero,29f24 <__umoddi3+0x12c>
   29e34:	3027883a 	mov	r19,r6
   29e38:	2029883a 	mov	r20,r4
   29e3c:	2980512e 	bgeu	r5,r6,29f84 <__umoddi3+0x18c>
   29e40:	00bfffd4 	movui	r2,65535
   29e44:	11809a36 	bltu	r2,r6,2a0b0 <__umoddi3+0x2b8>
   29e48:	01003fc4 	movi	r4,255
   29e4c:	2189803a 	cmpltu	r4,r4,r6
   29e50:	200890fa 	slli	r4,r4,3
   29e54:	3104d83a 	srl	r2,r6,r4
   29e58:	00c000f4 	movhi	r3,3
   29e5c:	18fcef04 	addi	r3,r3,-3140
   29e60:	1885883a 	add	r2,r3,r2
   29e64:	10c00003 	ldbu	r3,0(r2)
   29e68:	00800804 	movi	r2,32
   29e6c:	1909883a 	add	r4,r3,r4
   29e70:	1125c83a 	sub	r18,r2,r4
   29e74:	90000526 	beq	r18,zero,29e8c <__umoddi3+0x94>
   29e78:	8ca2983a 	sll	r17,r17,r18
   29e7c:	8108d83a 	srl	r4,r16,r4
   29e80:	34a6983a 	sll	r19,r6,r18
   29e84:	84a8983a 	sll	r20,r16,r18
   29e88:	2478b03a 	or	fp,r4,r17
   29e8c:	982ed43a 	srli	r23,r19,16
   29e90:	e009883a 	mov	r4,fp
   29e94:	9dbfffcc 	andi	r22,r19,65535
   29e98:	b80b883a 	mov	r5,r23
   29e9c:	002a48c0 	call	2a48c <__umodsi3>
   29ea0:	e009883a 	mov	r4,fp
   29ea4:	b80b883a 	mov	r5,r23
   29ea8:	102b883a 	mov	r21,r2
   29eac:	002a4280 	call	2a428 <__udivsi3>
   29eb0:	a806943a 	slli	r3,r21,16
   29eb4:	a008d43a 	srli	r4,r20,16
   29eb8:	b085383a 	mul	r2,r22,r2
   29ebc:	20c8b03a 	or	r4,r4,r3
   29ec0:	2080032e 	bgeu	r4,r2,29ed0 <__umoddi3+0xd8>
   29ec4:	24c9883a 	add	r4,r4,r19
   29ec8:	24c00136 	bltu	r4,r19,29ed0 <__umoddi3+0xd8>
   29ecc:	20811036 	bltu	r4,r2,2a310 <__umoddi3+0x518>
   29ed0:	20abc83a 	sub	r21,r4,r2
   29ed4:	b80b883a 	mov	r5,r23
   29ed8:	a809883a 	mov	r4,r21
   29edc:	002a48c0 	call	2a48c <__umodsi3>
   29ee0:	1023883a 	mov	r17,r2
   29ee4:	b80b883a 	mov	r5,r23
   29ee8:	a809883a 	mov	r4,r21
   29eec:	002a4280 	call	2a428 <__udivsi3>
   29ef0:	8822943a 	slli	r17,r17,16
   29ef4:	b085383a 	mul	r2,r22,r2
   29ef8:	a0ffffcc 	andi	r3,r20,65535
   29efc:	1c46b03a 	or	r3,r3,r17
   29f00:	1880042e 	bgeu	r3,r2,29f14 <__umoddi3+0x11c>
   29f04:	1cc7883a 	add	r3,r3,r19
   29f08:	1cc00236 	bltu	r3,r19,29f14 <__umoddi3+0x11c>
   29f0c:	1880012e 	bgeu	r3,r2,29f14 <__umoddi3+0x11c>
   29f10:	1cc7883a 	add	r3,r3,r19
   29f14:	1885c83a 	sub	r2,r3,r2
   29f18:	1484d83a 	srl	r2,r2,r18
   29f1c:	0007883a 	mov	r3,zero
   29f20:	00004f06 	br	2a060 <__umoddi3+0x268>
   29f24:	29c04c36 	bltu	r5,r7,2a058 <__umoddi3+0x260>
   29f28:	00bfffd4 	movui	r2,65535
   29f2c:	11c0582e 	bgeu	r2,r7,2a090 <__umoddi3+0x298>
   29f30:	00804034 	movhi	r2,256
   29f34:	10bfffc4 	addi	r2,r2,-1
   29f38:	11c0e736 	bltu	r2,r7,2a2d8 <__umoddi3+0x4e0>
   29f3c:	01000404 	movi	r4,16
   29f40:	3904d83a 	srl	r2,r7,r4
   29f44:	00c000f4 	movhi	r3,3
   29f48:	18fcef04 	addi	r3,r3,-3140
   29f4c:	1885883a 	add	r2,r3,r2
   29f50:	14c00003 	ldbu	r19,0(r2)
   29f54:	00c00804 	movi	r3,32
   29f58:	9927883a 	add	r19,r19,r4
   29f5c:	1ce9c83a 	sub	r20,r3,r19
   29f60:	a000581e 	bne	r20,zero,2a0c4 <__umoddi3+0x2cc>
   29f64:	3c400136 	bltu	r7,r17,29f6c <__umoddi3+0x174>
   29f68:	8180eb36 	bltu	r16,r6,2a318 <__umoddi3+0x520>
   29f6c:	8185c83a 	sub	r2,r16,r6
   29f70:	89e3c83a 	sub	r17,r17,r7
   29f74:	8089803a 	cmpltu	r4,r16,r2
   29f78:	8939c83a 	sub	fp,r17,r4
   29f7c:	e007883a 	mov	r3,fp
   29f80:	00003706 	br	2a060 <__umoddi3+0x268>
   29f84:	3000041e 	bne	r6,zero,29f98 <__umoddi3+0x1a0>
   29f88:	000b883a 	mov	r5,zero
   29f8c:	01000044 	movi	r4,1
   29f90:	002a4280 	call	2a428 <__udivsi3>
   29f94:	1027883a 	mov	r19,r2
   29f98:	00bfffd4 	movui	r2,65535
   29f9c:	14c0402e 	bgeu	r2,r19,2a0a0 <__umoddi3+0x2a8>
   29fa0:	00804034 	movhi	r2,256
   29fa4:	10bfffc4 	addi	r2,r2,-1
   29fa8:	14c0cd36 	bltu	r2,r19,2a2e0 <__umoddi3+0x4e8>
   29fac:	00800404 	movi	r2,16
   29fb0:	9886d83a 	srl	r3,r19,r2
   29fb4:	010000f4 	movhi	r4,3
   29fb8:	213cef04 	addi	r4,r4,-3140
   29fbc:	20c7883a 	add	r3,r4,r3
   29fc0:	18c00003 	ldbu	r3,0(r3)
   29fc4:	1887883a 	add	r3,r3,r2
   29fc8:	00800804 	movi	r2,32
   29fcc:	10e5c83a 	sub	r18,r2,r3
   29fd0:	9000901e 	bne	r18,zero,2a214 <__umoddi3+0x41c>
   29fd4:	982cd43a 	srli	r22,r19,16
   29fd8:	8ce3c83a 	sub	r17,r17,r19
   29fdc:	9d7fffcc 	andi	r21,r19,65535
   29fe0:	b00b883a 	mov	r5,r22
   29fe4:	8809883a 	mov	r4,r17
   29fe8:	002a48c0 	call	2a48c <__umodsi3>
   29fec:	8809883a 	mov	r4,r17
   29ff0:	b00b883a 	mov	r5,r22
   29ff4:	1021883a 	mov	r16,r2
   29ff8:	002a4280 	call	2a428 <__udivsi3>
   29ffc:	8006943a 	slli	r3,r16,16
   2a000:	a008d43a 	srli	r4,r20,16
   2a004:	1545383a 	mul	r2,r2,r21
   2a008:	20c8b03a 	or	r4,r4,r3
   2a00c:	2080042e 	bgeu	r4,r2,2a020 <__umoddi3+0x228>
   2a010:	24c9883a 	add	r4,r4,r19
   2a014:	24c00236 	bltu	r4,r19,2a020 <__umoddi3+0x228>
   2a018:	2080012e 	bgeu	r4,r2,2a020 <__umoddi3+0x228>
   2a01c:	24c9883a 	add	r4,r4,r19
   2a020:	20a1c83a 	sub	r16,r4,r2
   2a024:	b00b883a 	mov	r5,r22
   2a028:	8009883a 	mov	r4,r16
   2a02c:	002a48c0 	call	2a48c <__umodsi3>
   2a030:	1023883a 	mov	r17,r2
   2a034:	b00b883a 	mov	r5,r22
   2a038:	8009883a 	mov	r4,r16
   2a03c:	002a4280 	call	2a428 <__udivsi3>
   2a040:	8822943a 	slli	r17,r17,16
   2a044:	1545383a 	mul	r2,r2,r21
   2a048:	a53fffcc 	andi	r20,r20,65535
   2a04c:	a446b03a 	or	r3,r20,r17
   2a050:	18bfb02e 	bgeu	r3,r2,29f14 <__alt_data_end+0xfffe9f14>
   2a054:	003fab06 	br	29f04 <__alt_data_end+0xfffe9f04>
   2a058:	2005883a 	mov	r2,r4
   2a05c:	2807883a 	mov	r3,r5
   2a060:	dfc00b17 	ldw	ra,44(sp)
   2a064:	df000a17 	ldw	fp,40(sp)
   2a068:	ddc00917 	ldw	r23,36(sp)
   2a06c:	dd800817 	ldw	r22,32(sp)
   2a070:	dd400717 	ldw	r21,28(sp)
   2a074:	dd000617 	ldw	r20,24(sp)
   2a078:	dcc00517 	ldw	r19,20(sp)
   2a07c:	dc800417 	ldw	r18,16(sp)
   2a080:	dc400317 	ldw	r17,12(sp)
   2a084:	dc000217 	ldw	r16,8(sp)
   2a088:	dec00c04 	addi	sp,sp,48
   2a08c:	f800283a 	ret
   2a090:	04c03fc4 	movi	r19,255
   2a094:	99c9803a 	cmpltu	r4,r19,r7
   2a098:	200890fa 	slli	r4,r4,3
   2a09c:	003fa806 	br	29f40 <__alt_data_end+0xfffe9f40>
   2a0a0:	00803fc4 	movi	r2,255
   2a0a4:	14c5803a 	cmpltu	r2,r2,r19
   2a0a8:	100490fa 	slli	r2,r2,3
   2a0ac:	003fc006 	br	29fb0 <__alt_data_end+0xfffe9fb0>
   2a0b0:	00804034 	movhi	r2,256
   2a0b4:	10bfffc4 	addi	r2,r2,-1
   2a0b8:	11808b36 	bltu	r2,r6,2a2e8 <__umoddi3+0x4f0>
   2a0bc:	01000404 	movi	r4,16
   2a0c0:	003f6406 	br	29e54 <__alt_data_end+0xfffe9e54>
   2a0c4:	34c4d83a 	srl	r2,r6,r19
   2a0c8:	3d0e983a 	sll	r7,r7,r20
   2a0cc:	8cf8d83a 	srl	fp,r17,r19
   2a0d0:	8d10983a 	sll	r8,r17,r20
   2a0d4:	38aab03a 	or	r21,r7,r2
   2a0d8:	a82cd43a 	srli	r22,r21,16
   2a0dc:	84e2d83a 	srl	r17,r16,r19
   2a0e0:	e009883a 	mov	r4,fp
   2a0e4:	b00b883a 	mov	r5,r22
   2a0e8:	8a22b03a 	or	r17,r17,r8
   2a0ec:	3524983a 	sll	r18,r6,r20
   2a0f0:	002a48c0 	call	2a48c <__umodsi3>
   2a0f4:	e009883a 	mov	r4,fp
   2a0f8:	b00b883a 	mov	r5,r22
   2a0fc:	102f883a 	mov	r23,r2
   2a100:	002a4280 	call	2a428 <__udivsi3>
   2a104:	100d883a 	mov	r6,r2
   2a108:	b808943a 	slli	r4,r23,16
   2a10c:	aa3fffcc 	andi	r8,r21,65535
   2a110:	8804d43a 	srli	r2,r17,16
   2a114:	41af383a 	mul	r23,r8,r6
   2a118:	8520983a 	sll	r16,r16,r20
   2a11c:	1104b03a 	or	r2,r2,r4
   2a120:	15c0042e 	bgeu	r2,r23,2a134 <__umoddi3+0x33c>
   2a124:	1545883a 	add	r2,r2,r21
   2a128:	30ffffc4 	addi	r3,r6,-1
   2a12c:	1540742e 	bgeu	r2,r21,2a300 <__umoddi3+0x508>
   2a130:	180d883a 	mov	r6,r3
   2a134:	15efc83a 	sub	r23,r2,r23
   2a138:	b00b883a 	mov	r5,r22
   2a13c:	b809883a 	mov	r4,r23
   2a140:	d9800115 	stw	r6,4(sp)
   2a144:	da000015 	stw	r8,0(sp)
   2a148:	002a48c0 	call	2a48c <__umodsi3>
   2a14c:	b00b883a 	mov	r5,r22
   2a150:	b809883a 	mov	r4,r23
   2a154:	1039883a 	mov	fp,r2
   2a158:	002a4280 	call	2a428 <__udivsi3>
   2a15c:	da000017 	ldw	r8,0(sp)
   2a160:	e038943a 	slli	fp,fp,16
   2a164:	100b883a 	mov	r5,r2
   2a168:	4089383a 	mul	r4,r8,r2
   2a16c:	8a3fffcc 	andi	r8,r17,65535
   2a170:	4710b03a 	or	r8,r8,fp
   2a174:	d9800117 	ldw	r6,4(sp)
   2a178:	4100042e 	bgeu	r8,r4,2a18c <__umoddi3+0x394>
   2a17c:	4551883a 	add	r8,r8,r21
   2a180:	10bfffc4 	addi	r2,r2,-1
   2a184:	45405a2e 	bgeu	r8,r21,2a2f0 <__umoddi3+0x4f8>
   2a188:	100b883a 	mov	r5,r2
   2a18c:	300c943a 	slli	r6,r6,16
   2a190:	91ffffcc 	andi	r7,r18,65535
   2a194:	9004d43a 	srli	r2,r18,16
   2a198:	314cb03a 	or	r6,r6,r5
   2a19c:	317fffcc 	andi	r5,r6,65535
   2a1a0:	300cd43a 	srli	r6,r6,16
   2a1a4:	29d3383a 	mul	r9,r5,r7
   2a1a8:	288b383a 	mul	r5,r5,r2
   2a1ac:	31cf383a 	mul	r7,r6,r7
   2a1b0:	4806d43a 	srli	r3,r9,16
   2a1b4:	4111c83a 	sub	r8,r8,r4
   2a1b8:	29cb883a 	add	r5,r5,r7
   2a1bc:	194b883a 	add	r5,r3,r5
   2a1c0:	3085383a 	mul	r2,r6,r2
   2a1c4:	29c0022e 	bgeu	r5,r7,2a1d0 <__umoddi3+0x3d8>
   2a1c8:	00c00074 	movhi	r3,1
   2a1cc:	10c5883a 	add	r2,r2,r3
   2a1d0:	2808d43a 	srli	r4,r5,16
   2a1d4:	280a943a 	slli	r5,r5,16
   2a1d8:	4a7fffcc 	andi	r9,r9,65535
   2a1dc:	2085883a 	add	r2,r4,r2
   2a1e0:	2a4b883a 	add	r5,r5,r9
   2a1e4:	40803636 	bltu	r8,r2,2a2c0 <__umoddi3+0x4c8>
   2a1e8:	40804d26 	beq	r8,r2,2a320 <__umoddi3+0x528>
   2a1ec:	4089c83a 	sub	r4,r8,r2
   2a1f0:	280f883a 	mov	r7,r5
   2a1f4:	81cfc83a 	sub	r7,r16,r7
   2a1f8:	81c7803a 	cmpltu	r3,r16,r7
   2a1fc:	20c7c83a 	sub	r3,r4,r3
   2a200:	1cc4983a 	sll	r2,r3,r19
   2a204:	3d0ed83a 	srl	r7,r7,r20
   2a208:	1d06d83a 	srl	r3,r3,r20
   2a20c:	11c4b03a 	or	r2,r2,r7
   2a210:	003f9306 	br	2a060 <__alt_data_end+0xfffea060>
   2a214:	9ca6983a 	sll	r19,r19,r18
   2a218:	88e8d83a 	srl	r20,r17,r3
   2a21c:	80c4d83a 	srl	r2,r16,r3
   2a220:	982cd43a 	srli	r22,r19,16
   2a224:	8ca2983a 	sll	r17,r17,r18
   2a228:	a009883a 	mov	r4,r20
   2a22c:	b00b883a 	mov	r5,r22
   2a230:	1478b03a 	or	fp,r2,r17
   2a234:	002a48c0 	call	2a48c <__umodsi3>
   2a238:	a009883a 	mov	r4,r20
   2a23c:	b00b883a 	mov	r5,r22
   2a240:	1023883a 	mov	r17,r2
   2a244:	002a4280 	call	2a428 <__udivsi3>
   2a248:	9d7fffcc 	andi	r21,r19,65535
   2a24c:	880a943a 	slli	r5,r17,16
   2a250:	e008d43a 	srli	r4,fp,16
   2a254:	a885383a 	mul	r2,r21,r2
   2a258:	84a8983a 	sll	r20,r16,r18
   2a25c:	2148b03a 	or	r4,r4,r5
   2a260:	2080042e 	bgeu	r4,r2,2a274 <__umoddi3+0x47c>
   2a264:	24c9883a 	add	r4,r4,r19
   2a268:	24c00236 	bltu	r4,r19,2a274 <__umoddi3+0x47c>
   2a26c:	2080012e 	bgeu	r4,r2,2a274 <__umoddi3+0x47c>
   2a270:	24c9883a 	add	r4,r4,r19
   2a274:	20a3c83a 	sub	r17,r4,r2
   2a278:	b00b883a 	mov	r5,r22
   2a27c:	8809883a 	mov	r4,r17
   2a280:	002a48c0 	call	2a48c <__umodsi3>
   2a284:	102f883a 	mov	r23,r2
   2a288:	8809883a 	mov	r4,r17
   2a28c:	b00b883a 	mov	r5,r22
   2a290:	002a4280 	call	2a428 <__udivsi3>
   2a294:	b82e943a 	slli	r23,r23,16
   2a298:	a885383a 	mul	r2,r21,r2
   2a29c:	e13fffcc 	andi	r4,fp,65535
   2a2a0:	25c8b03a 	or	r4,r4,r23
   2a2a4:	2080042e 	bgeu	r4,r2,2a2b8 <__umoddi3+0x4c0>
   2a2a8:	24c9883a 	add	r4,r4,r19
   2a2ac:	24c00236 	bltu	r4,r19,2a2b8 <__umoddi3+0x4c0>
   2a2b0:	2080012e 	bgeu	r4,r2,2a2b8 <__umoddi3+0x4c0>
   2a2b4:	24c9883a 	add	r4,r4,r19
   2a2b8:	20a3c83a 	sub	r17,r4,r2
   2a2bc:	003f4806 	br	29fe0 <__alt_data_end+0xfffe9fe0>
   2a2c0:	2c8fc83a 	sub	r7,r5,r18
   2a2c4:	1545c83a 	sub	r2,r2,r21
   2a2c8:	29cb803a 	cmpltu	r5,r5,r7
   2a2cc:	1145c83a 	sub	r2,r2,r5
   2a2d0:	4089c83a 	sub	r4,r8,r2
   2a2d4:	003fc706 	br	2a1f4 <__alt_data_end+0xfffea1f4>
   2a2d8:	01000604 	movi	r4,24
   2a2dc:	003f1806 	br	29f40 <__alt_data_end+0xfffe9f40>
   2a2e0:	00800604 	movi	r2,24
   2a2e4:	003f3206 	br	29fb0 <__alt_data_end+0xfffe9fb0>
   2a2e8:	01000604 	movi	r4,24
   2a2ec:	003ed906 	br	29e54 <__alt_data_end+0xfffe9e54>
   2a2f0:	413fa52e 	bgeu	r8,r4,2a188 <__alt_data_end+0xfffea188>
   2a2f4:	297fff84 	addi	r5,r5,-2
   2a2f8:	4551883a 	add	r8,r8,r21
   2a2fc:	003fa306 	br	2a18c <__alt_data_end+0xfffea18c>
   2a300:	15ff8b2e 	bgeu	r2,r23,2a130 <__alt_data_end+0xfffea130>
   2a304:	31bfff84 	addi	r6,r6,-2
   2a308:	1545883a 	add	r2,r2,r21
   2a30c:	003f8906 	br	2a134 <__alt_data_end+0xfffea134>
   2a310:	24c9883a 	add	r4,r4,r19
   2a314:	003eee06 	br	29ed0 <__alt_data_end+0xfffe9ed0>
   2a318:	8005883a 	mov	r2,r16
   2a31c:	003f1706 	br	29f7c <__alt_data_end+0xfffe9f7c>
   2a320:	817fe736 	bltu	r16,r5,2a2c0 <__alt_data_end+0xfffea2c0>
   2a324:	280f883a 	mov	r7,r5
   2a328:	0009883a 	mov	r4,zero
   2a32c:	003fb106 	br	2a1f4 <__alt_data_end+0xfffea1f4>

0002a330 <__divsi3>:
   2a330:	20001b16 	blt	r4,zero,2a3a0 <__divsi3+0x70>
   2a334:	000f883a 	mov	r7,zero
   2a338:	28001616 	blt	r5,zero,2a394 <__divsi3+0x64>
   2a33c:	200d883a 	mov	r6,r4
   2a340:	29001a2e 	bgeu	r5,r4,2a3ac <__divsi3+0x7c>
   2a344:	00800804 	movi	r2,32
   2a348:	00c00044 	movi	r3,1
   2a34c:	00000106 	br	2a354 <__divsi3+0x24>
   2a350:	10000d26 	beq	r2,zero,2a388 <__divsi3+0x58>
   2a354:	294b883a 	add	r5,r5,r5
   2a358:	10bfffc4 	addi	r2,r2,-1
   2a35c:	18c7883a 	add	r3,r3,r3
   2a360:	293ffb36 	bltu	r5,r4,2a350 <__alt_data_end+0xfffea350>
   2a364:	0005883a 	mov	r2,zero
   2a368:	18000726 	beq	r3,zero,2a388 <__divsi3+0x58>
   2a36c:	0005883a 	mov	r2,zero
   2a370:	31400236 	bltu	r6,r5,2a37c <__divsi3+0x4c>
   2a374:	314dc83a 	sub	r6,r6,r5
   2a378:	10c4b03a 	or	r2,r2,r3
   2a37c:	1806d07a 	srli	r3,r3,1
   2a380:	280ad07a 	srli	r5,r5,1
   2a384:	183ffa1e 	bne	r3,zero,2a370 <__alt_data_end+0xfffea370>
   2a388:	38000126 	beq	r7,zero,2a390 <__divsi3+0x60>
   2a38c:	0085c83a 	sub	r2,zero,r2
   2a390:	f800283a 	ret
   2a394:	014bc83a 	sub	r5,zero,r5
   2a398:	39c0005c 	xori	r7,r7,1
   2a39c:	003fe706 	br	2a33c <__alt_data_end+0xfffea33c>
   2a3a0:	0109c83a 	sub	r4,zero,r4
   2a3a4:	01c00044 	movi	r7,1
   2a3a8:	003fe306 	br	2a338 <__alt_data_end+0xfffea338>
   2a3ac:	00c00044 	movi	r3,1
   2a3b0:	003fee06 	br	2a36c <__alt_data_end+0xfffea36c>

0002a3b4 <__modsi3>:
   2a3b4:	20001716 	blt	r4,zero,2a414 <__modsi3+0x60>
   2a3b8:	000f883a 	mov	r7,zero
   2a3bc:	2005883a 	mov	r2,r4
   2a3c0:	28001216 	blt	r5,zero,2a40c <__modsi3+0x58>
   2a3c4:	2900162e 	bgeu	r5,r4,2a420 <__modsi3+0x6c>
   2a3c8:	01800804 	movi	r6,32
   2a3cc:	00c00044 	movi	r3,1
   2a3d0:	00000106 	br	2a3d8 <__modsi3+0x24>
   2a3d4:	30000a26 	beq	r6,zero,2a400 <__modsi3+0x4c>
   2a3d8:	294b883a 	add	r5,r5,r5
   2a3dc:	31bfffc4 	addi	r6,r6,-1
   2a3e0:	18c7883a 	add	r3,r3,r3
   2a3e4:	293ffb36 	bltu	r5,r4,2a3d4 <__alt_data_end+0xfffea3d4>
   2a3e8:	18000526 	beq	r3,zero,2a400 <__modsi3+0x4c>
   2a3ec:	1806d07a 	srli	r3,r3,1
   2a3f0:	11400136 	bltu	r2,r5,2a3f8 <__modsi3+0x44>
   2a3f4:	1145c83a 	sub	r2,r2,r5
   2a3f8:	280ad07a 	srli	r5,r5,1
   2a3fc:	183ffb1e 	bne	r3,zero,2a3ec <__alt_data_end+0xfffea3ec>
   2a400:	38000126 	beq	r7,zero,2a408 <__modsi3+0x54>
   2a404:	0085c83a 	sub	r2,zero,r2
   2a408:	f800283a 	ret
   2a40c:	014bc83a 	sub	r5,zero,r5
   2a410:	003fec06 	br	2a3c4 <__alt_data_end+0xfffea3c4>
   2a414:	0109c83a 	sub	r4,zero,r4
   2a418:	01c00044 	movi	r7,1
   2a41c:	003fe706 	br	2a3bc <__alt_data_end+0xfffea3bc>
   2a420:	00c00044 	movi	r3,1
   2a424:	003ff106 	br	2a3ec <__alt_data_end+0xfffea3ec>

0002a428 <__udivsi3>:
   2a428:	200d883a 	mov	r6,r4
   2a42c:	2900152e 	bgeu	r5,r4,2a484 <__udivsi3+0x5c>
   2a430:	28001416 	blt	r5,zero,2a484 <__udivsi3+0x5c>
   2a434:	00800804 	movi	r2,32
   2a438:	00c00044 	movi	r3,1
   2a43c:	00000206 	br	2a448 <__udivsi3+0x20>
   2a440:	10000e26 	beq	r2,zero,2a47c <__udivsi3+0x54>
   2a444:	28000516 	blt	r5,zero,2a45c <__udivsi3+0x34>
   2a448:	294b883a 	add	r5,r5,r5
   2a44c:	10bfffc4 	addi	r2,r2,-1
   2a450:	18c7883a 	add	r3,r3,r3
   2a454:	293ffa36 	bltu	r5,r4,2a440 <__alt_data_end+0xfffea440>
   2a458:	18000826 	beq	r3,zero,2a47c <__udivsi3+0x54>
   2a45c:	0005883a 	mov	r2,zero
   2a460:	31400236 	bltu	r6,r5,2a46c <__udivsi3+0x44>
   2a464:	314dc83a 	sub	r6,r6,r5
   2a468:	10c4b03a 	or	r2,r2,r3
   2a46c:	1806d07a 	srli	r3,r3,1
   2a470:	280ad07a 	srli	r5,r5,1
   2a474:	183ffa1e 	bne	r3,zero,2a460 <__alt_data_end+0xfffea460>
   2a478:	f800283a 	ret
   2a47c:	0005883a 	mov	r2,zero
   2a480:	f800283a 	ret
   2a484:	00c00044 	movi	r3,1
   2a488:	003ff406 	br	2a45c <__alt_data_end+0xfffea45c>

0002a48c <__umodsi3>:
   2a48c:	2005883a 	mov	r2,r4
   2a490:	2900122e 	bgeu	r5,r4,2a4dc <__umodsi3+0x50>
   2a494:	28001116 	blt	r5,zero,2a4dc <__umodsi3+0x50>
   2a498:	01800804 	movi	r6,32
   2a49c:	00c00044 	movi	r3,1
   2a4a0:	00000206 	br	2a4ac <__umodsi3+0x20>
   2a4a4:	30000c26 	beq	r6,zero,2a4d8 <__umodsi3+0x4c>
   2a4a8:	28000516 	blt	r5,zero,2a4c0 <__umodsi3+0x34>
   2a4ac:	294b883a 	add	r5,r5,r5
   2a4b0:	31bfffc4 	addi	r6,r6,-1
   2a4b4:	18c7883a 	add	r3,r3,r3
   2a4b8:	293ffa36 	bltu	r5,r4,2a4a4 <__alt_data_end+0xfffea4a4>
   2a4bc:	18000626 	beq	r3,zero,2a4d8 <__umodsi3+0x4c>
   2a4c0:	1806d07a 	srli	r3,r3,1
   2a4c4:	11400136 	bltu	r2,r5,2a4cc <__umodsi3+0x40>
   2a4c8:	1145c83a 	sub	r2,r2,r5
   2a4cc:	280ad07a 	srli	r5,r5,1
   2a4d0:	183ffb1e 	bne	r3,zero,2a4c0 <__alt_data_end+0xfffea4c0>
   2a4d4:	f800283a 	ret
   2a4d8:	f800283a 	ret
   2a4dc:	00c00044 	movi	r3,1
   2a4e0:	003ff706 	br	2a4c0 <__alt_data_end+0xfffea4c0>

0002a4e4 <__adddf3>:
   2a4e4:	02c00434 	movhi	r11,16
   2a4e8:	5affffc4 	addi	r11,r11,-1
   2a4ec:	2806d7fa 	srli	r3,r5,31
   2a4f0:	2ad4703a 	and	r10,r5,r11
   2a4f4:	3ad2703a 	and	r9,r7,r11
   2a4f8:	3804d53a 	srli	r2,r7,20
   2a4fc:	3018d77a 	srli	r12,r6,29
   2a500:	280ad53a 	srli	r5,r5,20
   2a504:	501490fa 	slli	r10,r10,3
   2a508:	2010d77a 	srli	r8,r4,29
   2a50c:	481290fa 	slli	r9,r9,3
   2a510:	380ed7fa 	srli	r7,r7,31
   2a514:	defffb04 	addi	sp,sp,-20
   2a518:	dc800215 	stw	r18,8(sp)
   2a51c:	dc400115 	stw	r17,4(sp)
   2a520:	dc000015 	stw	r16,0(sp)
   2a524:	dfc00415 	stw	ra,16(sp)
   2a528:	dcc00315 	stw	r19,12(sp)
   2a52c:	1c803fcc 	andi	r18,r3,255
   2a530:	2c01ffcc 	andi	r16,r5,2047
   2a534:	5210b03a 	or	r8,r10,r8
   2a538:	202290fa 	slli	r17,r4,3
   2a53c:	1081ffcc 	andi	r2,r2,2047
   2a540:	4b12b03a 	or	r9,r9,r12
   2a544:	300c90fa 	slli	r6,r6,3
   2a548:	91c07526 	beq	r18,r7,2a720 <__adddf3+0x23c>
   2a54c:	8087c83a 	sub	r3,r16,r2
   2a550:	00c0ab0e 	bge	zero,r3,2a800 <__adddf3+0x31c>
   2a554:	10002a1e 	bne	r2,zero,2a600 <__adddf3+0x11c>
   2a558:	4984b03a 	or	r2,r9,r6
   2a55c:	1000961e 	bne	r2,zero,2a7b8 <__adddf3+0x2d4>
   2a560:	888001cc 	andi	r2,r17,7
   2a564:	10000726 	beq	r2,zero,2a584 <__adddf3+0xa0>
   2a568:	888003cc 	andi	r2,r17,15
   2a56c:	00c00104 	movi	r3,4
   2a570:	10c00426 	beq	r2,r3,2a584 <__adddf3+0xa0>
   2a574:	88c7883a 	add	r3,r17,r3
   2a578:	1c63803a 	cmpltu	r17,r3,r17
   2a57c:	4451883a 	add	r8,r8,r17
   2a580:	1823883a 	mov	r17,r3
   2a584:	4080202c 	andhi	r2,r8,128
   2a588:	10005926 	beq	r2,zero,2a6f0 <__adddf3+0x20c>
   2a58c:	84000044 	addi	r16,r16,1
   2a590:	0081ffc4 	movi	r2,2047
   2a594:	8080ba26 	beq	r16,r2,2a880 <__adddf3+0x39c>
   2a598:	00bfe034 	movhi	r2,65408
   2a59c:	10bfffc4 	addi	r2,r2,-1
   2a5a0:	4090703a 	and	r8,r8,r2
   2a5a4:	4004977a 	slli	r2,r8,29
   2a5a8:	4010927a 	slli	r8,r8,9
   2a5ac:	8822d0fa 	srli	r17,r17,3
   2a5b0:	8401ffcc 	andi	r16,r16,2047
   2a5b4:	4010d33a 	srli	r8,r8,12
   2a5b8:	9007883a 	mov	r3,r18
   2a5bc:	1444b03a 	or	r2,r2,r17
   2a5c0:	8401ffcc 	andi	r16,r16,2047
   2a5c4:	8020953a 	slli	r16,r16,20
   2a5c8:	18c03fcc 	andi	r3,r3,255
   2a5cc:	01000434 	movhi	r4,16
   2a5d0:	213fffc4 	addi	r4,r4,-1
   2a5d4:	180697fa 	slli	r3,r3,31
   2a5d8:	4110703a 	and	r8,r8,r4
   2a5dc:	4410b03a 	or	r8,r8,r16
   2a5e0:	40c6b03a 	or	r3,r8,r3
   2a5e4:	dfc00417 	ldw	ra,16(sp)
   2a5e8:	dcc00317 	ldw	r19,12(sp)
   2a5ec:	dc800217 	ldw	r18,8(sp)
   2a5f0:	dc400117 	ldw	r17,4(sp)
   2a5f4:	dc000017 	ldw	r16,0(sp)
   2a5f8:	dec00504 	addi	sp,sp,20
   2a5fc:	f800283a 	ret
   2a600:	0081ffc4 	movi	r2,2047
   2a604:	80bfd626 	beq	r16,r2,2a560 <__alt_data_end+0xfffea560>
   2a608:	4a402034 	orhi	r9,r9,128
   2a60c:	00800e04 	movi	r2,56
   2a610:	10c09f16 	blt	r2,r3,2a890 <__adddf3+0x3ac>
   2a614:	008007c4 	movi	r2,31
   2a618:	10c0c216 	blt	r2,r3,2a924 <__adddf3+0x440>
   2a61c:	00800804 	movi	r2,32
   2a620:	10c5c83a 	sub	r2,r2,r3
   2a624:	488a983a 	sll	r5,r9,r2
   2a628:	30c8d83a 	srl	r4,r6,r3
   2a62c:	3084983a 	sll	r2,r6,r2
   2a630:	48c6d83a 	srl	r3,r9,r3
   2a634:	290cb03a 	or	r6,r5,r4
   2a638:	1004c03a 	cmpne	r2,r2,zero
   2a63c:	308cb03a 	or	r6,r6,r2
   2a640:	898dc83a 	sub	r6,r17,r6
   2a644:	89a3803a 	cmpltu	r17,r17,r6
   2a648:	40d1c83a 	sub	r8,r8,r3
   2a64c:	4451c83a 	sub	r8,r8,r17
   2a650:	3023883a 	mov	r17,r6
   2a654:	4080202c 	andhi	r2,r8,128
   2a658:	10002326 	beq	r2,zero,2a6e8 <__adddf3+0x204>
   2a65c:	04c02034 	movhi	r19,128
   2a660:	9cffffc4 	addi	r19,r19,-1
   2a664:	44e6703a 	and	r19,r8,r19
   2a668:	98007626 	beq	r19,zero,2a844 <__adddf3+0x360>
   2a66c:	9809883a 	mov	r4,r19
   2a670:	002cae80 	call	2cae8 <__clzsi2>
   2a674:	10fffe04 	addi	r3,r2,-8
   2a678:	010007c4 	movi	r4,31
   2a67c:	20c07716 	blt	r4,r3,2a85c <__adddf3+0x378>
   2a680:	00800804 	movi	r2,32
   2a684:	10c5c83a 	sub	r2,r2,r3
   2a688:	8884d83a 	srl	r2,r17,r2
   2a68c:	98d0983a 	sll	r8,r19,r3
   2a690:	88e2983a 	sll	r17,r17,r3
   2a694:	1204b03a 	or	r2,r2,r8
   2a698:	1c007416 	blt	r3,r16,2a86c <__adddf3+0x388>
   2a69c:	1c21c83a 	sub	r16,r3,r16
   2a6a0:	82000044 	addi	r8,r16,1
   2a6a4:	00c007c4 	movi	r3,31
   2a6a8:	1a009116 	blt	r3,r8,2a8f0 <__adddf3+0x40c>
   2a6ac:	00c00804 	movi	r3,32
   2a6b0:	1a07c83a 	sub	r3,r3,r8
   2a6b4:	8a08d83a 	srl	r4,r17,r8
   2a6b8:	88e2983a 	sll	r17,r17,r3
   2a6bc:	10c6983a 	sll	r3,r2,r3
   2a6c0:	1210d83a 	srl	r8,r2,r8
   2a6c4:	8804c03a 	cmpne	r2,r17,zero
   2a6c8:	1906b03a 	or	r3,r3,r4
   2a6cc:	18a2b03a 	or	r17,r3,r2
   2a6d0:	0021883a 	mov	r16,zero
   2a6d4:	003fa206 	br	2a560 <__alt_data_end+0xfffea560>
   2a6d8:	1890b03a 	or	r8,r3,r2
   2a6dc:	40017d26 	beq	r8,zero,2acd4 <__adddf3+0x7f0>
   2a6e0:	1011883a 	mov	r8,r2
   2a6e4:	1823883a 	mov	r17,r3
   2a6e8:	888001cc 	andi	r2,r17,7
   2a6ec:	103f9e1e 	bne	r2,zero,2a568 <__alt_data_end+0xfffea568>
   2a6f0:	4004977a 	slli	r2,r8,29
   2a6f4:	8822d0fa 	srli	r17,r17,3
   2a6f8:	4010d0fa 	srli	r8,r8,3
   2a6fc:	9007883a 	mov	r3,r18
   2a700:	1444b03a 	or	r2,r2,r17
   2a704:	0101ffc4 	movi	r4,2047
   2a708:	81002426 	beq	r16,r4,2a79c <__adddf3+0x2b8>
   2a70c:	8120703a 	and	r16,r16,r4
   2a710:	01000434 	movhi	r4,16
   2a714:	213fffc4 	addi	r4,r4,-1
   2a718:	4110703a 	and	r8,r8,r4
   2a71c:	003fa806 	br	2a5c0 <__alt_data_end+0xfffea5c0>
   2a720:	8089c83a 	sub	r4,r16,r2
   2a724:	01005e0e 	bge	zero,r4,2a8a0 <__adddf3+0x3bc>
   2a728:	10002b26 	beq	r2,zero,2a7d8 <__adddf3+0x2f4>
   2a72c:	0081ffc4 	movi	r2,2047
   2a730:	80bf8b26 	beq	r16,r2,2a560 <__alt_data_end+0xfffea560>
   2a734:	4a402034 	orhi	r9,r9,128
   2a738:	00800e04 	movi	r2,56
   2a73c:	1100a40e 	bge	r2,r4,2a9d0 <__adddf3+0x4ec>
   2a740:	498cb03a 	or	r6,r9,r6
   2a744:	300ac03a 	cmpne	r5,r6,zero
   2a748:	0013883a 	mov	r9,zero
   2a74c:	2c4b883a 	add	r5,r5,r17
   2a750:	2c63803a 	cmpltu	r17,r5,r17
   2a754:	4a11883a 	add	r8,r9,r8
   2a758:	8a11883a 	add	r8,r17,r8
   2a75c:	2823883a 	mov	r17,r5
   2a760:	4080202c 	andhi	r2,r8,128
   2a764:	103fe026 	beq	r2,zero,2a6e8 <__alt_data_end+0xfffea6e8>
   2a768:	84000044 	addi	r16,r16,1
   2a76c:	0081ffc4 	movi	r2,2047
   2a770:	8080d226 	beq	r16,r2,2aabc <__adddf3+0x5d8>
   2a774:	00bfe034 	movhi	r2,65408
   2a778:	10bfffc4 	addi	r2,r2,-1
   2a77c:	4090703a 	and	r8,r8,r2
   2a780:	880ad07a 	srli	r5,r17,1
   2a784:	400897fa 	slli	r4,r8,31
   2a788:	88c0004c 	andi	r3,r17,1
   2a78c:	28e2b03a 	or	r17,r5,r3
   2a790:	4010d07a 	srli	r8,r8,1
   2a794:	2462b03a 	or	r17,r4,r17
   2a798:	003f7106 	br	2a560 <__alt_data_end+0xfffea560>
   2a79c:	4088b03a 	or	r4,r8,r2
   2a7a0:	20014526 	beq	r4,zero,2acb8 <__adddf3+0x7d4>
   2a7a4:	01000434 	movhi	r4,16
   2a7a8:	42000234 	orhi	r8,r8,8
   2a7ac:	213fffc4 	addi	r4,r4,-1
   2a7b0:	4110703a 	and	r8,r8,r4
   2a7b4:	003f8206 	br	2a5c0 <__alt_data_end+0xfffea5c0>
   2a7b8:	18ffffc4 	addi	r3,r3,-1
   2a7bc:	1800491e 	bne	r3,zero,2a8e4 <__adddf3+0x400>
   2a7c0:	898bc83a 	sub	r5,r17,r6
   2a7c4:	8963803a 	cmpltu	r17,r17,r5
   2a7c8:	4251c83a 	sub	r8,r8,r9
   2a7cc:	4451c83a 	sub	r8,r8,r17
   2a7d0:	2823883a 	mov	r17,r5
   2a7d4:	003f9f06 	br	2a654 <__alt_data_end+0xfffea654>
   2a7d8:	4984b03a 	or	r2,r9,r6
   2a7dc:	103f6026 	beq	r2,zero,2a560 <__alt_data_end+0xfffea560>
   2a7e0:	213fffc4 	addi	r4,r4,-1
   2a7e4:	2000931e 	bne	r4,zero,2aa34 <__adddf3+0x550>
   2a7e8:	898d883a 	add	r6,r17,r6
   2a7ec:	3463803a 	cmpltu	r17,r6,r17
   2a7f0:	4251883a 	add	r8,r8,r9
   2a7f4:	8a11883a 	add	r8,r17,r8
   2a7f8:	3023883a 	mov	r17,r6
   2a7fc:	003fd806 	br	2a760 <__alt_data_end+0xfffea760>
   2a800:	1800541e 	bne	r3,zero,2a954 <__adddf3+0x470>
   2a804:	80800044 	addi	r2,r16,1
   2a808:	1081ffcc 	andi	r2,r2,2047
   2a80c:	00c00044 	movi	r3,1
   2a810:	1880a00e 	bge	r3,r2,2aa94 <__adddf3+0x5b0>
   2a814:	8989c83a 	sub	r4,r17,r6
   2a818:	8905803a 	cmpltu	r2,r17,r4
   2a81c:	4267c83a 	sub	r19,r8,r9
   2a820:	98a7c83a 	sub	r19,r19,r2
   2a824:	9880202c 	andhi	r2,r19,128
   2a828:	10006326 	beq	r2,zero,2a9b8 <__adddf3+0x4d4>
   2a82c:	3463c83a 	sub	r17,r6,r17
   2a830:	4a07c83a 	sub	r3,r9,r8
   2a834:	344d803a 	cmpltu	r6,r6,r17
   2a838:	19a7c83a 	sub	r19,r3,r6
   2a83c:	3825883a 	mov	r18,r7
   2a840:	983f8a1e 	bne	r19,zero,2a66c <__alt_data_end+0xfffea66c>
   2a844:	8809883a 	mov	r4,r17
   2a848:	002cae80 	call	2cae8 <__clzsi2>
   2a84c:	10800804 	addi	r2,r2,32
   2a850:	10fffe04 	addi	r3,r2,-8
   2a854:	010007c4 	movi	r4,31
   2a858:	20ff890e 	bge	r4,r3,2a680 <__alt_data_end+0xfffea680>
   2a85c:	10bff604 	addi	r2,r2,-40
   2a860:	8884983a 	sll	r2,r17,r2
   2a864:	0023883a 	mov	r17,zero
   2a868:	1c3f8c0e 	bge	r3,r16,2a69c <__alt_data_end+0xfffea69c>
   2a86c:	023fe034 	movhi	r8,65408
   2a870:	423fffc4 	addi	r8,r8,-1
   2a874:	80e1c83a 	sub	r16,r16,r3
   2a878:	1210703a 	and	r8,r2,r8
   2a87c:	003f3806 	br	2a560 <__alt_data_end+0xfffea560>
   2a880:	9007883a 	mov	r3,r18
   2a884:	0011883a 	mov	r8,zero
   2a888:	0005883a 	mov	r2,zero
   2a88c:	003f4c06 	br	2a5c0 <__alt_data_end+0xfffea5c0>
   2a890:	498cb03a 	or	r6,r9,r6
   2a894:	300cc03a 	cmpne	r6,r6,zero
   2a898:	0007883a 	mov	r3,zero
   2a89c:	003f6806 	br	2a640 <__alt_data_end+0xfffea640>
   2a8a0:	20009c1e 	bne	r4,zero,2ab14 <__adddf3+0x630>
   2a8a4:	80800044 	addi	r2,r16,1
   2a8a8:	1141ffcc 	andi	r5,r2,2047
   2a8ac:	01000044 	movi	r4,1
   2a8b0:	2140670e 	bge	r4,r5,2aa50 <__adddf3+0x56c>
   2a8b4:	0101ffc4 	movi	r4,2047
   2a8b8:	11007f26 	beq	r2,r4,2aab8 <__adddf3+0x5d4>
   2a8bc:	898d883a 	add	r6,r17,r6
   2a8c0:	4247883a 	add	r3,r8,r9
   2a8c4:	3451803a 	cmpltu	r8,r6,r17
   2a8c8:	40d1883a 	add	r8,r8,r3
   2a8cc:	402297fa 	slli	r17,r8,31
   2a8d0:	300cd07a 	srli	r6,r6,1
   2a8d4:	4010d07a 	srli	r8,r8,1
   2a8d8:	1021883a 	mov	r16,r2
   2a8dc:	89a2b03a 	or	r17,r17,r6
   2a8e0:	003f1f06 	br	2a560 <__alt_data_end+0xfffea560>
   2a8e4:	0081ffc4 	movi	r2,2047
   2a8e8:	80bf481e 	bne	r16,r2,2a60c <__alt_data_end+0xfffea60c>
   2a8ec:	003f1c06 	br	2a560 <__alt_data_end+0xfffea560>
   2a8f0:	843ff844 	addi	r16,r16,-31
   2a8f4:	01000804 	movi	r4,32
   2a8f8:	1406d83a 	srl	r3,r2,r16
   2a8fc:	41005026 	beq	r8,r4,2aa40 <__adddf3+0x55c>
   2a900:	01001004 	movi	r4,64
   2a904:	2211c83a 	sub	r8,r4,r8
   2a908:	1204983a 	sll	r2,r2,r8
   2a90c:	88a2b03a 	or	r17,r17,r2
   2a910:	8822c03a 	cmpne	r17,r17,zero
   2a914:	1c62b03a 	or	r17,r3,r17
   2a918:	0011883a 	mov	r8,zero
   2a91c:	0021883a 	mov	r16,zero
   2a920:	003f7106 	br	2a6e8 <__alt_data_end+0xfffea6e8>
   2a924:	193ff804 	addi	r4,r3,-32
   2a928:	00800804 	movi	r2,32
   2a92c:	4908d83a 	srl	r4,r9,r4
   2a930:	18804526 	beq	r3,r2,2aa48 <__adddf3+0x564>
   2a934:	00801004 	movi	r2,64
   2a938:	10c5c83a 	sub	r2,r2,r3
   2a93c:	4886983a 	sll	r3,r9,r2
   2a940:	198cb03a 	or	r6,r3,r6
   2a944:	300cc03a 	cmpne	r6,r6,zero
   2a948:	218cb03a 	or	r6,r4,r6
   2a94c:	0007883a 	mov	r3,zero
   2a950:	003f3b06 	br	2a640 <__alt_data_end+0xfffea640>
   2a954:	80002a26 	beq	r16,zero,2aa00 <__adddf3+0x51c>
   2a958:	0101ffc4 	movi	r4,2047
   2a95c:	11006826 	beq	r2,r4,2ab00 <__adddf3+0x61c>
   2a960:	00c7c83a 	sub	r3,zero,r3
   2a964:	42002034 	orhi	r8,r8,128
   2a968:	01000e04 	movi	r4,56
   2a96c:	20c07c16 	blt	r4,r3,2ab60 <__adddf3+0x67c>
   2a970:	010007c4 	movi	r4,31
   2a974:	20c0da16 	blt	r4,r3,2ace0 <__adddf3+0x7fc>
   2a978:	01000804 	movi	r4,32
   2a97c:	20c9c83a 	sub	r4,r4,r3
   2a980:	4114983a 	sll	r10,r8,r4
   2a984:	88cad83a 	srl	r5,r17,r3
   2a988:	8908983a 	sll	r4,r17,r4
   2a98c:	40c6d83a 	srl	r3,r8,r3
   2a990:	5162b03a 	or	r17,r10,r5
   2a994:	2008c03a 	cmpne	r4,r4,zero
   2a998:	8922b03a 	or	r17,r17,r4
   2a99c:	3463c83a 	sub	r17,r6,r17
   2a9a0:	48c7c83a 	sub	r3,r9,r3
   2a9a4:	344d803a 	cmpltu	r6,r6,r17
   2a9a8:	1991c83a 	sub	r8,r3,r6
   2a9ac:	1021883a 	mov	r16,r2
   2a9b0:	3825883a 	mov	r18,r7
   2a9b4:	003f2706 	br	2a654 <__alt_data_end+0xfffea654>
   2a9b8:	24d0b03a 	or	r8,r4,r19
   2a9bc:	40001b1e 	bne	r8,zero,2aa2c <__adddf3+0x548>
   2a9c0:	0005883a 	mov	r2,zero
   2a9c4:	0007883a 	mov	r3,zero
   2a9c8:	0021883a 	mov	r16,zero
   2a9cc:	003f4d06 	br	2a704 <__alt_data_end+0xfffea704>
   2a9d0:	008007c4 	movi	r2,31
   2a9d4:	11003c16 	blt	r2,r4,2aac8 <__adddf3+0x5e4>
   2a9d8:	00800804 	movi	r2,32
   2a9dc:	1105c83a 	sub	r2,r2,r4
   2a9e0:	488e983a 	sll	r7,r9,r2
   2a9e4:	310ad83a 	srl	r5,r6,r4
   2a9e8:	3084983a 	sll	r2,r6,r2
   2a9ec:	4912d83a 	srl	r9,r9,r4
   2a9f0:	394ab03a 	or	r5,r7,r5
   2a9f4:	1004c03a 	cmpne	r2,r2,zero
   2a9f8:	288ab03a 	or	r5,r5,r2
   2a9fc:	003f5306 	br	2a74c <__alt_data_end+0xfffea74c>
   2aa00:	4448b03a 	or	r4,r8,r17
   2aa04:	20003e26 	beq	r4,zero,2ab00 <__adddf3+0x61c>
   2aa08:	00c6303a 	nor	r3,zero,r3
   2aa0c:	18003a1e 	bne	r3,zero,2aaf8 <__adddf3+0x614>
   2aa10:	3463c83a 	sub	r17,r6,r17
   2aa14:	4a07c83a 	sub	r3,r9,r8
   2aa18:	344d803a 	cmpltu	r6,r6,r17
   2aa1c:	1991c83a 	sub	r8,r3,r6
   2aa20:	1021883a 	mov	r16,r2
   2aa24:	3825883a 	mov	r18,r7
   2aa28:	003f0a06 	br	2a654 <__alt_data_end+0xfffea654>
   2aa2c:	2023883a 	mov	r17,r4
   2aa30:	003f0d06 	br	2a668 <__alt_data_end+0xfffea668>
   2aa34:	0081ffc4 	movi	r2,2047
   2aa38:	80bf3f1e 	bne	r16,r2,2a738 <__alt_data_end+0xfffea738>
   2aa3c:	003ec806 	br	2a560 <__alt_data_end+0xfffea560>
   2aa40:	0005883a 	mov	r2,zero
   2aa44:	003fb106 	br	2a90c <__alt_data_end+0xfffea90c>
   2aa48:	0007883a 	mov	r3,zero
   2aa4c:	003fbc06 	br	2a940 <__alt_data_end+0xfffea940>
   2aa50:	4444b03a 	or	r2,r8,r17
   2aa54:	8000871e 	bne	r16,zero,2ac74 <__adddf3+0x790>
   2aa58:	1000ba26 	beq	r2,zero,2ad44 <__adddf3+0x860>
   2aa5c:	4984b03a 	or	r2,r9,r6
   2aa60:	103ebf26 	beq	r2,zero,2a560 <__alt_data_end+0xfffea560>
   2aa64:	8985883a 	add	r2,r17,r6
   2aa68:	4247883a 	add	r3,r8,r9
   2aa6c:	1451803a 	cmpltu	r8,r2,r17
   2aa70:	40d1883a 	add	r8,r8,r3
   2aa74:	40c0202c 	andhi	r3,r8,128
   2aa78:	1023883a 	mov	r17,r2
   2aa7c:	183f1a26 	beq	r3,zero,2a6e8 <__alt_data_end+0xfffea6e8>
   2aa80:	00bfe034 	movhi	r2,65408
   2aa84:	10bfffc4 	addi	r2,r2,-1
   2aa88:	2021883a 	mov	r16,r4
   2aa8c:	4090703a 	and	r8,r8,r2
   2aa90:	003eb306 	br	2a560 <__alt_data_end+0xfffea560>
   2aa94:	4444b03a 	or	r2,r8,r17
   2aa98:	8000291e 	bne	r16,zero,2ab40 <__adddf3+0x65c>
   2aa9c:	10004b1e 	bne	r2,zero,2abcc <__adddf3+0x6e8>
   2aaa0:	4990b03a 	or	r8,r9,r6
   2aaa4:	40008b26 	beq	r8,zero,2acd4 <__adddf3+0x7f0>
   2aaa8:	4811883a 	mov	r8,r9
   2aaac:	3023883a 	mov	r17,r6
   2aab0:	3825883a 	mov	r18,r7
   2aab4:	003eaa06 	br	2a560 <__alt_data_end+0xfffea560>
   2aab8:	1021883a 	mov	r16,r2
   2aabc:	0011883a 	mov	r8,zero
   2aac0:	0005883a 	mov	r2,zero
   2aac4:	003f0f06 	br	2a704 <__alt_data_end+0xfffea704>
   2aac8:	217ff804 	addi	r5,r4,-32
   2aacc:	00800804 	movi	r2,32
   2aad0:	494ad83a 	srl	r5,r9,r5
   2aad4:	20807d26 	beq	r4,r2,2accc <__adddf3+0x7e8>
   2aad8:	00801004 	movi	r2,64
   2aadc:	1109c83a 	sub	r4,r2,r4
   2aae0:	4912983a 	sll	r9,r9,r4
   2aae4:	498cb03a 	or	r6,r9,r6
   2aae8:	300cc03a 	cmpne	r6,r6,zero
   2aaec:	298ab03a 	or	r5,r5,r6
   2aaf0:	0013883a 	mov	r9,zero
   2aaf4:	003f1506 	br	2a74c <__alt_data_end+0xfffea74c>
   2aaf8:	0101ffc4 	movi	r4,2047
   2aafc:	113f9a1e 	bne	r2,r4,2a968 <__alt_data_end+0xfffea968>
   2ab00:	4811883a 	mov	r8,r9
   2ab04:	3023883a 	mov	r17,r6
   2ab08:	1021883a 	mov	r16,r2
   2ab0c:	3825883a 	mov	r18,r7
   2ab10:	003e9306 	br	2a560 <__alt_data_end+0xfffea560>
   2ab14:	8000161e 	bne	r16,zero,2ab70 <__adddf3+0x68c>
   2ab18:	444ab03a 	or	r5,r8,r17
   2ab1c:	28005126 	beq	r5,zero,2ac64 <__adddf3+0x780>
   2ab20:	0108303a 	nor	r4,zero,r4
   2ab24:	20004d1e 	bne	r4,zero,2ac5c <__adddf3+0x778>
   2ab28:	89a3883a 	add	r17,r17,r6
   2ab2c:	4253883a 	add	r9,r8,r9
   2ab30:	898d803a 	cmpltu	r6,r17,r6
   2ab34:	3251883a 	add	r8,r6,r9
   2ab38:	1021883a 	mov	r16,r2
   2ab3c:	003f0806 	br	2a760 <__alt_data_end+0xfffea760>
   2ab40:	1000301e 	bne	r2,zero,2ac04 <__adddf3+0x720>
   2ab44:	4984b03a 	or	r2,r9,r6
   2ab48:	10007126 	beq	r2,zero,2ad10 <__adddf3+0x82c>
   2ab4c:	4811883a 	mov	r8,r9
   2ab50:	3023883a 	mov	r17,r6
   2ab54:	3825883a 	mov	r18,r7
   2ab58:	0401ffc4 	movi	r16,2047
   2ab5c:	003e8006 	br	2a560 <__alt_data_end+0xfffea560>
   2ab60:	4462b03a 	or	r17,r8,r17
   2ab64:	8822c03a 	cmpne	r17,r17,zero
   2ab68:	0007883a 	mov	r3,zero
   2ab6c:	003f8b06 	br	2a99c <__alt_data_end+0xfffea99c>
   2ab70:	0141ffc4 	movi	r5,2047
   2ab74:	11403b26 	beq	r2,r5,2ac64 <__adddf3+0x780>
   2ab78:	0109c83a 	sub	r4,zero,r4
   2ab7c:	42002034 	orhi	r8,r8,128
   2ab80:	01400e04 	movi	r5,56
   2ab84:	29006716 	blt	r5,r4,2ad24 <__adddf3+0x840>
   2ab88:	014007c4 	movi	r5,31
   2ab8c:	29007016 	blt	r5,r4,2ad50 <__adddf3+0x86c>
   2ab90:	01400804 	movi	r5,32
   2ab94:	290bc83a 	sub	r5,r5,r4
   2ab98:	4154983a 	sll	r10,r8,r5
   2ab9c:	890ed83a 	srl	r7,r17,r4
   2aba0:	894a983a 	sll	r5,r17,r5
   2aba4:	4108d83a 	srl	r4,r8,r4
   2aba8:	51e2b03a 	or	r17,r10,r7
   2abac:	280ac03a 	cmpne	r5,r5,zero
   2abb0:	8962b03a 	or	r17,r17,r5
   2abb4:	89a3883a 	add	r17,r17,r6
   2abb8:	2253883a 	add	r9,r4,r9
   2abbc:	898d803a 	cmpltu	r6,r17,r6
   2abc0:	3251883a 	add	r8,r6,r9
   2abc4:	1021883a 	mov	r16,r2
   2abc8:	003ee506 	br	2a760 <__alt_data_end+0xfffea760>
   2abcc:	4984b03a 	or	r2,r9,r6
   2abd0:	103e6326 	beq	r2,zero,2a560 <__alt_data_end+0xfffea560>
   2abd4:	8987c83a 	sub	r3,r17,r6
   2abd8:	88c9803a 	cmpltu	r4,r17,r3
   2abdc:	4245c83a 	sub	r2,r8,r9
   2abe0:	1105c83a 	sub	r2,r2,r4
   2abe4:	1100202c 	andhi	r4,r2,128
   2abe8:	203ebb26 	beq	r4,zero,2a6d8 <__alt_data_end+0xfffea6d8>
   2abec:	3463c83a 	sub	r17,r6,r17
   2abf0:	4a07c83a 	sub	r3,r9,r8
   2abf4:	344d803a 	cmpltu	r6,r6,r17
   2abf8:	1991c83a 	sub	r8,r3,r6
   2abfc:	3825883a 	mov	r18,r7
   2ac00:	003e5706 	br	2a560 <__alt_data_end+0xfffea560>
   2ac04:	4984b03a 	or	r2,r9,r6
   2ac08:	10002e26 	beq	r2,zero,2acc4 <__adddf3+0x7e0>
   2ac0c:	4004d0fa 	srli	r2,r8,3
   2ac10:	8822d0fa 	srli	r17,r17,3
   2ac14:	4010977a 	slli	r8,r8,29
   2ac18:	10c0022c 	andhi	r3,r2,8
   2ac1c:	4462b03a 	or	r17,r8,r17
   2ac20:	18000826 	beq	r3,zero,2ac44 <__adddf3+0x760>
   2ac24:	4808d0fa 	srli	r4,r9,3
   2ac28:	20c0022c 	andhi	r3,r4,8
   2ac2c:	1800051e 	bne	r3,zero,2ac44 <__adddf3+0x760>
   2ac30:	300cd0fa 	srli	r6,r6,3
   2ac34:	4806977a 	slli	r3,r9,29
   2ac38:	2005883a 	mov	r2,r4
   2ac3c:	3825883a 	mov	r18,r7
   2ac40:	19a2b03a 	or	r17,r3,r6
   2ac44:	8810d77a 	srli	r8,r17,29
   2ac48:	100490fa 	slli	r2,r2,3
   2ac4c:	882290fa 	slli	r17,r17,3
   2ac50:	0401ffc4 	movi	r16,2047
   2ac54:	4090b03a 	or	r8,r8,r2
   2ac58:	003e4106 	br	2a560 <__alt_data_end+0xfffea560>
   2ac5c:	0141ffc4 	movi	r5,2047
   2ac60:	117fc71e 	bne	r2,r5,2ab80 <__alt_data_end+0xfffeab80>
   2ac64:	4811883a 	mov	r8,r9
   2ac68:	3023883a 	mov	r17,r6
   2ac6c:	1021883a 	mov	r16,r2
   2ac70:	003e3b06 	br	2a560 <__alt_data_end+0xfffea560>
   2ac74:	10002f26 	beq	r2,zero,2ad34 <__adddf3+0x850>
   2ac78:	4984b03a 	or	r2,r9,r6
   2ac7c:	10001126 	beq	r2,zero,2acc4 <__adddf3+0x7e0>
   2ac80:	4004d0fa 	srli	r2,r8,3
   2ac84:	8822d0fa 	srli	r17,r17,3
   2ac88:	4010977a 	slli	r8,r8,29
   2ac8c:	10c0022c 	andhi	r3,r2,8
   2ac90:	4462b03a 	or	r17,r8,r17
   2ac94:	183feb26 	beq	r3,zero,2ac44 <__alt_data_end+0xfffeac44>
   2ac98:	4808d0fa 	srli	r4,r9,3
   2ac9c:	20c0022c 	andhi	r3,r4,8
   2aca0:	183fe81e 	bne	r3,zero,2ac44 <__alt_data_end+0xfffeac44>
   2aca4:	300cd0fa 	srli	r6,r6,3
   2aca8:	4806977a 	slli	r3,r9,29
   2acac:	2005883a 	mov	r2,r4
   2acb0:	19a2b03a 	or	r17,r3,r6
   2acb4:	003fe306 	br	2ac44 <__alt_data_end+0xfffeac44>
   2acb8:	0011883a 	mov	r8,zero
   2acbc:	0005883a 	mov	r2,zero
   2acc0:	003e3f06 	br	2a5c0 <__alt_data_end+0xfffea5c0>
   2acc4:	0401ffc4 	movi	r16,2047
   2acc8:	003e2506 	br	2a560 <__alt_data_end+0xfffea560>
   2accc:	0013883a 	mov	r9,zero
   2acd0:	003f8406 	br	2aae4 <__alt_data_end+0xfffeaae4>
   2acd4:	0005883a 	mov	r2,zero
   2acd8:	0007883a 	mov	r3,zero
   2acdc:	003e8906 	br	2a704 <__alt_data_end+0xfffea704>
   2ace0:	197ff804 	addi	r5,r3,-32
   2ace4:	01000804 	movi	r4,32
   2ace8:	414ad83a 	srl	r5,r8,r5
   2acec:	19002426 	beq	r3,r4,2ad80 <__adddf3+0x89c>
   2acf0:	01001004 	movi	r4,64
   2acf4:	20c7c83a 	sub	r3,r4,r3
   2acf8:	40c6983a 	sll	r3,r8,r3
   2acfc:	1c46b03a 	or	r3,r3,r17
   2ad00:	1806c03a 	cmpne	r3,r3,zero
   2ad04:	28e2b03a 	or	r17,r5,r3
   2ad08:	0007883a 	mov	r3,zero
   2ad0c:	003f2306 	br	2a99c <__alt_data_end+0xfffea99c>
   2ad10:	0007883a 	mov	r3,zero
   2ad14:	5811883a 	mov	r8,r11
   2ad18:	00bfffc4 	movi	r2,-1
   2ad1c:	0401ffc4 	movi	r16,2047
   2ad20:	003e7806 	br	2a704 <__alt_data_end+0xfffea704>
   2ad24:	4462b03a 	or	r17,r8,r17
   2ad28:	8822c03a 	cmpne	r17,r17,zero
   2ad2c:	0009883a 	mov	r4,zero
   2ad30:	003fa006 	br	2abb4 <__alt_data_end+0xfffeabb4>
   2ad34:	4811883a 	mov	r8,r9
   2ad38:	3023883a 	mov	r17,r6
   2ad3c:	0401ffc4 	movi	r16,2047
   2ad40:	003e0706 	br	2a560 <__alt_data_end+0xfffea560>
   2ad44:	4811883a 	mov	r8,r9
   2ad48:	3023883a 	mov	r17,r6
   2ad4c:	003e0406 	br	2a560 <__alt_data_end+0xfffea560>
   2ad50:	21fff804 	addi	r7,r4,-32
   2ad54:	01400804 	movi	r5,32
   2ad58:	41ced83a 	srl	r7,r8,r7
   2ad5c:	21400a26 	beq	r4,r5,2ad88 <__adddf3+0x8a4>
   2ad60:	01401004 	movi	r5,64
   2ad64:	2909c83a 	sub	r4,r5,r4
   2ad68:	4108983a 	sll	r4,r8,r4
   2ad6c:	2448b03a 	or	r4,r4,r17
   2ad70:	2008c03a 	cmpne	r4,r4,zero
   2ad74:	3922b03a 	or	r17,r7,r4
   2ad78:	0009883a 	mov	r4,zero
   2ad7c:	003f8d06 	br	2abb4 <__alt_data_end+0xfffeabb4>
   2ad80:	0007883a 	mov	r3,zero
   2ad84:	003fdd06 	br	2acfc <__alt_data_end+0xfffeacfc>
   2ad88:	0009883a 	mov	r4,zero
   2ad8c:	003ff706 	br	2ad6c <__alt_data_end+0xfffead6c>

0002ad90 <__divdf3>:
   2ad90:	defff204 	addi	sp,sp,-56
   2ad94:	dd400915 	stw	r21,36(sp)
   2ad98:	282ad53a 	srli	r21,r5,20
   2ad9c:	dd000815 	stw	r20,32(sp)
   2ada0:	2828d7fa 	srli	r20,r5,31
   2ada4:	dc000415 	stw	r16,16(sp)
   2ada8:	04000434 	movhi	r16,16
   2adac:	df000c15 	stw	fp,48(sp)
   2adb0:	843fffc4 	addi	r16,r16,-1
   2adb4:	dfc00d15 	stw	ra,52(sp)
   2adb8:	ddc00b15 	stw	r23,44(sp)
   2adbc:	dd800a15 	stw	r22,40(sp)
   2adc0:	dcc00715 	stw	r19,28(sp)
   2adc4:	dc800615 	stw	r18,24(sp)
   2adc8:	dc400515 	stw	r17,20(sp)
   2adcc:	ad41ffcc 	andi	r21,r21,2047
   2add0:	2c20703a 	and	r16,r5,r16
   2add4:	a7003fcc 	andi	fp,r20,255
   2add8:	a8006126 	beq	r21,zero,2af60 <__divdf3+0x1d0>
   2addc:	0081ffc4 	movi	r2,2047
   2ade0:	2025883a 	mov	r18,r4
   2ade4:	a8803726 	beq	r21,r2,2aec4 <__divdf3+0x134>
   2ade8:	80800434 	orhi	r2,r16,16
   2adec:	100490fa 	slli	r2,r2,3
   2adf0:	2020d77a 	srli	r16,r4,29
   2adf4:	202490fa 	slli	r18,r4,3
   2adf8:	ad7f0044 	addi	r21,r21,-1023
   2adfc:	80a0b03a 	or	r16,r16,r2
   2ae00:	0027883a 	mov	r19,zero
   2ae04:	0013883a 	mov	r9,zero
   2ae08:	3804d53a 	srli	r2,r7,20
   2ae0c:	382cd7fa 	srli	r22,r7,31
   2ae10:	04400434 	movhi	r17,16
   2ae14:	8c7fffc4 	addi	r17,r17,-1
   2ae18:	1081ffcc 	andi	r2,r2,2047
   2ae1c:	3011883a 	mov	r8,r6
   2ae20:	3c62703a 	and	r17,r7,r17
   2ae24:	b5c03fcc 	andi	r23,r22,255
   2ae28:	10006c26 	beq	r2,zero,2afdc <__divdf3+0x24c>
   2ae2c:	00c1ffc4 	movi	r3,2047
   2ae30:	10c06426 	beq	r2,r3,2afc4 <__divdf3+0x234>
   2ae34:	88c00434 	orhi	r3,r17,16
   2ae38:	180690fa 	slli	r3,r3,3
   2ae3c:	3022d77a 	srli	r17,r6,29
   2ae40:	301090fa 	slli	r8,r6,3
   2ae44:	10bf0044 	addi	r2,r2,-1023
   2ae48:	88e2b03a 	or	r17,r17,r3
   2ae4c:	000f883a 	mov	r7,zero
   2ae50:	a58cf03a 	xor	r6,r20,r22
   2ae54:	3cc8b03a 	or	r4,r7,r19
   2ae58:	a8abc83a 	sub	r21,r21,r2
   2ae5c:	008003c4 	movi	r2,15
   2ae60:	3007883a 	mov	r3,r6
   2ae64:	34c03fcc 	andi	r19,r6,255
   2ae68:	11009036 	bltu	r2,r4,2b0ac <__divdf3+0x31c>
   2ae6c:	200890ba 	slli	r4,r4,2
   2ae70:	008000f4 	movhi	r2,3
   2ae74:	10aba104 	addi	r2,r2,-20860
   2ae78:	2089883a 	add	r4,r4,r2
   2ae7c:	20800017 	ldw	r2,0(r4)
   2ae80:	1000683a 	jmp	r2
   2ae84:	0002b0ac 	andhi	zero,zero,2754
   2ae88:	0002aefc 	xorhi	zero,zero,2747
   2ae8c:	0002b09c 	xori	zero,zero,2754
   2ae90:	0002aef0 	cmpltui	zero,zero,2747
   2ae94:	0002b09c 	xori	zero,zero,2754
   2ae98:	0002b070 	cmpltui	zero,zero,2753
   2ae9c:	0002b09c 	xori	zero,zero,2754
   2aea0:	0002aef0 	cmpltui	zero,zero,2747
   2aea4:	0002aefc 	xorhi	zero,zero,2747
   2aea8:	0002aefc 	xorhi	zero,zero,2747
   2aeac:	0002b070 	cmpltui	zero,zero,2753
   2aeb0:	0002aef0 	cmpltui	zero,zero,2747
   2aeb4:	0002aee0 	cmpeqi	zero,zero,2747
   2aeb8:	0002aee0 	cmpeqi	zero,zero,2747
   2aebc:	0002aee0 	cmpeqi	zero,zero,2747
   2aec0:	0002b390 	cmplti	zero,zero,2766
   2aec4:	2404b03a 	or	r2,r4,r16
   2aec8:	1000661e 	bne	r2,zero,2b064 <__divdf3+0x2d4>
   2aecc:	04c00204 	movi	r19,8
   2aed0:	0021883a 	mov	r16,zero
   2aed4:	0025883a 	mov	r18,zero
   2aed8:	02400084 	movi	r9,2
   2aedc:	003fca06 	br	2ae08 <__alt_data_end+0xfffeae08>
   2aee0:	8023883a 	mov	r17,r16
   2aee4:	9011883a 	mov	r8,r18
   2aee8:	e02f883a 	mov	r23,fp
   2aeec:	480f883a 	mov	r7,r9
   2aef0:	00800084 	movi	r2,2
   2aef4:	3881311e 	bne	r7,r2,2b3bc <__divdf3+0x62c>
   2aef8:	b827883a 	mov	r19,r23
   2aefc:	98c0004c 	andi	r3,r19,1
   2af00:	0081ffc4 	movi	r2,2047
   2af04:	000b883a 	mov	r5,zero
   2af08:	0025883a 	mov	r18,zero
   2af0c:	1004953a 	slli	r2,r2,20
   2af10:	18c03fcc 	andi	r3,r3,255
   2af14:	04400434 	movhi	r17,16
   2af18:	8c7fffc4 	addi	r17,r17,-1
   2af1c:	180697fa 	slli	r3,r3,31
   2af20:	2c4a703a 	and	r5,r5,r17
   2af24:	288ab03a 	or	r5,r5,r2
   2af28:	28c6b03a 	or	r3,r5,r3
   2af2c:	9005883a 	mov	r2,r18
   2af30:	dfc00d17 	ldw	ra,52(sp)
   2af34:	df000c17 	ldw	fp,48(sp)
   2af38:	ddc00b17 	ldw	r23,44(sp)
   2af3c:	dd800a17 	ldw	r22,40(sp)
   2af40:	dd400917 	ldw	r21,36(sp)
   2af44:	dd000817 	ldw	r20,32(sp)
   2af48:	dcc00717 	ldw	r19,28(sp)
   2af4c:	dc800617 	ldw	r18,24(sp)
   2af50:	dc400517 	ldw	r17,20(sp)
   2af54:	dc000417 	ldw	r16,16(sp)
   2af58:	dec00e04 	addi	sp,sp,56
   2af5c:	f800283a 	ret
   2af60:	2404b03a 	or	r2,r4,r16
   2af64:	2027883a 	mov	r19,r4
   2af68:	10003926 	beq	r2,zero,2b050 <__divdf3+0x2c0>
   2af6c:	80012e26 	beq	r16,zero,2b428 <__divdf3+0x698>
   2af70:	8009883a 	mov	r4,r16
   2af74:	d9800315 	stw	r6,12(sp)
   2af78:	d9c00215 	stw	r7,8(sp)
   2af7c:	002cae80 	call	2cae8 <__clzsi2>
   2af80:	d9800317 	ldw	r6,12(sp)
   2af84:	d9c00217 	ldw	r7,8(sp)
   2af88:	113ffd44 	addi	r4,r2,-11
   2af8c:	00c00704 	movi	r3,28
   2af90:	19012116 	blt	r3,r4,2b418 <__divdf3+0x688>
   2af94:	00c00744 	movi	r3,29
   2af98:	147ffe04 	addi	r17,r2,-8
   2af9c:	1907c83a 	sub	r3,r3,r4
   2afa0:	8460983a 	sll	r16,r16,r17
   2afa4:	98c6d83a 	srl	r3,r19,r3
   2afa8:	9c64983a 	sll	r18,r19,r17
   2afac:	1c20b03a 	or	r16,r3,r16
   2afb0:	1080fcc4 	addi	r2,r2,1011
   2afb4:	00abc83a 	sub	r21,zero,r2
   2afb8:	0027883a 	mov	r19,zero
   2afbc:	0013883a 	mov	r9,zero
   2afc0:	003f9106 	br	2ae08 <__alt_data_end+0xfffeae08>
   2afc4:	3446b03a 	or	r3,r6,r17
   2afc8:	18001f1e 	bne	r3,zero,2b048 <__divdf3+0x2b8>
   2afcc:	0023883a 	mov	r17,zero
   2afd0:	0011883a 	mov	r8,zero
   2afd4:	01c00084 	movi	r7,2
   2afd8:	003f9d06 	br	2ae50 <__alt_data_end+0xfffeae50>
   2afdc:	3446b03a 	or	r3,r6,r17
   2afe0:	18001526 	beq	r3,zero,2b038 <__divdf3+0x2a8>
   2afe4:	88011b26 	beq	r17,zero,2b454 <__divdf3+0x6c4>
   2afe8:	8809883a 	mov	r4,r17
   2afec:	d9800315 	stw	r6,12(sp)
   2aff0:	da400115 	stw	r9,4(sp)
   2aff4:	002cae80 	call	2cae8 <__clzsi2>
   2aff8:	d9800317 	ldw	r6,12(sp)
   2affc:	da400117 	ldw	r9,4(sp)
   2b000:	113ffd44 	addi	r4,r2,-11
   2b004:	00c00704 	movi	r3,28
   2b008:	19010e16 	blt	r3,r4,2b444 <__divdf3+0x6b4>
   2b00c:	00c00744 	movi	r3,29
   2b010:	123ffe04 	addi	r8,r2,-8
   2b014:	1907c83a 	sub	r3,r3,r4
   2b018:	8a22983a 	sll	r17,r17,r8
   2b01c:	30c6d83a 	srl	r3,r6,r3
   2b020:	3210983a 	sll	r8,r6,r8
   2b024:	1c62b03a 	or	r17,r3,r17
   2b028:	1080fcc4 	addi	r2,r2,1011
   2b02c:	0085c83a 	sub	r2,zero,r2
   2b030:	000f883a 	mov	r7,zero
   2b034:	003f8606 	br	2ae50 <__alt_data_end+0xfffeae50>
   2b038:	0023883a 	mov	r17,zero
   2b03c:	0011883a 	mov	r8,zero
   2b040:	01c00044 	movi	r7,1
   2b044:	003f8206 	br	2ae50 <__alt_data_end+0xfffeae50>
   2b048:	01c000c4 	movi	r7,3
   2b04c:	003f8006 	br	2ae50 <__alt_data_end+0xfffeae50>
   2b050:	04c00104 	movi	r19,4
   2b054:	0021883a 	mov	r16,zero
   2b058:	0025883a 	mov	r18,zero
   2b05c:	02400044 	movi	r9,1
   2b060:	003f6906 	br	2ae08 <__alt_data_end+0xfffeae08>
   2b064:	04c00304 	movi	r19,12
   2b068:	024000c4 	movi	r9,3
   2b06c:	003f6606 	br	2ae08 <__alt_data_end+0xfffeae08>
   2b070:	01400434 	movhi	r5,16
   2b074:	0007883a 	mov	r3,zero
   2b078:	297fffc4 	addi	r5,r5,-1
   2b07c:	04bfffc4 	movi	r18,-1
   2b080:	0081ffc4 	movi	r2,2047
   2b084:	003fa106 	br	2af0c <__alt_data_end+0xfffeaf0c>
   2b088:	00c00044 	movi	r3,1
   2b08c:	1887c83a 	sub	r3,r3,r2
   2b090:	01000e04 	movi	r4,56
   2b094:	20c1210e 	bge	r4,r3,2b51c <__divdf3+0x78c>
   2b098:	98c0004c 	andi	r3,r19,1
   2b09c:	0005883a 	mov	r2,zero
   2b0a0:	000b883a 	mov	r5,zero
   2b0a4:	0025883a 	mov	r18,zero
   2b0a8:	003f9806 	br	2af0c <__alt_data_end+0xfffeaf0c>
   2b0ac:	8c00fd36 	bltu	r17,r16,2b4a4 <__divdf3+0x714>
   2b0b0:	8440fb26 	beq	r16,r17,2b4a0 <__divdf3+0x710>
   2b0b4:	8007883a 	mov	r3,r16
   2b0b8:	ad7fffc4 	addi	r21,r21,-1
   2b0bc:	0021883a 	mov	r16,zero
   2b0c0:	4004d63a 	srli	r2,r8,24
   2b0c4:	8822923a 	slli	r17,r17,8
   2b0c8:	1809883a 	mov	r4,r3
   2b0cc:	402c923a 	slli	r22,r8,8
   2b0d0:	88b8b03a 	or	fp,r17,r2
   2b0d4:	e028d43a 	srli	r20,fp,16
   2b0d8:	d8c00015 	stw	r3,0(sp)
   2b0dc:	e5ffffcc 	andi	r23,fp,65535
   2b0e0:	a00b883a 	mov	r5,r20
   2b0e4:	002a4280 	call	2a428 <__udivsi3>
   2b0e8:	d8c00017 	ldw	r3,0(sp)
   2b0ec:	a00b883a 	mov	r5,r20
   2b0f0:	d8800315 	stw	r2,12(sp)
   2b0f4:	1809883a 	mov	r4,r3
   2b0f8:	002a48c0 	call	2a48c <__umodsi3>
   2b0fc:	d9800317 	ldw	r6,12(sp)
   2b100:	1006943a 	slli	r3,r2,16
   2b104:	9004d43a 	srli	r2,r18,16
   2b108:	b9a3383a 	mul	r17,r23,r6
   2b10c:	10c4b03a 	or	r2,r2,r3
   2b110:	1440062e 	bgeu	r2,r17,2b12c <__divdf3+0x39c>
   2b114:	1705883a 	add	r2,r2,fp
   2b118:	30ffffc4 	addi	r3,r6,-1
   2b11c:	1700ee36 	bltu	r2,fp,2b4d8 <__divdf3+0x748>
   2b120:	1440ed2e 	bgeu	r2,r17,2b4d8 <__divdf3+0x748>
   2b124:	31bfff84 	addi	r6,r6,-2
   2b128:	1705883a 	add	r2,r2,fp
   2b12c:	1463c83a 	sub	r17,r2,r17
   2b130:	a00b883a 	mov	r5,r20
   2b134:	8809883a 	mov	r4,r17
   2b138:	d9800315 	stw	r6,12(sp)
   2b13c:	002a4280 	call	2a428 <__udivsi3>
   2b140:	a00b883a 	mov	r5,r20
   2b144:	8809883a 	mov	r4,r17
   2b148:	d8800215 	stw	r2,8(sp)
   2b14c:	002a48c0 	call	2a48c <__umodsi3>
   2b150:	d9c00217 	ldw	r7,8(sp)
   2b154:	1004943a 	slli	r2,r2,16
   2b158:	94bfffcc 	andi	r18,r18,65535
   2b15c:	b9d1383a 	mul	r8,r23,r7
   2b160:	90a4b03a 	or	r18,r18,r2
   2b164:	d9800317 	ldw	r6,12(sp)
   2b168:	9200062e 	bgeu	r18,r8,2b184 <__divdf3+0x3f4>
   2b16c:	9725883a 	add	r18,r18,fp
   2b170:	38bfffc4 	addi	r2,r7,-1
   2b174:	9700d636 	bltu	r18,fp,2b4d0 <__divdf3+0x740>
   2b178:	9200d52e 	bgeu	r18,r8,2b4d0 <__divdf3+0x740>
   2b17c:	39ffff84 	addi	r7,r7,-2
   2b180:	9725883a 	add	r18,r18,fp
   2b184:	3004943a 	slli	r2,r6,16
   2b188:	b012d43a 	srli	r9,r22,16
   2b18c:	b1bfffcc 	andi	r6,r22,65535
   2b190:	11e2b03a 	or	r17,r2,r7
   2b194:	8806d43a 	srli	r3,r17,16
   2b198:	893fffcc 	andi	r4,r17,65535
   2b19c:	218b383a 	mul	r5,r4,r6
   2b1a0:	30c5383a 	mul	r2,r6,r3
   2b1a4:	2249383a 	mul	r4,r4,r9
   2b1a8:	280ed43a 	srli	r7,r5,16
   2b1ac:	9225c83a 	sub	r18,r18,r8
   2b1b0:	2089883a 	add	r4,r4,r2
   2b1b4:	3909883a 	add	r4,r7,r4
   2b1b8:	1a47383a 	mul	r3,r3,r9
   2b1bc:	2080022e 	bgeu	r4,r2,2b1c8 <__divdf3+0x438>
   2b1c0:	00800074 	movhi	r2,1
   2b1c4:	1887883a 	add	r3,r3,r2
   2b1c8:	2004d43a 	srli	r2,r4,16
   2b1cc:	2008943a 	slli	r4,r4,16
   2b1d0:	297fffcc 	andi	r5,r5,65535
   2b1d4:	10c7883a 	add	r3,r2,r3
   2b1d8:	2149883a 	add	r4,r4,r5
   2b1dc:	90c0a536 	bltu	r18,r3,2b474 <__divdf3+0x6e4>
   2b1e0:	90c0bf26 	beq	r18,r3,2b4e0 <__divdf3+0x750>
   2b1e4:	90c7c83a 	sub	r3,r18,r3
   2b1e8:	810fc83a 	sub	r7,r16,r4
   2b1ec:	81e5803a 	cmpltu	r18,r16,r7
   2b1f0:	1ca5c83a 	sub	r18,r3,r18
   2b1f4:	e480c126 	beq	fp,r18,2b4fc <__divdf3+0x76c>
   2b1f8:	a00b883a 	mov	r5,r20
   2b1fc:	9009883a 	mov	r4,r18
   2b200:	d9800315 	stw	r6,12(sp)
   2b204:	d9c00215 	stw	r7,8(sp)
   2b208:	da400115 	stw	r9,4(sp)
   2b20c:	002a4280 	call	2a428 <__udivsi3>
   2b210:	a00b883a 	mov	r5,r20
   2b214:	9009883a 	mov	r4,r18
   2b218:	d8800015 	stw	r2,0(sp)
   2b21c:	002a48c0 	call	2a48c <__umodsi3>
   2b220:	d9c00217 	ldw	r7,8(sp)
   2b224:	da000017 	ldw	r8,0(sp)
   2b228:	1006943a 	slli	r3,r2,16
   2b22c:	3804d43a 	srli	r2,r7,16
   2b230:	ba21383a 	mul	r16,r23,r8
   2b234:	d9800317 	ldw	r6,12(sp)
   2b238:	10c4b03a 	or	r2,r2,r3
   2b23c:	da400117 	ldw	r9,4(sp)
   2b240:	1400062e 	bgeu	r2,r16,2b25c <__divdf3+0x4cc>
   2b244:	1705883a 	add	r2,r2,fp
   2b248:	40ffffc4 	addi	r3,r8,-1
   2b24c:	1700ad36 	bltu	r2,fp,2b504 <__divdf3+0x774>
   2b250:	1400ac2e 	bgeu	r2,r16,2b504 <__divdf3+0x774>
   2b254:	423fff84 	addi	r8,r8,-2
   2b258:	1705883a 	add	r2,r2,fp
   2b25c:	1421c83a 	sub	r16,r2,r16
   2b260:	a00b883a 	mov	r5,r20
   2b264:	8009883a 	mov	r4,r16
   2b268:	d9800315 	stw	r6,12(sp)
   2b26c:	d9c00215 	stw	r7,8(sp)
   2b270:	da000015 	stw	r8,0(sp)
   2b274:	da400115 	stw	r9,4(sp)
   2b278:	002a4280 	call	2a428 <__udivsi3>
   2b27c:	8009883a 	mov	r4,r16
   2b280:	a00b883a 	mov	r5,r20
   2b284:	1025883a 	mov	r18,r2
   2b288:	002a48c0 	call	2a48c <__umodsi3>
   2b28c:	d9c00217 	ldw	r7,8(sp)
   2b290:	1004943a 	slli	r2,r2,16
   2b294:	bcaf383a 	mul	r23,r23,r18
   2b298:	393fffcc 	andi	r4,r7,65535
   2b29c:	2088b03a 	or	r4,r4,r2
   2b2a0:	d9800317 	ldw	r6,12(sp)
   2b2a4:	da000017 	ldw	r8,0(sp)
   2b2a8:	da400117 	ldw	r9,4(sp)
   2b2ac:	25c0062e 	bgeu	r4,r23,2b2c8 <__divdf3+0x538>
   2b2b0:	2709883a 	add	r4,r4,fp
   2b2b4:	90bfffc4 	addi	r2,r18,-1
   2b2b8:	27009436 	bltu	r4,fp,2b50c <__divdf3+0x77c>
   2b2bc:	25c0932e 	bgeu	r4,r23,2b50c <__divdf3+0x77c>
   2b2c0:	94bfff84 	addi	r18,r18,-2
   2b2c4:	2709883a 	add	r4,r4,fp
   2b2c8:	4004943a 	slli	r2,r8,16
   2b2cc:	25efc83a 	sub	r23,r4,r23
   2b2d0:	1490b03a 	or	r8,r2,r18
   2b2d4:	4008d43a 	srli	r4,r8,16
   2b2d8:	40ffffcc 	andi	r3,r8,65535
   2b2dc:	30c5383a 	mul	r2,r6,r3
   2b2e0:	1a47383a 	mul	r3,r3,r9
   2b2e4:	310d383a 	mul	r6,r6,r4
   2b2e8:	100ad43a 	srli	r5,r2,16
   2b2ec:	4913383a 	mul	r9,r9,r4
   2b2f0:	1987883a 	add	r3,r3,r6
   2b2f4:	28c7883a 	add	r3,r5,r3
   2b2f8:	1980022e 	bgeu	r3,r6,2b304 <__divdf3+0x574>
   2b2fc:	01000074 	movhi	r4,1
   2b300:	4913883a 	add	r9,r9,r4
   2b304:	1808d43a 	srli	r4,r3,16
   2b308:	1806943a 	slli	r3,r3,16
   2b30c:	10bfffcc 	andi	r2,r2,65535
   2b310:	2253883a 	add	r9,r4,r9
   2b314:	1887883a 	add	r3,r3,r2
   2b318:	ba403836 	bltu	r23,r9,2b3fc <__divdf3+0x66c>
   2b31c:	ba403626 	beq	r23,r9,2b3f8 <__divdf3+0x668>
   2b320:	42000054 	ori	r8,r8,1
   2b324:	a880ffc4 	addi	r2,r21,1023
   2b328:	00bf570e 	bge	zero,r2,2b088 <__alt_data_end+0xfffeb088>
   2b32c:	40c001cc 	andi	r3,r8,7
   2b330:	18000726 	beq	r3,zero,2b350 <__divdf3+0x5c0>
   2b334:	40c003cc 	andi	r3,r8,15
   2b338:	01000104 	movi	r4,4
   2b33c:	19000426 	beq	r3,r4,2b350 <__divdf3+0x5c0>
   2b340:	4107883a 	add	r3,r8,r4
   2b344:	1a11803a 	cmpltu	r8,r3,r8
   2b348:	8a23883a 	add	r17,r17,r8
   2b34c:	1811883a 	mov	r8,r3
   2b350:	88c0402c 	andhi	r3,r17,256
   2b354:	18000426 	beq	r3,zero,2b368 <__divdf3+0x5d8>
   2b358:	00ffc034 	movhi	r3,65280
   2b35c:	18ffffc4 	addi	r3,r3,-1
   2b360:	a8810004 	addi	r2,r21,1024
   2b364:	88e2703a 	and	r17,r17,r3
   2b368:	00c1ff84 	movi	r3,2046
   2b36c:	18bee316 	blt	r3,r2,2aefc <__alt_data_end+0xfffeaefc>
   2b370:	8824977a 	slli	r18,r17,29
   2b374:	4010d0fa 	srli	r8,r8,3
   2b378:	8822927a 	slli	r17,r17,9
   2b37c:	1081ffcc 	andi	r2,r2,2047
   2b380:	9224b03a 	or	r18,r18,r8
   2b384:	880ad33a 	srli	r5,r17,12
   2b388:	98c0004c 	andi	r3,r19,1
   2b38c:	003edf06 	br	2af0c <__alt_data_end+0xfffeaf0c>
   2b390:	8080022c 	andhi	r2,r16,8
   2b394:	10001226 	beq	r2,zero,2b3e0 <__divdf3+0x650>
   2b398:	8880022c 	andhi	r2,r17,8
   2b39c:	1000101e 	bne	r2,zero,2b3e0 <__divdf3+0x650>
   2b3a0:	00800434 	movhi	r2,16
   2b3a4:	89400234 	orhi	r5,r17,8
   2b3a8:	10bfffc4 	addi	r2,r2,-1
   2b3ac:	b007883a 	mov	r3,r22
   2b3b0:	288a703a 	and	r5,r5,r2
   2b3b4:	4025883a 	mov	r18,r8
   2b3b8:	003f3106 	br	2b080 <__alt_data_end+0xfffeb080>
   2b3bc:	008000c4 	movi	r2,3
   2b3c0:	3880a626 	beq	r7,r2,2b65c <__divdf3+0x8cc>
   2b3c4:	00800044 	movi	r2,1
   2b3c8:	3880521e 	bne	r7,r2,2b514 <__divdf3+0x784>
   2b3cc:	b807883a 	mov	r3,r23
   2b3d0:	0005883a 	mov	r2,zero
   2b3d4:	000b883a 	mov	r5,zero
   2b3d8:	0025883a 	mov	r18,zero
   2b3dc:	003ecb06 	br	2af0c <__alt_data_end+0xfffeaf0c>
   2b3e0:	00800434 	movhi	r2,16
   2b3e4:	81400234 	orhi	r5,r16,8
   2b3e8:	10bfffc4 	addi	r2,r2,-1
   2b3ec:	a007883a 	mov	r3,r20
   2b3f0:	288a703a 	and	r5,r5,r2
   2b3f4:	003f2206 	br	2b080 <__alt_data_end+0xfffeb080>
   2b3f8:	183fca26 	beq	r3,zero,2b324 <__alt_data_end+0xfffeb324>
   2b3fc:	e5ef883a 	add	r23,fp,r23
   2b400:	40bfffc4 	addi	r2,r8,-1
   2b404:	bf00392e 	bgeu	r23,fp,2b4ec <__divdf3+0x75c>
   2b408:	1011883a 	mov	r8,r2
   2b40c:	ba7fc41e 	bne	r23,r9,2b320 <__alt_data_end+0xfffeb320>
   2b410:	b0ffc31e 	bne	r22,r3,2b320 <__alt_data_end+0xfffeb320>
   2b414:	003fc306 	br	2b324 <__alt_data_end+0xfffeb324>
   2b418:	143ff604 	addi	r16,r2,-40
   2b41c:	9c20983a 	sll	r16,r19,r16
   2b420:	0025883a 	mov	r18,zero
   2b424:	003ee206 	br	2afb0 <__alt_data_end+0xfffeafb0>
   2b428:	d9800315 	stw	r6,12(sp)
   2b42c:	d9c00215 	stw	r7,8(sp)
   2b430:	002cae80 	call	2cae8 <__clzsi2>
   2b434:	10800804 	addi	r2,r2,32
   2b438:	d9c00217 	ldw	r7,8(sp)
   2b43c:	d9800317 	ldw	r6,12(sp)
   2b440:	003ed106 	br	2af88 <__alt_data_end+0xfffeaf88>
   2b444:	147ff604 	addi	r17,r2,-40
   2b448:	3462983a 	sll	r17,r6,r17
   2b44c:	0011883a 	mov	r8,zero
   2b450:	003ef506 	br	2b028 <__alt_data_end+0xfffeb028>
   2b454:	3009883a 	mov	r4,r6
   2b458:	d9800315 	stw	r6,12(sp)
   2b45c:	da400115 	stw	r9,4(sp)
   2b460:	002cae80 	call	2cae8 <__clzsi2>
   2b464:	10800804 	addi	r2,r2,32
   2b468:	da400117 	ldw	r9,4(sp)
   2b46c:	d9800317 	ldw	r6,12(sp)
   2b470:	003ee306 	br	2b000 <__alt_data_end+0xfffeb000>
   2b474:	85a1883a 	add	r16,r16,r22
   2b478:	8585803a 	cmpltu	r2,r16,r22
   2b47c:	1705883a 	add	r2,r2,fp
   2b480:	14a5883a 	add	r18,r2,r18
   2b484:	88bfffc4 	addi	r2,r17,-1
   2b488:	e4800c2e 	bgeu	fp,r18,2b4bc <__divdf3+0x72c>
   2b48c:	90c03e36 	bltu	r18,r3,2b588 <__divdf3+0x7f8>
   2b490:	1c806926 	beq	r3,r18,2b638 <__divdf3+0x8a8>
   2b494:	90c7c83a 	sub	r3,r18,r3
   2b498:	1023883a 	mov	r17,r2
   2b49c:	003f5206 	br	2b1e8 <__alt_data_end+0xfffeb1e8>
   2b4a0:	923f0436 	bltu	r18,r8,2b0b4 <__alt_data_end+0xfffeb0b4>
   2b4a4:	800897fa 	slli	r4,r16,31
   2b4a8:	9004d07a 	srli	r2,r18,1
   2b4ac:	8006d07a 	srli	r3,r16,1
   2b4b0:	902097fa 	slli	r16,r18,31
   2b4b4:	20a4b03a 	or	r18,r4,r2
   2b4b8:	003f0106 	br	2b0c0 <__alt_data_end+0xfffeb0c0>
   2b4bc:	e4bff51e 	bne	fp,r18,2b494 <__alt_data_end+0xfffeb494>
   2b4c0:	85bff22e 	bgeu	r16,r22,2b48c <__alt_data_end+0xfffeb48c>
   2b4c4:	e0c7c83a 	sub	r3,fp,r3
   2b4c8:	1023883a 	mov	r17,r2
   2b4cc:	003f4606 	br	2b1e8 <__alt_data_end+0xfffeb1e8>
   2b4d0:	100f883a 	mov	r7,r2
   2b4d4:	003f2b06 	br	2b184 <__alt_data_end+0xfffeb184>
   2b4d8:	180d883a 	mov	r6,r3
   2b4dc:	003f1306 	br	2b12c <__alt_data_end+0xfffeb12c>
   2b4e0:	813fe436 	bltu	r16,r4,2b474 <__alt_data_end+0xfffeb474>
   2b4e4:	0007883a 	mov	r3,zero
   2b4e8:	003f3f06 	br	2b1e8 <__alt_data_end+0xfffeb1e8>
   2b4ec:	ba402c36 	bltu	r23,r9,2b5a0 <__divdf3+0x810>
   2b4f0:	4dc05426 	beq	r9,r23,2b644 <__divdf3+0x8b4>
   2b4f4:	1011883a 	mov	r8,r2
   2b4f8:	003f8906 	br	2b320 <__alt_data_end+0xfffeb320>
   2b4fc:	023fffc4 	movi	r8,-1
   2b500:	003f8806 	br	2b324 <__alt_data_end+0xfffeb324>
   2b504:	1811883a 	mov	r8,r3
   2b508:	003f5406 	br	2b25c <__alt_data_end+0xfffeb25c>
   2b50c:	1025883a 	mov	r18,r2
   2b510:	003f6d06 	br	2b2c8 <__alt_data_end+0xfffeb2c8>
   2b514:	b827883a 	mov	r19,r23
   2b518:	003f8206 	br	2b324 <__alt_data_end+0xfffeb324>
   2b51c:	010007c4 	movi	r4,31
   2b520:	20c02616 	blt	r4,r3,2b5bc <__divdf3+0x82c>
   2b524:	00800804 	movi	r2,32
   2b528:	10c5c83a 	sub	r2,r2,r3
   2b52c:	888a983a 	sll	r5,r17,r2
   2b530:	40c8d83a 	srl	r4,r8,r3
   2b534:	4084983a 	sll	r2,r8,r2
   2b538:	88e2d83a 	srl	r17,r17,r3
   2b53c:	2906b03a 	or	r3,r5,r4
   2b540:	1004c03a 	cmpne	r2,r2,zero
   2b544:	1886b03a 	or	r3,r3,r2
   2b548:	188001cc 	andi	r2,r3,7
   2b54c:	10000726 	beq	r2,zero,2b56c <__divdf3+0x7dc>
   2b550:	188003cc 	andi	r2,r3,15
   2b554:	01000104 	movi	r4,4
   2b558:	11000426 	beq	r2,r4,2b56c <__divdf3+0x7dc>
   2b55c:	1805883a 	mov	r2,r3
   2b560:	10c00104 	addi	r3,r2,4
   2b564:	1885803a 	cmpltu	r2,r3,r2
   2b568:	88a3883a 	add	r17,r17,r2
   2b56c:	8880202c 	andhi	r2,r17,128
   2b570:	10002726 	beq	r2,zero,2b610 <__divdf3+0x880>
   2b574:	98c0004c 	andi	r3,r19,1
   2b578:	00800044 	movi	r2,1
   2b57c:	000b883a 	mov	r5,zero
   2b580:	0025883a 	mov	r18,zero
   2b584:	003e6106 	br	2af0c <__alt_data_end+0xfffeaf0c>
   2b588:	85a1883a 	add	r16,r16,r22
   2b58c:	8585803a 	cmpltu	r2,r16,r22
   2b590:	1705883a 	add	r2,r2,fp
   2b594:	14a5883a 	add	r18,r2,r18
   2b598:	8c7fff84 	addi	r17,r17,-2
   2b59c:	003f1106 	br	2b1e4 <__alt_data_end+0xfffeb1e4>
   2b5a0:	b589883a 	add	r4,r22,r22
   2b5a4:	25ad803a 	cmpltu	r22,r4,r22
   2b5a8:	b739883a 	add	fp,r22,fp
   2b5ac:	40bfff84 	addi	r2,r8,-2
   2b5b0:	bf2f883a 	add	r23,r23,fp
   2b5b4:	202d883a 	mov	r22,r4
   2b5b8:	003f9306 	br	2b408 <__alt_data_end+0xfffeb408>
   2b5bc:	013ff844 	movi	r4,-31
   2b5c0:	2085c83a 	sub	r2,r4,r2
   2b5c4:	8888d83a 	srl	r4,r17,r2
   2b5c8:	00800804 	movi	r2,32
   2b5cc:	18802126 	beq	r3,r2,2b654 <__divdf3+0x8c4>
   2b5d0:	00801004 	movi	r2,64
   2b5d4:	10c5c83a 	sub	r2,r2,r3
   2b5d8:	8884983a 	sll	r2,r17,r2
   2b5dc:	1204b03a 	or	r2,r2,r8
   2b5e0:	1004c03a 	cmpne	r2,r2,zero
   2b5e4:	2084b03a 	or	r2,r4,r2
   2b5e8:	144001cc 	andi	r17,r2,7
   2b5ec:	88000d1e 	bne	r17,zero,2b624 <__divdf3+0x894>
   2b5f0:	000b883a 	mov	r5,zero
   2b5f4:	1024d0fa 	srli	r18,r2,3
   2b5f8:	98c0004c 	andi	r3,r19,1
   2b5fc:	0005883a 	mov	r2,zero
   2b600:	9464b03a 	or	r18,r18,r17
   2b604:	003e4106 	br	2af0c <__alt_data_end+0xfffeaf0c>
   2b608:	1007883a 	mov	r3,r2
   2b60c:	0023883a 	mov	r17,zero
   2b610:	880a927a 	slli	r5,r17,9
   2b614:	1805883a 	mov	r2,r3
   2b618:	8822977a 	slli	r17,r17,29
   2b61c:	280ad33a 	srli	r5,r5,12
   2b620:	003ff406 	br	2b5f4 <__alt_data_end+0xfffeb5f4>
   2b624:	10c003cc 	andi	r3,r2,15
   2b628:	01000104 	movi	r4,4
   2b62c:	193ff626 	beq	r3,r4,2b608 <__alt_data_end+0xfffeb608>
   2b630:	0023883a 	mov	r17,zero
   2b634:	003fca06 	br	2b560 <__alt_data_end+0xfffeb560>
   2b638:	813fd336 	bltu	r16,r4,2b588 <__alt_data_end+0xfffeb588>
   2b63c:	1023883a 	mov	r17,r2
   2b640:	003fa806 	br	2b4e4 <__alt_data_end+0xfffeb4e4>
   2b644:	b0ffd636 	bltu	r22,r3,2b5a0 <__alt_data_end+0xfffeb5a0>
   2b648:	1011883a 	mov	r8,r2
   2b64c:	b0ff341e 	bne	r22,r3,2b320 <__alt_data_end+0xfffeb320>
   2b650:	003f3406 	br	2b324 <__alt_data_end+0xfffeb324>
   2b654:	0005883a 	mov	r2,zero
   2b658:	003fe006 	br	2b5dc <__alt_data_end+0xfffeb5dc>
   2b65c:	00800434 	movhi	r2,16
   2b660:	89400234 	orhi	r5,r17,8
   2b664:	10bfffc4 	addi	r2,r2,-1
   2b668:	b807883a 	mov	r3,r23
   2b66c:	288a703a 	and	r5,r5,r2
   2b670:	4025883a 	mov	r18,r8
   2b674:	003e8206 	br	2b080 <__alt_data_end+0xfffeb080>

0002b678 <__eqdf2>:
   2b678:	2804d53a 	srli	r2,r5,20
   2b67c:	3806d53a 	srli	r3,r7,20
   2b680:	02000434 	movhi	r8,16
   2b684:	423fffc4 	addi	r8,r8,-1
   2b688:	1081ffcc 	andi	r2,r2,2047
   2b68c:	0281ffc4 	movi	r10,2047
   2b690:	2a12703a 	and	r9,r5,r8
   2b694:	18c1ffcc 	andi	r3,r3,2047
   2b698:	3a10703a 	and	r8,r7,r8
   2b69c:	280ad7fa 	srli	r5,r5,31
   2b6a0:	380ed7fa 	srli	r7,r7,31
   2b6a4:	12801026 	beq	r2,r10,2b6e8 <__eqdf2+0x70>
   2b6a8:	0281ffc4 	movi	r10,2047
   2b6ac:	1a800a26 	beq	r3,r10,2b6d8 <__eqdf2+0x60>
   2b6b0:	10c00226 	beq	r2,r3,2b6bc <__eqdf2+0x44>
   2b6b4:	00800044 	movi	r2,1
   2b6b8:	f800283a 	ret
   2b6bc:	4a3ffd1e 	bne	r9,r8,2b6b4 <__alt_data_end+0xfffeb6b4>
   2b6c0:	21bffc1e 	bne	r4,r6,2b6b4 <__alt_data_end+0xfffeb6b4>
   2b6c4:	29c00c26 	beq	r5,r7,2b6f8 <__eqdf2+0x80>
   2b6c8:	103ffa1e 	bne	r2,zero,2b6b4 <__alt_data_end+0xfffeb6b4>
   2b6cc:	2244b03a 	or	r2,r4,r9
   2b6d0:	1004c03a 	cmpne	r2,r2,zero
   2b6d4:	f800283a 	ret
   2b6d8:	3214b03a 	or	r10,r6,r8
   2b6dc:	503ff426 	beq	r10,zero,2b6b0 <__alt_data_end+0xfffeb6b0>
   2b6e0:	00800044 	movi	r2,1
   2b6e4:	f800283a 	ret
   2b6e8:	2254b03a 	or	r10,r4,r9
   2b6ec:	503fee26 	beq	r10,zero,2b6a8 <__alt_data_end+0xfffeb6a8>
   2b6f0:	00800044 	movi	r2,1
   2b6f4:	f800283a 	ret
   2b6f8:	0005883a 	mov	r2,zero
   2b6fc:	f800283a 	ret

0002b700 <__gedf2>:
   2b700:	2804d53a 	srli	r2,r5,20
   2b704:	3806d53a 	srli	r3,r7,20
   2b708:	02000434 	movhi	r8,16
   2b70c:	423fffc4 	addi	r8,r8,-1
   2b710:	1081ffcc 	andi	r2,r2,2047
   2b714:	0241ffc4 	movi	r9,2047
   2b718:	2a14703a 	and	r10,r5,r8
   2b71c:	18c1ffcc 	andi	r3,r3,2047
   2b720:	3a10703a 	and	r8,r7,r8
   2b724:	280ad7fa 	srli	r5,r5,31
   2b728:	380ed7fa 	srli	r7,r7,31
   2b72c:	12401d26 	beq	r2,r9,2b7a4 <__gedf2+0xa4>
   2b730:	0241ffc4 	movi	r9,2047
   2b734:	1a401226 	beq	r3,r9,2b780 <__gedf2+0x80>
   2b738:	1000081e 	bne	r2,zero,2b75c <__gedf2+0x5c>
   2b73c:	2296b03a 	or	r11,r4,r10
   2b740:	5813003a 	cmpeq	r9,r11,zero
   2b744:	1800091e 	bne	r3,zero,2b76c <__gedf2+0x6c>
   2b748:	3218b03a 	or	r12,r6,r8
   2b74c:	6000071e 	bne	r12,zero,2b76c <__gedf2+0x6c>
   2b750:	0005883a 	mov	r2,zero
   2b754:	5800101e 	bne	r11,zero,2b798 <__gedf2+0x98>
   2b758:	f800283a 	ret
   2b75c:	18000c1e 	bne	r3,zero,2b790 <__gedf2+0x90>
   2b760:	3212b03a 	or	r9,r6,r8
   2b764:	48000c26 	beq	r9,zero,2b798 <__gedf2+0x98>
   2b768:	0013883a 	mov	r9,zero
   2b76c:	39c03fcc 	andi	r7,r7,255
   2b770:	48000826 	beq	r9,zero,2b794 <__gedf2+0x94>
   2b774:	38000926 	beq	r7,zero,2b79c <__gedf2+0x9c>
   2b778:	00800044 	movi	r2,1
   2b77c:	f800283a 	ret
   2b780:	3212b03a 	or	r9,r6,r8
   2b784:	483fec26 	beq	r9,zero,2b738 <__alt_data_end+0xfffeb738>
   2b788:	00bfff84 	movi	r2,-2
   2b78c:	f800283a 	ret
   2b790:	39c03fcc 	andi	r7,r7,255
   2b794:	29c00626 	beq	r5,r7,2b7b0 <__gedf2+0xb0>
   2b798:	283ff726 	beq	r5,zero,2b778 <__alt_data_end+0xfffeb778>
   2b79c:	00bfffc4 	movi	r2,-1
   2b7a0:	f800283a 	ret
   2b7a4:	2292b03a 	or	r9,r4,r10
   2b7a8:	483fe126 	beq	r9,zero,2b730 <__alt_data_end+0xfffeb730>
   2b7ac:	003ff606 	br	2b788 <__alt_data_end+0xfffeb788>
   2b7b0:	18bff916 	blt	r3,r2,2b798 <__alt_data_end+0xfffeb798>
   2b7b4:	10c00316 	blt	r2,r3,2b7c4 <__gedf2+0xc4>
   2b7b8:	42bff736 	bltu	r8,r10,2b798 <__alt_data_end+0xfffeb798>
   2b7bc:	52000326 	beq	r10,r8,2b7cc <__gedf2+0xcc>
   2b7c0:	5200042e 	bgeu	r10,r8,2b7d4 <__gedf2+0xd4>
   2b7c4:	283fec1e 	bne	r5,zero,2b778 <__alt_data_end+0xfffeb778>
   2b7c8:	003ff406 	br	2b79c <__alt_data_end+0xfffeb79c>
   2b7cc:	313ff236 	bltu	r6,r4,2b798 <__alt_data_end+0xfffeb798>
   2b7d0:	21bffc36 	bltu	r4,r6,2b7c4 <__alt_data_end+0xfffeb7c4>
   2b7d4:	0005883a 	mov	r2,zero
   2b7d8:	f800283a 	ret

0002b7dc <__ledf2>:
   2b7dc:	2804d53a 	srli	r2,r5,20
   2b7e0:	3810d53a 	srli	r8,r7,20
   2b7e4:	00c00434 	movhi	r3,16
   2b7e8:	18ffffc4 	addi	r3,r3,-1
   2b7ec:	1081ffcc 	andi	r2,r2,2047
   2b7f0:	0241ffc4 	movi	r9,2047
   2b7f4:	28d4703a 	and	r10,r5,r3
   2b7f8:	4201ffcc 	andi	r8,r8,2047
   2b7fc:	38c6703a 	and	r3,r7,r3
   2b800:	280ad7fa 	srli	r5,r5,31
   2b804:	380ed7fa 	srli	r7,r7,31
   2b808:	12401f26 	beq	r2,r9,2b888 <__ledf2+0xac>
   2b80c:	0241ffc4 	movi	r9,2047
   2b810:	42401426 	beq	r8,r9,2b864 <__ledf2+0x88>
   2b814:	1000091e 	bne	r2,zero,2b83c <__ledf2+0x60>
   2b818:	2296b03a 	or	r11,r4,r10
   2b81c:	5813003a 	cmpeq	r9,r11,zero
   2b820:	29403fcc 	andi	r5,r5,255
   2b824:	40000a1e 	bne	r8,zero,2b850 <__ledf2+0x74>
   2b828:	30d8b03a 	or	r12,r6,r3
   2b82c:	6000081e 	bne	r12,zero,2b850 <__ledf2+0x74>
   2b830:	0005883a 	mov	r2,zero
   2b834:	5800111e 	bne	r11,zero,2b87c <__ledf2+0xa0>
   2b838:	f800283a 	ret
   2b83c:	29403fcc 	andi	r5,r5,255
   2b840:	40000c1e 	bne	r8,zero,2b874 <__ledf2+0x98>
   2b844:	30d2b03a 	or	r9,r6,r3
   2b848:	48000c26 	beq	r9,zero,2b87c <__ledf2+0xa0>
   2b84c:	0013883a 	mov	r9,zero
   2b850:	39c03fcc 	andi	r7,r7,255
   2b854:	48000826 	beq	r9,zero,2b878 <__ledf2+0x9c>
   2b858:	38001126 	beq	r7,zero,2b8a0 <__ledf2+0xc4>
   2b85c:	00800044 	movi	r2,1
   2b860:	f800283a 	ret
   2b864:	30d2b03a 	or	r9,r6,r3
   2b868:	483fea26 	beq	r9,zero,2b814 <__alt_data_end+0xfffeb814>
   2b86c:	00800084 	movi	r2,2
   2b870:	f800283a 	ret
   2b874:	39c03fcc 	andi	r7,r7,255
   2b878:	39400726 	beq	r7,r5,2b898 <__ledf2+0xbc>
   2b87c:	2800081e 	bne	r5,zero,2b8a0 <__ledf2+0xc4>
   2b880:	00800044 	movi	r2,1
   2b884:	f800283a 	ret
   2b888:	2292b03a 	or	r9,r4,r10
   2b88c:	483fdf26 	beq	r9,zero,2b80c <__alt_data_end+0xfffeb80c>
   2b890:	00800084 	movi	r2,2
   2b894:	f800283a 	ret
   2b898:	4080030e 	bge	r8,r2,2b8a8 <__ledf2+0xcc>
   2b89c:	383fef26 	beq	r7,zero,2b85c <__alt_data_end+0xfffeb85c>
   2b8a0:	00bfffc4 	movi	r2,-1
   2b8a4:	f800283a 	ret
   2b8a8:	123feb16 	blt	r2,r8,2b858 <__alt_data_end+0xfffeb858>
   2b8ac:	1abff336 	bltu	r3,r10,2b87c <__alt_data_end+0xfffeb87c>
   2b8b0:	50c00326 	beq	r10,r3,2b8c0 <__ledf2+0xe4>
   2b8b4:	50c0042e 	bgeu	r10,r3,2b8c8 <__ledf2+0xec>
   2b8b8:	283fe81e 	bne	r5,zero,2b85c <__alt_data_end+0xfffeb85c>
   2b8bc:	003ff806 	br	2b8a0 <__alt_data_end+0xfffeb8a0>
   2b8c0:	313fee36 	bltu	r6,r4,2b87c <__alt_data_end+0xfffeb87c>
   2b8c4:	21bffc36 	bltu	r4,r6,2b8b8 <__alt_data_end+0xfffeb8b8>
   2b8c8:	0005883a 	mov	r2,zero
   2b8cc:	f800283a 	ret

0002b8d0 <__muldf3>:
   2b8d0:	defff304 	addi	sp,sp,-52
   2b8d4:	2804d53a 	srli	r2,r5,20
   2b8d8:	dd800915 	stw	r22,36(sp)
   2b8dc:	282cd7fa 	srli	r22,r5,31
   2b8e0:	dc000315 	stw	r16,12(sp)
   2b8e4:	04000434 	movhi	r16,16
   2b8e8:	dd400815 	stw	r21,32(sp)
   2b8ec:	dc800515 	stw	r18,20(sp)
   2b8f0:	843fffc4 	addi	r16,r16,-1
   2b8f4:	dfc00c15 	stw	ra,48(sp)
   2b8f8:	df000b15 	stw	fp,44(sp)
   2b8fc:	ddc00a15 	stw	r23,40(sp)
   2b900:	dd000715 	stw	r20,28(sp)
   2b904:	dcc00615 	stw	r19,24(sp)
   2b908:	dc400415 	stw	r17,16(sp)
   2b90c:	1481ffcc 	andi	r18,r2,2047
   2b910:	2c20703a 	and	r16,r5,r16
   2b914:	b02b883a 	mov	r21,r22
   2b918:	b2403fcc 	andi	r9,r22,255
   2b91c:	90006026 	beq	r18,zero,2baa0 <__muldf3+0x1d0>
   2b920:	0081ffc4 	movi	r2,2047
   2b924:	2029883a 	mov	r20,r4
   2b928:	90803626 	beq	r18,r2,2ba04 <__muldf3+0x134>
   2b92c:	80800434 	orhi	r2,r16,16
   2b930:	100490fa 	slli	r2,r2,3
   2b934:	2020d77a 	srli	r16,r4,29
   2b938:	202890fa 	slli	r20,r4,3
   2b93c:	94bf0044 	addi	r18,r18,-1023
   2b940:	80a0b03a 	or	r16,r16,r2
   2b944:	0027883a 	mov	r19,zero
   2b948:	0039883a 	mov	fp,zero
   2b94c:	3804d53a 	srli	r2,r7,20
   2b950:	382ed7fa 	srli	r23,r7,31
   2b954:	04400434 	movhi	r17,16
   2b958:	8c7fffc4 	addi	r17,r17,-1
   2b95c:	1081ffcc 	andi	r2,r2,2047
   2b960:	3011883a 	mov	r8,r6
   2b964:	3c62703a 	and	r17,r7,r17
   2b968:	ba803fcc 	andi	r10,r23,255
   2b96c:	10006d26 	beq	r2,zero,2bb24 <__muldf3+0x254>
   2b970:	00c1ffc4 	movi	r3,2047
   2b974:	10c06526 	beq	r2,r3,2bb0c <__muldf3+0x23c>
   2b978:	88c00434 	orhi	r3,r17,16
   2b97c:	180690fa 	slli	r3,r3,3
   2b980:	3022d77a 	srli	r17,r6,29
   2b984:	301090fa 	slli	r8,r6,3
   2b988:	10bf0044 	addi	r2,r2,-1023
   2b98c:	88e2b03a 	or	r17,r17,r3
   2b990:	000b883a 	mov	r5,zero
   2b994:	9085883a 	add	r2,r18,r2
   2b998:	2cc8b03a 	or	r4,r5,r19
   2b99c:	00c003c4 	movi	r3,15
   2b9a0:	bdacf03a 	xor	r22,r23,r22
   2b9a4:	12c00044 	addi	r11,r2,1
   2b9a8:	19009936 	bltu	r3,r4,2bc10 <__muldf3+0x340>
   2b9ac:	200890ba 	slli	r4,r4,2
   2b9b0:	00c000f4 	movhi	r3,3
   2b9b4:	18ee7104 	addi	r3,r3,-17980
   2b9b8:	20c9883a 	add	r4,r4,r3
   2b9bc:	20c00017 	ldw	r3,0(r4)
   2b9c0:	1800683a 	jmp	r3
   2b9c4:	0002bc10 	cmplti	zero,zero,2800
   2b9c8:	0002ba24 	muli	zero,zero,2792
   2b9cc:	0002ba24 	muli	zero,zero,2792
   2b9d0:	0002ba20 	cmpeqi	zero,zero,2792
   2b9d4:	0002bbec 	andhi	zero,zero,2799
   2b9d8:	0002bbec 	andhi	zero,zero,2799
   2b9dc:	0002bbd4 	movui	zero,2799
   2b9e0:	0002ba20 	cmpeqi	zero,zero,2792
   2b9e4:	0002bbec 	andhi	zero,zero,2799
   2b9e8:	0002bbd4 	movui	zero,2799
   2b9ec:	0002bbec 	andhi	zero,zero,2799
   2b9f0:	0002ba20 	cmpeqi	zero,zero,2792
   2b9f4:	0002bbfc 	xorhi	zero,zero,2799
   2b9f8:	0002bbfc 	xorhi	zero,zero,2799
   2b9fc:	0002bbfc 	xorhi	zero,zero,2799
   2ba00:	0002be18 	cmpnei	zero,zero,2808
   2ba04:	2404b03a 	or	r2,r4,r16
   2ba08:	10006f1e 	bne	r2,zero,2bbc8 <__muldf3+0x2f8>
   2ba0c:	04c00204 	movi	r19,8
   2ba10:	0021883a 	mov	r16,zero
   2ba14:	0029883a 	mov	r20,zero
   2ba18:	07000084 	movi	fp,2
   2ba1c:	003fcb06 	br	2b94c <__alt_data_end+0xfffeb94c>
   2ba20:	502d883a 	mov	r22,r10
   2ba24:	00800084 	movi	r2,2
   2ba28:	28805726 	beq	r5,r2,2bb88 <__muldf3+0x2b8>
   2ba2c:	008000c4 	movi	r2,3
   2ba30:	28816626 	beq	r5,r2,2bfcc <__muldf3+0x6fc>
   2ba34:	00800044 	movi	r2,1
   2ba38:	2881411e 	bne	r5,r2,2bf40 <__muldf3+0x670>
   2ba3c:	b02b883a 	mov	r21,r22
   2ba40:	0005883a 	mov	r2,zero
   2ba44:	000b883a 	mov	r5,zero
   2ba48:	0029883a 	mov	r20,zero
   2ba4c:	1004953a 	slli	r2,r2,20
   2ba50:	a8c03fcc 	andi	r3,r21,255
   2ba54:	04400434 	movhi	r17,16
   2ba58:	8c7fffc4 	addi	r17,r17,-1
   2ba5c:	180697fa 	slli	r3,r3,31
   2ba60:	2c4a703a 	and	r5,r5,r17
   2ba64:	288ab03a 	or	r5,r5,r2
   2ba68:	28c6b03a 	or	r3,r5,r3
   2ba6c:	a005883a 	mov	r2,r20
   2ba70:	dfc00c17 	ldw	ra,48(sp)
   2ba74:	df000b17 	ldw	fp,44(sp)
   2ba78:	ddc00a17 	ldw	r23,40(sp)
   2ba7c:	dd800917 	ldw	r22,36(sp)
   2ba80:	dd400817 	ldw	r21,32(sp)
   2ba84:	dd000717 	ldw	r20,28(sp)
   2ba88:	dcc00617 	ldw	r19,24(sp)
   2ba8c:	dc800517 	ldw	r18,20(sp)
   2ba90:	dc400417 	ldw	r17,16(sp)
   2ba94:	dc000317 	ldw	r16,12(sp)
   2ba98:	dec00d04 	addi	sp,sp,52
   2ba9c:	f800283a 	ret
   2baa0:	2404b03a 	or	r2,r4,r16
   2baa4:	2027883a 	mov	r19,r4
   2baa8:	10004226 	beq	r2,zero,2bbb4 <__muldf3+0x2e4>
   2baac:	8000fc26 	beq	r16,zero,2bea0 <__muldf3+0x5d0>
   2bab0:	8009883a 	mov	r4,r16
   2bab4:	d9800215 	stw	r6,8(sp)
   2bab8:	d9c00015 	stw	r7,0(sp)
   2babc:	da400115 	stw	r9,4(sp)
   2bac0:	002cae80 	call	2cae8 <__clzsi2>
   2bac4:	d9800217 	ldw	r6,8(sp)
   2bac8:	d9c00017 	ldw	r7,0(sp)
   2bacc:	da400117 	ldw	r9,4(sp)
   2bad0:	113ffd44 	addi	r4,r2,-11
   2bad4:	00c00704 	movi	r3,28
   2bad8:	1900ed16 	blt	r3,r4,2be90 <__muldf3+0x5c0>
   2badc:	00c00744 	movi	r3,29
   2bae0:	147ffe04 	addi	r17,r2,-8
   2bae4:	1907c83a 	sub	r3,r3,r4
   2bae8:	8460983a 	sll	r16,r16,r17
   2baec:	98c6d83a 	srl	r3,r19,r3
   2baf0:	9c68983a 	sll	r20,r19,r17
   2baf4:	1c20b03a 	or	r16,r3,r16
   2baf8:	1080fcc4 	addi	r2,r2,1011
   2bafc:	00a5c83a 	sub	r18,zero,r2
   2bb00:	0027883a 	mov	r19,zero
   2bb04:	0039883a 	mov	fp,zero
   2bb08:	003f9006 	br	2b94c <__alt_data_end+0xfffeb94c>
   2bb0c:	3446b03a 	or	r3,r6,r17
   2bb10:	1800261e 	bne	r3,zero,2bbac <__muldf3+0x2dc>
   2bb14:	0023883a 	mov	r17,zero
   2bb18:	0011883a 	mov	r8,zero
   2bb1c:	01400084 	movi	r5,2
   2bb20:	003f9c06 	br	2b994 <__alt_data_end+0xfffeb994>
   2bb24:	3446b03a 	or	r3,r6,r17
   2bb28:	18001c26 	beq	r3,zero,2bb9c <__muldf3+0x2cc>
   2bb2c:	8800ce26 	beq	r17,zero,2be68 <__muldf3+0x598>
   2bb30:	8809883a 	mov	r4,r17
   2bb34:	d9800215 	stw	r6,8(sp)
   2bb38:	da400115 	stw	r9,4(sp)
   2bb3c:	da800015 	stw	r10,0(sp)
   2bb40:	002cae80 	call	2cae8 <__clzsi2>
   2bb44:	d9800217 	ldw	r6,8(sp)
   2bb48:	da400117 	ldw	r9,4(sp)
   2bb4c:	da800017 	ldw	r10,0(sp)
   2bb50:	113ffd44 	addi	r4,r2,-11
   2bb54:	00c00704 	movi	r3,28
   2bb58:	1900bf16 	blt	r3,r4,2be58 <__muldf3+0x588>
   2bb5c:	00c00744 	movi	r3,29
   2bb60:	123ffe04 	addi	r8,r2,-8
   2bb64:	1907c83a 	sub	r3,r3,r4
   2bb68:	8a22983a 	sll	r17,r17,r8
   2bb6c:	30c6d83a 	srl	r3,r6,r3
   2bb70:	3210983a 	sll	r8,r6,r8
   2bb74:	1c62b03a 	or	r17,r3,r17
   2bb78:	1080fcc4 	addi	r2,r2,1011
   2bb7c:	0085c83a 	sub	r2,zero,r2
   2bb80:	000b883a 	mov	r5,zero
   2bb84:	003f8306 	br	2b994 <__alt_data_end+0xfffeb994>
   2bb88:	b02b883a 	mov	r21,r22
   2bb8c:	0081ffc4 	movi	r2,2047
   2bb90:	000b883a 	mov	r5,zero
   2bb94:	0029883a 	mov	r20,zero
   2bb98:	003fac06 	br	2ba4c <__alt_data_end+0xfffeba4c>
   2bb9c:	0023883a 	mov	r17,zero
   2bba0:	0011883a 	mov	r8,zero
   2bba4:	01400044 	movi	r5,1
   2bba8:	003f7a06 	br	2b994 <__alt_data_end+0xfffeb994>
   2bbac:	014000c4 	movi	r5,3
   2bbb0:	003f7806 	br	2b994 <__alt_data_end+0xfffeb994>
   2bbb4:	04c00104 	movi	r19,4
   2bbb8:	0021883a 	mov	r16,zero
   2bbbc:	0029883a 	mov	r20,zero
   2bbc0:	07000044 	movi	fp,1
   2bbc4:	003f6106 	br	2b94c <__alt_data_end+0xfffeb94c>
   2bbc8:	04c00304 	movi	r19,12
   2bbcc:	070000c4 	movi	fp,3
   2bbd0:	003f5e06 	br	2b94c <__alt_data_end+0xfffeb94c>
   2bbd4:	01400434 	movhi	r5,16
   2bbd8:	002b883a 	mov	r21,zero
   2bbdc:	297fffc4 	addi	r5,r5,-1
   2bbe0:	053fffc4 	movi	r20,-1
   2bbe4:	0081ffc4 	movi	r2,2047
   2bbe8:	003f9806 	br	2ba4c <__alt_data_end+0xfffeba4c>
   2bbec:	8023883a 	mov	r17,r16
   2bbf0:	a011883a 	mov	r8,r20
   2bbf4:	e00b883a 	mov	r5,fp
   2bbf8:	003f8a06 	br	2ba24 <__alt_data_end+0xfffeba24>
   2bbfc:	8023883a 	mov	r17,r16
   2bc00:	a011883a 	mov	r8,r20
   2bc04:	482d883a 	mov	r22,r9
   2bc08:	e00b883a 	mov	r5,fp
   2bc0c:	003f8506 	br	2ba24 <__alt_data_end+0xfffeba24>
   2bc10:	a00ad43a 	srli	r5,r20,16
   2bc14:	401ad43a 	srli	r13,r8,16
   2bc18:	a53fffcc 	andi	r20,r20,65535
   2bc1c:	423fffcc 	andi	r8,r8,65535
   2bc20:	4519383a 	mul	r12,r8,r20
   2bc24:	4147383a 	mul	r3,r8,r5
   2bc28:	6d09383a 	mul	r4,r13,r20
   2bc2c:	600cd43a 	srli	r6,r12,16
   2bc30:	2b5d383a 	mul	r14,r5,r13
   2bc34:	20c9883a 	add	r4,r4,r3
   2bc38:	310d883a 	add	r6,r6,r4
   2bc3c:	30c0022e 	bgeu	r6,r3,2bc48 <__muldf3+0x378>
   2bc40:	00c00074 	movhi	r3,1
   2bc44:	70dd883a 	add	r14,r14,r3
   2bc48:	8826d43a 	srli	r19,r17,16
   2bc4c:	8bffffcc 	andi	r15,r17,65535
   2bc50:	7d23383a 	mul	r17,r15,r20
   2bc54:	7949383a 	mul	r4,r15,r5
   2bc58:	9d29383a 	mul	r20,r19,r20
   2bc5c:	8814d43a 	srli	r10,r17,16
   2bc60:	3012943a 	slli	r9,r6,16
   2bc64:	a129883a 	add	r20,r20,r4
   2bc68:	633fffcc 	andi	r12,r12,65535
   2bc6c:	5515883a 	add	r10,r10,r20
   2bc70:	3006d43a 	srli	r3,r6,16
   2bc74:	4b13883a 	add	r9,r9,r12
   2bc78:	2ccb383a 	mul	r5,r5,r19
   2bc7c:	5100022e 	bgeu	r10,r4,2bc88 <__muldf3+0x3b8>
   2bc80:	01000074 	movhi	r4,1
   2bc84:	290b883a 	add	r5,r5,r4
   2bc88:	802ad43a 	srli	r21,r16,16
   2bc8c:	843fffcc 	andi	r16,r16,65535
   2bc90:	440d383a 	mul	r6,r8,r16
   2bc94:	4565383a 	mul	r18,r8,r21
   2bc98:	8349383a 	mul	r4,r16,r13
   2bc9c:	500e943a 	slli	r7,r10,16
   2bca0:	3010d43a 	srli	r8,r6,16
   2bca4:	5028d43a 	srli	r20,r10,16
   2bca8:	2489883a 	add	r4,r4,r18
   2bcac:	8abfffcc 	andi	r10,r17,65535
   2bcb0:	3a95883a 	add	r10,r7,r10
   2bcb4:	4119883a 	add	r12,r8,r4
   2bcb8:	a169883a 	add	r20,r20,r5
   2bcbc:	1a87883a 	add	r3,r3,r10
   2bcc0:	6d5b383a 	mul	r13,r13,r21
   2bcc4:	6480022e 	bgeu	r12,r18,2bcd0 <__muldf3+0x400>
   2bcc8:	01000074 	movhi	r4,1
   2bccc:	691b883a 	add	r13,r13,r4
   2bcd0:	7c25383a 	mul	r18,r15,r16
   2bcd4:	7d4b383a 	mul	r5,r15,r21
   2bcd8:	84cf383a 	mul	r7,r16,r19
   2bcdc:	901ed43a 	srli	r15,r18,16
   2bce0:	6008d43a 	srli	r4,r12,16
   2bce4:	6010943a 	slli	r8,r12,16
   2bce8:	394f883a 	add	r7,r7,r5
   2bcec:	333fffcc 	andi	r12,r6,65535
   2bcf0:	79df883a 	add	r15,r15,r7
   2bcf4:	235b883a 	add	r13,r4,r13
   2bcf8:	9d63383a 	mul	r17,r19,r21
   2bcfc:	4309883a 	add	r4,r8,r12
   2bd00:	7940022e 	bgeu	r15,r5,2bd0c <__muldf3+0x43c>
   2bd04:	01400074 	movhi	r5,1
   2bd08:	8963883a 	add	r17,r17,r5
   2bd0c:	780a943a 	slli	r5,r15,16
   2bd10:	91bfffcc 	andi	r6,r18,65535
   2bd14:	70c7883a 	add	r3,r14,r3
   2bd18:	298d883a 	add	r6,r5,r6
   2bd1c:	1a8f803a 	cmpltu	r7,r3,r10
   2bd20:	350b883a 	add	r5,r6,r20
   2bd24:	20c7883a 	add	r3,r4,r3
   2bd28:	3955883a 	add	r10,r7,r5
   2bd2c:	1909803a 	cmpltu	r4,r3,r4
   2bd30:	6a91883a 	add	r8,r13,r10
   2bd34:	780cd43a 	srli	r6,r15,16
   2bd38:	2219883a 	add	r12,r4,r8
   2bd3c:	2d0b803a 	cmpltu	r5,r5,r20
   2bd40:	51cf803a 	cmpltu	r7,r10,r7
   2bd44:	29ceb03a 	or	r7,r5,r7
   2bd48:	4351803a 	cmpltu	r8,r8,r13
   2bd4c:	610b803a 	cmpltu	r5,r12,r4
   2bd50:	4148b03a 	or	r4,r8,r5
   2bd54:	398f883a 	add	r7,r7,r6
   2bd58:	3909883a 	add	r4,r7,r4
   2bd5c:	1810927a 	slli	r8,r3,9
   2bd60:	2449883a 	add	r4,r4,r17
   2bd64:	2008927a 	slli	r4,r4,9
   2bd68:	6022d5fa 	srli	r17,r12,23
   2bd6c:	1806d5fa 	srli	r3,r3,23
   2bd70:	4252b03a 	or	r9,r8,r9
   2bd74:	600a927a 	slli	r5,r12,9
   2bd78:	4810c03a 	cmpne	r8,r9,zero
   2bd7c:	2462b03a 	or	r17,r4,r17
   2bd80:	40c6b03a 	or	r3,r8,r3
   2bd84:	8900402c 	andhi	r4,r17,256
   2bd88:	1950b03a 	or	r8,r3,r5
   2bd8c:	20000726 	beq	r4,zero,2bdac <__muldf3+0x4dc>
   2bd90:	4006d07a 	srli	r3,r8,1
   2bd94:	880497fa 	slli	r2,r17,31
   2bd98:	4200004c 	andi	r8,r8,1
   2bd9c:	8822d07a 	srli	r17,r17,1
   2bda0:	1a10b03a 	or	r8,r3,r8
   2bda4:	1210b03a 	or	r8,r2,r8
   2bda8:	5805883a 	mov	r2,r11
   2bdac:	1140ffc4 	addi	r5,r2,1023
   2bdb0:	0140440e 	bge	zero,r5,2bec4 <__muldf3+0x5f4>
   2bdb4:	40c001cc 	andi	r3,r8,7
   2bdb8:	18000726 	beq	r3,zero,2bdd8 <__muldf3+0x508>
   2bdbc:	40c003cc 	andi	r3,r8,15
   2bdc0:	01000104 	movi	r4,4
   2bdc4:	19000426 	beq	r3,r4,2bdd8 <__muldf3+0x508>
   2bdc8:	4107883a 	add	r3,r8,r4
   2bdcc:	1a11803a 	cmpltu	r8,r3,r8
   2bdd0:	8a23883a 	add	r17,r17,r8
   2bdd4:	1811883a 	mov	r8,r3
   2bdd8:	88c0402c 	andhi	r3,r17,256
   2bddc:	18000426 	beq	r3,zero,2bdf0 <__muldf3+0x520>
   2bde0:	11410004 	addi	r5,r2,1024
   2bde4:	00bfc034 	movhi	r2,65280
   2bde8:	10bfffc4 	addi	r2,r2,-1
   2bdec:	88a2703a 	and	r17,r17,r2
   2bdf0:	0081ff84 	movi	r2,2046
   2bdf4:	117f6416 	blt	r2,r5,2bb88 <__alt_data_end+0xfffebb88>
   2bdf8:	8828977a 	slli	r20,r17,29
   2bdfc:	4010d0fa 	srli	r8,r8,3
   2be00:	8822927a 	slli	r17,r17,9
   2be04:	2881ffcc 	andi	r2,r5,2047
   2be08:	a228b03a 	or	r20,r20,r8
   2be0c:	880ad33a 	srli	r5,r17,12
   2be10:	b02b883a 	mov	r21,r22
   2be14:	003f0d06 	br	2ba4c <__alt_data_end+0xfffeba4c>
   2be18:	8080022c 	andhi	r2,r16,8
   2be1c:	10000926 	beq	r2,zero,2be44 <__muldf3+0x574>
   2be20:	8880022c 	andhi	r2,r17,8
   2be24:	1000071e 	bne	r2,zero,2be44 <__muldf3+0x574>
   2be28:	00800434 	movhi	r2,16
   2be2c:	89400234 	orhi	r5,r17,8
   2be30:	10bfffc4 	addi	r2,r2,-1
   2be34:	b82b883a 	mov	r21,r23
   2be38:	288a703a 	and	r5,r5,r2
   2be3c:	4029883a 	mov	r20,r8
   2be40:	003f6806 	br	2bbe4 <__alt_data_end+0xfffebbe4>
   2be44:	00800434 	movhi	r2,16
   2be48:	81400234 	orhi	r5,r16,8
   2be4c:	10bfffc4 	addi	r2,r2,-1
   2be50:	288a703a 	and	r5,r5,r2
   2be54:	003f6306 	br	2bbe4 <__alt_data_end+0xfffebbe4>
   2be58:	147ff604 	addi	r17,r2,-40
   2be5c:	3462983a 	sll	r17,r6,r17
   2be60:	0011883a 	mov	r8,zero
   2be64:	003f4406 	br	2bb78 <__alt_data_end+0xfffebb78>
   2be68:	3009883a 	mov	r4,r6
   2be6c:	d9800215 	stw	r6,8(sp)
   2be70:	da400115 	stw	r9,4(sp)
   2be74:	da800015 	stw	r10,0(sp)
   2be78:	002cae80 	call	2cae8 <__clzsi2>
   2be7c:	10800804 	addi	r2,r2,32
   2be80:	da800017 	ldw	r10,0(sp)
   2be84:	da400117 	ldw	r9,4(sp)
   2be88:	d9800217 	ldw	r6,8(sp)
   2be8c:	003f3006 	br	2bb50 <__alt_data_end+0xfffebb50>
   2be90:	143ff604 	addi	r16,r2,-40
   2be94:	9c20983a 	sll	r16,r19,r16
   2be98:	0029883a 	mov	r20,zero
   2be9c:	003f1606 	br	2baf8 <__alt_data_end+0xfffebaf8>
   2bea0:	d9800215 	stw	r6,8(sp)
   2bea4:	d9c00015 	stw	r7,0(sp)
   2bea8:	da400115 	stw	r9,4(sp)
   2beac:	002cae80 	call	2cae8 <__clzsi2>
   2beb0:	10800804 	addi	r2,r2,32
   2beb4:	da400117 	ldw	r9,4(sp)
   2beb8:	d9c00017 	ldw	r7,0(sp)
   2bebc:	d9800217 	ldw	r6,8(sp)
   2bec0:	003f0306 	br	2bad0 <__alt_data_end+0xfffebad0>
   2bec4:	00c00044 	movi	r3,1
   2bec8:	1947c83a 	sub	r3,r3,r5
   2becc:	00800e04 	movi	r2,56
   2bed0:	10feda16 	blt	r2,r3,2ba3c <__alt_data_end+0xfffeba3c>
   2bed4:	008007c4 	movi	r2,31
   2bed8:	10c01b16 	blt	r2,r3,2bf48 <__muldf3+0x678>
   2bedc:	00800804 	movi	r2,32
   2bee0:	10c5c83a 	sub	r2,r2,r3
   2bee4:	888a983a 	sll	r5,r17,r2
   2bee8:	40c8d83a 	srl	r4,r8,r3
   2beec:	4084983a 	sll	r2,r8,r2
   2bef0:	88e2d83a 	srl	r17,r17,r3
   2bef4:	2906b03a 	or	r3,r5,r4
   2bef8:	1004c03a 	cmpne	r2,r2,zero
   2befc:	1886b03a 	or	r3,r3,r2
   2bf00:	188001cc 	andi	r2,r3,7
   2bf04:	10000726 	beq	r2,zero,2bf24 <__muldf3+0x654>
   2bf08:	188003cc 	andi	r2,r3,15
   2bf0c:	01000104 	movi	r4,4
   2bf10:	11000426 	beq	r2,r4,2bf24 <__muldf3+0x654>
   2bf14:	1805883a 	mov	r2,r3
   2bf18:	10c00104 	addi	r3,r2,4
   2bf1c:	1885803a 	cmpltu	r2,r3,r2
   2bf20:	88a3883a 	add	r17,r17,r2
   2bf24:	8880202c 	andhi	r2,r17,128
   2bf28:	10001c26 	beq	r2,zero,2bf9c <__muldf3+0x6cc>
   2bf2c:	b02b883a 	mov	r21,r22
   2bf30:	00800044 	movi	r2,1
   2bf34:	000b883a 	mov	r5,zero
   2bf38:	0029883a 	mov	r20,zero
   2bf3c:	003ec306 	br	2ba4c <__alt_data_end+0xfffeba4c>
   2bf40:	5805883a 	mov	r2,r11
   2bf44:	003f9906 	br	2bdac <__alt_data_end+0xfffebdac>
   2bf48:	00bff844 	movi	r2,-31
   2bf4c:	1145c83a 	sub	r2,r2,r5
   2bf50:	8888d83a 	srl	r4,r17,r2
   2bf54:	00800804 	movi	r2,32
   2bf58:	18801a26 	beq	r3,r2,2bfc4 <__muldf3+0x6f4>
   2bf5c:	00801004 	movi	r2,64
   2bf60:	10c5c83a 	sub	r2,r2,r3
   2bf64:	8884983a 	sll	r2,r17,r2
   2bf68:	1204b03a 	or	r2,r2,r8
   2bf6c:	1004c03a 	cmpne	r2,r2,zero
   2bf70:	2084b03a 	or	r2,r4,r2
   2bf74:	144001cc 	andi	r17,r2,7
   2bf78:	88000d1e 	bne	r17,zero,2bfb0 <__muldf3+0x6e0>
   2bf7c:	000b883a 	mov	r5,zero
   2bf80:	1028d0fa 	srli	r20,r2,3
   2bf84:	b02b883a 	mov	r21,r22
   2bf88:	0005883a 	mov	r2,zero
   2bf8c:	a468b03a 	or	r20,r20,r17
   2bf90:	003eae06 	br	2ba4c <__alt_data_end+0xfffeba4c>
   2bf94:	1007883a 	mov	r3,r2
   2bf98:	0023883a 	mov	r17,zero
   2bf9c:	880a927a 	slli	r5,r17,9
   2bfa0:	1805883a 	mov	r2,r3
   2bfa4:	8822977a 	slli	r17,r17,29
   2bfa8:	280ad33a 	srli	r5,r5,12
   2bfac:	003ff406 	br	2bf80 <__alt_data_end+0xfffebf80>
   2bfb0:	10c003cc 	andi	r3,r2,15
   2bfb4:	01000104 	movi	r4,4
   2bfb8:	193ff626 	beq	r3,r4,2bf94 <__alt_data_end+0xfffebf94>
   2bfbc:	0023883a 	mov	r17,zero
   2bfc0:	003fd506 	br	2bf18 <__alt_data_end+0xfffebf18>
   2bfc4:	0005883a 	mov	r2,zero
   2bfc8:	003fe706 	br	2bf68 <__alt_data_end+0xfffebf68>
   2bfcc:	00800434 	movhi	r2,16
   2bfd0:	89400234 	orhi	r5,r17,8
   2bfd4:	10bfffc4 	addi	r2,r2,-1
   2bfd8:	b02b883a 	mov	r21,r22
   2bfdc:	288a703a 	and	r5,r5,r2
   2bfe0:	4029883a 	mov	r20,r8
   2bfe4:	003eff06 	br	2bbe4 <__alt_data_end+0xfffebbe4>

0002bfe8 <__subdf3>:
   2bfe8:	02000434 	movhi	r8,16
   2bfec:	423fffc4 	addi	r8,r8,-1
   2bff0:	defffb04 	addi	sp,sp,-20
   2bff4:	2a14703a 	and	r10,r5,r8
   2bff8:	3812d53a 	srli	r9,r7,20
   2bffc:	3a10703a 	and	r8,r7,r8
   2c000:	2006d77a 	srli	r3,r4,29
   2c004:	3004d77a 	srli	r2,r6,29
   2c008:	dc000015 	stw	r16,0(sp)
   2c00c:	501490fa 	slli	r10,r10,3
   2c010:	2820d53a 	srli	r16,r5,20
   2c014:	401090fa 	slli	r8,r8,3
   2c018:	dc800215 	stw	r18,8(sp)
   2c01c:	dc400115 	stw	r17,4(sp)
   2c020:	dfc00415 	stw	ra,16(sp)
   2c024:	202290fa 	slli	r17,r4,3
   2c028:	dcc00315 	stw	r19,12(sp)
   2c02c:	4a41ffcc 	andi	r9,r9,2047
   2c030:	0101ffc4 	movi	r4,2047
   2c034:	2824d7fa 	srli	r18,r5,31
   2c038:	8401ffcc 	andi	r16,r16,2047
   2c03c:	50c6b03a 	or	r3,r10,r3
   2c040:	380ed7fa 	srli	r7,r7,31
   2c044:	408ab03a 	or	r5,r8,r2
   2c048:	300c90fa 	slli	r6,r6,3
   2c04c:	49009626 	beq	r9,r4,2c2a8 <__subdf3+0x2c0>
   2c050:	39c0005c 	xori	r7,r7,1
   2c054:	8245c83a 	sub	r2,r16,r9
   2c058:	3c807426 	beq	r7,r18,2c22c <__subdf3+0x244>
   2c05c:	0080af0e 	bge	zero,r2,2c31c <__subdf3+0x334>
   2c060:	48002a1e 	bne	r9,zero,2c10c <__subdf3+0x124>
   2c064:	2988b03a 	or	r4,r5,r6
   2c068:	20009a1e 	bne	r4,zero,2c2d4 <__subdf3+0x2ec>
   2c06c:	888001cc 	andi	r2,r17,7
   2c070:	10000726 	beq	r2,zero,2c090 <__subdf3+0xa8>
   2c074:	888003cc 	andi	r2,r17,15
   2c078:	01000104 	movi	r4,4
   2c07c:	11000426 	beq	r2,r4,2c090 <__subdf3+0xa8>
   2c080:	890b883a 	add	r5,r17,r4
   2c084:	2c63803a 	cmpltu	r17,r5,r17
   2c088:	1c47883a 	add	r3,r3,r17
   2c08c:	2823883a 	mov	r17,r5
   2c090:	1880202c 	andhi	r2,r3,128
   2c094:	10005926 	beq	r2,zero,2c1fc <__subdf3+0x214>
   2c098:	84000044 	addi	r16,r16,1
   2c09c:	0081ffc4 	movi	r2,2047
   2c0a0:	8080be26 	beq	r16,r2,2c39c <__subdf3+0x3b4>
   2c0a4:	017fe034 	movhi	r5,65408
   2c0a8:	297fffc4 	addi	r5,r5,-1
   2c0ac:	1946703a 	and	r3,r3,r5
   2c0b0:	1804977a 	slli	r2,r3,29
   2c0b4:	1806927a 	slli	r3,r3,9
   2c0b8:	8822d0fa 	srli	r17,r17,3
   2c0bc:	8401ffcc 	andi	r16,r16,2047
   2c0c0:	180ad33a 	srli	r5,r3,12
   2c0c4:	9100004c 	andi	r4,r18,1
   2c0c8:	1444b03a 	or	r2,r2,r17
   2c0cc:	80c1ffcc 	andi	r3,r16,2047
   2c0d0:	1820953a 	slli	r16,r3,20
   2c0d4:	20c03fcc 	andi	r3,r4,255
   2c0d8:	180897fa 	slli	r4,r3,31
   2c0dc:	00c00434 	movhi	r3,16
   2c0e0:	18ffffc4 	addi	r3,r3,-1
   2c0e4:	28c6703a 	and	r3,r5,r3
   2c0e8:	1c06b03a 	or	r3,r3,r16
   2c0ec:	1906b03a 	or	r3,r3,r4
   2c0f0:	dfc00417 	ldw	ra,16(sp)
   2c0f4:	dcc00317 	ldw	r19,12(sp)
   2c0f8:	dc800217 	ldw	r18,8(sp)
   2c0fc:	dc400117 	ldw	r17,4(sp)
   2c100:	dc000017 	ldw	r16,0(sp)
   2c104:	dec00504 	addi	sp,sp,20
   2c108:	f800283a 	ret
   2c10c:	0101ffc4 	movi	r4,2047
   2c110:	813fd626 	beq	r16,r4,2c06c <__alt_data_end+0xfffec06c>
   2c114:	29402034 	orhi	r5,r5,128
   2c118:	01000e04 	movi	r4,56
   2c11c:	2080a316 	blt	r4,r2,2c3ac <__subdf3+0x3c4>
   2c120:	010007c4 	movi	r4,31
   2c124:	2080c616 	blt	r4,r2,2c440 <__subdf3+0x458>
   2c128:	01000804 	movi	r4,32
   2c12c:	2089c83a 	sub	r4,r4,r2
   2c130:	2910983a 	sll	r8,r5,r4
   2c134:	308ed83a 	srl	r7,r6,r2
   2c138:	3108983a 	sll	r4,r6,r4
   2c13c:	2884d83a 	srl	r2,r5,r2
   2c140:	41ccb03a 	or	r6,r8,r7
   2c144:	2008c03a 	cmpne	r4,r4,zero
   2c148:	310cb03a 	or	r6,r6,r4
   2c14c:	898dc83a 	sub	r6,r17,r6
   2c150:	89a3803a 	cmpltu	r17,r17,r6
   2c154:	1887c83a 	sub	r3,r3,r2
   2c158:	1c47c83a 	sub	r3,r3,r17
   2c15c:	3023883a 	mov	r17,r6
   2c160:	1880202c 	andhi	r2,r3,128
   2c164:	10002326 	beq	r2,zero,2c1f4 <__subdf3+0x20c>
   2c168:	04c02034 	movhi	r19,128
   2c16c:	9cffffc4 	addi	r19,r19,-1
   2c170:	1ce6703a 	and	r19,r3,r19
   2c174:	98007a26 	beq	r19,zero,2c360 <__subdf3+0x378>
   2c178:	9809883a 	mov	r4,r19
   2c17c:	002cae80 	call	2cae8 <__clzsi2>
   2c180:	113ffe04 	addi	r4,r2,-8
   2c184:	00c007c4 	movi	r3,31
   2c188:	19007b16 	blt	r3,r4,2c378 <__subdf3+0x390>
   2c18c:	00800804 	movi	r2,32
   2c190:	1105c83a 	sub	r2,r2,r4
   2c194:	8884d83a 	srl	r2,r17,r2
   2c198:	9906983a 	sll	r3,r19,r4
   2c19c:	8922983a 	sll	r17,r17,r4
   2c1a0:	10c4b03a 	or	r2,r2,r3
   2c1a4:	24007816 	blt	r4,r16,2c388 <__subdf3+0x3a0>
   2c1a8:	2421c83a 	sub	r16,r4,r16
   2c1ac:	80c00044 	addi	r3,r16,1
   2c1b0:	010007c4 	movi	r4,31
   2c1b4:	20c09516 	blt	r4,r3,2c40c <__subdf3+0x424>
   2c1b8:	01400804 	movi	r5,32
   2c1bc:	28cbc83a 	sub	r5,r5,r3
   2c1c0:	88c8d83a 	srl	r4,r17,r3
   2c1c4:	8962983a 	sll	r17,r17,r5
   2c1c8:	114a983a 	sll	r5,r2,r5
   2c1cc:	10c6d83a 	srl	r3,r2,r3
   2c1d0:	8804c03a 	cmpne	r2,r17,zero
   2c1d4:	290ab03a 	or	r5,r5,r4
   2c1d8:	28a2b03a 	or	r17,r5,r2
   2c1dc:	0021883a 	mov	r16,zero
   2c1e0:	003fa206 	br	2c06c <__alt_data_end+0xfffec06c>
   2c1e4:	2090b03a 	or	r8,r4,r2
   2c1e8:	40018e26 	beq	r8,zero,2c824 <__subdf3+0x83c>
   2c1ec:	1007883a 	mov	r3,r2
   2c1f0:	2023883a 	mov	r17,r4
   2c1f4:	888001cc 	andi	r2,r17,7
   2c1f8:	103f9e1e 	bne	r2,zero,2c074 <__alt_data_end+0xfffec074>
   2c1fc:	1804977a 	slli	r2,r3,29
   2c200:	8822d0fa 	srli	r17,r17,3
   2c204:	1810d0fa 	srli	r8,r3,3
   2c208:	9100004c 	andi	r4,r18,1
   2c20c:	1444b03a 	or	r2,r2,r17
   2c210:	00c1ffc4 	movi	r3,2047
   2c214:	80c02826 	beq	r16,r3,2c2b8 <__subdf3+0x2d0>
   2c218:	01400434 	movhi	r5,16
   2c21c:	297fffc4 	addi	r5,r5,-1
   2c220:	80e0703a 	and	r16,r16,r3
   2c224:	414a703a 	and	r5,r8,r5
   2c228:	003fa806 	br	2c0cc <__alt_data_end+0xfffec0cc>
   2c22c:	0080630e 	bge	zero,r2,2c3bc <__subdf3+0x3d4>
   2c230:	48003026 	beq	r9,zero,2c2f4 <__subdf3+0x30c>
   2c234:	0101ffc4 	movi	r4,2047
   2c238:	813f8c26 	beq	r16,r4,2c06c <__alt_data_end+0xfffec06c>
   2c23c:	29402034 	orhi	r5,r5,128
   2c240:	01000e04 	movi	r4,56
   2c244:	2080a90e 	bge	r4,r2,2c4ec <__subdf3+0x504>
   2c248:	298cb03a 	or	r6,r5,r6
   2c24c:	3012c03a 	cmpne	r9,r6,zero
   2c250:	0005883a 	mov	r2,zero
   2c254:	4c53883a 	add	r9,r9,r17
   2c258:	4c63803a 	cmpltu	r17,r9,r17
   2c25c:	10c7883a 	add	r3,r2,r3
   2c260:	88c7883a 	add	r3,r17,r3
   2c264:	4823883a 	mov	r17,r9
   2c268:	1880202c 	andhi	r2,r3,128
   2c26c:	1000d026 	beq	r2,zero,2c5b0 <__subdf3+0x5c8>
   2c270:	84000044 	addi	r16,r16,1
   2c274:	0081ffc4 	movi	r2,2047
   2c278:	8080fe26 	beq	r16,r2,2c674 <__subdf3+0x68c>
   2c27c:	00bfe034 	movhi	r2,65408
   2c280:	10bfffc4 	addi	r2,r2,-1
   2c284:	1886703a 	and	r3,r3,r2
   2c288:	880ad07a 	srli	r5,r17,1
   2c28c:	180497fa 	slli	r2,r3,31
   2c290:	8900004c 	andi	r4,r17,1
   2c294:	2922b03a 	or	r17,r5,r4
   2c298:	1806d07a 	srli	r3,r3,1
   2c29c:	1462b03a 	or	r17,r2,r17
   2c2a0:	3825883a 	mov	r18,r7
   2c2a4:	003f7106 	br	2c06c <__alt_data_end+0xfffec06c>
   2c2a8:	2984b03a 	or	r2,r5,r6
   2c2ac:	103f6826 	beq	r2,zero,2c050 <__alt_data_end+0xfffec050>
   2c2b0:	39c03fcc 	andi	r7,r7,255
   2c2b4:	003f6706 	br	2c054 <__alt_data_end+0xfffec054>
   2c2b8:	4086b03a 	or	r3,r8,r2
   2c2bc:	18015226 	beq	r3,zero,2c808 <__subdf3+0x820>
   2c2c0:	00c00434 	movhi	r3,16
   2c2c4:	41400234 	orhi	r5,r8,8
   2c2c8:	18ffffc4 	addi	r3,r3,-1
   2c2cc:	28ca703a 	and	r5,r5,r3
   2c2d0:	003f7e06 	br	2c0cc <__alt_data_end+0xfffec0cc>
   2c2d4:	10bfffc4 	addi	r2,r2,-1
   2c2d8:	1000491e 	bne	r2,zero,2c400 <__subdf3+0x418>
   2c2dc:	898fc83a 	sub	r7,r17,r6
   2c2e0:	89e3803a 	cmpltu	r17,r17,r7
   2c2e4:	1947c83a 	sub	r3,r3,r5
   2c2e8:	1c47c83a 	sub	r3,r3,r17
   2c2ec:	3823883a 	mov	r17,r7
   2c2f0:	003f9b06 	br	2c160 <__alt_data_end+0xfffec160>
   2c2f4:	2988b03a 	or	r4,r5,r6
   2c2f8:	203f5c26 	beq	r4,zero,2c06c <__alt_data_end+0xfffec06c>
   2c2fc:	10bfffc4 	addi	r2,r2,-1
   2c300:	1000931e 	bne	r2,zero,2c550 <__subdf3+0x568>
   2c304:	898d883a 	add	r6,r17,r6
   2c308:	3463803a 	cmpltu	r17,r6,r17
   2c30c:	1947883a 	add	r3,r3,r5
   2c310:	88c7883a 	add	r3,r17,r3
   2c314:	3023883a 	mov	r17,r6
   2c318:	003fd306 	br	2c268 <__alt_data_end+0xfffec268>
   2c31c:	1000541e 	bne	r2,zero,2c470 <__subdf3+0x488>
   2c320:	80800044 	addi	r2,r16,1
   2c324:	1081ffcc 	andi	r2,r2,2047
   2c328:	01000044 	movi	r4,1
   2c32c:	2080a20e 	bge	r4,r2,2c5b8 <__subdf3+0x5d0>
   2c330:	8989c83a 	sub	r4,r17,r6
   2c334:	8905803a 	cmpltu	r2,r17,r4
   2c338:	1967c83a 	sub	r19,r3,r5
   2c33c:	98a7c83a 	sub	r19,r19,r2
   2c340:	9880202c 	andhi	r2,r19,128
   2c344:	10006326 	beq	r2,zero,2c4d4 <__subdf3+0x4ec>
   2c348:	3463c83a 	sub	r17,r6,r17
   2c34c:	28c7c83a 	sub	r3,r5,r3
   2c350:	344d803a 	cmpltu	r6,r6,r17
   2c354:	19a7c83a 	sub	r19,r3,r6
   2c358:	3825883a 	mov	r18,r7
   2c35c:	983f861e 	bne	r19,zero,2c178 <__alt_data_end+0xfffec178>
   2c360:	8809883a 	mov	r4,r17
   2c364:	002cae80 	call	2cae8 <__clzsi2>
   2c368:	10800804 	addi	r2,r2,32
   2c36c:	113ffe04 	addi	r4,r2,-8
   2c370:	00c007c4 	movi	r3,31
   2c374:	193f850e 	bge	r3,r4,2c18c <__alt_data_end+0xfffec18c>
   2c378:	10bff604 	addi	r2,r2,-40
   2c37c:	8884983a 	sll	r2,r17,r2
   2c380:	0023883a 	mov	r17,zero
   2c384:	243f880e 	bge	r4,r16,2c1a8 <__alt_data_end+0xfffec1a8>
   2c388:	00ffe034 	movhi	r3,65408
   2c38c:	18ffffc4 	addi	r3,r3,-1
   2c390:	8121c83a 	sub	r16,r16,r4
   2c394:	10c6703a 	and	r3,r2,r3
   2c398:	003f3406 	br	2c06c <__alt_data_end+0xfffec06c>
   2c39c:	9100004c 	andi	r4,r18,1
   2c3a0:	000b883a 	mov	r5,zero
   2c3a4:	0005883a 	mov	r2,zero
   2c3a8:	003f4806 	br	2c0cc <__alt_data_end+0xfffec0cc>
   2c3ac:	298cb03a 	or	r6,r5,r6
   2c3b0:	300cc03a 	cmpne	r6,r6,zero
   2c3b4:	0005883a 	mov	r2,zero
   2c3b8:	003f6406 	br	2c14c <__alt_data_end+0xfffec14c>
   2c3bc:	10009a1e 	bne	r2,zero,2c628 <__subdf3+0x640>
   2c3c0:	82400044 	addi	r9,r16,1
   2c3c4:	4881ffcc 	andi	r2,r9,2047
   2c3c8:	02800044 	movi	r10,1
   2c3cc:	5080670e 	bge	r10,r2,2c56c <__subdf3+0x584>
   2c3d0:	0081ffc4 	movi	r2,2047
   2c3d4:	4880af26 	beq	r9,r2,2c694 <__subdf3+0x6ac>
   2c3d8:	898d883a 	add	r6,r17,r6
   2c3dc:	1945883a 	add	r2,r3,r5
   2c3e0:	3447803a 	cmpltu	r3,r6,r17
   2c3e4:	1887883a 	add	r3,r3,r2
   2c3e8:	182297fa 	slli	r17,r3,31
   2c3ec:	300cd07a 	srli	r6,r6,1
   2c3f0:	1806d07a 	srli	r3,r3,1
   2c3f4:	4821883a 	mov	r16,r9
   2c3f8:	89a2b03a 	or	r17,r17,r6
   2c3fc:	003f1b06 	br	2c06c <__alt_data_end+0xfffec06c>
   2c400:	0101ffc4 	movi	r4,2047
   2c404:	813f441e 	bne	r16,r4,2c118 <__alt_data_end+0xfffec118>
   2c408:	003f1806 	br	2c06c <__alt_data_end+0xfffec06c>
   2c40c:	843ff844 	addi	r16,r16,-31
   2c410:	01400804 	movi	r5,32
   2c414:	1408d83a 	srl	r4,r2,r16
   2c418:	19405026 	beq	r3,r5,2c55c <__subdf3+0x574>
   2c41c:	01401004 	movi	r5,64
   2c420:	28c7c83a 	sub	r3,r5,r3
   2c424:	10c4983a 	sll	r2,r2,r3
   2c428:	88a2b03a 	or	r17,r17,r2
   2c42c:	8822c03a 	cmpne	r17,r17,zero
   2c430:	2462b03a 	or	r17,r4,r17
   2c434:	0007883a 	mov	r3,zero
   2c438:	0021883a 	mov	r16,zero
   2c43c:	003f6d06 	br	2c1f4 <__alt_data_end+0xfffec1f4>
   2c440:	11fff804 	addi	r7,r2,-32
   2c444:	01000804 	movi	r4,32
   2c448:	29ced83a 	srl	r7,r5,r7
   2c44c:	11004526 	beq	r2,r4,2c564 <__subdf3+0x57c>
   2c450:	01001004 	movi	r4,64
   2c454:	2089c83a 	sub	r4,r4,r2
   2c458:	2904983a 	sll	r2,r5,r4
   2c45c:	118cb03a 	or	r6,r2,r6
   2c460:	300cc03a 	cmpne	r6,r6,zero
   2c464:	398cb03a 	or	r6,r7,r6
   2c468:	0005883a 	mov	r2,zero
   2c46c:	003f3706 	br	2c14c <__alt_data_end+0xfffec14c>
   2c470:	80002a26 	beq	r16,zero,2c51c <__subdf3+0x534>
   2c474:	0101ffc4 	movi	r4,2047
   2c478:	49006626 	beq	r9,r4,2c614 <__subdf3+0x62c>
   2c47c:	0085c83a 	sub	r2,zero,r2
   2c480:	18c02034 	orhi	r3,r3,128
   2c484:	01000e04 	movi	r4,56
   2c488:	20807e16 	blt	r4,r2,2c684 <__subdf3+0x69c>
   2c48c:	010007c4 	movi	r4,31
   2c490:	2080e716 	blt	r4,r2,2c830 <__subdf3+0x848>
   2c494:	01000804 	movi	r4,32
   2c498:	2089c83a 	sub	r4,r4,r2
   2c49c:	1914983a 	sll	r10,r3,r4
   2c4a0:	8890d83a 	srl	r8,r17,r2
   2c4a4:	8908983a 	sll	r4,r17,r4
   2c4a8:	1884d83a 	srl	r2,r3,r2
   2c4ac:	5222b03a 	or	r17,r10,r8
   2c4b0:	2006c03a 	cmpne	r3,r4,zero
   2c4b4:	88e2b03a 	or	r17,r17,r3
   2c4b8:	3463c83a 	sub	r17,r6,r17
   2c4bc:	2885c83a 	sub	r2,r5,r2
   2c4c0:	344d803a 	cmpltu	r6,r6,r17
   2c4c4:	1187c83a 	sub	r3,r2,r6
   2c4c8:	4821883a 	mov	r16,r9
   2c4cc:	3825883a 	mov	r18,r7
   2c4d0:	003f2306 	br	2c160 <__alt_data_end+0xfffec160>
   2c4d4:	24d0b03a 	or	r8,r4,r19
   2c4d8:	40001b1e 	bne	r8,zero,2c548 <__subdf3+0x560>
   2c4dc:	0005883a 	mov	r2,zero
   2c4e0:	0009883a 	mov	r4,zero
   2c4e4:	0021883a 	mov	r16,zero
   2c4e8:	003f4906 	br	2c210 <__alt_data_end+0xfffec210>
   2c4ec:	010007c4 	movi	r4,31
   2c4f0:	20803a16 	blt	r4,r2,2c5dc <__subdf3+0x5f4>
   2c4f4:	01000804 	movi	r4,32
   2c4f8:	2089c83a 	sub	r4,r4,r2
   2c4fc:	2912983a 	sll	r9,r5,r4
   2c500:	3090d83a 	srl	r8,r6,r2
   2c504:	3108983a 	sll	r4,r6,r4
   2c508:	2884d83a 	srl	r2,r5,r2
   2c50c:	4a12b03a 	or	r9,r9,r8
   2c510:	2008c03a 	cmpne	r4,r4,zero
   2c514:	4912b03a 	or	r9,r9,r4
   2c518:	003f4e06 	br	2c254 <__alt_data_end+0xfffec254>
   2c51c:	1c48b03a 	or	r4,r3,r17
   2c520:	20003c26 	beq	r4,zero,2c614 <__subdf3+0x62c>
   2c524:	0084303a 	nor	r2,zero,r2
   2c528:	1000381e 	bne	r2,zero,2c60c <__subdf3+0x624>
   2c52c:	3463c83a 	sub	r17,r6,r17
   2c530:	28c5c83a 	sub	r2,r5,r3
   2c534:	344d803a 	cmpltu	r6,r6,r17
   2c538:	1187c83a 	sub	r3,r2,r6
   2c53c:	4821883a 	mov	r16,r9
   2c540:	3825883a 	mov	r18,r7
   2c544:	003f0606 	br	2c160 <__alt_data_end+0xfffec160>
   2c548:	2023883a 	mov	r17,r4
   2c54c:	003f0906 	br	2c174 <__alt_data_end+0xfffec174>
   2c550:	0101ffc4 	movi	r4,2047
   2c554:	813f3a1e 	bne	r16,r4,2c240 <__alt_data_end+0xfffec240>
   2c558:	003ec406 	br	2c06c <__alt_data_end+0xfffec06c>
   2c55c:	0005883a 	mov	r2,zero
   2c560:	003fb106 	br	2c428 <__alt_data_end+0xfffec428>
   2c564:	0005883a 	mov	r2,zero
   2c568:	003fbc06 	br	2c45c <__alt_data_end+0xfffec45c>
   2c56c:	1c44b03a 	or	r2,r3,r17
   2c570:	80008e1e 	bne	r16,zero,2c7ac <__subdf3+0x7c4>
   2c574:	1000c826 	beq	r2,zero,2c898 <__subdf3+0x8b0>
   2c578:	2984b03a 	or	r2,r5,r6
   2c57c:	103ebb26 	beq	r2,zero,2c06c <__alt_data_end+0xfffec06c>
   2c580:	8989883a 	add	r4,r17,r6
   2c584:	1945883a 	add	r2,r3,r5
   2c588:	2447803a 	cmpltu	r3,r4,r17
   2c58c:	1887883a 	add	r3,r3,r2
   2c590:	1880202c 	andhi	r2,r3,128
   2c594:	2023883a 	mov	r17,r4
   2c598:	103f1626 	beq	r2,zero,2c1f4 <__alt_data_end+0xfffec1f4>
   2c59c:	00bfe034 	movhi	r2,65408
   2c5a0:	10bfffc4 	addi	r2,r2,-1
   2c5a4:	5021883a 	mov	r16,r10
   2c5a8:	1886703a 	and	r3,r3,r2
   2c5ac:	003eaf06 	br	2c06c <__alt_data_end+0xfffec06c>
   2c5b0:	3825883a 	mov	r18,r7
   2c5b4:	003f0f06 	br	2c1f4 <__alt_data_end+0xfffec1f4>
   2c5b8:	1c44b03a 	or	r2,r3,r17
   2c5bc:	8000251e 	bne	r16,zero,2c654 <__subdf3+0x66c>
   2c5c0:	1000661e 	bne	r2,zero,2c75c <__subdf3+0x774>
   2c5c4:	2990b03a 	or	r8,r5,r6
   2c5c8:	40009626 	beq	r8,zero,2c824 <__subdf3+0x83c>
   2c5cc:	2807883a 	mov	r3,r5
   2c5d0:	3023883a 	mov	r17,r6
   2c5d4:	3825883a 	mov	r18,r7
   2c5d8:	003ea406 	br	2c06c <__alt_data_end+0xfffec06c>
   2c5dc:	127ff804 	addi	r9,r2,-32
   2c5e0:	01000804 	movi	r4,32
   2c5e4:	2a52d83a 	srl	r9,r5,r9
   2c5e8:	11008c26 	beq	r2,r4,2c81c <__subdf3+0x834>
   2c5ec:	01001004 	movi	r4,64
   2c5f0:	2085c83a 	sub	r2,r4,r2
   2c5f4:	2884983a 	sll	r2,r5,r2
   2c5f8:	118cb03a 	or	r6,r2,r6
   2c5fc:	300cc03a 	cmpne	r6,r6,zero
   2c600:	4992b03a 	or	r9,r9,r6
   2c604:	0005883a 	mov	r2,zero
   2c608:	003f1206 	br	2c254 <__alt_data_end+0xfffec254>
   2c60c:	0101ffc4 	movi	r4,2047
   2c610:	493f9c1e 	bne	r9,r4,2c484 <__alt_data_end+0xfffec484>
   2c614:	2807883a 	mov	r3,r5
   2c618:	3023883a 	mov	r17,r6
   2c61c:	4821883a 	mov	r16,r9
   2c620:	3825883a 	mov	r18,r7
   2c624:	003e9106 	br	2c06c <__alt_data_end+0xfffec06c>
   2c628:	80001f1e 	bne	r16,zero,2c6a8 <__subdf3+0x6c0>
   2c62c:	1c48b03a 	or	r4,r3,r17
   2c630:	20005a26 	beq	r4,zero,2c79c <__subdf3+0x7b4>
   2c634:	0084303a 	nor	r2,zero,r2
   2c638:	1000561e 	bne	r2,zero,2c794 <__subdf3+0x7ac>
   2c63c:	89a3883a 	add	r17,r17,r6
   2c640:	1945883a 	add	r2,r3,r5
   2c644:	898d803a 	cmpltu	r6,r17,r6
   2c648:	3087883a 	add	r3,r6,r2
   2c64c:	4821883a 	mov	r16,r9
   2c650:	003f0506 	br	2c268 <__alt_data_end+0xfffec268>
   2c654:	10002b1e 	bne	r2,zero,2c704 <__subdf3+0x71c>
   2c658:	2984b03a 	or	r2,r5,r6
   2c65c:	10008026 	beq	r2,zero,2c860 <__subdf3+0x878>
   2c660:	2807883a 	mov	r3,r5
   2c664:	3023883a 	mov	r17,r6
   2c668:	3825883a 	mov	r18,r7
   2c66c:	0401ffc4 	movi	r16,2047
   2c670:	003e7e06 	br	2c06c <__alt_data_end+0xfffec06c>
   2c674:	3809883a 	mov	r4,r7
   2c678:	0011883a 	mov	r8,zero
   2c67c:	0005883a 	mov	r2,zero
   2c680:	003ee306 	br	2c210 <__alt_data_end+0xfffec210>
   2c684:	1c62b03a 	or	r17,r3,r17
   2c688:	8822c03a 	cmpne	r17,r17,zero
   2c68c:	0005883a 	mov	r2,zero
   2c690:	003f8906 	br	2c4b8 <__alt_data_end+0xfffec4b8>
   2c694:	3809883a 	mov	r4,r7
   2c698:	4821883a 	mov	r16,r9
   2c69c:	0011883a 	mov	r8,zero
   2c6a0:	0005883a 	mov	r2,zero
   2c6a4:	003eda06 	br	2c210 <__alt_data_end+0xfffec210>
   2c6a8:	0101ffc4 	movi	r4,2047
   2c6ac:	49003b26 	beq	r9,r4,2c79c <__subdf3+0x7b4>
   2c6b0:	0085c83a 	sub	r2,zero,r2
   2c6b4:	18c02034 	orhi	r3,r3,128
   2c6b8:	01000e04 	movi	r4,56
   2c6bc:	20806e16 	blt	r4,r2,2c878 <__subdf3+0x890>
   2c6c0:	010007c4 	movi	r4,31
   2c6c4:	20807716 	blt	r4,r2,2c8a4 <__subdf3+0x8bc>
   2c6c8:	01000804 	movi	r4,32
   2c6cc:	2089c83a 	sub	r4,r4,r2
   2c6d0:	1914983a 	sll	r10,r3,r4
   2c6d4:	8890d83a 	srl	r8,r17,r2
   2c6d8:	8908983a 	sll	r4,r17,r4
   2c6dc:	1884d83a 	srl	r2,r3,r2
   2c6e0:	5222b03a 	or	r17,r10,r8
   2c6e4:	2006c03a 	cmpne	r3,r4,zero
   2c6e8:	88e2b03a 	or	r17,r17,r3
   2c6ec:	89a3883a 	add	r17,r17,r6
   2c6f0:	1145883a 	add	r2,r2,r5
   2c6f4:	898d803a 	cmpltu	r6,r17,r6
   2c6f8:	3087883a 	add	r3,r6,r2
   2c6fc:	4821883a 	mov	r16,r9
   2c700:	003ed906 	br	2c268 <__alt_data_end+0xfffec268>
   2c704:	2984b03a 	or	r2,r5,r6
   2c708:	10004226 	beq	r2,zero,2c814 <__subdf3+0x82c>
   2c70c:	1808d0fa 	srli	r4,r3,3
   2c710:	8822d0fa 	srli	r17,r17,3
   2c714:	1806977a 	slli	r3,r3,29
   2c718:	2080022c 	andhi	r2,r4,8
   2c71c:	1c62b03a 	or	r17,r3,r17
   2c720:	10000826 	beq	r2,zero,2c744 <__subdf3+0x75c>
   2c724:	2812d0fa 	srli	r9,r5,3
   2c728:	4880022c 	andhi	r2,r9,8
   2c72c:	1000051e 	bne	r2,zero,2c744 <__subdf3+0x75c>
   2c730:	300cd0fa 	srli	r6,r6,3
   2c734:	2804977a 	slli	r2,r5,29
   2c738:	4809883a 	mov	r4,r9
   2c73c:	3825883a 	mov	r18,r7
   2c740:	11a2b03a 	or	r17,r2,r6
   2c744:	8806d77a 	srli	r3,r17,29
   2c748:	200890fa 	slli	r4,r4,3
   2c74c:	882290fa 	slli	r17,r17,3
   2c750:	0401ffc4 	movi	r16,2047
   2c754:	1906b03a 	or	r3,r3,r4
   2c758:	003e4406 	br	2c06c <__alt_data_end+0xfffec06c>
   2c75c:	2984b03a 	or	r2,r5,r6
   2c760:	103e4226 	beq	r2,zero,2c06c <__alt_data_end+0xfffec06c>
   2c764:	8989c83a 	sub	r4,r17,r6
   2c768:	8911803a 	cmpltu	r8,r17,r4
   2c76c:	1945c83a 	sub	r2,r3,r5
   2c770:	1205c83a 	sub	r2,r2,r8
   2c774:	1200202c 	andhi	r8,r2,128
   2c778:	403e9a26 	beq	r8,zero,2c1e4 <__alt_data_end+0xfffec1e4>
   2c77c:	3463c83a 	sub	r17,r6,r17
   2c780:	28c5c83a 	sub	r2,r5,r3
   2c784:	344d803a 	cmpltu	r6,r6,r17
   2c788:	1187c83a 	sub	r3,r2,r6
   2c78c:	3825883a 	mov	r18,r7
   2c790:	003e3606 	br	2c06c <__alt_data_end+0xfffec06c>
   2c794:	0101ffc4 	movi	r4,2047
   2c798:	493fc71e 	bne	r9,r4,2c6b8 <__alt_data_end+0xfffec6b8>
   2c79c:	2807883a 	mov	r3,r5
   2c7a0:	3023883a 	mov	r17,r6
   2c7a4:	4821883a 	mov	r16,r9
   2c7a8:	003e3006 	br	2c06c <__alt_data_end+0xfffec06c>
   2c7ac:	10003626 	beq	r2,zero,2c888 <__subdf3+0x8a0>
   2c7b0:	2984b03a 	or	r2,r5,r6
   2c7b4:	10001726 	beq	r2,zero,2c814 <__subdf3+0x82c>
   2c7b8:	1808d0fa 	srli	r4,r3,3
   2c7bc:	8822d0fa 	srli	r17,r17,3
   2c7c0:	1806977a 	slli	r3,r3,29
   2c7c4:	2080022c 	andhi	r2,r4,8
   2c7c8:	1c62b03a 	or	r17,r3,r17
   2c7cc:	10000726 	beq	r2,zero,2c7ec <__subdf3+0x804>
   2c7d0:	2812d0fa 	srli	r9,r5,3
   2c7d4:	4880022c 	andhi	r2,r9,8
   2c7d8:	1000041e 	bne	r2,zero,2c7ec <__subdf3+0x804>
   2c7dc:	300cd0fa 	srli	r6,r6,3
   2c7e0:	2804977a 	slli	r2,r5,29
   2c7e4:	4809883a 	mov	r4,r9
   2c7e8:	11a2b03a 	or	r17,r2,r6
   2c7ec:	8806d77a 	srli	r3,r17,29
   2c7f0:	200890fa 	slli	r4,r4,3
   2c7f4:	882290fa 	slli	r17,r17,3
   2c7f8:	3825883a 	mov	r18,r7
   2c7fc:	1906b03a 	or	r3,r3,r4
   2c800:	0401ffc4 	movi	r16,2047
   2c804:	003e1906 	br	2c06c <__alt_data_end+0xfffec06c>
   2c808:	000b883a 	mov	r5,zero
   2c80c:	0005883a 	mov	r2,zero
   2c810:	003e2e06 	br	2c0cc <__alt_data_end+0xfffec0cc>
   2c814:	0401ffc4 	movi	r16,2047
   2c818:	003e1406 	br	2c06c <__alt_data_end+0xfffec06c>
   2c81c:	0005883a 	mov	r2,zero
   2c820:	003f7506 	br	2c5f8 <__alt_data_end+0xfffec5f8>
   2c824:	0005883a 	mov	r2,zero
   2c828:	0009883a 	mov	r4,zero
   2c82c:	003e7806 	br	2c210 <__alt_data_end+0xfffec210>
   2c830:	123ff804 	addi	r8,r2,-32
   2c834:	01000804 	movi	r4,32
   2c838:	1a10d83a 	srl	r8,r3,r8
   2c83c:	11002526 	beq	r2,r4,2c8d4 <__subdf3+0x8ec>
   2c840:	01001004 	movi	r4,64
   2c844:	2085c83a 	sub	r2,r4,r2
   2c848:	1884983a 	sll	r2,r3,r2
   2c84c:	1444b03a 	or	r2,r2,r17
   2c850:	1004c03a 	cmpne	r2,r2,zero
   2c854:	40a2b03a 	or	r17,r8,r2
   2c858:	0005883a 	mov	r2,zero
   2c85c:	003f1606 	br	2c4b8 <__alt_data_end+0xfffec4b8>
   2c860:	02000434 	movhi	r8,16
   2c864:	0009883a 	mov	r4,zero
   2c868:	423fffc4 	addi	r8,r8,-1
   2c86c:	00bfffc4 	movi	r2,-1
   2c870:	0401ffc4 	movi	r16,2047
   2c874:	003e6606 	br	2c210 <__alt_data_end+0xfffec210>
   2c878:	1c62b03a 	or	r17,r3,r17
   2c87c:	8822c03a 	cmpne	r17,r17,zero
   2c880:	0005883a 	mov	r2,zero
   2c884:	003f9906 	br	2c6ec <__alt_data_end+0xfffec6ec>
   2c888:	2807883a 	mov	r3,r5
   2c88c:	3023883a 	mov	r17,r6
   2c890:	0401ffc4 	movi	r16,2047
   2c894:	003df506 	br	2c06c <__alt_data_end+0xfffec06c>
   2c898:	2807883a 	mov	r3,r5
   2c89c:	3023883a 	mov	r17,r6
   2c8a0:	003df206 	br	2c06c <__alt_data_end+0xfffec06c>
   2c8a4:	123ff804 	addi	r8,r2,-32
   2c8a8:	01000804 	movi	r4,32
   2c8ac:	1a10d83a 	srl	r8,r3,r8
   2c8b0:	11000a26 	beq	r2,r4,2c8dc <__subdf3+0x8f4>
   2c8b4:	01001004 	movi	r4,64
   2c8b8:	2085c83a 	sub	r2,r4,r2
   2c8bc:	1884983a 	sll	r2,r3,r2
   2c8c0:	1444b03a 	or	r2,r2,r17
   2c8c4:	1004c03a 	cmpne	r2,r2,zero
   2c8c8:	40a2b03a 	or	r17,r8,r2
   2c8cc:	0005883a 	mov	r2,zero
   2c8d0:	003f8606 	br	2c6ec <__alt_data_end+0xfffec6ec>
   2c8d4:	0005883a 	mov	r2,zero
   2c8d8:	003fdc06 	br	2c84c <__alt_data_end+0xfffec84c>
   2c8dc:	0005883a 	mov	r2,zero
   2c8e0:	003ff706 	br	2c8c0 <__alt_data_end+0xfffec8c0>

0002c8e4 <__fixdfsi>:
   2c8e4:	280cd53a 	srli	r6,r5,20
   2c8e8:	00c00434 	movhi	r3,16
   2c8ec:	18ffffc4 	addi	r3,r3,-1
   2c8f0:	3181ffcc 	andi	r6,r6,2047
   2c8f4:	01c0ff84 	movi	r7,1022
   2c8f8:	28c6703a 	and	r3,r5,r3
   2c8fc:	280ad7fa 	srli	r5,r5,31
   2c900:	3980120e 	bge	r7,r6,2c94c <__fixdfsi+0x68>
   2c904:	00810744 	movi	r2,1053
   2c908:	11800c16 	blt	r2,r6,2c93c <__fixdfsi+0x58>
   2c90c:	00810cc4 	movi	r2,1075
   2c910:	1185c83a 	sub	r2,r2,r6
   2c914:	01c007c4 	movi	r7,31
   2c918:	18c00434 	orhi	r3,r3,16
   2c91c:	38800d16 	blt	r7,r2,2c954 <__fixdfsi+0x70>
   2c920:	31befb44 	addi	r6,r6,-1043
   2c924:	2084d83a 	srl	r2,r4,r2
   2c928:	1986983a 	sll	r3,r3,r6
   2c92c:	1884b03a 	or	r2,r3,r2
   2c930:	28000726 	beq	r5,zero,2c950 <__fixdfsi+0x6c>
   2c934:	0085c83a 	sub	r2,zero,r2
   2c938:	f800283a 	ret
   2c93c:	00a00034 	movhi	r2,32768
   2c940:	10bfffc4 	addi	r2,r2,-1
   2c944:	2885883a 	add	r2,r5,r2
   2c948:	f800283a 	ret
   2c94c:	0005883a 	mov	r2,zero
   2c950:	f800283a 	ret
   2c954:	008104c4 	movi	r2,1043
   2c958:	1185c83a 	sub	r2,r2,r6
   2c95c:	1884d83a 	srl	r2,r3,r2
   2c960:	003ff306 	br	2c930 <__alt_data_end+0xfffec930>

0002c964 <__floatsidf>:
   2c964:	defffd04 	addi	sp,sp,-12
   2c968:	dfc00215 	stw	ra,8(sp)
   2c96c:	dc400115 	stw	r17,4(sp)
   2c970:	dc000015 	stw	r16,0(sp)
   2c974:	20002b26 	beq	r4,zero,2ca24 <__floatsidf+0xc0>
   2c978:	2023883a 	mov	r17,r4
   2c97c:	2020d7fa 	srli	r16,r4,31
   2c980:	20002d16 	blt	r4,zero,2ca38 <__floatsidf+0xd4>
   2c984:	8809883a 	mov	r4,r17
   2c988:	002cae80 	call	2cae8 <__clzsi2>
   2c98c:	01410784 	movi	r5,1054
   2c990:	288bc83a 	sub	r5,r5,r2
   2c994:	01010cc4 	movi	r4,1075
   2c998:	2149c83a 	sub	r4,r4,r5
   2c99c:	00c007c4 	movi	r3,31
   2c9a0:	1900160e 	bge	r3,r4,2c9fc <__floatsidf+0x98>
   2c9a4:	00c104c4 	movi	r3,1043
   2c9a8:	1947c83a 	sub	r3,r3,r5
   2c9ac:	88c6983a 	sll	r3,r17,r3
   2c9b0:	00800434 	movhi	r2,16
   2c9b4:	10bfffc4 	addi	r2,r2,-1
   2c9b8:	1886703a 	and	r3,r3,r2
   2c9bc:	2941ffcc 	andi	r5,r5,2047
   2c9c0:	800d883a 	mov	r6,r16
   2c9c4:	0005883a 	mov	r2,zero
   2c9c8:	280a953a 	slli	r5,r5,20
   2c9cc:	31803fcc 	andi	r6,r6,255
   2c9d0:	01000434 	movhi	r4,16
   2c9d4:	300c97fa 	slli	r6,r6,31
   2c9d8:	213fffc4 	addi	r4,r4,-1
   2c9dc:	1906703a 	and	r3,r3,r4
   2c9e0:	1946b03a 	or	r3,r3,r5
   2c9e4:	1986b03a 	or	r3,r3,r6
   2c9e8:	dfc00217 	ldw	ra,8(sp)
   2c9ec:	dc400117 	ldw	r17,4(sp)
   2c9f0:	dc000017 	ldw	r16,0(sp)
   2c9f4:	dec00304 	addi	sp,sp,12
   2c9f8:	f800283a 	ret
   2c9fc:	00c002c4 	movi	r3,11
   2ca00:	1887c83a 	sub	r3,r3,r2
   2ca04:	88c6d83a 	srl	r3,r17,r3
   2ca08:	8904983a 	sll	r2,r17,r4
   2ca0c:	01000434 	movhi	r4,16
   2ca10:	213fffc4 	addi	r4,r4,-1
   2ca14:	2941ffcc 	andi	r5,r5,2047
   2ca18:	1906703a 	and	r3,r3,r4
   2ca1c:	800d883a 	mov	r6,r16
   2ca20:	003fe906 	br	2c9c8 <__alt_data_end+0xfffec9c8>
   2ca24:	000d883a 	mov	r6,zero
   2ca28:	000b883a 	mov	r5,zero
   2ca2c:	0007883a 	mov	r3,zero
   2ca30:	0005883a 	mov	r2,zero
   2ca34:	003fe406 	br	2c9c8 <__alt_data_end+0xfffec9c8>
   2ca38:	0123c83a 	sub	r17,zero,r4
   2ca3c:	003fd106 	br	2c984 <__alt_data_end+0xfffec984>

0002ca40 <__floatunsidf>:
   2ca40:	defffe04 	addi	sp,sp,-8
   2ca44:	dc000015 	stw	r16,0(sp)
   2ca48:	dfc00115 	stw	ra,4(sp)
   2ca4c:	2021883a 	mov	r16,r4
   2ca50:	20002226 	beq	r4,zero,2cadc <__floatunsidf+0x9c>
   2ca54:	002cae80 	call	2cae8 <__clzsi2>
   2ca58:	01010784 	movi	r4,1054
   2ca5c:	2089c83a 	sub	r4,r4,r2
   2ca60:	01810cc4 	movi	r6,1075
   2ca64:	310dc83a 	sub	r6,r6,r4
   2ca68:	00c007c4 	movi	r3,31
   2ca6c:	1980120e 	bge	r3,r6,2cab8 <__floatunsidf+0x78>
   2ca70:	00c104c4 	movi	r3,1043
   2ca74:	1907c83a 	sub	r3,r3,r4
   2ca78:	80ca983a 	sll	r5,r16,r3
   2ca7c:	00800434 	movhi	r2,16
   2ca80:	10bfffc4 	addi	r2,r2,-1
   2ca84:	2101ffcc 	andi	r4,r4,2047
   2ca88:	0021883a 	mov	r16,zero
   2ca8c:	288a703a 	and	r5,r5,r2
   2ca90:	2008953a 	slli	r4,r4,20
   2ca94:	00c00434 	movhi	r3,16
   2ca98:	18ffffc4 	addi	r3,r3,-1
   2ca9c:	28c6703a 	and	r3,r5,r3
   2caa0:	8005883a 	mov	r2,r16
   2caa4:	1906b03a 	or	r3,r3,r4
   2caa8:	dfc00117 	ldw	ra,4(sp)
   2caac:	dc000017 	ldw	r16,0(sp)
   2cab0:	dec00204 	addi	sp,sp,8
   2cab4:	f800283a 	ret
   2cab8:	00c002c4 	movi	r3,11
   2cabc:	188bc83a 	sub	r5,r3,r2
   2cac0:	814ad83a 	srl	r5,r16,r5
   2cac4:	00c00434 	movhi	r3,16
   2cac8:	18ffffc4 	addi	r3,r3,-1
   2cacc:	81a0983a 	sll	r16,r16,r6
   2cad0:	2101ffcc 	andi	r4,r4,2047
   2cad4:	28ca703a 	and	r5,r5,r3
   2cad8:	003fed06 	br	2ca90 <__alt_data_end+0xfffeca90>
   2cadc:	0009883a 	mov	r4,zero
   2cae0:	000b883a 	mov	r5,zero
   2cae4:	003fea06 	br	2ca90 <__alt_data_end+0xfffeca90>

0002cae8 <__clzsi2>:
   2cae8:	00bfffd4 	movui	r2,65535
   2caec:	11000536 	bltu	r2,r4,2cb04 <__clzsi2+0x1c>
   2caf0:	00803fc4 	movi	r2,255
   2caf4:	11000f36 	bltu	r2,r4,2cb34 <__clzsi2+0x4c>
   2caf8:	00800804 	movi	r2,32
   2cafc:	0007883a 	mov	r3,zero
   2cb00:	00000506 	br	2cb18 <__clzsi2+0x30>
   2cb04:	00804034 	movhi	r2,256
   2cb08:	10bfffc4 	addi	r2,r2,-1
   2cb0c:	11000c2e 	bgeu	r2,r4,2cb40 <__clzsi2+0x58>
   2cb10:	00800204 	movi	r2,8
   2cb14:	00c00604 	movi	r3,24
   2cb18:	20c8d83a 	srl	r4,r4,r3
   2cb1c:	00c000f4 	movhi	r3,3
   2cb20:	18fcef04 	addi	r3,r3,-3140
   2cb24:	1909883a 	add	r4,r3,r4
   2cb28:	20c00003 	ldbu	r3,0(r4)
   2cb2c:	10c5c83a 	sub	r2,r2,r3
   2cb30:	f800283a 	ret
   2cb34:	00800604 	movi	r2,24
   2cb38:	00c00204 	movi	r3,8
   2cb3c:	003ff606 	br	2cb18 <__alt_data_end+0xfffecb18>
   2cb40:	00800404 	movi	r2,16
   2cb44:	1007883a 	mov	r3,r2
   2cb48:	003ff306 	br	2cb18 <__alt_data_end+0xfffecb18>

0002cb4c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cb4c:	defffe04 	addi	sp,sp,-8
   2cb50:	dfc00115 	stw	ra,4(sp)
   2cb54:	df000015 	stw	fp,0(sp)
   2cb58:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cb5c:	d0a00b17 	ldw	r2,-32724(gp)
   2cb60:	10000326 	beq	r2,zero,2cb70 <alt_get_errno+0x24>
   2cb64:	d0a00b17 	ldw	r2,-32724(gp)
   2cb68:	103ee83a 	callr	r2
   2cb6c:	00000106 	br	2cb74 <alt_get_errno+0x28>
   2cb70:	d0a6d104 	addi	r2,gp,-25788
}
   2cb74:	e037883a 	mov	sp,fp
   2cb78:	dfc00117 	ldw	ra,4(sp)
   2cb7c:	df000017 	ldw	fp,0(sp)
   2cb80:	dec00204 	addi	sp,sp,8
   2cb84:	f800283a 	ret

0002cb88 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2cb88:	defffb04 	addi	sp,sp,-20
   2cb8c:	dfc00415 	stw	ra,16(sp)
   2cb90:	df000315 	stw	fp,12(sp)
   2cb94:	df000304 	addi	fp,sp,12
   2cb98:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2cb9c:	e0bfff17 	ldw	r2,-4(fp)
   2cba0:	10000616 	blt	r2,zero,2cbbc <close+0x34>
   2cba4:	e0bfff17 	ldw	r2,-4(fp)
   2cba8:	10c00324 	muli	r3,r2,12
   2cbac:	008000f4 	movhi	r2,3
   2cbb0:	10bf6f04 	addi	r2,r2,-580
   2cbb4:	1885883a 	add	r2,r3,r2
   2cbb8:	00000106 	br	2cbc0 <close+0x38>
   2cbbc:	0005883a 	mov	r2,zero
   2cbc0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2cbc4:	e0bffd17 	ldw	r2,-12(fp)
   2cbc8:	10001926 	beq	r2,zero,2cc30 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2cbcc:	e0bffd17 	ldw	r2,-12(fp)
   2cbd0:	10800017 	ldw	r2,0(r2)
   2cbd4:	10800417 	ldw	r2,16(r2)
   2cbd8:	10000626 	beq	r2,zero,2cbf4 <close+0x6c>
   2cbdc:	e0bffd17 	ldw	r2,-12(fp)
   2cbe0:	10800017 	ldw	r2,0(r2)
   2cbe4:	10800417 	ldw	r2,16(r2)
   2cbe8:	e13ffd17 	ldw	r4,-12(fp)
   2cbec:	103ee83a 	callr	r2
   2cbf0:	00000106 	br	2cbf8 <close+0x70>
   2cbf4:	0005883a 	mov	r2,zero
   2cbf8:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2cbfc:	e13fff17 	ldw	r4,-4(fp)
   2cc00:	002d2480 	call	2d248 <alt_release_fd>
    if (rval < 0)
   2cc04:	e0bffe17 	ldw	r2,-8(fp)
   2cc08:	1000070e 	bge	r2,zero,2cc28 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2cc0c:	002cb4c0 	call	2cb4c <alt_get_errno>
   2cc10:	1007883a 	mov	r3,r2
   2cc14:	e0bffe17 	ldw	r2,-8(fp)
   2cc18:	0085c83a 	sub	r2,zero,r2
   2cc1c:	18800015 	stw	r2,0(r3)
      return -1;
   2cc20:	00bfffc4 	movi	r2,-1
   2cc24:	00000706 	br	2cc44 <close+0xbc>
    }
    return 0;
   2cc28:	0005883a 	mov	r2,zero
   2cc2c:	00000506 	br	2cc44 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cc30:	002cb4c0 	call	2cb4c <alt_get_errno>
   2cc34:	1007883a 	mov	r3,r2
   2cc38:	00801444 	movi	r2,81
   2cc3c:	18800015 	stw	r2,0(r3)
    return -1;
   2cc40:	00bfffc4 	movi	r2,-1
  }
}
   2cc44:	e037883a 	mov	sp,fp
   2cc48:	dfc00117 	ldw	ra,4(sp)
   2cc4c:	df000017 	ldw	fp,0(sp)
   2cc50:	dec00204 	addi	sp,sp,8
   2cc54:	f800283a 	ret

0002cc58 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2cc58:	defffc04 	addi	sp,sp,-16
   2cc5c:	df000315 	stw	fp,12(sp)
   2cc60:	df000304 	addi	fp,sp,12
   2cc64:	e13ffd15 	stw	r4,-12(fp)
   2cc68:	e17ffe15 	stw	r5,-8(fp)
   2cc6c:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2cc70:	e0bfff17 	ldw	r2,-4(fp)
}
   2cc74:	e037883a 	mov	sp,fp
   2cc78:	df000017 	ldw	fp,0(sp)
   2cc7c:	dec00104 	addi	sp,sp,4
   2cc80:	f800283a 	ret

0002cc84 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cc84:	defffe04 	addi	sp,sp,-8
   2cc88:	dfc00115 	stw	ra,4(sp)
   2cc8c:	df000015 	stw	fp,0(sp)
   2cc90:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cc94:	d0a00b17 	ldw	r2,-32724(gp)
   2cc98:	10000326 	beq	r2,zero,2cca8 <alt_get_errno+0x24>
   2cc9c:	d0a00b17 	ldw	r2,-32724(gp)
   2cca0:	103ee83a 	callr	r2
   2cca4:	00000106 	br	2ccac <alt_get_errno+0x28>
   2cca8:	d0a6d104 	addi	r2,gp,-25788
}
   2ccac:	e037883a 	mov	sp,fp
   2ccb0:	dfc00117 	ldw	ra,4(sp)
   2ccb4:	df000017 	ldw	fp,0(sp)
   2ccb8:	dec00204 	addi	sp,sp,8
   2ccbc:	f800283a 	ret

0002ccc0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2ccc0:	defffb04 	addi	sp,sp,-20
   2ccc4:	dfc00415 	stw	ra,16(sp)
   2ccc8:	df000315 	stw	fp,12(sp)
   2cccc:	df000304 	addi	fp,sp,12
   2ccd0:	e13ffe15 	stw	r4,-8(fp)
   2ccd4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ccd8:	e0bffe17 	ldw	r2,-8(fp)
   2ccdc:	10000616 	blt	r2,zero,2ccf8 <fstat+0x38>
   2cce0:	e0bffe17 	ldw	r2,-8(fp)
   2cce4:	10c00324 	muli	r3,r2,12
   2cce8:	008000f4 	movhi	r2,3
   2ccec:	10bf6f04 	addi	r2,r2,-580
   2ccf0:	1885883a 	add	r2,r3,r2
   2ccf4:	00000106 	br	2ccfc <fstat+0x3c>
   2ccf8:	0005883a 	mov	r2,zero
   2ccfc:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2cd00:	e0bffd17 	ldw	r2,-12(fp)
   2cd04:	10001026 	beq	r2,zero,2cd48 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2cd08:	e0bffd17 	ldw	r2,-12(fp)
   2cd0c:	10800017 	ldw	r2,0(r2)
   2cd10:	10800817 	ldw	r2,32(r2)
   2cd14:	10000726 	beq	r2,zero,2cd34 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2cd18:	e0bffd17 	ldw	r2,-12(fp)
   2cd1c:	10800017 	ldw	r2,0(r2)
   2cd20:	10800817 	ldw	r2,32(r2)
   2cd24:	e17fff17 	ldw	r5,-4(fp)
   2cd28:	e13ffd17 	ldw	r4,-12(fp)
   2cd2c:	103ee83a 	callr	r2
   2cd30:	00000a06 	br	2cd5c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2cd34:	e0bfff17 	ldw	r2,-4(fp)
   2cd38:	00c80004 	movi	r3,8192
   2cd3c:	10c00115 	stw	r3,4(r2)
      return 0;
   2cd40:	0005883a 	mov	r2,zero
   2cd44:	00000506 	br	2cd5c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cd48:	002cc840 	call	2cc84 <alt_get_errno>
   2cd4c:	1007883a 	mov	r3,r2
   2cd50:	00801444 	movi	r2,81
   2cd54:	18800015 	stw	r2,0(r3)
    return -1;
   2cd58:	00bfffc4 	movi	r2,-1
  }
}
   2cd5c:	e037883a 	mov	sp,fp
   2cd60:	dfc00117 	ldw	ra,4(sp)
   2cd64:	df000017 	ldw	fp,0(sp)
   2cd68:	dec00204 	addi	sp,sp,8
   2cd6c:	f800283a 	ret

0002cd70 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cd70:	defffe04 	addi	sp,sp,-8
   2cd74:	dfc00115 	stw	ra,4(sp)
   2cd78:	df000015 	stw	fp,0(sp)
   2cd7c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cd80:	d0a00b17 	ldw	r2,-32724(gp)
   2cd84:	10000326 	beq	r2,zero,2cd94 <alt_get_errno+0x24>
   2cd88:	d0a00b17 	ldw	r2,-32724(gp)
   2cd8c:	103ee83a 	callr	r2
   2cd90:	00000106 	br	2cd98 <alt_get_errno+0x28>
   2cd94:	d0a6d104 	addi	r2,gp,-25788
}
   2cd98:	e037883a 	mov	sp,fp
   2cd9c:	dfc00117 	ldw	ra,4(sp)
   2cda0:	df000017 	ldw	fp,0(sp)
   2cda4:	dec00204 	addi	sp,sp,8
   2cda8:	f800283a 	ret

0002cdac <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2cdac:	deffed04 	addi	sp,sp,-76
   2cdb0:	dfc01215 	stw	ra,72(sp)
   2cdb4:	df001115 	stw	fp,68(sp)
   2cdb8:	df001104 	addi	fp,sp,68
   2cdbc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2cdc0:	e0bfff17 	ldw	r2,-4(fp)
   2cdc4:	10000616 	blt	r2,zero,2cde0 <isatty+0x34>
   2cdc8:	e0bfff17 	ldw	r2,-4(fp)
   2cdcc:	10c00324 	muli	r3,r2,12
   2cdd0:	008000f4 	movhi	r2,3
   2cdd4:	10bf6f04 	addi	r2,r2,-580
   2cdd8:	1885883a 	add	r2,r3,r2
   2cddc:	00000106 	br	2cde4 <isatty+0x38>
   2cde0:	0005883a 	mov	r2,zero
   2cde4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2cde8:	e0bfef17 	ldw	r2,-68(fp)
   2cdec:	10000e26 	beq	r2,zero,2ce28 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2cdf0:	e0bfef17 	ldw	r2,-68(fp)
   2cdf4:	10800017 	ldw	r2,0(r2)
   2cdf8:	10800817 	ldw	r2,32(r2)
   2cdfc:	1000021e 	bne	r2,zero,2ce08 <isatty+0x5c>
    {
      return 1;
   2ce00:	00800044 	movi	r2,1
   2ce04:	00000d06 	br	2ce3c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2ce08:	e0bff004 	addi	r2,fp,-64
   2ce0c:	100b883a 	mov	r5,r2
   2ce10:	e13fff17 	ldw	r4,-4(fp)
   2ce14:	002ccc00 	call	2ccc0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2ce18:	e0bff117 	ldw	r2,-60(fp)
   2ce1c:	10880020 	cmpeqi	r2,r2,8192
   2ce20:	10803fcc 	andi	r2,r2,255
   2ce24:	00000506 	br	2ce3c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2ce28:	002cd700 	call	2cd70 <alt_get_errno>
   2ce2c:	1007883a 	mov	r3,r2
   2ce30:	00801444 	movi	r2,81
   2ce34:	18800015 	stw	r2,0(r3)
    return 0;
   2ce38:	0005883a 	mov	r2,zero
  }
}
   2ce3c:	e037883a 	mov	sp,fp
   2ce40:	dfc00117 	ldw	ra,4(sp)
   2ce44:	df000017 	ldw	fp,0(sp)
   2ce48:	dec00204 	addi	sp,sp,8
   2ce4c:	f800283a 	ret

0002ce50 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2ce50:	defffc04 	addi	sp,sp,-16
   2ce54:	df000315 	stw	fp,12(sp)
   2ce58:	df000304 	addi	fp,sp,12
   2ce5c:	e13ffd15 	stw	r4,-12(fp)
   2ce60:	e17ffe15 	stw	r5,-8(fp)
   2ce64:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2ce68:	e0fffe17 	ldw	r3,-8(fp)
   2ce6c:	e0bffd17 	ldw	r2,-12(fp)
   2ce70:	18800c26 	beq	r3,r2,2cea4 <alt_load_section+0x54>
  {
    while( to != end )
   2ce74:	00000806 	br	2ce98 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2ce78:	e0bffe17 	ldw	r2,-8(fp)
   2ce7c:	10c00104 	addi	r3,r2,4
   2ce80:	e0fffe15 	stw	r3,-8(fp)
   2ce84:	e0fffd17 	ldw	r3,-12(fp)
   2ce88:	19000104 	addi	r4,r3,4
   2ce8c:	e13ffd15 	stw	r4,-12(fp)
   2ce90:	18c00017 	ldw	r3,0(r3)
   2ce94:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2ce98:	e0fffe17 	ldw	r3,-8(fp)
   2ce9c:	e0bfff17 	ldw	r2,-4(fp)
   2cea0:	18bff51e 	bne	r3,r2,2ce78 <__alt_data_end+0xfffece78>
    {
      *to++ = *from++;
    }
  }
}
   2cea4:	0001883a 	nop
   2cea8:	e037883a 	mov	sp,fp
   2ceac:	df000017 	ldw	fp,0(sp)
   2ceb0:	dec00104 	addi	sp,sp,4
   2ceb4:	f800283a 	ret

0002ceb8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2ceb8:	defffe04 	addi	sp,sp,-8
   2cebc:	dfc00115 	stw	ra,4(sp)
   2cec0:	df000015 	stw	fp,0(sp)
   2cec4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2cec8:	018000f4 	movhi	r6,3
   2cecc:	3183f704 	addi	r6,r6,4060
   2ced0:	014000f4 	movhi	r5,3
   2ced4:	297d3c04 	addi	r5,r5,-2832
   2ced8:	010000f4 	movhi	r4,3
   2cedc:	2103f704 	addi	r4,r4,4060
   2cee0:	002ce500 	call	2ce50 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2cee4:	018000b4 	movhi	r6,2
   2cee8:	31809104 	addi	r6,r6,580
   2ceec:	014000b4 	movhi	r5,2
   2cef0:	29400804 	addi	r5,r5,32
   2cef4:	010000b4 	movhi	r4,2
   2cef8:	21000804 	addi	r4,r4,32
   2cefc:	002ce500 	call	2ce50 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2cf00:	018000f4 	movhi	r6,3
   2cf04:	31bd3c04 	addi	r6,r6,-2832
   2cf08:	014000f4 	movhi	r5,3
   2cf0c:	297c7b04 	addi	r5,r5,-3604
   2cf10:	010000f4 	movhi	r4,3
   2cf14:	213c7b04 	addi	r4,r4,-3604
   2cf18:	002ce500 	call	2ce50 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2cf1c:	002e0d80 	call	2e0d8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   2cf20:	002e2c00 	call	2e2c0 <alt_icache_flush_all>
}
   2cf24:	0001883a 	nop
   2cf28:	e037883a 	mov	sp,fp
   2cf2c:	dfc00117 	ldw	ra,4(sp)
   2cf30:	df000017 	ldw	fp,0(sp)
   2cf34:	dec00204 	addi	sp,sp,8
   2cf38:	f800283a 	ret

0002cf3c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cf3c:	defffe04 	addi	sp,sp,-8
   2cf40:	dfc00115 	stw	ra,4(sp)
   2cf44:	df000015 	stw	fp,0(sp)
   2cf48:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2cf4c:	d0a00b17 	ldw	r2,-32724(gp)
   2cf50:	10000326 	beq	r2,zero,2cf60 <alt_get_errno+0x24>
   2cf54:	d0a00b17 	ldw	r2,-32724(gp)
   2cf58:	103ee83a 	callr	r2
   2cf5c:	00000106 	br	2cf64 <alt_get_errno+0x28>
   2cf60:	d0a6d104 	addi	r2,gp,-25788
}
   2cf64:	e037883a 	mov	sp,fp
   2cf68:	dfc00117 	ldw	ra,4(sp)
   2cf6c:	df000017 	ldw	fp,0(sp)
   2cf70:	dec00204 	addi	sp,sp,8
   2cf74:	f800283a 	ret

0002cf78 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2cf78:	defff904 	addi	sp,sp,-28
   2cf7c:	dfc00615 	stw	ra,24(sp)
   2cf80:	df000515 	stw	fp,20(sp)
   2cf84:	df000504 	addi	fp,sp,20
   2cf88:	e13ffd15 	stw	r4,-12(fp)
   2cf8c:	e17ffe15 	stw	r5,-8(fp)
   2cf90:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2cf94:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2cf98:	e0bffd17 	ldw	r2,-12(fp)
   2cf9c:	10000616 	blt	r2,zero,2cfb8 <lseek+0x40>
   2cfa0:	e0bffd17 	ldw	r2,-12(fp)
   2cfa4:	10c00324 	muli	r3,r2,12
   2cfa8:	008000f4 	movhi	r2,3
   2cfac:	10bf6f04 	addi	r2,r2,-580
   2cfb0:	1885883a 	add	r2,r3,r2
   2cfb4:	00000106 	br	2cfbc <lseek+0x44>
   2cfb8:	0005883a 	mov	r2,zero
   2cfbc:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2cfc0:	e0bffc17 	ldw	r2,-16(fp)
   2cfc4:	10001026 	beq	r2,zero,2d008 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2cfc8:	e0bffc17 	ldw	r2,-16(fp)
   2cfcc:	10800017 	ldw	r2,0(r2)
   2cfd0:	10800717 	ldw	r2,28(r2)
   2cfd4:	10000926 	beq	r2,zero,2cffc <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2cfd8:	e0bffc17 	ldw	r2,-16(fp)
   2cfdc:	10800017 	ldw	r2,0(r2)
   2cfe0:	10800717 	ldw	r2,28(r2)
   2cfe4:	e1bfff17 	ldw	r6,-4(fp)
   2cfe8:	e17ffe17 	ldw	r5,-8(fp)
   2cfec:	e13ffc17 	ldw	r4,-16(fp)
   2cff0:	103ee83a 	callr	r2
   2cff4:	e0bffb15 	stw	r2,-20(fp)
   2cff8:	00000506 	br	2d010 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2cffc:	00bfde84 	movi	r2,-134
   2d000:	e0bffb15 	stw	r2,-20(fp)
   2d004:	00000206 	br	2d010 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2d008:	00bfebc4 	movi	r2,-81
   2d00c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2d010:	e0bffb17 	ldw	r2,-20(fp)
   2d014:	1000070e 	bge	r2,zero,2d034 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2d018:	002cf3c0 	call	2cf3c <alt_get_errno>
   2d01c:	1007883a 	mov	r3,r2
   2d020:	e0bffb17 	ldw	r2,-20(fp)
   2d024:	0085c83a 	sub	r2,zero,r2
   2d028:	18800015 	stw	r2,0(r3)
    rc = -1;
   2d02c:	00bfffc4 	movi	r2,-1
   2d030:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2d034:	e0bffb17 	ldw	r2,-20(fp)
}
   2d038:	e037883a 	mov	sp,fp
   2d03c:	dfc00117 	ldw	ra,4(sp)
   2d040:	df000017 	ldw	fp,0(sp)
   2d044:	dec00204 	addi	sp,sp,8
   2d048:	f800283a 	ret

0002d04c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2d04c:	defffd04 	addi	sp,sp,-12
   2d050:	dfc00215 	stw	ra,8(sp)
   2d054:	df000115 	stw	fp,4(sp)
   2d058:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2d05c:	0009883a 	mov	r4,zero
   2d060:	002d4c40 	call	2d4c4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2d064:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2d068:	002d4fc0 	call	2d4fc <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2d06c:	018000f4 	movhi	r6,3
   2d070:	31bd3204 	addi	r6,r6,-2872
   2d074:	014000f4 	movhi	r5,3
   2d078:	297d3204 	addi	r5,r5,-2872
   2d07c:	010000f4 	movhi	r4,3
   2d080:	213d3204 	addi	r4,r4,-2872
   2d084:	002e6580 	call	2e658 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2d088:	002e2000 	call	2e200 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2d08c:	010000f4 	movhi	r4,3
   2d090:	21389804 	addi	r4,r4,-7584
   2d094:	002ee580 	call	2ee58 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2d098:	d0a6d217 	ldw	r2,-25784(gp)
   2d09c:	d0e6d317 	ldw	r3,-25780(gp)
   2d0a0:	d126d417 	ldw	r4,-25776(gp)
   2d0a4:	200d883a 	mov	r6,r4
   2d0a8:	180b883a 	mov	r5,r3
   2d0ac:	1009883a 	mov	r4,r2
   2d0b0:	00202900 	call	20290 <main>
   2d0b4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2d0b8:	01000044 	movi	r4,1
   2d0bc:	002cb880 	call	2cb88 <close>
  exit (result);
   2d0c0:	e13fff17 	ldw	r4,-4(fp)
   2d0c4:	002ee6c0 	call	2ee6c <exit>

0002d0c8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2d0c8:	defffe04 	addi	sp,sp,-8
   2d0cc:	df000115 	stw	fp,4(sp)
   2d0d0:	df000104 	addi	fp,sp,4
   2d0d4:	e13fff15 	stw	r4,-4(fp)
}
   2d0d8:	0001883a 	nop
   2d0dc:	e037883a 	mov	sp,fp
   2d0e0:	df000017 	ldw	fp,0(sp)
   2d0e4:	dec00104 	addi	sp,sp,4
   2d0e8:	f800283a 	ret

0002d0ec <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2d0ec:	defffe04 	addi	sp,sp,-8
   2d0f0:	df000115 	stw	fp,4(sp)
   2d0f4:	df000104 	addi	fp,sp,4
   2d0f8:	e13fff15 	stw	r4,-4(fp)
}
   2d0fc:	0001883a 	nop
   2d100:	e037883a 	mov	sp,fp
   2d104:	df000017 	ldw	fp,0(sp)
   2d108:	dec00104 	addi	sp,sp,4
   2d10c:	f800283a 	ret

0002d110 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d110:	defffe04 	addi	sp,sp,-8
   2d114:	dfc00115 	stw	ra,4(sp)
   2d118:	df000015 	stw	fp,0(sp)
   2d11c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d120:	d0a00b17 	ldw	r2,-32724(gp)
   2d124:	10000326 	beq	r2,zero,2d134 <alt_get_errno+0x24>
   2d128:	d0a00b17 	ldw	r2,-32724(gp)
   2d12c:	103ee83a 	callr	r2
   2d130:	00000106 	br	2d138 <alt_get_errno+0x28>
   2d134:	d0a6d104 	addi	r2,gp,-25788
}
   2d138:	e037883a 	mov	sp,fp
   2d13c:	dfc00117 	ldw	ra,4(sp)
   2d140:	df000017 	ldw	fp,0(sp)
   2d144:	dec00204 	addi	sp,sp,8
   2d148:	f800283a 	ret

0002d14c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2d14c:	defff904 	addi	sp,sp,-28
   2d150:	dfc00615 	stw	ra,24(sp)
   2d154:	df000515 	stw	fp,20(sp)
   2d158:	df000504 	addi	fp,sp,20
   2d15c:	e13ffd15 	stw	r4,-12(fp)
   2d160:	e17ffe15 	stw	r5,-8(fp)
   2d164:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d168:	e0bffd17 	ldw	r2,-12(fp)
   2d16c:	10000616 	blt	r2,zero,2d188 <read+0x3c>
   2d170:	e0bffd17 	ldw	r2,-12(fp)
   2d174:	10c00324 	muli	r3,r2,12
   2d178:	008000f4 	movhi	r2,3
   2d17c:	10bf6f04 	addi	r2,r2,-580
   2d180:	1885883a 	add	r2,r3,r2
   2d184:	00000106 	br	2d18c <read+0x40>
   2d188:	0005883a 	mov	r2,zero
   2d18c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d190:	e0bffb17 	ldw	r2,-20(fp)
   2d194:	10002226 	beq	r2,zero,2d220 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d198:	e0bffb17 	ldw	r2,-20(fp)
   2d19c:	10800217 	ldw	r2,8(r2)
   2d1a0:	108000cc 	andi	r2,r2,3
   2d1a4:	10800060 	cmpeqi	r2,r2,1
   2d1a8:	1000181e 	bne	r2,zero,2d20c <read+0xc0>
        (fd->dev->read))
   2d1ac:	e0bffb17 	ldw	r2,-20(fp)
   2d1b0:	10800017 	ldw	r2,0(r2)
   2d1b4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d1b8:	10001426 	beq	r2,zero,2d20c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2d1bc:	e0bffb17 	ldw	r2,-20(fp)
   2d1c0:	10800017 	ldw	r2,0(r2)
   2d1c4:	10800517 	ldw	r2,20(r2)
   2d1c8:	e0ffff17 	ldw	r3,-4(fp)
   2d1cc:	180d883a 	mov	r6,r3
   2d1d0:	e17ffe17 	ldw	r5,-8(fp)
   2d1d4:	e13ffb17 	ldw	r4,-20(fp)
   2d1d8:	103ee83a 	callr	r2
   2d1dc:	e0bffc15 	stw	r2,-16(fp)
   2d1e0:	e0bffc17 	ldw	r2,-16(fp)
   2d1e4:	1000070e 	bge	r2,zero,2d204 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2d1e8:	002d1100 	call	2d110 <alt_get_errno>
   2d1ec:	1007883a 	mov	r3,r2
   2d1f0:	e0bffc17 	ldw	r2,-16(fp)
   2d1f4:	0085c83a 	sub	r2,zero,r2
   2d1f8:	18800015 	stw	r2,0(r3)
          return -1;
   2d1fc:	00bfffc4 	movi	r2,-1
   2d200:	00000c06 	br	2d234 <read+0xe8>
        }
        return rval;
   2d204:	e0bffc17 	ldw	r2,-16(fp)
   2d208:	00000a06 	br	2d234 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2d20c:	002d1100 	call	2d110 <alt_get_errno>
   2d210:	1007883a 	mov	r3,r2
   2d214:	00800344 	movi	r2,13
   2d218:	18800015 	stw	r2,0(r3)
   2d21c:	00000406 	br	2d230 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2d220:	002d1100 	call	2d110 <alt_get_errno>
   2d224:	1007883a 	mov	r3,r2
   2d228:	00801444 	movi	r2,81
   2d22c:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d230:	00bfffc4 	movi	r2,-1
}
   2d234:	e037883a 	mov	sp,fp
   2d238:	dfc00117 	ldw	ra,4(sp)
   2d23c:	df000017 	ldw	fp,0(sp)
   2d240:	dec00204 	addi	sp,sp,8
   2d244:	f800283a 	ret

0002d248 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2d248:	defffe04 	addi	sp,sp,-8
   2d24c:	df000115 	stw	fp,4(sp)
   2d250:	df000104 	addi	fp,sp,4
   2d254:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2d258:	e0bfff17 	ldw	r2,-4(fp)
   2d25c:	108000d0 	cmplti	r2,r2,3
   2d260:	10000d1e 	bne	r2,zero,2d298 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2d264:	008000f4 	movhi	r2,3
   2d268:	10bf6f04 	addi	r2,r2,-580
   2d26c:	e0ffff17 	ldw	r3,-4(fp)
   2d270:	18c00324 	muli	r3,r3,12
   2d274:	10c5883a 	add	r2,r2,r3
   2d278:	10800204 	addi	r2,r2,8
   2d27c:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2d280:	008000f4 	movhi	r2,3
   2d284:	10bf6f04 	addi	r2,r2,-580
   2d288:	e0ffff17 	ldw	r3,-4(fp)
   2d28c:	18c00324 	muli	r3,r3,12
   2d290:	10c5883a 	add	r2,r2,r3
   2d294:	10000015 	stw	zero,0(r2)
  }
}
   2d298:	0001883a 	nop
   2d29c:	e037883a 	mov	sp,fp
   2d2a0:	df000017 	ldw	fp,0(sp)
   2d2a4:	dec00104 	addi	sp,sp,4
   2d2a8:	f800283a 	ret

0002d2ac <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2d2ac:	defff904 	addi	sp,sp,-28
   2d2b0:	df000615 	stw	fp,24(sp)
   2d2b4:	df000604 	addi	fp,sp,24
   2d2b8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2d2bc:	0005303a 	rdctl	r2,status
   2d2c0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d2c4:	e0fffe17 	ldw	r3,-8(fp)
   2d2c8:	00bfff84 	movi	r2,-2
   2d2cc:	1884703a 	and	r2,r3,r2
   2d2d0:	1001703a 	wrctl	status,r2
  
  return context;
   2d2d4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2d2d8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2d2dc:	d0a00c17 	ldw	r2,-32720(gp)
   2d2e0:	10c000c4 	addi	r3,r2,3
   2d2e4:	00bfff04 	movi	r2,-4
   2d2e8:	1884703a 	and	r2,r3,r2
   2d2ec:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2d2f0:	d0e00c17 	ldw	r3,-32720(gp)
   2d2f4:	e0bfff17 	ldw	r2,-4(fp)
   2d2f8:	1887883a 	add	r3,r3,r2
   2d2fc:	00800134 	movhi	r2,4
   2d300:	10800004 	addi	r2,r2,0
   2d304:	10c0062e 	bgeu	r2,r3,2d320 <sbrk+0x74>
   2d308:	e0bffb17 	ldw	r2,-20(fp)
   2d30c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2d310:	e0bffa17 	ldw	r2,-24(fp)
   2d314:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2d318:	00bfffc4 	movi	r2,-1
   2d31c:	00000b06 	br	2d34c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2d320:	d0a00c17 	ldw	r2,-32720(gp)
   2d324:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2d328:	d0e00c17 	ldw	r3,-32720(gp)
   2d32c:	e0bfff17 	ldw	r2,-4(fp)
   2d330:	1885883a 	add	r2,r3,r2
   2d334:	d0a00c15 	stw	r2,-32720(gp)
   2d338:	e0bffb17 	ldw	r2,-20(fp)
   2d33c:	e0bffc15 	stw	r2,-16(fp)
   2d340:	e0bffc17 	ldw	r2,-16(fp)
   2d344:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2d348:	e0bffd17 	ldw	r2,-12(fp)
} 
   2d34c:	e037883a 	mov	sp,fp
   2d350:	df000017 	ldw	fp,0(sp)
   2d354:	dec00104 	addi	sp,sp,4
   2d358:	f800283a 	ret

0002d35c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d35c:	defffe04 	addi	sp,sp,-8
   2d360:	dfc00115 	stw	ra,4(sp)
   2d364:	df000015 	stw	fp,0(sp)
   2d368:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d36c:	d0a00b17 	ldw	r2,-32724(gp)
   2d370:	10000326 	beq	r2,zero,2d380 <alt_get_errno+0x24>
   2d374:	d0a00b17 	ldw	r2,-32724(gp)
   2d378:	103ee83a 	callr	r2
   2d37c:	00000106 	br	2d384 <alt_get_errno+0x28>
   2d380:	d0a6d104 	addi	r2,gp,-25788
}
   2d384:	e037883a 	mov	sp,fp
   2d388:	dfc00117 	ldw	ra,4(sp)
   2d38c:	df000017 	ldw	fp,0(sp)
   2d390:	dec00204 	addi	sp,sp,8
   2d394:	f800283a 	ret

0002d398 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2d398:	defff904 	addi	sp,sp,-28
   2d39c:	dfc00615 	stw	ra,24(sp)
   2d3a0:	df000515 	stw	fp,20(sp)
   2d3a4:	df000504 	addi	fp,sp,20
   2d3a8:	e13ffd15 	stw	r4,-12(fp)
   2d3ac:	e17ffe15 	stw	r5,-8(fp)
   2d3b0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d3b4:	e0bffd17 	ldw	r2,-12(fp)
   2d3b8:	10000616 	blt	r2,zero,2d3d4 <write+0x3c>
   2d3bc:	e0bffd17 	ldw	r2,-12(fp)
   2d3c0:	10c00324 	muli	r3,r2,12
   2d3c4:	008000f4 	movhi	r2,3
   2d3c8:	10bf6f04 	addi	r2,r2,-580
   2d3cc:	1885883a 	add	r2,r3,r2
   2d3d0:	00000106 	br	2d3d8 <write+0x40>
   2d3d4:	0005883a 	mov	r2,zero
   2d3d8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d3dc:	e0bffb17 	ldw	r2,-20(fp)
   2d3e0:	10002126 	beq	r2,zero,2d468 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2d3e4:	e0bffb17 	ldw	r2,-20(fp)
   2d3e8:	10800217 	ldw	r2,8(r2)
   2d3ec:	108000cc 	andi	r2,r2,3
   2d3f0:	10001826 	beq	r2,zero,2d454 <write+0xbc>
   2d3f4:	e0bffb17 	ldw	r2,-20(fp)
   2d3f8:	10800017 	ldw	r2,0(r2)
   2d3fc:	10800617 	ldw	r2,24(r2)
   2d400:	10001426 	beq	r2,zero,2d454 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2d404:	e0bffb17 	ldw	r2,-20(fp)
   2d408:	10800017 	ldw	r2,0(r2)
   2d40c:	10800617 	ldw	r2,24(r2)
   2d410:	e0ffff17 	ldw	r3,-4(fp)
   2d414:	180d883a 	mov	r6,r3
   2d418:	e17ffe17 	ldw	r5,-8(fp)
   2d41c:	e13ffb17 	ldw	r4,-20(fp)
   2d420:	103ee83a 	callr	r2
   2d424:	e0bffc15 	stw	r2,-16(fp)
   2d428:	e0bffc17 	ldw	r2,-16(fp)
   2d42c:	1000070e 	bge	r2,zero,2d44c <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2d430:	002d35c0 	call	2d35c <alt_get_errno>
   2d434:	1007883a 	mov	r3,r2
   2d438:	e0bffc17 	ldw	r2,-16(fp)
   2d43c:	0085c83a 	sub	r2,zero,r2
   2d440:	18800015 	stw	r2,0(r3)
        return -1;
   2d444:	00bfffc4 	movi	r2,-1
   2d448:	00000c06 	br	2d47c <write+0xe4>
      }
      return rval;
   2d44c:	e0bffc17 	ldw	r2,-16(fp)
   2d450:	00000a06 	br	2d47c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2d454:	002d35c0 	call	2d35c <alt_get_errno>
   2d458:	1007883a 	mov	r3,r2
   2d45c:	00800344 	movi	r2,13
   2d460:	18800015 	stw	r2,0(r3)
   2d464:	00000406 	br	2d478 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2d468:	002d35c0 	call	2d35c <alt_get_errno>
   2d46c:	1007883a 	mov	r3,r2
   2d470:	00801444 	movi	r2,81
   2d474:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d478:	00bfffc4 	movi	r2,-1
}
   2d47c:	e037883a 	mov	sp,fp
   2d480:	dfc00117 	ldw	ra,4(sp)
   2d484:	df000017 	ldw	fp,0(sp)
   2d488:	dec00204 	addi	sp,sp,8
   2d48c:	f800283a 	ret

0002d490 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2d490:	defffd04 	addi	sp,sp,-12
   2d494:	dfc00215 	stw	ra,8(sp)
   2d498:	df000115 	stw	fp,4(sp)
   2d49c:	df000104 	addi	fp,sp,4
   2d4a0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2d4a4:	d1600804 	addi	r5,gp,-32736
   2d4a8:	e13fff17 	ldw	r4,-4(fp)
   2d4ac:	002e15c0 	call	2e15c <alt_dev_llist_insert>
}
   2d4b0:	e037883a 	mov	sp,fp
   2d4b4:	dfc00117 	ldw	ra,4(sp)
   2d4b8:	df000017 	ldw	fp,0(sp)
   2d4bc:	dec00204 	addi	sp,sp,8
   2d4c0:	f800283a 	ret

0002d4c4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2d4c4:	defffd04 	addi	sp,sp,-12
   2d4c8:	dfc00215 	stw	ra,8(sp)
   2d4cc:	df000115 	stw	fp,4(sp)
   2d4d0:	df000104 	addi	fp,sp,4
   2d4d4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2d4d8:	002eacc0 	call	2eacc <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2d4dc:	00800044 	movi	r2,1
   2d4e0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2d4e4:	0001883a 	nop
   2d4e8:	e037883a 	mov	sp,fp
   2d4ec:	dfc00117 	ldw	ra,4(sp)
   2d4f0:	df000017 	ldw	fp,0(sp)
   2d4f4:	dec00204 	addi	sp,sp,8
   2d4f8:	f800283a 	ret

0002d4fc <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2d4fc:	defffe04 	addi	sp,sp,-8
   2d500:	dfc00115 	stw	ra,4(sp)
   2d504:	df000015 	stw	fp,0(sp)
   2d508:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2d50c:	000d883a 	mov	r6,zero
   2d510:	000b883a 	mov	r5,zero
   2d514:	010000f4 	movhi	r4,3
   2d518:	213fd904 	addi	r4,r4,-156
   2d51c:	002d6a80 	call	2d6a8 <altera_avalon_jtag_uart_init>
   2d520:	010000f4 	movhi	r4,3
   2d524:	213fcf04 	addi	r4,r4,-196
   2d528:	002d4900 	call	2d490 <alt_dev_reg>
}
   2d52c:	0001883a 	nop
   2d530:	e037883a 	mov	sp,fp
   2d534:	dfc00117 	ldw	ra,4(sp)
   2d538:	df000017 	ldw	fp,0(sp)
   2d53c:	dec00204 	addi	sp,sp,8
   2d540:	f800283a 	ret

0002d544 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2d544:	defffa04 	addi	sp,sp,-24
   2d548:	dfc00515 	stw	ra,20(sp)
   2d54c:	df000415 	stw	fp,16(sp)
   2d550:	df000404 	addi	fp,sp,16
   2d554:	e13ffd15 	stw	r4,-12(fp)
   2d558:	e17ffe15 	stw	r5,-8(fp)
   2d55c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d560:	e0bffd17 	ldw	r2,-12(fp)
   2d564:	10800017 	ldw	r2,0(r2)
   2d568:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2d56c:	e0bffc17 	ldw	r2,-16(fp)
   2d570:	10c00a04 	addi	r3,r2,40
   2d574:	e0bffd17 	ldw	r2,-12(fp)
   2d578:	10800217 	ldw	r2,8(r2)
   2d57c:	100f883a 	mov	r7,r2
   2d580:	e1bfff17 	ldw	r6,-4(fp)
   2d584:	e17ffe17 	ldw	r5,-8(fp)
   2d588:	1809883a 	mov	r4,r3
   2d58c:	002db6c0 	call	2db6c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2d590:	e037883a 	mov	sp,fp
   2d594:	dfc00117 	ldw	ra,4(sp)
   2d598:	df000017 	ldw	fp,0(sp)
   2d59c:	dec00204 	addi	sp,sp,8
   2d5a0:	f800283a 	ret

0002d5a4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2d5a4:	defffa04 	addi	sp,sp,-24
   2d5a8:	dfc00515 	stw	ra,20(sp)
   2d5ac:	df000415 	stw	fp,16(sp)
   2d5b0:	df000404 	addi	fp,sp,16
   2d5b4:	e13ffd15 	stw	r4,-12(fp)
   2d5b8:	e17ffe15 	stw	r5,-8(fp)
   2d5bc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d5c0:	e0bffd17 	ldw	r2,-12(fp)
   2d5c4:	10800017 	ldw	r2,0(r2)
   2d5c8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2d5cc:	e0bffc17 	ldw	r2,-16(fp)
   2d5d0:	10c00a04 	addi	r3,r2,40
   2d5d4:	e0bffd17 	ldw	r2,-12(fp)
   2d5d8:	10800217 	ldw	r2,8(r2)
   2d5dc:	100f883a 	mov	r7,r2
   2d5e0:	e1bfff17 	ldw	r6,-4(fp)
   2d5e4:	e17ffe17 	ldw	r5,-8(fp)
   2d5e8:	1809883a 	mov	r4,r3
   2d5ec:	002dd880 	call	2dd88 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2d5f0:	e037883a 	mov	sp,fp
   2d5f4:	dfc00117 	ldw	ra,4(sp)
   2d5f8:	df000017 	ldw	fp,0(sp)
   2d5fc:	dec00204 	addi	sp,sp,8
   2d600:	f800283a 	ret

0002d604 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2d604:	defffc04 	addi	sp,sp,-16
   2d608:	dfc00315 	stw	ra,12(sp)
   2d60c:	df000215 	stw	fp,8(sp)
   2d610:	df000204 	addi	fp,sp,8
   2d614:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d618:	e0bfff17 	ldw	r2,-4(fp)
   2d61c:	10800017 	ldw	r2,0(r2)
   2d620:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2d624:	e0bffe17 	ldw	r2,-8(fp)
   2d628:	10c00a04 	addi	r3,r2,40
   2d62c:	e0bfff17 	ldw	r2,-4(fp)
   2d630:	10800217 	ldw	r2,8(r2)
   2d634:	100b883a 	mov	r5,r2
   2d638:	1809883a 	mov	r4,r3
   2d63c:	002da140 	call	2da14 <altera_avalon_jtag_uart_close>
}
   2d640:	e037883a 	mov	sp,fp
   2d644:	dfc00117 	ldw	ra,4(sp)
   2d648:	df000017 	ldw	fp,0(sp)
   2d64c:	dec00204 	addi	sp,sp,8
   2d650:	f800283a 	ret

0002d654 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2d654:	defffa04 	addi	sp,sp,-24
   2d658:	dfc00515 	stw	ra,20(sp)
   2d65c:	df000415 	stw	fp,16(sp)
   2d660:	df000404 	addi	fp,sp,16
   2d664:	e13ffd15 	stw	r4,-12(fp)
   2d668:	e17ffe15 	stw	r5,-8(fp)
   2d66c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2d670:	e0bffd17 	ldw	r2,-12(fp)
   2d674:	10800017 	ldw	r2,0(r2)
   2d678:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2d67c:	e0bffc17 	ldw	r2,-16(fp)
   2d680:	10800a04 	addi	r2,r2,40
   2d684:	e1bfff17 	ldw	r6,-4(fp)
   2d688:	e17ffe17 	ldw	r5,-8(fp)
   2d68c:	1009883a 	mov	r4,r2
   2d690:	002da7c0 	call	2da7c <altera_avalon_jtag_uart_ioctl>
}
   2d694:	e037883a 	mov	sp,fp
   2d698:	dfc00117 	ldw	ra,4(sp)
   2d69c:	df000017 	ldw	fp,0(sp)
   2d6a0:	dec00204 	addi	sp,sp,8
   2d6a4:	f800283a 	ret

0002d6a8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2d6a8:	defffa04 	addi	sp,sp,-24
   2d6ac:	dfc00515 	stw	ra,20(sp)
   2d6b0:	df000415 	stw	fp,16(sp)
   2d6b4:	df000404 	addi	fp,sp,16
   2d6b8:	e13ffd15 	stw	r4,-12(fp)
   2d6bc:	e17ffe15 	stw	r5,-8(fp)
   2d6c0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2d6c4:	e0bffd17 	ldw	r2,-12(fp)
   2d6c8:	00c00044 	movi	r3,1
   2d6cc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2d6d0:	e0bffd17 	ldw	r2,-12(fp)
   2d6d4:	10800017 	ldw	r2,0(r2)
   2d6d8:	10800104 	addi	r2,r2,4
   2d6dc:	1007883a 	mov	r3,r2
   2d6e0:	e0bffd17 	ldw	r2,-12(fp)
   2d6e4:	10800817 	ldw	r2,32(r2)
   2d6e8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2d6ec:	e0bffe17 	ldw	r2,-8(fp)
   2d6f0:	e0ffff17 	ldw	r3,-4(fp)
   2d6f4:	d8000015 	stw	zero,0(sp)
   2d6f8:	e1fffd17 	ldw	r7,-12(fp)
   2d6fc:	018000f4 	movhi	r6,3
   2d700:	31b5da04 	addi	r6,r6,-10392
   2d704:	180b883a 	mov	r5,r3
   2d708:	1009883a 	mov	r4,r2
   2d70c:	002e2f40 	call	2e2f4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2d710:	e0bffd17 	ldw	r2,-12(fp)
   2d714:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2d718:	e0bffd17 	ldw	r2,-12(fp)
   2d71c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2d720:	d0e6d617 	ldw	r3,-25768(gp)
   2d724:	e1fffd17 	ldw	r7,-12(fp)
   2d728:	018000f4 	movhi	r6,3
   2d72c:	31b65d04 	addi	r6,r6,-9868
   2d730:	180b883a 	mov	r5,r3
   2d734:	1009883a 	mov	r4,r2
   2d738:	002dfac0 	call	2dfac <alt_alarm_start>
   2d73c:	1000040e 	bge	r2,zero,2d750 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2d740:	e0fffd17 	ldw	r3,-12(fp)
   2d744:	00a00034 	movhi	r2,32768
   2d748:	10bfffc4 	addi	r2,r2,-1
   2d74c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2d750:	0001883a 	nop
   2d754:	e037883a 	mov	sp,fp
   2d758:	dfc00117 	ldw	ra,4(sp)
   2d75c:	df000017 	ldw	fp,0(sp)
   2d760:	dec00204 	addi	sp,sp,8
   2d764:	f800283a 	ret

0002d768 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2d768:	defff804 	addi	sp,sp,-32
   2d76c:	df000715 	stw	fp,28(sp)
   2d770:	df000704 	addi	fp,sp,28
   2d774:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2d778:	e0bfff17 	ldw	r2,-4(fp)
   2d77c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2d780:	e0bffb17 	ldw	r2,-20(fp)
   2d784:	10800017 	ldw	r2,0(r2)
   2d788:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2d78c:	e0bffc17 	ldw	r2,-16(fp)
   2d790:	10800104 	addi	r2,r2,4
   2d794:	10800037 	ldwio	r2,0(r2)
   2d798:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2d79c:	e0bffd17 	ldw	r2,-12(fp)
   2d7a0:	1080c00c 	andi	r2,r2,768
   2d7a4:	10006d26 	beq	r2,zero,2d95c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2d7a8:	e0bffd17 	ldw	r2,-12(fp)
   2d7ac:	1080400c 	andi	r2,r2,256
   2d7b0:	10003526 	beq	r2,zero,2d888 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2d7b4:	00800074 	movhi	r2,1
   2d7b8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d7bc:	e0bffb17 	ldw	r2,-20(fp)
   2d7c0:	10800a17 	ldw	r2,40(r2)
   2d7c4:	10800044 	addi	r2,r2,1
   2d7c8:	1081ffcc 	andi	r2,r2,2047
   2d7cc:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2d7d0:	e0bffb17 	ldw	r2,-20(fp)
   2d7d4:	10c00b17 	ldw	r3,44(r2)
   2d7d8:	e0bffe17 	ldw	r2,-8(fp)
   2d7dc:	18801526 	beq	r3,r2,2d834 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2d7e0:	e0bffc17 	ldw	r2,-16(fp)
   2d7e4:	10800037 	ldwio	r2,0(r2)
   2d7e8:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2d7ec:	e0bff917 	ldw	r2,-28(fp)
   2d7f0:	10a0000c 	andi	r2,r2,32768
   2d7f4:	10001126 	beq	r2,zero,2d83c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2d7f8:	e0bffb17 	ldw	r2,-20(fp)
   2d7fc:	10800a17 	ldw	r2,40(r2)
   2d800:	e0fff917 	ldw	r3,-28(fp)
   2d804:	1809883a 	mov	r4,r3
   2d808:	e0fffb17 	ldw	r3,-20(fp)
   2d80c:	1885883a 	add	r2,r3,r2
   2d810:	10800e04 	addi	r2,r2,56
   2d814:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d818:	e0bffb17 	ldw	r2,-20(fp)
   2d81c:	10800a17 	ldw	r2,40(r2)
   2d820:	10800044 	addi	r2,r2,1
   2d824:	10c1ffcc 	andi	r3,r2,2047
   2d828:	e0bffb17 	ldw	r2,-20(fp)
   2d82c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2d830:	003fe206 	br	2d7bc <__alt_data_end+0xfffed7bc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2d834:	0001883a 	nop
   2d838:	00000106 	br	2d840 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2d83c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2d840:	e0bff917 	ldw	r2,-28(fp)
   2d844:	10bfffec 	andhi	r2,r2,65535
   2d848:	10000f26 	beq	r2,zero,2d888 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2d84c:	e0bffb17 	ldw	r2,-20(fp)
   2d850:	10c00817 	ldw	r3,32(r2)
   2d854:	00bfff84 	movi	r2,-2
   2d858:	1886703a 	and	r3,r3,r2
   2d85c:	e0bffb17 	ldw	r2,-20(fp)
   2d860:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2d864:	e0bffc17 	ldw	r2,-16(fp)
   2d868:	10800104 	addi	r2,r2,4
   2d86c:	1007883a 	mov	r3,r2
   2d870:	e0bffb17 	ldw	r2,-20(fp)
   2d874:	10800817 	ldw	r2,32(r2)
   2d878:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2d87c:	e0bffc17 	ldw	r2,-16(fp)
   2d880:	10800104 	addi	r2,r2,4
   2d884:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2d888:	e0bffd17 	ldw	r2,-12(fp)
   2d88c:	1080800c 	andi	r2,r2,512
   2d890:	103fbe26 	beq	r2,zero,2d78c <__alt_data_end+0xfffed78c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2d894:	e0bffd17 	ldw	r2,-12(fp)
   2d898:	1004d43a 	srli	r2,r2,16
   2d89c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2d8a0:	00001406 	br	2d8f4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2d8a4:	e0bffc17 	ldw	r2,-16(fp)
   2d8a8:	e0fffb17 	ldw	r3,-20(fp)
   2d8ac:	18c00d17 	ldw	r3,52(r3)
   2d8b0:	e13ffb17 	ldw	r4,-20(fp)
   2d8b4:	20c7883a 	add	r3,r4,r3
   2d8b8:	18c20e04 	addi	r3,r3,2104
   2d8bc:	18c00003 	ldbu	r3,0(r3)
   2d8c0:	18c03fcc 	andi	r3,r3,255
   2d8c4:	18c0201c 	xori	r3,r3,128
   2d8c8:	18ffe004 	addi	r3,r3,-128
   2d8cc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2d8d0:	e0bffb17 	ldw	r2,-20(fp)
   2d8d4:	10800d17 	ldw	r2,52(r2)
   2d8d8:	10800044 	addi	r2,r2,1
   2d8dc:	10c1ffcc 	andi	r3,r2,2047
   2d8e0:	e0bffb17 	ldw	r2,-20(fp)
   2d8e4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2d8e8:	e0bffa17 	ldw	r2,-24(fp)
   2d8ec:	10bfffc4 	addi	r2,r2,-1
   2d8f0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2d8f4:	e0bffa17 	ldw	r2,-24(fp)
   2d8f8:	10000526 	beq	r2,zero,2d910 <altera_avalon_jtag_uart_irq+0x1a8>
   2d8fc:	e0bffb17 	ldw	r2,-20(fp)
   2d900:	10c00d17 	ldw	r3,52(r2)
   2d904:	e0bffb17 	ldw	r2,-20(fp)
   2d908:	10800c17 	ldw	r2,48(r2)
   2d90c:	18bfe51e 	bne	r3,r2,2d8a4 <__alt_data_end+0xfffed8a4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2d910:	e0bffa17 	ldw	r2,-24(fp)
   2d914:	103f9d26 	beq	r2,zero,2d78c <__alt_data_end+0xfffed78c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2d918:	e0bffb17 	ldw	r2,-20(fp)
   2d91c:	10c00817 	ldw	r3,32(r2)
   2d920:	00bfff44 	movi	r2,-3
   2d924:	1886703a 	and	r3,r3,r2
   2d928:	e0bffb17 	ldw	r2,-20(fp)
   2d92c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2d930:	e0bffb17 	ldw	r2,-20(fp)
   2d934:	10800017 	ldw	r2,0(r2)
   2d938:	10800104 	addi	r2,r2,4
   2d93c:	1007883a 	mov	r3,r2
   2d940:	e0bffb17 	ldw	r2,-20(fp)
   2d944:	10800817 	ldw	r2,32(r2)
   2d948:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2d94c:	e0bffc17 	ldw	r2,-16(fp)
   2d950:	10800104 	addi	r2,r2,4
   2d954:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2d958:	003f8c06 	br	2d78c <__alt_data_end+0xfffed78c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2d95c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2d960:	0001883a 	nop
   2d964:	e037883a 	mov	sp,fp
   2d968:	df000017 	ldw	fp,0(sp)
   2d96c:	dec00104 	addi	sp,sp,4
   2d970:	f800283a 	ret

0002d974 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2d974:	defff804 	addi	sp,sp,-32
   2d978:	df000715 	stw	fp,28(sp)
   2d97c:	df000704 	addi	fp,sp,28
   2d980:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2d984:	e0bffb17 	ldw	r2,-20(fp)
   2d988:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2d98c:	e0bff917 	ldw	r2,-28(fp)
   2d990:	10800017 	ldw	r2,0(r2)
   2d994:	10800104 	addi	r2,r2,4
   2d998:	10800037 	ldwio	r2,0(r2)
   2d99c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2d9a0:	e0bffa17 	ldw	r2,-24(fp)
   2d9a4:	1081000c 	andi	r2,r2,1024
   2d9a8:	10000b26 	beq	r2,zero,2d9d8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2d9ac:	e0bff917 	ldw	r2,-28(fp)
   2d9b0:	10800017 	ldw	r2,0(r2)
   2d9b4:	10800104 	addi	r2,r2,4
   2d9b8:	1007883a 	mov	r3,r2
   2d9bc:	e0bff917 	ldw	r2,-28(fp)
   2d9c0:	10800817 	ldw	r2,32(r2)
   2d9c4:	10810014 	ori	r2,r2,1024
   2d9c8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2d9cc:	e0bff917 	ldw	r2,-28(fp)
   2d9d0:	10000915 	stw	zero,36(r2)
   2d9d4:	00000a06 	br	2da00 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2d9d8:	e0bff917 	ldw	r2,-28(fp)
   2d9dc:	10c00917 	ldw	r3,36(r2)
   2d9e0:	00a00034 	movhi	r2,32768
   2d9e4:	10bfff04 	addi	r2,r2,-4
   2d9e8:	10c00536 	bltu	r2,r3,2da00 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2d9ec:	e0bff917 	ldw	r2,-28(fp)
   2d9f0:	10800917 	ldw	r2,36(r2)
   2d9f4:	10c00044 	addi	r3,r2,1
   2d9f8:	e0bff917 	ldw	r2,-28(fp)
   2d9fc:	10c00915 	stw	r3,36(r2)
   2da00:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2da04:	e037883a 	mov	sp,fp
   2da08:	df000017 	ldw	fp,0(sp)
   2da0c:	dec00104 	addi	sp,sp,4
   2da10:	f800283a 	ret

0002da14 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2da14:	defffd04 	addi	sp,sp,-12
   2da18:	df000215 	stw	fp,8(sp)
   2da1c:	df000204 	addi	fp,sp,8
   2da20:	e13ffe15 	stw	r4,-8(fp)
   2da24:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2da28:	00000506 	br	2da40 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2da2c:	e0bfff17 	ldw	r2,-4(fp)
   2da30:	1090000c 	andi	r2,r2,16384
   2da34:	10000226 	beq	r2,zero,2da40 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2da38:	00bffd44 	movi	r2,-11
   2da3c:	00000b06 	br	2da6c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2da40:	e0bffe17 	ldw	r2,-8(fp)
   2da44:	10c00d17 	ldw	r3,52(r2)
   2da48:	e0bffe17 	ldw	r2,-8(fp)
   2da4c:	10800c17 	ldw	r2,48(r2)
   2da50:	18800526 	beq	r3,r2,2da68 <altera_avalon_jtag_uart_close+0x54>
   2da54:	e0bffe17 	ldw	r2,-8(fp)
   2da58:	10c00917 	ldw	r3,36(r2)
   2da5c:	e0bffe17 	ldw	r2,-8(fp)
   2da60:	10800117 	ldw	r2,4(r2)
   2da64:	18bff136 	bltu	r3,r2,2da2c <__alt_data_end+0xfffeda2c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2da68:	0005883a 	mov	r2,zero
}
   2da6c:	e037883a 	mov	sp,fp
   2da70:	df000017 	ldw	fp,0(sp)
   2da74:	dec00104 	addi	sp,sp,4
   2da78:	f800283a 	ret

0002da7c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2da7c:	defffa04 	addi	sp,sp,-24
   2da80:	df000515 	stw	fp,20(sp)
   2da84:	df000504 	addi	fp,sp,20
   2da88:	e13ffd15 	stw	r4,-12(fp)
   2da8c:	e17ffe15 	stw	r5,-8(fp)
   2da90:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2da94:	00bff9c4 	movi	r2,-25
   2da98:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2da9c:	e0bffe17 	ldw	r2,-8(fp)
   2daa0:	10da8060 	cmpeqi	r3,r2,27137
   2daa4:	1800031e 	bne	r3,zero,2dab4 <altera_avalon_jtag_uart_ioctl+0x38>
   2daa8:	109a80a0 	cmpeqi	r2,r2,27138
   2daac:	1000181e 	bne	r2,zero,2db10 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2dab0:	00002906 	br	2db58 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2dab4:	e0bffd17 	ldw	r2,-12(fp)
   2dab8:	10c00117 	ldw	r3,4(r2)
   2dabc:	00a00034 	movhi	r2,32768
   2dac0:	10bfffc4 	addi	r2,r2,-1
   2dac4:	18802126 	beq	r3,r2,2db4c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2dac8:	e0bfff17 	ldw	r2,-4(fp)
   2dacc:	10800017 	ldw	r2,0(r2)
   2dad0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2dad4:	e0bffc17 	ldw	r2,-16(fp)
   2dad8:	10800090 	cmplti	r2,r2,2
   2dadc:	1000061e 	bne	r2,zero,2daf8 <altera_avalon_jtag_uart_ioctl+0x7c>
   2dae0:	e0fffc17 	ldw	r3,-16(fp)
   2dae4:	00a00034 	movhi	r2,32768
   2dae8:	10bfffc4 	addi	r2,r2,-1
   2daec:	18800226 	beq	r3,r2,2daf8 <altera_avalon_jtag_uart_ioctl+0x7c>
   2daf0:	e0bffc17 	ldw	r2,-16(fp)
   2daf4:	00000206 	br	2db00 <altera_avalon_jtag_uart_ioctl+0x84>
   2daf8:	00a00034 	movhi	r2,32768
   2dafc:	10bfff84 	addi	r2,r2,-2
   2db00:	e0fffd17 	ldw	r3,-12(fp)
   2db04:	18800115 	stw	r2,4(r3)
      rc = 0;
   2db08:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2db0c:	00000f06 	br	2db4c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2db10:	e0bffd17 	ldw	r2,-12(fp)
   2db14:	10c00117 	ldw	r3,4(r2)
   2db18:	00a00034 	movhi	r2,32768
   2db1c:	10bfffc4 	addi	r2,r2,-1
   2db20:	18800c26 	beq	r3,r2,2db54 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2db24:	e0bffd17 	ldw	r2,-12(fp)
   2db28:	10c00917 	ldw	r3,36(r2)
   2db2c:	e0bffd17 	ldw	r2,-12(fp)
   2db30:	10800117 	ldw	r2,4(r2)
   2db34:	1885803a 	cmpltu	r2,r3,r2
   2db38:	10c03fcc 	andi	r3,r2,255
   2db3c:	e0bfff17 	ldw	r2,-4(fp)
   2db40:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2db44:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2db48:	00000206 	br	2db54 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2db4c:	0001883a 	nop
   2db50:	00000106 	br	2db58 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2db54:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2db58:	e0bffb17 	ldw	r2,-20(fp)
}
   2db5c:	e037883a 	mov	sp,fp
   2db60:	df000017 	ldw	fp,0(sp)
   2db64:	dec00104 	addi	sp,sp,4
   2db68:	f800283a 	ret

0002db6c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2db6c:	defff304 	addi	sp,sp,-52
   2db70:	dfc00c15 	stw	ra,48(sp)
   2db74:	df000b15 	stw	fp,44(sp)
   2db78:	df000b04 	addi	fp,sp,44
   2db7c:	e13ffc15 	stw	r4,-16(fp)
   2db80:	e17ffd15 	stw	r5,-12(fp)
   2db84:	e1bffe15 	stw	r6,-8(fp)
   2db88:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2db8c:	e0bffd17 	ldw	r2,-12(fp)
   2db90:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2db94:	00004706 	br	2dcb4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2db98:	e0bffc17 	ldw	r2,-16(fp)
   2db9c:	10800a17 	ldw	r2,40(r2)
   2dba0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2dba4:	e0bffc17 	ldw	r2,-16(fp)
   2dba8:	10800b17 	ldw	r2,44(r2)
   2dbac:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2dbb0:	e0fff717 	ldw	r3,-36(fp)
   2dbb4:	e0bff817 	ldw	r2,-32(fp)
   2dbb8:	18800536 	bltu	r3,r2,2dbd0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2dbbc:	e0fff717 	ldw	r3,-36(fp)
   2dbc0:	e0bff817 	ldw	r2,-32(fp)
   2dbc4:	1885c83a 	sub	r2,r3,r2
   2dbc8:	e0bff615 	stw	r2,-40(fp)
   2dbcc:	00000406 	br	2dbe0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2dbd0:	00c20004 	movi	r3,2048
   2dbd4:	e0bff817 	ldw	r2,-32(fp)
   2dbd8:	1885c83a 	sub	r2,r3,r2
   2dbdc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2dbe0:	e0bff617 	ldw	r2,-40(fp)
   2dbe4:	10001e26 	beq	r2,zero,2dc60 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2dbe8:	e0fffe17 	ldw	r3,-8(fp)
   2dbec:	e0bff617 	ldw	r2,-40(fp)
   2dbf0:	1880022e 	bgeu	r3,r2,2dbfc <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2dbf4:	e0bffe17 	ldw	r2,-8(fp)
   2dbf8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2dbfc:	e0bffc17 	ldw	r2,-16(fp)
   2dc00:	10c00e04 	addi	r3,r2,56
   2dc04:	e0bff817 	ldw	r2,-32(fp)
   2dc08:	1885883a 	add	r2,r3,r2
   2dc0c:	e1bff617 	ldw	r6,-40(fp)
   2dc10:	100b883a 	mov	r5,r2
   2dc14:	e13ff517 	ldw	r4,-44(fp)
   2dc18:	00257a40 	call	257a4 <memcpy>
      ptr   += n;
   2dc1c:	e0fff517 	ldw	r3,-44(fp)
   2dc20:	e0bff617 	ldw	r2,-40(fp)
   2dc24:	1885883a 	add	r2,r3,r2
   2dc28:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2dc2c:	e0fffe17 	ldw	r3,-8(fp)
   2dc30:	e0bff617 	ldw	r2,-40(fp)
   2dc34:	1885c83a 	sub	r2,r3,r2
   2dc38:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2dc3c:	e0fff817 	ldw	r3,-32(fp)
   2dc40:	e0bff617 	ldw	r2,-40(fp)
   2dc44:	1885883a 	add	r2,r3,r2
   2dc48:	10c1ffcc 	andi	r3,r2,2047
   2dc4c:	e0bffc17 	ldw	r2,-16(fp)
   2dc50:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2dc54:	e0bffe17 	ldw	r2,-8(fp)
   2dc58:	00bfcf16 	blt	zero,r2,2db98 <__alt_data_end+0xfffedb98>
   2dc5c:	00000106 	br	2dc64 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2dc60:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2dc64:	e0fff517 	ldw	r3,-44(fp)
   2dc68:	e0bffd17 	ldw	r2,-12(fp)
   2dc6c:	1880141e 	bne	r3,r2,2dcc0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2dc70:	e0bfff17 	ldw	r2,-4(fp)
   2dc74:	1090000c 	andi	r2,r2,16384
   2dc78:	1000131e 	bne	r2,zero,2dcc8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2dc7c:	0001883a 	nop
   2dc80:	e0bffc17 	ldw	r2,-16(fp)
   2dc84:	10c00a17 	ldw	r3,40(r2)
   2dc88:	e0bff717 	ldw	r2,-36(fp)
   2dc8c:	1880051e 	bne	r3,r2,2dca4 <altera_avalon_jtag_uart_read+0x138>
   2dc90:	e0bffc17 	ldw	r2,-16(fp)
   2dc94:	10c00917 	ldw	r3,36(r2)
   2dc98:	e0bffc17 	ldw	r2,-16(fp)
   2dc9c:	10800117 	ldw	r2,4(r2)
   2dca0:	18bff736 	bltu	r3,r2,2dc80 <__alt_data_end+0xfffedc80>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2dca4:	e0bffc17 	ldw	r2,-16(fp)
   2dca8:	10c00a17 	ldw	r3,40(r2)
   2dcac:	e0bff717 	ldw	r2,-36(fp)
   2dcb0:	18800726 	beq	r3,r2,2dcd0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2dcb4:	e0bffe17 	ldw	r2,-8(fp)
   2dcb8:	00bfb716 	blt	zero,r2,2db98 <__alt_data_end+0xfffedb98>
   2dcbc:	00000506 	br	2dcd4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2dcc0:	0001883a 	nop
   2dcc4:	00000306 	br	2dcd4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2dcc8:	0001883a 	nop
   2dccc:	00000106 	br	2dcd4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2dcd0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2dcd4:	e0fff517 	ldw	r3,-44(fp)
   2dcd8:	e0bffd17 	ldw	r2,-12(fp)
   2dcdc:	18801826 	beq	r3,r2,2dd40 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2dce0:	0005303a 	rdctl	r2,status
   2dce4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2dce8:	e0fffb17 	ldw	r3,-20(fp)
   2dcec:	00bfff84 	movi	r2,-2
   2dcf0:	1884703a 	and	r2,r3,r2
   2dcf4:	1001703a 	wrctl	status,r2
  
  return context;
   2dcf8:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2dcfc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2dd00:	e0bffc17 	ldw	r2,-16(fp)
   2dd04:	10800817 	ldw	r2,32(r2)
   2dd08:	10c00054 	ori	r3,r2,1
   2dd0c:	e0bffc17 	ldw	r2,-16(fp)
   2dd10:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2dd14:	e0bffc17 	ldw	r2,-16(fp)
   2dd18:	10800017 	ldw	r2,0(r2)
   2dd1c:	10800104 	addi	r2,r2,4
   2dd20:	1007883a 	mov	r3,r2
   2dd24:	e0bffc17 	ldw	r2,-16(fp)
   2dd28:	10800817 	ldw	r2,32(r2)
   2dd2c:	18800035 	stwio	r2,0(r3)
   2dd30:	e0bffa17 	ldw	r2,-24(fp)
   2dd34:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2dd38:	e0bff917 	ldw	r2,-28(fp)
   2dd3c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2dd40:	e0fff517 	ldw	r3,-44(fp)
   2dd44:	e0bffd17 	ldw	r2,-12(fp)
   2dd48:	18800426 	beq	r3,r2,2dd5c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2dd4c:	e0fff517 	ldw	r3,-44(fp)
   2dd50:	e0bffd17 	ldw	r2,-12(fp)
   2dd54:	1885c83a 	sub	r2,r3,r2
   2dd58:	00000606 	br	2dd74 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2dd5c:	e0bfff17 	ldw	r2,-4(fp)
   2dd60:	1090000c 	andi	r2,r2,16384
   2dd64:	10000226 	beq	r2,zero,2dd70 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2dd68:	00bffd44 	movi	r2,-11
   2dd6c:	00000106 	br	2dd74 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2dd70:	00bffec4 	movi	r2,-5
}
   2dd74:	e037883a 	mov	sp,fp
   2dd78:	dfc00117 	ldw	ra,4(sp)
   2dd7c:	df000017 	ldw	fp,0(sp)
   2dd80:	dec00204 	addi	sp,sp,8
   2dd84:	f800283a 	ret

0002dd88 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2dd88:	defff304 	addi	sp,sp,-52
   2dd8c:	dfc00c15 	stw	ra,48(sp)
   2dd90:	df000b15 	stw	fp,44(sp)
   2dd94:	df000b04 	addi	fp,sp,44
   2dd98:	e13ffc15 	stw	r4,-16(fp)
   2dd9c:	e17ffd15 	stw	r5,-12(fp)
   2dda0:	e1bffe15 	stw	r6,-8(fp)
   2dda4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2dda8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2ddac:	e0bffd17 	ldw	r2,-12(fp)
   2ddb0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2ddb4:	00003706 	br	2de94 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2ddb8:	e0bffc17 	ldw	r2,-16(fp)
   2ddbc:	10800c17 	ldw	r2,48(r2)
   2ddc0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2ddc4:	e0bffc17 	ldw	r2,-16(fp)
   2ddc8:	10800d17 	ldw	r2,52(r2)
   2ddcc:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2ddd0:	e0fff917 	ldw	r3,-28(fp)
   2ddd4:	e0bff517 	ldw	r2,-44(fp)
   2ddd8:	1880062e 	bgeu	r3,r2,2ddf4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2dddc:	e0fff517 	ldw	r3,-44(fp)
   2dde0:	e0bff917 	ldw	r2,-28(fp)
   2dde4:	1885c83a 	sub	r2,r3,r2
   2dde8:	10bfffc4 	addi	r2,r2,-1
   2ddec:	e0bff615 	stw	r2,-40(fp)
   2ddf0:	00000b06 	br	2de20 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2ddf4:	e0bff517 	ldw	r2,-44(fp)
   2ddf8:	10000526 	beq	r2,zero,2de10 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2ddfc:	00c20004 	movi	r3,2048
   2de00:	e0bff917 	ldw	r2,-28(fp)
   2de04:	1885c83a 	sub	r2,r3,r2
   2de08:	e0bff615 	stw	r2,-40(fp)
   2de0c:	00000406 	br	2de20 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2de10:	00c1ffc4 	movi	r3,2047
   2de14:	e0bff917 	ldw	r2,-28(fp)
   2de18:	1885c83a 	sub	r2,r3,r2
   2de1c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2de20:	e0bff617 	ldw	r2,-40(fp)
   2de24:	10001e26 	beq	r2,zero,2dea0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2de28:	e0fffe17 	ldw	r3,-8(fp)
   2de2c:	e0bff617 	ldw	r2,-40(fp)
   2de30:	1880022e 	bgeu	r3,r2,2de3c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2de34:	e0bffe17 	ldw	r2,-8(fp)
   2de38:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2de3c:	e0bffc17 	ldw	r2,-16(fp)
   2de40:	10c20e04 	addi	r3,r2,2104
   2de44:	e0bff917 	ldw	r2,-28(fp)
   2de48:	1885883a 	add	r2,r3,r2
   2de4c:	e1bff617 	ldw	r6,-40(fp)
   2de50:	e17ffd17 	ldw	r5,-12(fp)
   2de54:	1009883a 	mov	r4,r2
   2de58:	00257a40 	call	257a4 <memcpy>
      ptr   += n;
   2de5c:	e0fffd17 	ldw	r3,-12(fp)
   2de60:	e0bff617 	ldw	r2,-40(fp)
   2de64:	1885883a 	add	r2,r3,r2
   2de68:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2de6c:	e0fffe17 	ldw	r3,-8(fp)
   2de70:	e0bff617 	ldw	r2,-40(fp)
   2de74:	1885c83a 	sub	r2,r3,r2
   2de78:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2de7c:	e0fff917 	ldw	r3,-28(fp)
   2de80:	e0bff617 	ldw	r2,-40(fp)
   2de84:	1885883a 	add	r2,r3,r2
   2de88:	10c1ffcc 	andi	r3,r2,2047
   2de8c:	e0bffc17 	ldw	r2,-16(fp)
   2de90:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2de94:	e0bffe17 	ldw	r2,-8(fp)
   2de98:	00bfc716 	blt	zero,r2,2ddb8 <__alt_data_end+0xfffeddb8>
   2de9c:	00000106 	br	2dea4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2dea0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2dea4:	0005303a 	rdctl	r2,status
   2dea8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2deac:	e0fffb17 	ldw	r3,-20(fp)
   2deb0:	00bfff84 	movi	r2,-2
   2deb4:	1884703a 	and	r2,r3,r2
   2deb8:	1001703a 	wrctl	status,r2
  
  return context;
   2debc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2dec0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2dec4:	e0bffc17 	ldw	r2,-16(fp)
   2dec8:	10800817 	ldw	r2,32(r2)
   2decc:	10c00094 	ori	r3,r2,2
   2ded0:	e0bffc17 	ldw	r2,-16(fp)
   2ded4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2ded8:	e0bffc17 	ldw	r2,-16(fp)
   2dedc:	10800017 	ldw	r2,0(r2)
   2dee0:	10800104 	addi	r2,r2,4
   2dee4:	1007883a 	mov	r3,r2
   2dee8:	e0bffc17 	ldw	r2,-16(fp)
   2deec:	10800817 	ldw	r2,32(r2)
   2def0:	18800035 	stwio	r2,0(r3)
   2def4:	e0bffa17 	ldw	r2,-24(fp)
   2def8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2defc:	e0bff817 	ldw	r2,-32(fp)
   2df00:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2df04:	e0bffe17 	ldw	r2,-8(fp)
   2df08:	0080100e 	bge	zero,r2,2df4c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2df0c:	e0bfff17 	ldw	r2,-4(fp)
   2df10:	1090000c 	andi	r2,r2,16384
   2df14:	1000101e 	bne	r2,zero,2df58 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2df18:	0001883a 	nop
   2df1c:	e0bffc17 	ldw	r2,-16(fp)
   2df20:	10c00d17 	ldw	r3,52(r2)
   2df24:	e0bff517 	ldw	r2,-44(fp)
   2df28:	1880051e 	bne	r3,r2,2df40 <altera_avalon_jtag_uart_write+0x1b8>
   2df2c:	e0bffc17 	ldw	r2,-16(fp)
   2df30:	10c00917 	ldw	r3,36(r2)
   2df34:	e0bffc17 	ldw	r2,-16(fp)
   2df38:	10800117 	ldw	r2,4(r2)
   2df3c:	18bff736 	bltu	r3,r2,2df1c <__alt_data_end+0xfffedf1c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2df40:	e0bffc17 	ldw	r2,-16(fp)
   2df44:	10800917 	ldw	r2,36(r2)
   2df48:	1000051e 	bne	r2,zero,2df60 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2df4c:	e0bffe17 	ldw	r2,-8(fp)
   2df50:	00bfd016 	blt	zero,r2,2de94 <__alt_data_end+0xfffede94>
   2df54:	00000306 	br	2df64 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2df58:	0001883a 	nop
   2df5c:	00000106 	br	2df64 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2df60:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2df64:	e0fffd17 	ldw	r3,-12(fp)
   2df68:	e0bff717 	ldw	r2,-36(fp)
   2df6c:	18800426 	beq	r3,r2,2df80 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2df70:	e0fffd17 	ldw	r3,-12(fp)
   2df74:	e0bff717 	ldw	r2,-36(fp)
   2df78:	1885c83a 	sub	r2,r3,r2
   2df7c:	00000606 	br	2df98 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2df80:	e0bfff17 	ldw	r2,-4(fp)
   2df84:	1090000c 	andi	r2,r2,16384
   2df88:	10000226 	beq	r2,zero,2df94 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2df8c:	00bffd44 	movi	r2,-11
   2df90:	00000106 	br	2df98 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2df94:	00bffec4 	movi	r2,-5
}
   2df98:	e037883a 	mov	sp,fp
   2df9c:	dfc00117 	ldw	ra,4(sp)
   2dfa0:	df000017 	ldw	fp,0(sp)
   2dfa4:	dec00204 	addi	sp,sp,8
   2dfa8:	f800283a 	ret

0002dfac <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2dfac:	defff504 	addi	sp,sp,-44
   2dfb0:	df000a15 	stw	fp,40(sp)
   2dfb4:	df000a04 	addi	fp,sp,40
   2dfb8:	e13ffc15 	stw	r4,-16(fp)
   2dfbc:	e17ffd15 	stw	r5,-12(fp)
   2dfc0:	e1bffe15 	stw	r6,-8(fp)
   2dfc4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2dfc8:	e03ff615 	stw	zero,-40(fp)
   2dfcc:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
   2dfd0:	10003c26 	beq	r2,zero,2e0c4 <alt_alarm_start+0x118>
  {
    if (alarm)
   2dfd4:	e0bffc17 	ldw	r2,-16(fp)
   2dfd8:	10003826 	beq	r2,zero,2e0bc <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2dfdc:	e0bffc17 	ldw	r2,-16(fp)
   2dfe0:	e0fffe17 	ldw	r3,-8(fp)
   2dfe4:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2dfe8:	e0bffc17 	ldw	r2,-16(fp)
   2dfec:	e0ffff17 	ldw	r3,-4(fp)
   2dff0:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2dff4:	0005303a 	rdctl	r2,status
   2dff8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2dffc:	e0fff917 	ldw	r3,-28(fp)
   2e000:	00bfff84 	movi	r2,-2
   2e004:	1884703a 	and	r2,r3,r2
   2e008:	1001703a 	wrctl	status,r2
  
  return context;
   2e00c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2e010:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2e014:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
   2e018:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2e01c:	e0fffd17 	ldw	r3,-12(fp)
   2e020:	e0bff617 	ldw	r2,-40(fp)
   2e024:	1885883a 	add	r2,r3,r2
   2e028:	10c00044 	addi	r3,r2,1
   2e02c:	e0bffc17 	ldw	r2,-16(fp)
   2e030:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2e034:	e0bffc17 	ldw	r2,-16(fp)
   2e038:	10c00217 	ldw	r3,8(r2)
   2e03c:	e0bff617 	ldw	r2,-40(fp)
   2e040:	1880042e 	bgeu	r3,r2,2e054 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2e044:	e0bffc17 	ldw	r2,-16(fp)
   2e048:	00c00044 	movi	r3,1
   2e04c:	10c00405 	stb	r3,16(r2)
   2e050:	00000206 	br	2e05c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2e054:	e0bffc17 	ldw	r2,-16(fp)
   2e058:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2e05c:	e0bffc17 	ldw	r2,-16(fp)
   2e060:	d0e00e04 	addi	r3,gp,-32712
   2e064:	e0fffa15 	stw	r3,-24(fp)
   2e068:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e06c:	e0bffb17 	ldw	r2,-20(fp)
   2e070:	e0fffa17 	ldw	r3,-24(fp)
   2e074:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e078:	e0bffa17 	ldw	r2,-24(fp)
   2e07c:	10c00017 	ldw	r3,0(r2)
   2e080:	e0bffb17 	ldw	r2,-20(fp)
   2e084:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e088:	e0bffa17 	ldw	r2,-24(fp)
   2e08c:	10800017 	ldw	r2,0(r2)
   2e090:	e0fffb17 	ldw	r3,-20(fp)
   2e094:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e098:	e0bffa17 	ldw	r2,-24(fp)
   2e09c:	e0fffb17 	ldw	r3,-20(fp)
   2e0a0:	10c00015 	stw	r3,0(r2)
   2e0a4:	e0bff817 	ldw	r2,-32(fp)
   2e0a8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e0ac:	e0bff717 	ldw	r2,-36(fp)
   2e0b0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2e0b4:	0005883a 	mov	r2,zero
   2e0b8:	00000306 	br	2e0c8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2e0bc:	00bffa84 	movi	r2,-22
   2e0c0:	00000106 	br	2e0c8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2e0c4:	00bfde84 	movi	r2,-134
  }
}
   2e0c8:	e037883a 	mov	sp,fp
   2e0cc:	df000017 	ldw	fp,0(sp)
   2e0d0:	dec00104 	addi	sp,sp,4
   2e0d4:	f800283a 	ret

0002e0d8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2e0d8:	defffe04 	addi	sp,sp,-8
   2e0dc:	df000115 	stw	fp,4(sp)
   2e0e0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e0e4:	e03fff15 	stw	zero,-4(fp)
   2e0e8:	00000506 	br	2e100 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2e0ec:	e0bfff17 	ldw	r2,-4(fp)
   2e0f0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e0f4:	e0bfff17 	ldw	r2,-4(fp)
   2e0f8:	10800804 	addi	r2,r2,32
   2e0fc:	e0bfff15 	stw	r2,-4(fp)
   2e100:	e0bfff17 	ldw	r2,-4(fp)
   2e104:	10820030 	cmpltui	r2,r2,2048
   2e108:	103ff81e 	bne	r2,zero,2e0ec <__alt_data_end+0xfffee0ec>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2e10c:	0001883a 	nop
   2e110:	e037883a 	mov	sp,fp
   2e114:	df000017 	ldw	fp,0(sp)
   2e118:	dec00104 	addi	sp,sp,4
   2e11c:	f800283a 	ret

0002e120 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e120:	defffe04 	addi	sp,sp,-8
   2e124:	dfc00115 	stw	ra,4(sp)
   2e128:	df000015 	stw	fp,0(sp)
   2e12c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e130:	d0a00b17 	ldw	r2,-32724(gp)
   2e134:	10000326 	beq	r2,zero,2e144 <alt_get_errno+0x24>
   2e138:	d0a00b17 	ldw	r2,-32724(gp)
   2e13c:	103ee83a 	callr	r2
   2e140:	00000106 	br	2e148 <alt_get_errno+0x28>
   2e144:	d0a6d104 	addi	r2,gp,-25788
}
   2e148:	e037883a 	mov	sp,fp
   2e14c:	dfc00117 	ldw	ra,4(sp)
   2e150:	df000017 	ldw	fp,0(sp)
   2e154:	dec00204 	addi	sp,sp,8
   2e158:	f800283a 	ret

0002e15c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2e15c:	defffa04 	addi	sp,sp,-24
   2e160:	dfc00515 	stw	ra,20(sp)
   2e164:	df000415 	stw	fp,16(sp)
   2e168:	df000404 	addi	fp,sp,16
   2e16c:	e13ffe15 	stw	r4,-8(fp)
   2e170:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2e174:	e0bffe17 	ldw	r2,-8(fp)
   2e178:	10000326 	beq	r2,zero,2e188 <alt_dev_llist_insert+0x2c>
   2e17c:	e0bffe17 	ldw	r2,-8(fp)
   2e180:	10800217 	ldw	r2,8(r2)
   2e184:	1000061e 	bne	r2,zero,2e1a0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2e188:	002e1200 	call	2e120 <alt_get_errno>
   2e18c:	1007883a 	mov	r3,r2
   2e190:	00800584 	movi	r2,22
   2e194:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2e198:	00bffa84 	movi	r2,-22
   2e19c:	00001306 	br	2e1ec <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2e1a0:	e0bffe17 	ldw	r2,-8(fp)
   2e1a4:	e0ffff17 	ldw	r3,-4(fp)
   2e1a8:	e0fffc15 	stw	r3,-16(fp)
   2e1ac:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e1b0:	e0bffd17 	ldw	r2,-12(fp)
   2e1b4:	e0fffc17 	ldw	r3,-16(fp)
   2e1b8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e1bc:	e0bffc17 	ldw	r2,-16(fp)
   2e1c0:	10c00017 	ldw	r3,0(r2)
   2e1c4:	e0bffd17 	ldw	r2,-12(fp)
   2e1c8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e1cc:	e0bffc17 	ldw	r2,-16(fp)
   2e1d0:	10800017 	ldw	r2,0(r2)
   2e1d4:	e0fffd17 	ldw	r3,-12(fp)
   2e1d8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e1dc:	e0bffc17 	ldw	r2,-16(fp)
   2e1e0:	e0fffd17 	ldw	r3,-12(fp)
   2e1e4:	10c00015 	stw	r3,0(r2)

  return 0;  
   2e1e8:	0005883a 	mov	r2,zero
}
   2e1ec:	e037883a 	mov	sp,fp
   2e1f0:	dfc00117 	ldw	ra,4(sp)
   2e1f4:	df000017 	ldw	fp,0(sp)
   2e1f8:	dec00204 	addi	sp,sp,8
   2e1fc:	f800283a 	ret

0002e200 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2e200:	defffd04 	addi	sp,sp,-12
   2e204:	dfc00215 	stw	ra,8(sp)
   2e208:	df000115 	stw	fp,4(sp)
   2e20c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e210:	008000f4 	movhi	r2,3
   2e214:	10bc7a04 	addi	r2,r2,-3608
   2e218:	e0bfff15 	stw	r2,-4(fp)
   2e21c:	00000606 	br	2e238 <_do_ctors+0x38>
        (*ctor) (); 
   2e220:	e0bfff17 	ldw	r2,-4(fp)
   2e224:	10800017 	ldw	r2,0(r2)
   2e228:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e22c:	e0bfff17 	ldw	r2,-4(fp)
   2e230:	10bfff04 	addi	r2,r2,-4
   2e234:	e0bfff15 	stw	r2,-4(fp)
   2e238:	e0ffff17 	ldw	r3,-4(fp)
   2e23c:	008000f4 	movhi	r2,3
   2e240:	10bc7b04 	addi	r2,r2,-3604
   2e244:	18bff62e 	bgeu	r3,r2,2e220 <__alt_data_end+0xfffee220>
        (*ctor) (); 
}
   2e248:	0001883a 	nop
   2e24c:	e037883a 	mov	sp,fp
   2e250:	dfc00117 	ldw	ra,4(sp)
   2e254:	df000017 	ldw	fp,0(sp)
   2e258:	dec00204 	addi	sp,sp,8
   2e25c:	f800283a 	ret

0002e260 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2e260:	defffd04 	addi	sp,sp,-12
   2e264:	dfc00215 	stw	ra,8(sp)
   2e268:	df000115 	stw	fp,4(sp)
   2e26c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e270:	008000f4 	movhi	r2,3
   2e274:	10bc7a04 	addi	r2,r2,-3608
   2e278:	e0bfff15 	stw	r2,-4(fp)
   2e27c:	00000606 	br	2e298 <_do_dtors+0x38>
        (*dtor) (); 
   2e280:	e0bfff17 	ldw	r2,-4(fp)
   2e284:	10800017 	ldw	r2,0(r2)
   2e288:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e28c:	e0bfff17 	ldw	r2,-4(fp)
   2e290:	10bfff04 	addi	r2,r2,-4
   2e294:	e0bfff15 	stw	r2,-4(fp)
   2e298:	e0ffff17 	ldw	r3,-4(fp)
   2e29c:	008000f4 	movhi	r2,3
   2e2a0:	10bc7b04 	addi	r2,r2,-3604
   2e2a4:	18bff62e 	bgeu	r3,r2,2e280 <__alt_data_end+0xfffee280>
        (*dtor) (); 
}
   2e2a8:	0001883a 	nop
   2e2ac:	e037883a 	mov	sp,fp
   2e2b0:	dfc00117 	ldw	ra,4(sp)
   2e2b4:	df000017 	ldw	fp,0(sp)
   2e2b8:	dec00204 	addi	sp,sp,8
   2e2bc:	f800283a 	ret

0002e2c0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2e2c0:	defffe04 	addi	sp,sp,-8
   2e2c4:	dfc00115 	stw	ra,4(sp)
   2e2c8:	df000015 	stw	fp,0(sp)
   2e2cc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2e2d0:	01440004 	movi	r5,4096
   2e2d4:	0009883a 	mov	r4,zero
   2e2d8:	002ed2c0 	call	2ed2c <alt_icache_flush>
#endif
}
   2e2dc:	0001883a 	nop
   2e2e0:	e037883a 	mov	sp,fp
   2e2e4:	dfc00117 	ldw	ra,4(sp)
   2e2e8:	df000017 	ldw	fp,0(sp)
   2e2ec:	dec00204 	addi	sp,sp,8
   2e2f0:	f800283a 	ret

0002e2f4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e2f4:	defff904 	addi	sp,sp,-28
   2e2f8:	dfc00615 	stw	ra,24(sp)
   2e2fc:	df000515 	stw	fp,20(sp)
   2e300:	df000504 	addi	fp,sp,20
   2e304:	e13ffc15 	stw	r4,-16(fp)
   2e308:	e17ffd15 	stw	r5,-12(fp)
   2e30c:	e1bffe15 	stw	r6,-8(fp)
   2e310:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2e314:	e0800217 	ldw	r2,8(fp)
   2e318:	d8800015 	stw	r2,0(sp)
   2e31c:	e1ffff17 	ldw	r7,-4(fp)
   2e320:	e1bffe17 	ldw	r6,-8(fp)
   2e324:	e17ffd17 	ldw	r5,-12(fp)
   2e328:	e13ffc17 	ldw	r4,-16(fp)
   2e32c:	002e4a40 	call	2e4a4 <alt_iic_isr_register>
}  
   2e330:	e037883a 	mov	sp,fp
   2e334:	dfc00117 	ldw	ra,4(sp)
   2e338:	df000017 	ldw	fp,0(sp)
   2e33c:	dec00204 	addi	sp,sp,8
   2e340:	f800283a 	ret

0002e344 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2e344:	defff904 	addi	sp,sp,-28
   2e348:	df000615 	stw	fp,24(sp)
   2e34c:	df000604 	addi	fp,sp,24
   2e350:	e13ffe15 	stw	r4,-8(fp)
   2e354:	e17fff15 	stw	r5,-4(fp)
   2e358:	e0bfff17 	ldw	r2,-4(fp)
   2e35c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e360:	0005303a 	rdctl	r2,status
   2e364:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e368:	e0fffb17 	ldw	r3,-20(fp)
   2e36c:	00bfff84 	movi	r2,-2
   2e370:	1884703a 	and	r2,r3,r2
   2e374:	1001703a 	wrctl	status,r2
  
  return context;
   2e378:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e37c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   2e380:	00c00044 	movi	r3,1
   2e384:	e0bffa17 	ldw	r2,-24(fp)
   2e388:	1884983a 	sll	r2,r3,r2
   2e38c:	1007883a 	mov	r3,r2
   2e390:	d0a6d517 	ldw	r2,-25772(gp)
   2e394:	1884b03a 	or	r2,r3,r2
   2e398:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e39c:	d0a6d517 	ldw	r2,-25772(gp)
   2e3a0:	100170fa 	wrctl	ienable,r2
   2e3a4:	e0bffc17 	ldw	r2,-16(fp)
   2e3a8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e3ac:	e0bffd17 	ldw	r2,-12(fp)
   2e3b0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e3b4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   2e3b8:	0001883a 	nop
}
   2e3bc:	e037883a 	mov	sp,fp
   2e3c0:	df000017 	ldw	fp,0(sp)
   2e3c4:	dec00104 	addi	sp,sp,4
   2e3c8:	f800283a 	ret

0002e3cc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2e3cc:	defff904 	addi	sp,sp,-28
   2e3d0:	df000615 	stw	fp,24(sp)
   2e3d4:	df000604 	addi	fp,sp,24
   2e3d8:	e13ffe15 	stw	r4,-8(fp)
   2e3dc:	e17fff15 	stw	r5,-4(fp)
   2e3e0:	e0bfff17 	ldw	r2,-4(fp)
   2e3e4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e3e8:	0005303a 	rdctl	r2,status
   2e3ec:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e3f0:	e0fffb17 	ldw	r3,-20(fp)
   2e3f4:	00bfff84 	movi	r2,-2
   2e3f8:	1884703a 	and	r2,r3,r2
   2e3fc:	1001703a 	wrctl	status,r2
  
  return context;
   2e400:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e404:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   2e408:	00c00044 	movi	r3,1
   2e40c:	e0bffa17 	ldw	r2,-24(fp)
   2e410:	1884983a 	sll	r2,r3,r2
   2e414:	0084303a 	nor	r2,zero,r2
   2e418:	1007883a 	mov	r3,r2
   2e41c:	d0a6d517 	ldw	r2,-25772(gp)
   2e420:	1884703a 	and	r2,r3,r2
   2e424:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e428:	d0a6d517 	ldw	r2,-25772(gp)
   2e42c:	100170fa 	wrctl	ienable,r2
   2e430:	e0bffc17 	ldw	r2,-16(fp)
   2e434:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e438:	e0bffd17 	ldw	r2,-12(fp)
   2e43c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e440:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   2e444:	0001883a 	nop
}
   2e448:	e037883a 	mov	sp,fp
   2e44c:	df000017 	ldw	fp,0(sp)
   2e450:	dec00104 	addi	sp,sp,4
   2e454:	f800283a 	ret

0002e458 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2e458:	defffc04 	addi	sp,sp,-16
   2e45c:	df000315 	stw	fp,12(sp)
   2e460:	df000304 	addi	fp,sp,12
   2e464:	e13ffe15 	stw	r4,-8(fp)
   2e468:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2e46c:	000530fa 	rdctl	r2,ienable
   2e470:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2e474:	00c00044 	movi	r3,1
   2e478:	e0bfff17 	ldw	r2,-4(fp)
   2e47c:	1884983a 	sll	r2,r3,r2
   2e480:	1007883a 	mov	r3,r2
   2e484:	e0bffd17 	ldw	r2,-12(fp)
   2e488:	1884703a 	and	r2,r3,r2
   2e48c:	1004c03a 	cmpne	r2,r2,zero
   2e490:	10803fcc 	andi	r2,r2,255
}
   2e494:	e037883a 	mov	sp,fp
   2e498:	df000017 	ldw	fp,0(sp)
   2e49c:	dec00104 	addi	sp,sp,4
   2e4a0:	f800283a 	ret

0002e4a4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e4a4:	defff504 	addi	sp,sp,-44
   2e4a8:	dfc00a15 	stw	ra,40(sp)
   2e4ac:	df000915 	stw	fp,36(sp)
   2e4b0:	df000904 	addi	fp,sp,36
   2e4b4:	e13ffc15 	stw	r4,-16(fp)
   2e4b8:	e17ffd15 	stw	r5,-12(fp)
   2e4bc:	e1bffe15 	stw	r6,-8(fp)
   2e4c0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   2e4c4:	00bffa84 	movi	r2,-22
   2e4c8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2e4cc:	e0bffd17 	ldw	r2,-12(fp)
   2e4d0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2e4d4:	e0bff817 	ldw	r2,-32(fp)
   2e4d8:	10800808 	cmpgei	r2,r2,32
   2e4dc:	1000271e 	bne	r2,zero,2e57c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e4e0:	0005303a 	rdctl	r2,status
   2e4e4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e4e8:	e0fffb17 	ldw	r3,-20(fp)
   2e4ec:	00bfff84 	movi	r2,-2
   2e4f0:	1884703a 	and	r2,r3,r2
   2e4f4:	1001703a 	wrctl	status,r2
  
  return context;
   2e4f8:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2e4fc:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   2e500:	008000f4 	movhi	r2,3
   2e504:	108aca04 	addi	r2,r2,11048
   2e508:	e0fff817 	ldw	r3,-32(fp)
   2e50c:	180690fa 	slli	r3,r3,3
   2e510:	10c5883a 	add	r2,r2,r3
   2e514:	e0fffe17 	ldw	r3,-8(fp)
   2e518:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   2e51c:	008000f4 	movhi	r2,3
   2e520:	108aca04 	addi	r2,r2,11048
   2e524:	e0fff817 	ldw	r3,-32(fp)
   2e528:	180690fa 	slli	r3,r3,3
   2e52c:	10c5883a 	add	r2,r2,r3
   2e530:	10800104 	addi	r2,r2,4
   2e534:	e0ffff17 	ldw	r3,-4(fp)
   2e538:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2e53c:	e0bffe17 	ldw	r2,-8(fp)
   2e540:	10000526 	beq	r2,zero,2e558 <alt_iic_isr_register+0xb4>
   2e544:	e0bff817 	ldw	r2,-32(fp)
   2e548:	100b883a 	mov	r5,r2
   2e54c:	e13ffc17 	ldw	r4,-16(fp)
   2e550:	002e3440 	call	2e344 <alt_ic_irq_enable>
   2e554:	00000406 	br	2e568 <alt_iic_isr_register+0xc4>
   2e558:	e0bff817 	ldw	r2,-32(fp)
   2e55c:	100b883a 	mov	r5,r2
   2e560:	e13ffc17 	ldw	r4,-16(fp)
   2e564:	002e3cc0 	call	2e3cc <alt_ic_irq_disable>
   2e568:	e0bff715 	stw	r2,-36(fp)
   2e56c:	e0bffa17 	ldw	r2,-24(fp)
   2e570:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e574:	e0bff917 	ldw	r2,-28(fp)
   2e578:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2e57c:	e0bff717 	ldw	r2,-36(fp)
}
   2e580:	e037883a 	mov	sp,fp
   2e584:	dfc00117 	ldw	ra,4(sp)
   2e588:	df000017 	ldw	fp,0(sp)
   2e58c:	dec00204 	addi	sp,sp,8
   2e590:	f800283a 	ret

0002e594 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2e594:	defff904 	addi	sp,sp,-28
   2e598:	dfc00615 	stw	ra,24(sp)
   2e59c:	df000515 	stw	fp,20(sp)
   2e5a0:	df000504 	addi	fp,sp,20
   2e5a4:	e13ffc15 	stw	r4,-16(fp)
   2e5a8:	e17ffd15 	stw	r5,-12(fp)
   2e5ac:	e1bffe15 	stw	r6,-8(fp)
   2e5b0:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2e5b4:	e1bfff17 	ldw	r6,-4(fp)
   2e5b8:	e17ffe17 	ldw	r5,-8(fp)
   2e5bc:	e13ffd17 	ldw	r4,-12(fp)
   2e5c0:	002e7d40 	call	2e7d4 <open>
   2e5c4:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2e5c8:	e0bffb17 	ldw	r2,-20(fp)
   2e5cc:	10001c16 	blt	r2,zero,2e640 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   2e5d0:	008000f4 	movhi	r2,3
   2e5d4:	10bf6f04 	addi	r2,r2,-580
   2e5d8:	e0fffb17 	ldw	r3,-20(fp)
   2e5dc:	18c00324 	muli	r3,r3,12
   2e5e0:	10c5883a 	add	r2,r2,r3
   2e5e4:	10c00017 	ldw	r3,0(r2)
   2e5e8:	e0bffc17 	ldw	r2,-16(fp)
   2e5ec:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2e5f0:	008000f4 	movhi	r2,3
   2e5f4:	10bf6f04 	addi	r2,r2,-580
   2e5f8:	e0fffb17 	ldw	r3,-20(fp)
   2e5fc:	18c00324 	muli	r3,r3,12
   2e600:	10c5883a 	add	r2,r2,r3
   2e604:	10800104 	addi	r2,r2,4
   2e608:	10c00017 	ldw	r3,0(r2)
   2e60c:	e0bffc17 	ldw	r2,-16(fp)
   2e610:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2e614:	008000f4 	movhi	r2,3
   2e618:	10bf6f04 	addi	r2,r2,-580
   2e61c:	e0fffb17 	ldw	r3,-20(fp)
   2e620:	18c00324 	muli	r3,r3,12
   2e624:	10c5883a 	add	r2,r2,r3
   2e628:	10800204 	addi	r2,r2,8
   2e62c:	10c00017 	ldw	r3,0(r2)
   2e630:	e0bffc17 	ldw	r2,-16(fp)
   2e634:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2e638:	e13ffb17 	ldw	r4,-20(fp)
   2e63c:	002d2480 	call	2d248 <alt_release_fd>
  }
} 
   2e640:	0001883a 	nop
   2e644:	e037883a 	mov	sp,fp
   2e648:	dfc00117 	ldw	ra,4(sp)
   2e64c:	df000017 	ldw	fp,0(sp)
   2e650:	dec00204 	addi	sp,sp,8
   2e654:	f800283a 	ret

0002e658 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2e658:	defffb04 	addi	sp,sp,-20
   2e65c:	dfc00415 	stw	ra,16(sp)
   2e660:	df000315 	stw	fp,12(sp)
   2e664:	df000304 	addi	fp,sp,12
   2e668:	e13ffd15 	stw	r4,-12(fp)
   2e66c:	e17ffe15 	stw	r5,-8(fp)
   2e670:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2e674:	01c07fc4 	movi	r7,511
   2e678:	01800044 	movi	r6,1
   2e67c:	e17ffd17 	ldw	r5,-12(fp)
   2e680:	010000f4 	movhi	r4,3
   2e684:	213f7204 	addi	r4,r4,-568
   2e688:	002e5940 	call	2e594 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2e68c:	01c07fc4 	movi	r7,511
   2e690:	000d883a 	mov	r6,zero
   2e694:	e17ffe17 	ldw	r5,-8(fp)
   2e698:	010000f4 	movhi	r4,3
   2e69c:	213f6f04 	addi	r4,r4,-580
   2e6a0:	002e5940 	call	2e594 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2e6a4:	01c07fc4 	movi	r7,511
   2e6a8:	01800044 	movi	r6,1
   2e6ac:	e17fff17 	ldw	r5,-4(fp)
   2e6b0:	010000f4 	movhi	r4,3
   2e6b4:	213f7504 	addi	r4,r4,-556
   2e6b8:	002e5940 	call	2e594 <alt_open_fd>
}  
   2e6bc:	0001883a 	nop
   2e6c0:	e037883a 	mov	sp,fp
   2e6c4:	dfc00117 	ldw	ra,4(sp)
   2e6c8:	df000017 	ldw	fp,0(sp)
   2e6cc:	dec00204 	addi	sp,sp,8
   2e6d0:	f800283a 	ret

0002e6d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e6d4:	defffe04 	addi	sp,sp,-8
   2e6d8:	dfc00115 	stw	ra,4(sp)
   2e6dc:	df000015 	stw	fp,0(sp)
   2e6e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e6e4:	d0a00b17 	ldw	r2,-32724(gp)
   2e6e8:	10000326 	beq	r2,zero,2e6f8 <alt_get_errno+0x24>
   2e6ec:	d0a00b17 	ldw	r2,-32724(gp)
   2e6f0:	103ee83a 	callr	r2
   2e6f4:	00000106 	br	2e6fc <alt_get_errno+0x28>
   2e6f8:	d0a6d104 	addi	r2,gp,-25788
}
   2e6fc:	e037883a 	mov	sp,fp
   2e700:	dfc00117 	ldw	ra,4(sp)
   2e704:	df000017 	ldw	fp,0(sp)
   2e708:	dec00204 	addi	sp,sp,8
   2e70c:	f800283a 	ret

0002e710 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2e710:	defffd04 	addi	sp,sp,-12
   2e714:	df000215 	stw	fp,8(sp)
   2e718:	df000204 	addi	fp,sp,8
   2e71c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2e720:	e0bfff17 	ldw	r2,-4(fp)
   2e724:	10800217 	ldw	r2,8(r2)
   2e728:	10d00034 	orhi	r3,r2,16384
   2e72c:	e0bfff17 	ldw	r2,-4(fp)
   2e730:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e734:	e03ffe15 	stw	zero,-8(fp)
   2e738:	00001d06 	br	2e7b0 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e73c:	008000f4 	movhi	r2,3
   2e740:	10bf6f04 	addi	r2,r2,-580
   2e744:	e0fffe17 	ldw	r3,-8(fp)
   2e748:	18c00324 	muli	r3,r3,12
   2e74c:	10c5883a 	add	r2,r2,r3
   2e750:	10c00017 	ldw	r3,0(r2)
   2e754:	e0bfff17 	ldw	r2,-4(fp)
   2e758:	10800017 	ldw	r2,0(r2)
   2e75c:	1880111e 	bne	r3,r2,2e7a4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e760:	008000f4 	movhi	r2,3
   2e764:	10bf6f04 	addi	r2,r2,-580
   2e768:	e0fffe17 	ldw	r3,-8(fp)
   2e76c:	18c00324 	muli	r3,r3,12
   2e770:	10c5883a 	add	r2,r2,r3
   2e774:	10800204 	addi	r2,r2,8
   2e778:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2e77c:	1000090e 	bge	r2,zero,2e7a4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2e780:	e0bffe17 	ldw	r2,-8(fp)
   2e784:	10c00324 	muli	r3,r2,12
   2e788:	008000f4 	movhi	r2,3
   2e78c:	10bf6f04 	addi	r2,r2,-580
   2e790:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2e794:	e0bfff17 	ldw	r2,-4(fp)
   2e798:	18800226 	beq	r3,r2,2e7a4 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2e79c:	00bffcc4 	movi	r2,-13
   2e7a0:	00000806 	br	2e7c4 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2e7a4:	e0bffe17 	ldw	r2,-8(fp)
   2e7a8:	10800044 	addi	r2,r2,1
   2e7ac:	e0bffe15 	stw	r2,-8(fp)
   2e7b0:	d0a00a17 	ldw	r2,-32728(gp)
   2e7b4:	1007883a 	mov	r3,r2
   2e7b8:	e0bffe17 	ldw	r2,-8(fp)
   2e7bc:	18bfdf2e 	bgeu	r3,r2,2e73c <__alt_data_end+0xfffee73c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2e7c0:	0005883a 	mov	r2,zero
}
   2e7c4:	e037883a 	mov	sp,fp
   2e7c8:	df000017 	ldw	fp,0(sp)
   2e7cc:	dec00104 	addi	sp,sp,4
   2e7d0:	f800283a 	ret

0002e7d4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2e7d4:	defff604 	addi	sp,sp,-40
   2e7d8:	dfc00915 	stw	ra,36(sp)
   2e7dc:	df000815 	stw	fp,32(sp)
   2e7e0:	df000804 	addi	fp,sp,32
   2e7e4:	e13ffd15 	stw	r4,-12(fp)
   2e7e8:	e17ffe15 	stw	r5,-8(fp)
   2e7ec:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2e7f0:	00bfffc4 	movi	r2,-1
   2e7f4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2e7f8:	00bffb44 	movi	r2,-19
   2e7fc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2e800:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2e804:	d1600804 	addi	r5,gp,-32736
   2e808:	e13ffd17 	ldw	r4,-12(fp)
   2e80c:	002eaf00 	call	2eaf0 <alt_find_dev>
   2e810:	e0bff815 	stw	r2,-32(fp)
   2e814:	e0bff817 	ldw	r2,-32(fp)
   2e818:	1000051e 	bne	r2,zero,2e830 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2e81c:	e13ffd17 	ldw	r4,-12(fp)
   2e820:	002eb800 	call	2eb80 <alt_find_file>
   2e824:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2e828:	00800044 	movi	r2,1
   2e82c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2e830:	e0bff817 	ldw	r2,-32(fp)
   2e834:	10002926 	beq	r2,zero,2e8dc <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2e838:	e13ff817 	ldw	r4,-32(fp)
   2e83c:	002ec880 	call	2ec88 <alt_get_fd>
   2e840:	e0bff915 	stw	r2,-28(fp)
   2e844:	e0bff917 	ldw	r2,-28(fp)
   2e848:	1000030e 	bge	r2,zero,2e858 <open+0x84>
    {
      status = index;
   2e84c:	e0bff917 	ldw	r2,-28(fp)
   2e850:	e0bffa15 	stw	r2,-24(fp)
   2e854:	00002306 	br	2e8e4 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2e858:	e0bff917 	ldw	r2,-28(fp)
   2e85c:	10c00324 	muli	r3,r2,12
   2e860:	008000f4 	movhi	r2,3
   2e864:	10bf6f04 	addi	r2,r2,-580
   2e868:	1885883a 	add	r2,r3,r2
   2e86c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2e870:	e0fffe17 	ldw	r3,-8(fp)
   2e874:	00900034 	movhi	r2,16384
   2e878:	10bfffc4 	addi	r2,r2,-1
   2e87c:	1886703a 	and	r3,r3,r2
   2e880:	e0bffc17 	ldw	r2,-16(fp)
   2e884:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2e888:	e0bffb17 	ldw	r2,-20(fp)
   2e88c:	1000051e 	bne	r2,zero,2e8a4 <open+0xd0>
   2e890:	e13ffc17 	ldw	r4,-16(fp)
   2e894:	002e7100 	call	2e710 <alt_file_locked>
   2e898:	e0bffa15 	stw	r2,-24(fp)
   2e89c:	e0bffa17 	ldw	r2,-24(fp)
   2e8a0:	10001016 	blt	r2,zero,2e8e4 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2e8a4:	e0bff817 	ldw	r2,-32(fp)
   2e8a8:	10800317 	ldw	r2,12(r2)
   2e8ac:	10000826 	beq	r2,zero,2e8d0 <open+0xfc>
   2e8b0:	e0bff817 	ldw	r2,-32(fp)
   2e8b4:	10800317 	ldw	r2,12(r2)
   2e8b8:	e1ffff17 	ldw	r7,-4(fp)
   2e8bc:	e1bffe17 	ldw	r6,-8(fp)
   2e8c0:	e17ffd17 	ldw	r5,-12(fp)
   2e8c4:	e13ffc17 	ldw	r4,-16(fp)
   2e8c8:	103ee83a 	callr	r2
   2e8cc:	00000106 	br	2e8d4 <open+0x100>
   2e8d0:	0005883a 	mov	r2,zero
   2e8d4:	e0bffa15 	stw	r2,-24(fp)
   2e8d8:	00000206 	br	2e8e4 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2e8dc:	00bffb44 	movi	r2,-19
   2e8e0:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2e8e4:	e0bffa17 	ldw	r2,-24(fp)
   2e8e8:	1000090e 	bge	r2,zero,2e910 <open+0x13c>
  {
    alt_release_fd (index);  
   2e8ec:	e13ff917 	ldw	r4,-28(fp)
   2e8f0:	002d2480 	call	2d248 <alt_release_fd>
    ALT_ERRNO = -status;
   2e8f4:	002e6d40 	call	2e6d4 <alt_get_errno>
   2e8f8:	1007883a 	mov	r3,r2
   2e8fc:	e0bffa17 	ldw	r2,-24(fp)
   2e900:	0085c83a 	sub	r2,zero,r2
   2e904:	18800015 	stw	r2,0(r3)
    return -1;
   2e908:	00bfffc4 	movi	r2,-1
   2e90c:	00000106 	br	2e914 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2e910:	e0bff917 	ldw	r2,-28(fp)
}
   2e914:	e037883a 	mov	sp,fp
   2e918:	dfc00117 	ldw	ra,4(sp)
   2e91c:	df000017 	ldw	fp,0(sp)
   2e920:	dec00204 	addi	sp,sp,8
   2e924:	f800283a 	ret

0002e928 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2e928:	defffa04 	addi	sp,sp,-24
   2e92c:	df000515 	stw	fp,20(sp)
   2e930:	df000504 	addi	fp,sp,20
   2e934:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e938:	0005303a 	rdctl	r2,status
   2e93c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e940:	e0fffc17 	ldw	r3,-16(fp)
   2e944:	00bfff84 	movi	r2,-2
   2e948:	1884703a 	and	r2,r3,r2
   2e94c:	1001703a 	wrctl	status,r2
  
  return context;
   2e950:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2e954:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2e958:	e0bfff17 	ldw	r2,-4(fp)
   2e95c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2e960:	e0bffd17 	ldw	r2,-12(fp)
   2e964:	10800017 	ldw	r2,0(r2)
   2e968:	e0fffd17 	ldw	r3,-12(fp)
   2e96c:	18c00117 	ldw	r3,4(r3)
   2e970:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2e974:	e0bffd17 	ldw	r2,-12(fp)
   2e978:	10800117 	ldw	r2,4(r2)
   2e97c:	e0fffd17 	ldw	r3,-12(fp)
   2e980:	18c00017 	ldw	r3,0(r3)
   2e984:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2e988:	e0bffd17 	ldw	r2,-12(fp)
   2e98c:	e0fffd17 	ldw	r3,-12(fp)
   2e990:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2e994:	e0bffd17 	ldw	r2,-12(fp)
   2e998:	e0fffd17 	ldw	r3,-12(fp)
   2e99c:	10c00015 	stw	r3,0(r2)
   2e9a0:	e0bffb17 	ldw	r2,-20(fp)
   2e9a4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e9a8:	e0bffe17 	ldw	r2,-8(fp)
   2e9ac:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2e9b0:	0001883a 	nop
   2e9b4:	e037883a 	mov	sp,fp
   2e9b8:	df000017 	ldw	fp,0(sp)
   2e9bc:	dec00104 	addi	sp,sp,4
   2e9c0:	f800283a 	ret

0002e9c4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2e9c4:	defffb04 	addi	sp,sp,-20
   2e9c8:	dfc00415 	stw	ra,16(sp)
   2e9cc:	df000315 	stw	fp,12(sp)
   2e9d0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2e9d4:	d0a00e17 	ldw	r2,-32712(gp)
   2e9d8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2e9dc:	d0a6d717 	ldw	r2,-25764(gp)
   2e9e0:	10800044 	addi	r2,r2,1
   2e9e4:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2e9e8:	00002e06 	br	2eaa4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2e9ec:	e0bffd17 	ldw	r2,-12(fp)
   2e9f0:	10800017 	ldw	r2,0(r2)
   2e9f4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2e9f8:	e0bffd17 	ldw	r2,-12(fp)
   2e9fc:	10800403 	ldbu	r2,16(r2)
   2ea00:	10803fcc 	andi	r2,r2,255
   2ea04:	10000426 	beq	r2,zero,2ea18 <alt_tick+0x54>
   2ea08:	d0a6d717 	ldw	r2,-25764(gp)
   2ea0c:	1000021e 	bne	r2,zero,2ea18 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2ea10:	e0bffd17 	ldw	r2,-12(fp)
   2ea14:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2ea18:	e0bffd17 	ldw	r2,-12(fp)
   2ea1c:	10800217 	ldw	r2,8(r2)
   2ea20:	d0e6d717 	ldw	r3,-25764(gp)
   2ea24:	18801d36 	bltu	r3,r2,2ea9c <alt_tick+0xd8>
   2ea28:	e0bffd17 	ldw	r2,-12(fp)
   2ea2c:	10800403 	ldbu	r2,16(r2)
   2ea30:	10803fcc 	andi	r2,r2,255
   2ea34:	1000191e 	bne	r2,zero,2ea9c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2ea38:	e0bffd17 	ldw	r2,-12(fp)
   2ea3c:	10800317 	ldw	r2,12(r2)
   2ea40:	e0fffd17 	ldw	r3,-12(fp)
   2ea44:	18c00517 	ldw	r3,20(r3)
   2ea48:	1809883a 	mov	r4,r3
   2ea4c:	103ee83a 	callr	r2
   2ea50:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2ea54:	e0bfff17 	ldw	r2,-4(fp)
   2ea58:	1000031e 	bne	r2,zero,2ea68 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2ea5c:	e13ffd17 	ldw	r4,-12(fp)
   2ea60:	002e9280 	call	2e928 <alt_alarm_stop>
   2ea64:	00000d06 	br	2ea9c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2ea68:	e0bffd17 	ldw	r2,-12(fp)
   2ea6c:	10c00217 	ldw	r3,8(r2)
   2ea70:	e0bfff17 	ldw	r2,-4(fp)
   2ea74:	1887883a 	add	r3,r3,r2
   2ea78:	e0bffd17 	ldw	r2,-12(fp)
   2ea7c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2ea80:	e0bffd17 	ldw	r2,-12(fp)
   2ea84:	10c00217 	ldw	r3,8(r2)
   2ea88:	d0a6d717 	ldw	r2,-25764(gp)
   2ea8c:	1880032e 	bgeu	r3,r2,2ea9c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2ea90:	e0bffd17 	ldw	r2,-12(fp)
   2ea94:	00c00044 	movi	r3,1
   2ea98:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2ea9c:	e0bffe17 	ldw	r2,-8(fp)
   2eaa0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2eaa4:	e0fffd17 	ldw	r3,-12(fp)
   2eaa8:	d0a00e04 	addi	r2,gp,-32712
   2eaac:	18bfcf1e 	bne	r3,r2,2e9ec <__alt_data_end+0xfffee9ec>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2eab0:	0001883a 	nop
}
   2eab4:	0001883a 	nop
   2eab8:	e037883a 	mov	sp,fp
   2eabc:	dfc00117 	ldw	ra,4(sp)
   2eac0:	df000017 	ldw	fp,0(sp)
   2eac4:	dec00204 	addi	sp,sp,8
   2eac8:	f800283a 	ret

0002eacc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2eacc:	deffff04 	addi	sp,sp,-4
   2ead0:	df000015 	stw	fp,0(sp)
   2ead4:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2ead8:	000170fa 	wrctl	ienable,zero
}
   2eadc:	0001883a 	nop
   2eae0:	e037883a 	mov	sp,fp
   2eae4:	df000017 	ldw	fp,0(sp)
   2eae8:	dec00104 	addi	sp,sp,4
   2eaec:	f800283a 	ret

0002eaf0 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2eaf0:	defffa04 	addi	sp,sp,-24
   2eaf4:	dfc00515 	stw	ra,20(sp)
   2eaf8:	df000415 	stw	fp,16(sp)
   2eafc:	df000404 	addi	fp,sp,16
   2eb00:	e13ffe15 	stw	r4,-8(fp)
   2eb04:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2eb08:	e0bfff17 	ldw	r2,-4(fp)
   2eb0c:	10800017 	ldw	r2,0(r2)
   2eb10:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2eb14:	e13ffe17 	ldw	r4,-8(fp)
   2eb18:	0026cf00 	call	26cf0 <strlen>
   2eb1c:	10800044 	addi	r2,r2,1
   2eb20:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2eb24:	00000d06 	br	2eb5c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2eb28:	e0bffc17 	ldw	r2,-16(fp)
   2eb2c:	10800217 	ldw	r2,8(r2)
   2eb30:	e0fffd17 	ldw	r3,-12(fp)
   2eb34:	180d883a 	mov	r6,r3
   2eb38:	e17ffe17 	ldw	r5,-8(fp)
   2eb3c:	1009883a 	mov	r4,r2
   2eb40:	002eea40 	call	2eea4 <memcmp>
   2eb44:	1000021e 	bne	r2,zero,2eb50 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2eb48:	e0bffc17 	ldw	r2,-16(fp)
   2eb4c:	00000706 	br	2eb6c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2eb50:	e0bffc17 	ldw	r2,-16(fp)
   2eb54:	10800017 	ldw	r2,0(r2)
   2eb58:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2eb5c:	e0fffc17 	ldw	r3,-16(fp)
   2eb60:	e0bfff17 	ldw	r2,-4(fp)
   2eb64:	18bff01e 	bne	r3,r2,2eb28 <__alt_data_end+0xfffeeb28>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2eb68:	0005883a 	mov	r2,zero
}
   2eb6c:	e037883a 	mov	sp,fp
   2eb70:	dfc00117 	ldw	ra,4(sp)
   2eb74:	df000017 	ldw	fp,0(sp)
   2eb78:	dec00204 	addi	sp,sp,8
   2eb7c:	f800283a 	ret

0002eb80 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2eb80:	defffb04 	addi	sp,sp,-20
   2eb84:	dfc00415 	stw	ra,16(sp)
   2eb88:	df000315 	stw	fp,12(sp)
   2eb8c:	df000304 	addi	fp,sp,12
   2eb90:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2eb94:	d0a00617 	ldw	r2,-32744(gp)
   2eb98:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2eb9c:	00003106 	br	2ec64 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2eba0:	e0bffd17 	ldw	r2,-12(fp)
   2eba4:	10800217 	ldw	r2,8(r2)
   2eba8:	1009883a 	mov	r4,r2
   2ebac:	0026cf00 	call	26cf0 <strlen>
   2ebb0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2ebb4:	e0bffd17 	ldw	r2,-12(fp)
   2ebb8:	10c00217 	ldw	r3,8(r2)
   2ebbc:	e0bffe17 	ldw	r2,-8(fp)
   2ebc0:	10bfffc4 	addi	r2,r2,-1
   2ebc4:	1885883a 	add	r2,r3,r2
   2ebc8:	10800003 	ldbu	r2,0(r2)
   2ebcc:	10803fcc 	andi	r2,r2,255
   2ebd0:	1080201c 	xori	r2,r2,128
   2ebd4:	10bfe004 	addi	r2,r2,-128
   2ebd8:	10800bd8 	cmpnei	r2,r2,47
   2ebdc:	1000031e 	bne	r2,zero,2ebec <alt_find_file+0x6c>
    {
      len -= 1;
   2ebe0:	e0bffe17 	ldw	r2,-8(fp)
   2ebe4:	10bfffc4 	addi	r2,r2,-1
   2ebe8:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2ebec:	e0bffe17 	ldw	r2,-8(fp)
   2ebf0:	e0ffff17 	ldw	r3,-4(fp)
   2ebf4:	1885883a 	add	r2,r3,r2
   2ebf8:	10800003 	ldbu	r2,0(r2)
   2ebfc:	10803fcc 	andi	r2,r2,255
   2ec00:	1080201c 	xori	r2,r2,128
   2ec04:	10bfe004 	addi	r2,r2,-128
   2ec08:	10800be0 	cmpeqi	r2,r2,47
   2ec0c:	1000081e 	bne	r2,zero,2ec30 <alt_find_file+0xb0>
   2ec10:	e0bffe17 	ldw	r2,-8(fp)
   2ec14:	e0ffff17 	ldw	r3,-4(fp)
   2ec18:	1885883a 	add	r2,r3,r2
   2ec1c:	10800003 	ldbu	r2,0(r2)
   2ec20:	10803fcc 	andi	r2,r2,255
   2ec24:	1080201c 	xori	r2,r2,128
   2ec28:	10bfe004 	addi	r2,r2,-128
   2ec2c:	10000a1e 	bne	r2,zero,2ec58 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2ec30:	e0bffd17 	ldw	r2,-12(fp)
   2ec34:	10800217 	ldw	r2,8(r2)
   2ec38:	e0fffe17 	ldw	r3,-8(fp)
   2ec3c:	180d883a 	mov	r6,r3
   2ec40:	e17fff17 	ldw	r5,-4(fp)
   2ec44:	1009883a 	mov	r4,r2
   2ec48:	002eea40 	call	2eea4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2ec4c:	1000021e 	bne	r2,zero,2ec58 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2ec50:	e0bffd17 	ldw	r2,-12(fp)
   2ec54:	00000706 	br	2ec74 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2ec58:	e0bffd17 	ldw	r2,-12(fp)
   2ec5c:	10800017 	ldw	r2,0(r2)
   2ec60:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2ec64:	e0fffd17 	ldw	r3,-12(fp)
   2ec68:	d0a00604 	addi	r2,gp,-32744
   2ec6c:	18bfcc1e 	bne	r3,r2,2eba0 <__alt_data_end+0xfffeeba0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2ec70:	0005883a 	mov	r2,zero
}
   2ec74:	e037883a 	mov	sp,fp
   2ec78:	dfc00117 	ldw	ra,4(sp)
   2ec7c:	df000017 	ldw	fp,0(sp)
   2ec80:	dec00204 	addi	sp,sp,8
   2ec84:	f800283a 	ret

0002ec88 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2ec88:	defffc04 	addi	sp,sp,-16
   2ec8c:	df000315 	stw	fp,12(sp)
   2ec90:	df000304 	addi	fp,sp,12
   2ec94:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2ec98:	00bffa04 	movi	r2,-24
   2ec9c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2eca0:	e03ffd15 	stw	zero,-12(fp)
   2eca4:	00001906 	br	2ed0c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   2eca8:	008000f4 	movhi	r2,3
   2ecac:	10bf6f04 	addi	r2,r2,-580
   2ecb0:	e0fffd17 	ldw	r3,-12(fp)
   2ecb4:	18c00324 	muli	r3,r3,12
   2ecb8:	10c5883a 	add	r2,r2,r3
   2ecbc:	10800017 	ldw	r2,0(r2)
   2ecc0:	10000f1e 	bne	r2,zero,2ed00 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   2ecc4:	008000f4 	movhi	r2,3
   2ecc8:	10bf6f04 	addi	r2,r2,-580
   2eccc:	e0fffd17 	ldw	r3,-12(fp)
   2ecd0:	18c00324 	muli	r3,r3,12
   2ecd4:	10c5883a 	add	r2,r2,r3
   2ecd8:	e0ffff17 	ldw	r3,-4(fp)
   2ecdc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2ece0:	d0e00a17 	ldw	r3,-32728(gp)
   2ece4:	e0bffd17 	ldw	r2,-12(fp)
   2ece8:	1880020e 	bge	r3,r2,2ecf4 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   2ecec:	e0bffd17 	ldw	r2,-12(fp)
   2ecf0:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   2ecf4:	e0bffd17 	ldw	r2,-12(fp)
   2ecf8:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2ecfc:	00000606 	br	2ed18 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2ed00:	e0bffd17 	ldw	r2,-12(fp)
   2ed04:	10800044 	addi	r2,r2,1
   2ed08:	e0bffd15 	stw	r2,-12(fp)
   2ed0c:	e0bffd17 	ldw	r2,-12(fp)
   2ed10:	10800810 	cmplti	r2,r2,32
   2ed14:	103fe41e 	bne	r2,zero,2eca8 <__alt_data_end+0xfffeeca8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2ed18:	e0bffe17 	ldw	r2,-8(fp)
}
   2ed1c:	e037883a 	mov	sp,fp
   2ed20:	df000017 	ldw	fp,0(sp)
   2ed24:	dec00104 	addi	sp,sp,4
   2ed28:	f800283a 	ret

0002ed2c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2ed2c:	defffb04 	addi	sp,sp,-20
   2ed30:	df000415 	stw	fp,16(sp)
   2ed34:	df000404 	addi	fp,sp,16
   2ed38:	e13ffe15 	stw	r4,-8(fp)
   2ed3c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2ed40:	e0bfff17 	ldw	r2,-4(fp)
   2ed44:	10840070 	cmpltui	r2,r2,4097
   2ed48:	1000021e 	bne	r2,zero,2ed54 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2ed4c:	00840004 	movi	r2,4096
   2ed50:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2ed54:	e0fffe17 	ldw	r3,-8(fp)
   2ed58:	e0bfff17 	ldw	r2,-4(fp)
   2ed5c:	1885883a 	add	r2,r3,r2
   2ed60:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2ed64:	e0bffe17 	ldw	r2,-8(fp)
   2ed68:	e0bffc15 	stw	r2,-16(fp)
   2ed6c:	00000506 	br	2ed84 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2ed70:	e0bffc17 	ldw	r2,-16(fp)
   2ed74:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2ed78:	e0bffc17 	ldw	r2,-16(fp)
   2ed7c:	10800804 	addi	r2,r2,32
   2ed80:	e0bffc15 	stw	r2,-16(fp)
   2ed84:	e0fffc17 	ldw	r3,-16(fp)
   2ed88:	e0bffd17 	ldw	r2,-12(fp)
   2ed8c:	18bff836 	bltu	r3,r2,2ed70 <__alt_data_end+0xfffeed70>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2ed90:	e0bffe17 	ldw	r2,-8(fp)
   2ed94:	108007cc 	andi	r2,r2,31
   2ed98:	10000226 	beq	r2,zero,2eda4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2ed9c:	e0bffc17 	ldw	r2,-16(fp)
   2eda0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2eda4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2eda8:	0001883a 	nop
   2edac:	e037883a 	mov	sp,fp
   2edb0:	df000017 	ldw	fp,0(sp)
   2edb4:	dec00104 	addi	sp,sp,4
   2edb8:	f800283a 	ret

0002edbc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2edbc:	defffe04 	addi	sp,sp,-8
   2edc0:	df000115 	stw	fp,4(sp)
   2edc4:	df000104 	addi	fp,sp,4
   2edc8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2edcc:	e0bfff17 	ldw	r2,-4(fp)
   2edd0:	10bffe84 	addi	r2,r2,-6
   2edd4:	10c00428 	cmpgeui	r3,r2,16
   2edd8:	18001a1e 	bne	r3,zero,2ee44 <alt_exception_cause_generated_bad_addr+0x88>
   2eddc:	100690ba 	slli	r3,r2,2
   2ede0:	008000f4 	movhi	r2,3
   2ede4:	10bb7d04 	addi	r2,r2,-4620
   2ede8:	1885883a 	add	r2,r3,r2
   2edec:	10800017 	ldw	r2,0(r2)
   2edf0:	1000683a 	jmp	r2
   2edf4:	0002ee34 	movhi	zero,3000
   2edf8:	0002ee34 	movhi	zero,3000
   2edfc:	0002ee44 	movi	zero,3001
   2ee00:	0002ee44 	movi	zero,3001
   2ee04:	0002ee44 	movi	zero,3001
   2ee08:	0002ee34 	movhi	zero,3000
   2ee0c:	0002ee3c 	xorhi	zero,zero,3000
   2ee10:	0002ee44 	movi	zero,3001
   2ee14:	0002ee34 	movhi	zero,3000
   2ee18:	0002ee34 	movhi	zero,3000
   2ee1c:	0002ee44 	movi	zero,3001
   2ee20:	0002ee34 	movhi	zero,3000
   2ee24:	0002ee3c 	xorhi	zero,zero,3000
   2ee28:	0002ee44 	movi	zero,3001
   2ee2c:	0002ee44 	movi	zero,3001
   2ee30:	0002ee34 	movhi	zero,3000
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2ee34:	00800044 	movi	r2,1
   2ee38:	00000306 	br	2ee48 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2ee3c:	0005883a 	mov	r2,zero
   2ee40:	00000106 	br	2ee48 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   2ee44:	0005883a 	mov	r2,zero
  }
}
   2ee48:	e037883a 	mov	sp,fp
   2ee4c:	df000017 	ldw	fp,0(sp)
   2ee50:	dec00104 	addi	sp,sp,4
   2ee54:	f800283a 	ret

0002ee58 <atexit>:
   2ee58:	200b883a 	mov	r5,r4
   2ee5c:	000f883a 	mov	r7,zero
   2ee60:	000d883a 	mov	r6,zero
   2ee64:	0009883a 	mov	r4,zero
   2ee68:	002ef201 	jmpi	2ef20 <__register_exitproc>

0002ee6c <exit>:
   2ee6c:	defffe04 	addi	sp,sp,-8
   2ee70:	000b883a 	mov	r5,zero
   2ee74:	dc000015 	stw	r16,0(sp)
   2ee78:	dfc00115 	stw	ra,4(sp)
   2ee7c:	2021883a 	mov	r16,r4
   2ee80:	002f0380 	call	2f038 <__call_exitprocs>
   2ee84:	008000f4 	movhi	r2,3
   2ee88:	1083e704 	addi	r2,r2,3996
   2ee8c:	11000017 	ldw	r4,0(r2)
   2ee90:	20800f17 	ldw	r2,60(r4)
   2ee94:	10000126 	beq	r2,zero,2ee9c <exit+0x30>
   2ee98:	103ee83a 	callr	r2
   2ee9c:	8009883a 	mov	r4,r16
   2eea0:	002f1b80 	call	2f1b8 <_exit>

0002eea4 <memcmp>:
   2eea4:	01c000c4 	movi	r7,3
   2eea8:	3980192e 	bgeu	r7,r6,2ef10 <memcmp+0x6c>
   2eeac:	2144b03a 	or	r2,r4,r5
   2eeb0:	11c4703a 	and	r2,r2,r7
   2eeb4:	10000f26 	beq	r2,zero,2eef4 <memcmp+0x50>
   2eeb8:	20800003 	ldbu	r2,0(r4)
   2eebc:	28c00003 	ldbu	r3,0(r5)
   2eec0:	10c0151e 	bne	r2,r3,2ef18 <memcmp+0x74>
   2eec4:	31bfff84 	addi	r6,r6,-2
   2eec8:	01ffffc4 	movi	r7,-1
   2eecc:	00000406 	br	2eee0 <memcmp+0x3c>
   2eed0:	20800003 	ldbu	r2,0(r4)
   2eed4:	28c00003 	ldbu	r3,0(r5)
   2eed8:	31bfffc4 	addi	r6,r6,-1
   2eedc:	10c00e1e 	bne	r2,r3,2ef18 <memcmp+0x74>
   2eee0:	21000044 	addi	r4,r4,1
   2eee4:	29400044 	addi	r5,r5,1
   2eee8:	31fff91e 	bne	r6,r7,2eed0 <__alt_data_end+0xfffeeed0>
   2eeec:	0005883a 	mov	r2,zero
   2eef0:	f800283a 	ret
   2eef4:	20c00017 	ldw	r3,0(r4)
   2eef8:	28800017 	ldw	r2,0(r5)
   2eefc:	18bfee1e 	bne	r3,r2,2eeb8 <__alt_data_end+0xfffeeeb8>
   2ef00:	31bfff04 	addi	r6,r6,-4
   2ef04:	21000104 	addi	r4,r4,4
   2ef08:	29400104 	addi	r5,r5,4
   2ef0c:	39bff936 	bltu	r7,r6,2eef4 <__alt_data_end+0xfffeeef4>
   2ef10:	303fe91e 	bne	r6,zero,2eeb8 <__alt_data_end+0xfffeeeb8>
   2ef14:	003ff506 	br	2eeec <__alt_data_end+0xfffeeeec>
   2ef18:	10c5c83a 	sub	r2,r2,r3
   2ef1c:	f800283a 	ret

0002ef20 <__register_exitproc>:
   2ef20:	defffa04 	addi	sp,sp,-24
   2ef24:	dc000315 	stw	r16,12(sp)
   2ef28:	040000f4 	movhi	r16,3
   2ef2c:	8403e704 	addi	r16,r16,3996
   2ef30:	80c00017 	ldw	r3,0(r16)
   2ef34:	dc400415 	stw	r17,16(sp)
   2ef38:	dfc00515 	stw	ra,20(sp)
   2ef3c:	18805217 	ldw	r2,328(r3)
   2ef40:	2023883a 	mov	r17,r4
   2ef44:	10003726 	beq	r2,zero,2f024 <__register_exitproc+0x104>
   2ef48:	10c00117 	ldw	r3,4(r2)
   2ef4c:	010007c4 	movi	r4,31
   2ef50:	20c00e16 	blt	r4,r3,2ef8c <__register_exitproc+0x6c>
   2ef54:	1a000044 	addi	r8,r3,1
   2ef58:	8800221e 	bne	r17,zero,2efe4 <__register_exitproc+0xc4>
   2ef5c:	18c00084 	addi	r3,r3,2
   2ef60:	18c7883a 	add	r3,r3,r3
   2ef64:	18c7883a 	add	r3,r3,r3
   2ef68:	12000115 	stw	r8,4(r2)
   2ef6c:	10c7883a 	add	r3,r2,r3
   2ef70:	19400015 	stw	r5,0(r3)
   2ef74:	0005883a 	mov	r2,zero
   2ef78:	dfc00517 	ldw	ra,20(sp)
   2ef7c:	dc400417 	ldw	r17,16(sp)
   2ef80:	dc000317 	ldw	r16,12(sp)
   2ef84:	dec00604 	addi	sp,sp,24
   2ef88:	f800283a 	ret
   2ef8c:	00800034 	movhi	r2,0
   2ef90:	10800004 	addi	r2,r2,0
   2ef94:	10002626 	beq	r2,zero,2f030 <__register_exitproc+0x110>
   2ef98:	01006404 	movi	r4,400
   2ef9c:	d9400015 	stw	r5,0(sp)
   2efa0:	d9800115 	stw	r6,4(sp)
   2efa4:	d9c00215 	stw	r7,8(sp)
   2efa8:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2efac:	d9400017 	ldw	r5,0(sp)
   2efb0:	d9800117 	ldw	r6,4(sp)
   2efb4:	d9c00217 	ldw	r7,8(sp)
   2efb8:	10001d26 	beq	r2,zero,2f030 <__register_exitproc+0x110>
   2efbc:	81000017 	ldw	r4,0(r16)
   2efc0:	10000115 	stw	zero,4(r2)
   2efc4:	02000044 	movi	r8,1
   2efc8:	22405217 	ldw	r9,328(r4)
   2efcc:	0007883a 	mov	r3,zero
   2efd0:	12400015 	stw	r9,0(r2)
   2efd4:	20805215 	stw	r2,328(r4)
   2efd8:	10006215 	stw	zero,392(r2)
   2efdc:	10006315 	stw	zero,396(r2)
   2efe0:	883fde26 	beq	r17,zero,2ef5c <__alt_data_end+0xfffeef5c>
   2efe4:	18c9883a 	add	r4,r3,r3
   2efe8:	2109883a 	add	r4,r4,r4
   2efec:	1109883a 	add	r4,r2,r4
   2eff0:	21802215 	stw	r6,136(r4)
   2eff4:	01800044 	movi	r6,1
   2eff8:	12406217 	ldw	r9,392(r2)
   2effc:	30cc983a 	sll	r6,r6,r3
   2f000:	4992b03a 	or	r9,r9,r6
   2f004:	12406215 	stw	r9,392(r2)
   2f008:	21c04215 	stw	r7,264(r4)
   2f00c:	01000084 	movi	r4,2
   2f010:	893fd21e 	bne	r17,r4,2ef5c <__alt_data_end+0xfffeef5c>
   2f014:	11006317 	ldw	r4,396(r2)
   2f018:	218cb03a 	or	r6,r4,r6
   2f01c:	11806315 	stw	r6,396(r2)
   2f020:	003fce06 	br	2ef5c <__alt_data_end+0xfffeef5c>
   2f024:	18805304 	addi	r2,r3,332
   2f028:	18805215 	stw	r2,328(r3)
   2f02c:	003fc606 	br	2ef48 <__alt_data_end+0xfffeef48>
   2f030:	00bfffc4 	movi	r2,-1
   2f034:	003fd006 	br	2ef78 <__alt_data_end+0xfffeef78>

0002f038 <__call_exitprocs>:
   2f038:	defff504 	addi	sp,sp,-44
   2f03c:	df000915 	stw	fp,36(sp)
   2f040:	dd400615 	stw	r21,24(sp)
   2f044:	dc800315 	stw	r18,12(sp)
   2f048:	dfc00a15 	stw	ra,40(sp)
   2f04c:	ddc00815 	stw	r23,32(sp)
   2f050:	dd800715 	stw	r22,28(sp)
   2f054:	dd000515 	stw	r20,20(sp)
   2f058:	dcc00415 	stw	r19,16(sp)
   2f05c:	dc400215 	stw	r17,8(sp)
   2f060:	dc000115 	stw	r16,4(sp)
   2f064:	d9000015 	stw	r4,0(sp)
   2f068:	2839883a 	mov	fp,r5
   2f06c:	04800044 	movi	r18,1
   2f070:	057fffc4 	movi	r21,-1
   2f074:	008000f4 	movhi	r2,3
   2f078:	1083e704 	addi	r2,r2,3996
   2f07c:	12000017 	ldw	r8,0(r2)
   2f080:	45005217 	ldw	r20,328(r8)
   2f084:	44c05204 	addi	r19,r8,328
   2f088:	a0001c26 	beq	r20,zero,2f0fc <__call_exitprocs+0xc4>
   2f08c:	a0800117 	ldw	r2,4(r20)
   2f090:	15ffffc4 	addi	r23,r2,-1
   2f094:	b8000d16 	blt	r23,zero,2f0cc <__call_exitprocs+0x94>
   2f098:	14000044 	addi	r16,r2,1
   2f09c:	8421883a 	add	r16,r16,r16
   2f0a0:	8421883a 	add	r16,r16,r16
   2f0a4:	84402004 	addi	r17,r16,128
   2f0a8:	a463883a 	add	r17,r20,r17
   2f0ac:	a421883a 	add	r16,r20,r16
   2f0b0:	e0001e26 	beq	fp,zero,2f12c <__call_exitprocs+0xf4>
   2f0b4:	80804017 	ldw	r2,256(r16)
   2f0b8:	e0801c26 	beq	fp,r2,2f12c <__call_exitprocs+0xf4>
   2f0bc:	bdffffc4 	addi	r23,r23,-1
   2f0c0:	843fff04 	addi	r16,r16,-4
   2f0c4:	8c7fff04 	addi	r17,r17,-4
   2f0c8:	bd7ff91e 	bne	r23,r21,2f0b0 <__alt_data_end+0xfffef0b0>
   2f0cc:	00800034 	movhi	r2,0
   2f0d0:	10800004 	addi	r2,r2,0
   2f0d4:	10000926 	beq	r2,zero,2f0fc <__call_exitprocs+0xc4>
   2f0d8:	a0800117 	ldw	r2,4(r20)
   2f0dc:	1000301e 	bne	r2,zero,2f1a0 <__call_exitprocs+0x168>
   2f0e0:	a0800017 	ldw	r2,0(r20)
   2f0e4:	10003226 	beq	r2,zero,2f1b0 <__call_exitprocs+0x178>
   2f0e8:	a009883a 	mov	r4,r20
   2f0ec:	98800015 	stw	r2,0(r19)
   2f0f0:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x20000>
   2f0f4:	9d000017 	ldw	r20,0(r19)
   2f0f8:	a03fe41e 	bne	r20,zero,2f08c <__alt_data_end+0xfffef08c>
   2f0fc:	dfc00a17 	ldw	ra,40(sp)
   2f100:	df000917 	ldw	fp,36(sp)
   2f104:	ddc00817 	ldw	r23,32(sp)
   2f108:	dd800717 	ldw	r22,28(sp)
   2f10c:	dd400617 	ldw	r21,24(sp)
   2f110:	dd000517 	ldw	r20,20(sp)
   2f114:	dcc00417 	ldw	r19,16(sp)
   2f118:	dc800317 	ldw	r18,12(sp)
   2f11c:	dc400217 	ldw	r17,8(sp)
   2f120:	dc000117 	ldw	r16,4(sp)
   2f124:	dec00b04 	addi	sp,sp,44
   2f128:	f800283a 	ret
   2f12c:	a0800117 	ldw	r2,4(r20)
   2f130:	80c00017 	ldw	r3,0(r16)
   2f134:	10bfffc4 	addi	r2,r2,-1
   2f138:	15c01426 	beq	r2,r23,2f18c <__call_exitprocs+0x154>
   2f13c:	80000015 	stw	zero,0(r16)
   2f140:	183fde26 	beq	r3,zero,2f0bc <__alt_data_end+0xfffef0bc>
   2f144:	95c8983a 	sll	r4,r18,r23
   2f148:	a0806217 	ldw	r2,392(r20)
   2f14c:	a5800117 	ldw	r22,4(r20)
   2f150:	2084703a 	and	r2,r4,r2
   2f154:	10000b26 	beq	r2,zero,2f184 <__call_exitprocs+0x14c>
   2f158:	a0806317 	ldw	r2,396(r20)
   2f15c:	2088703a 	and	r4,r4,r2
   2f160:	20000c1e 	bne	r4,zero,2f194 <__call_exitprocs+0x15c>
   2f164:	89400017 	ldw	r5,0(r17)
   2f168:	d9000017 	ldw	r4,0(sp)
   2f16c:	183ee83a 	callr	r3
   2f170:	a0800117 	ldw	r2,4(r20)
   2f174:	15bfbf1e 	bne	r2,r22,2f074 <__alt_data_end+0xfffef074>
   2f178:	98800017 	ldw	r2,0(r19)
   2f17c:	153fcf26 	beq	r2,r20,2f0bc <__alt_data_end+0xfffef0bc>
   2f180:	003fbc06 	br	2f074 <__alt_data_end+0xfffef074>
   2f184:	183ee83a 	callr	r3
   2f188:	003ff906 	br	2f170 <__alt_data_end+0xfffef170>
   2f18c:	a5c00115 	stw	r23,4(r20)
   2f190:	003feb06 	br	2f140 <__alt_data_end+0xfffef140>
   2f194:	89000017 	ldw	r4,0(r17)
   2f198:	183ee83a 	callr	r3
   2f19c:	003ff406 	br	2f170 <__alt_data_end+0xfffef170>
   2f1a0:	a0800017 	ldw	r2,0(r20)
   2f1a4:	a027883a 	mov	r19,r20
   2f1a8:	1029883a 	mov	r20,r2
   2f1ac:	003fb606 	br	2f088 <__alt_data_end+0xfffef088>
   2f1b0:	0005883a 	mov	r2,zero
   2f1b4:	003ffb06 	br	2f1a4 <__alt_data_end+0xfffef1a4>

0002f1b8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2f1b8:	defffd04 	addi	sp,sp,-12
   2f1bc:	df000215 	stw	fp,8(sp)
   2f1c0:	df000204 	addi	fp,sp,8
   2f1c4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2f1c8:	0001883a 	nop
   2f1cc:	e0bfff17 	ldw	r2,-4(fp)
   2f1d0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2f1d4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2f1d8:	10000226 	beq	r2,zero,2f1e4 <_exit+0x2c>
    ALT_SIM_FAIL();
   2f1dc:	002af070 	cmpltui	zero,zero,43969
   2f1e0:	00000106 	br	2f1e8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   2f1e4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2f1e8:	003fff06 	br	2f1e8 <__alt_data_end+0xfffef1e8>
